; ModuleID = 'proc_macro2.b2cb532ce99a8287-cgu.0'
source_filename = "proc_macro2.b2cb532ce99a8287-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%TokenTree = type { i64, [3 x i64] }
%"proc_macro::TokenTree" = type { [16 x i8], i8, [3 x i8] }
%"fallback::TokenStreamBuilder" = type { %"rcvec::RcVecBuilder<TokenTree>" }
%"rcvec::RcVecBuilder<TokenTree>" = type { %"alloc::vec::Vec<TokenTree>" }
%"alloc::vec::Vec<TokenTree>" = type { %"alloc::raw_vec::RawVec<TokenTree>", i64 }
%"alloc::raw_vec::RawVec<TokenTree>" = type { i64, ptr, %"alloc::alloc::Global" }
%"alloc::alloc::Global" = type {}
%"proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>" = type { [16 x i8], i8, [3 x i8] }
%"core::fmt::rt::Argument<'_>" = type { %"core::fmt::rt::ArgumentType<'_>" }
%"core::fmt::rt::ArgumentType<'_>" = type { [1 x i64], ptr }
%"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>" = type { [5 x i32] }
%"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>" = type { [5 x i32] }
%"core::mem::maybe_uninit::MaybeUninit<TokenTree>" = type { [4 x i64] }
%"core::fmt::rt::Placeholder" = type { %"core::fmt::rt::Count", %"core::fmt::rt::Count", i64, i32, i32, i8, [7 x i8] }
%"core::fmt::rt::Count" = type { i64, [1 x i64] }

@0 = private unnamed_addr constant <{ [8 x i8], [8 x i8] }> <{ [8 x i8] zeroinitializer, [8 x i8] undef }>, align 8
@alloc_2e27c105fc1a6692f373ee7f9a57a4d7 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"Once instance has previously been poisoned" }>, align 1
@alloc_9cc4df00976b591da2e084a2cf898fab = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_2e27c105fc1a6692f373ee7f9a57a4d7, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@1 = private unnamed_addr constant <{ [8 x i8], [4 x i8], [4 x i8] }> <{ [8 x i8] undef, [4 x i8] c"\00\CA\9A;", [4 x i8] undef }>, align 8
@alloc_444efeefbbf6ca6cf3b2dda45084f1f0 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"internal error: entered unreachable code: state is never set to invalid values" }>, align 1
@alloc_2a9cdb20370524832dacb396d295f90f = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_444efeefbbf6ca6cf3b2dda45084f1f0, [8 x i8] c"N\00\00\00\00\00\00\00" }>, align 8
@alloc_231575412c05d7d1619729606d50721d = private unnamed_addr constant <{ [81 x i8] }> <{ [81 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/std/src/sync/once.rs" }>, align 1
@alloc_323e3e924a872d3e19f6b8d20ac72063 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_231575412c05d7d1619729606d50721d, [16 x i8] c"Q\00\00\00\00\00\00\00\95\00\00\002\00\00\00" }>, align 8
@alloc_ae6dc619079e3c3b08144a35532ecff7 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"()" }>, align 1
@vtable.0 = private unnamed_addr constant <{ ptr, [16 x i8], ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17hc91a144ace0c4462E", ptr @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h33a5675a7808594dE", ptr @_ZN4core3fmt5Write9write_fmt17h3d12c4d9511c7708E }>, align 8
@alloc_cc656815297f75969399c3f4b1ad3de4 = private unnamed_addr constant <{ [55 x i8] }> <{ [55 x i8] c"a Display implementation returned an error unexpectedly" }>, align 1
@alloc_56ddd9f8a83a5b1254ce7cdf41b13c3e = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/alloc/src/string.rs" }>, align 1
@alloc_f886f96e9a07c60a12107d674cf0d185 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_56ddd9f8a83a5b1254ce7cdf41b13c3e, [16 x i8] c"P\00\00\00\00\00\00\00\03\0A\00\00\0E\00\00\00" }>, align 8
@alloc_424341b75ece3fa20496f1c69b9fb0ac = private unnamed_addr constant <{ [111 x i8] }> <{ [111 x i8] c"unsafe precondition(s) violated: ptr::write_bytes requires that the destination pointer is aligned and non-null" }>, align 1
@alloc_fad0cd83b7d1858a846a172eb260e593 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"is_aligned_to: align is not a power-of-two" }>, align 1
@alloc_041983ee8170efdaaf95ba67fd072d26 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_fad0cd83b7d1858a846a172eb260e593, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc_1cb116c55cd0edb3d6bef8847f58e222 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_03d266dccd993e13de22250e3dccd7d7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1cb116c55cd0edb3d6bef8847f58e222, [16 x i8] c"V\00\00\00\00\00\00\00\86\06\00\00\0D\00\00\00" }>, align 8
@vtable.1 = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E", [16 x i8] c" \00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN59_$LT$proc_macro2..TokenTree$u20$as$u20$core..fmt..Debug$GT$3fmt17hdea1a3ae1a4c5ca2E" }>, align 8
@alloc_d30a741e02fc5ea2d050c92e901091a3 = private unnamed_addr constant <{ [69 x i8] }> <{ [69 x i8] c"unsafe precondition(s) violated: usize::unchecked_sub cannot overflow" }>, align 1
@alloc_20b3d155afd5c58c42e598b7e6d186ef = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null" }>, align 1
@alloc_ec595fc0e82ef92fc59bd74f68296eae = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc_cedbb71194daee93c1287f403fa88727 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1cb116c55cd0edb3d6bef8847f58e222, [16 x i8] c"V\00\00\00\00\00\00\00p\03\00\00\09\00\00\00" }>, align 8
@2 = private unnamed_addr constant <{ [4 x i8], [4 x i8] }> <{ [4 x i8] zeroinitializer, [4 x i8] undef }>, align 4
@alloc_9d901a68d4e81abad8d6748306ca47ae = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/str/mod.rs" }>, align 1
@alloc_90d339349fb90c34ee429f9a17b2b451 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9d901a68d4e81abad8d6748306ca47ae, [16 x i8] c"P\00\00\00\00\00\00\00\93\02\00\00\15\00\00\00" }>, align 8
@alloc_e6db3cfc6902fb736f1ea6506b7198e8 = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: str::get_unchecked requires that the range is within the string slice" }>, align 1
@alloc_e09b762e23e7aab5d1c9567cce4bbe22 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/str/pattern.rs" }>, align 1
@alloc_0453b75c606d890f49eaeb1e871fc4a0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\DF\06\00\00\17\00\00\00" }>, align 8
@alloc_6bfc19cc357790f8d752bfe72883159b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\F9\06\00\00,\00\00\00" }>, align 8
@alloc_b909a04b5e0d31af8ff45541f6106dff = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\003\07\00\00\18\00\00\00" }>, align 8
@alloc_9a698867b0bf7c385ee30a72e4035d4d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\000\07\00\00\0D\00\00\00" }>, align 8
@alloc_6581e7233c441557faa14a09e84c8b0e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\FC\06\00\00!\00\00\00" }>, align 8
@alloc_d0b5540d38aa67683bd942cb6db4a43b = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"window size must be non-zero" }>, align 1
@alloc_6cf54154542de7742fe5e8314c4406a8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\F5\06\00\00\1E\00\00\00" }>, align 8
@alloc_8821998f047ca62cad40e6bc4e4d87c4 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1
@alloc_8cc17694d981e8ffc4bb82cceee5e7d7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\EA\06\00\00I\00\00\00" }>, align 8
@alloc_ff3d81b5c02c61ff6765870bae09bd90 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\C3\05\00\00\14\00\00\00" }>, align 8
@alloc_a1f18b7736b2d62dfea50214c99bc585 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\C3\05\00\00!\00\00\00" }>, align 8
@alloc_70e067e9caceffb0495a1ba70e5bde5b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\B7\05\00\00\14\00\00\00" }>, align 8
@alloc_1be711072f2b745146df4e520c0dc296 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\B7\05\00\00!\00\00\00" }>, align 8
@alloc_2e749ba99c833073cec5ec5cf7e2f49b = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/char/methods.rs" }>, align 1
@alloc_57859aeb3d01b34b21a99a66643e2791 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2e749ba99c833073cec5ec5cf7e2f49b, [16 x i8] c"U\00\00\00\00\00\00\00\05\07\00\00\0D\00\00\00" }>, align 8
@alloc_6b031f9bca8204235732c7c365d04a1d = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc_28d13efb0f9a95ccb5d02ec33dd195cf = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc_0d928972d2befd736e581c7fcc5a2f9a = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc_d51214f097f67314513b76e97e13aa6b = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_6b031f9bca8204235732c7c365d04a1d, [8 x i8] c"\12\00\00\00\00\00\00\00", ptr @alloc_28d13efb0f9a95ccb5d02ec33dd195cf, [8 x i8] c"\13\00\00\00\00\00\00\00", ptr @alloc_0d928972d2befd736e581c7fcc5a2f9a, [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc_054e99fbcf449d4476ca571e33a9e487 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2e749ba99c833073cec5ec5cf7e2f49b, [16 x i8] c"U\00\00\00\00\00\00\00\FE\06\00\00\0E\00\00\00" }>, align 8
@3 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"\01\01\01" }>, align 1
@alloc_1eb6f53a157dccb32488e066ad957e6d = private unnamed_addr constant <{ [82 x i8] }> <{ [82 x i8] c"unsafe precondition(s) violated: hint::unreachable_unchecked must never be reached" }>, align 1
@alloc_2db939117273c81f2ea7c529b08131b4 = private unnamed_addr constant <{ [95 x i8] }> <{ [95 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/iter/traits/exact_size.rs" }>, align 1
@alloc_aef40131b878795ce468e408084e211f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2db939117273c81f2ea7c529b08131b4, [16 x i8] c"_\00\00\00\00\00\00\00z\00\00\00\09\00\00\00" }>, align 8
@alloc_9cd20c3e415f4d39f0ceb012cb758628 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"there is no such thing as a release load" }>, align 1
@alloc_cf8f91dd8bc9347b20052f6ccc905cd7 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_9cd20c3e415f4d39f0ceb012cb758628, [8 x i8] c"(\00\00\00\00\00\00\00" }>, align 8
@alloc_7a3efd4e003eb9b4fbbbd598184a59f2 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/sync/atomic.rs" }>, align 1
@alloc_553a57103207da2b168072f4d019d879 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7a3efd4e003eb9b4fbbbd598184a59f2, [16 x i8] c"T\00\00\00\00\00\00\00\E5\0C\00\00\18\00\00\00" }>, align 8
@alloc_96ab912d0054b46da785b206a96c9a45 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"there is no such thing as an acquire-release load" }>, align 1
@alloc_7e8e9a1d4bc7d0bbec692f0a50681e22 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_96ab912d0054b46da785b206a96c9a45, [8 x i8] c"1\00\00\00\00\00\00\00" }>, align 8
@alloc_565c56ce3543e16b198dd2fe92d8c46e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7a3efd4e003eb9b4fbbbd598184a59f2, [16 x i8] c"T\00\00\00\00\00\00\00\E6\0C\00\00\17\00\00\00" }>, align 8
@alloc_bf39103a6db665396aab4632362d9353 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"there is no such thing as an acquire store" }>, align 1
@alloc_47c752ba42fbab56d43a37cfd56e4899 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_bf39103a6db665396aab4632362d9353, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc_f2490b91ac8f38c5812eaf37ef0bf1a7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7a3efd4e003eb9b4fbbbd598184a59f2, [16 x i8] c"T\00\00\00\00\00\00\00\D6\0C\00\00\18\00\00\00" }>, align 8
@alloc_00c0bce0fa6327f8ec8e69d6d765d508 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"there is no such thing as an acquire-release store" }>, align 1
@alloc_f8dbac861f87e25e445761cc4af66745 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_00c0bce0fa6327f8ec8e69d6d765d508, [8 x i8] c"2\00\00\00\00\00\00\00" }>, align 8
@alloc_582e46b8c50b44926d73f5c37db6c088 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7a3efd4e003eb9b4fbbbd598184a59f2, [16 x i8] c"T\00\00\00\00\00\00\00\D7\0C\00\00\17\00\00\00" }>, align 8
@alloc_5a43f8d94dd4505c1dba43832ce73af8 = private unnamed_addr constant <{ [52 x i8] }> <{ [52 x i8] c"there is no such thing as a release failure ordering" }>, align 1
@alloc_04ab601c54c6e0a22ff11d72dc7f4511 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_5a43f8d94dd4505c1dba43832ce73af8, [8 x i8] c"4\00\00\00\00\00\00\00" }>, align 8
@alloc_951d71d7fc9a3a03b1604bfc8e6b5b47 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7a3efd4e003eb9b4fbbbd598184a59f2, [16 x i8] c"T\00\00\00\00\00\00\00]\0D\00\00\1D\00\00\00" }>, align 8
@alloc_7adef5546d83b439c7829602020737c6 = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"there is no such thing as an acquire-release failure ordering" }>, align 1
@alloc_dd7d8f77c173bf31726eae321f955bec = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_7adef5546d83b439c7829602020737c6, [8 x i8] c"=\00\00\00\00\00\00\00" }>, align 8
@alloc_f8164208b1501e1231a4c490b4e7c4d3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7a3efd4e003eb9b4fbbbd598184a59f2, [16 x i8] c"T\00\00\00\00\00\00\00\\\0D\00\00\1C\00\00\00" }>, align 8
@alloc_6ef15161d96b83184bb59cff4003839f = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/alloc/layout.rs" }>, align 1
@alloc_a9c36de80897ff407f24bba36ae610b4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_6ef15161d96b83184bb59cff4003839f, [16 x i8] c"U\00\00\00\00\00\00\00\C3\01\00\00)\00\00\00" }>, align 8
@alloc_c47f388a2f284dde179cf1caf251ef44 = private unnamed_addr constant <{ [82 x i8] }> <{ [82 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/slice/mod.rs" }>, align 1
@alloc_c64833276dcb5250e04ff430ea42f372 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c47f388a2f284dde179cf1caf251ef44, [16 x i8] c"R\00\00\00\00\00\00\00\00\0A\00\00+\00\00\00" }>, align 8
@alloc_0523a51abf2885f34a27031fa28ece4b = private unnamed_addr constant <{ [82 x i8] }> <{ [82 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/ub_checks.rs" }>, align 1
@alloc_039c3f0e51c3c794cef31b8a39b44f71 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0523a51abf2885f34a27031fa28ece4b, [16 x i8] c"R\00\00\00\00\00\00\00|\00\00\006\00\00\00" }>, align 8
@alloc_11195730e5236cfdc15ea13be1c301f9 = private unnamed_addr constant <{ [162 x i8] }> <{ [162 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc_a3a1cf871e41b1308ff53e7ed1a22e2a = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/slice/index.rs" }>, align 1
@alloc_e6b42d2b8789752d925cb7715548de74 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a3a1cf871e41b1308ff53e7ed1a22e2a, [16 x i8] c"T\00\00\00\00\00\00\00\C0\02\00\004\00\00\00" }>, align 8
@alloc_188ed9c65822adf63bb6310b805a766e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a3a1cf871e41b1308ff53e7ed1a22e2a, [16 x i8] c"T\00\00\00\00\00\00\00\C7\02\00\002\00\00\00" }>, align 8
@alloc_161c855febe47b6eaaf12928eb8fdcfa = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/slice/memchr.rs" }>, align 1
@alloc_088f7798d70e5f6ed62563131ebc7f15 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_161c855febe47b6eaaf12928eb8fdcfa, [16 x i8] c"U\00\00\00\00\00\00\00+\00\00\00\0C\00\00\00" }>, align 8
@4 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"0123456789abcdef" }>, align 1
@alloc_96ec2ebf0f315a7f3b61da0a8df88eed = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/escape.rs" }>, align 1
@alloc_2fe1776bf412731d032283afde9952f0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_96ec2ebf0f315a7f3b61da0a8df88eed, [16 x i8] c"O\00\00\00\00\00\00\00F\00\00\00\11\00\00\00" }>, align 8
@alloc_4a5b1a47d4f18a95da9da1987cd8c239 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_96ec2ebf0f315a7f3b61da0a8df88eed, [16 x i8] c"O\00\00\00\00\00\00\00G\00\00\00\11\00\00\00" }>, align 8
@alloc_73fc148532a0690c92ce39e322beca7c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_96ec2ebf0f315a7f3b61da0a8df88eed, [16 x i8] c"O\00\00\00\00\00\00\00H\00\00\00\11\00\00\00" }>, align 8
@alloc_7a8230073db0345c385103f1210eb63b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_96ec2ebf0f315a7f3b61da0a8df88eed, [16 x i8] c"O\00\00\00\00\00\00\00I\00\00\00\11\00\00\00" }>, align 8
@alloc_81be960a2b3cc1eeef322c81e8df9f31 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_96ec2ebf0f315a7f3b61da0a8df88eed, [16 x i8] c"O\00\00\00\00\00\00\00J\00\00\00\11\00\00\00" }>, align 8
@alloc_e69def46d8151dddc43334e0c35c2ea7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_96ec2ebf0f315a7f3b61da0a8df88eed, [16 x i8] c"O\00\00\00\00\00\00\00K\00\00\00\11\00\00\00" }>, align 8
@alloc_9e9af40a78aac243287019176b82a546 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_96ec2ebf0f315a7f3b61da0a8df88eed, [16 x i8] c"O\00\00\00\00\00\00\00M\00\00\00\05\00\00\00" }>, align 8
@alloc_ba534666585302d11e7d1a0c0b6c5df7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_96ec2ebf0f315a7f3b61da0a8df88eed, [16 x i8] c"O\00\00\00\00\00\00\00N\00\00\00\05\00\00\00" }>, align 8
@alloc_4ebd51857ec52ed806b6777aa014b67e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_96ec2ebf0f315a7f3b61da0a8df88eed, [16 x i8] c"O\00\00\00\00\00\00\00O\00\00\00\05\00\00\00" }>, align 8
@5 = private unnamed_addr constant <{ [1 x i8], [1 x i8] }> <{ [1 x i8] zeroinitializer, [1 x i8] undef }>, align 1
@vtable.2 = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN68_$LT$proc_macro2..fallback..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17h67fef370abe39176E" }>, align 8
@vtable.3 = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN57_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17hf65267aabaef1d1bE" }>, align 8
@vtable.4 = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN70_$LT$core..num..error..TryFromIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17hb209b3ef4d6fa770E" }>, align 8
@vtable.5 = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hba58b6c9d9815192E" }>, align 8
@alloc_00ae4b301f7fab8ac9617c03fcbd7274 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@_ZN4core7unicode12unicode_data11white_space14WHITESPACE_MAP17he63ff13526352a5cE = external global [256 x i8]
@alloc_b4fd16894743353fab2a9687364b046b = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/unicode/unicode_data.rs" }>, align 1
@alloc_9ad48ca586742b9ab121bf87fcbd1a9d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b4fd16894743353fab2a9687364b046b, [16 x i8] c"]\00\00\00\00\00\00\00@\02\00\00\12\00\00\00" }>, align 8
@alloc_bf59a592960a1522cd4ff178e3b5b01a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b4fd16894743353fab2a9687364b046b, [16 x i8] c"]\00\00\00\00\00\00\00B\02\00\00\13\00\00\00" }>, align 8
@vtable.6 = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h25c4ed0fda439c9dE" }>, align 8
@alloc_0f4ec70ce9b68d2a18bd009ca3d4baf3 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/alloc/src/slice.rs" }>, align 1
@alloc_05bd7b5bcfb0fb98096b4d6e6990fe41 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0f4ec70ce9b68d2a18bd009ca3d4baf3, [16 x i8] c"O\00\00\00\00\00\00\00\92\00\00\00\11\00\00\00" }>, align 8
@6 = private unnamed_addr constant <{ [1 x i8], [1 x i8] }> <{ [1 x i8] c"\01", [1 x i8] undef }>, align 1
@alloc_611ea47e56fe111765d49cc77e8ab451 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"char len should be less than 255" }>, align 1
@alloc_9255bf5d4789a2e4cea7e993364e5ae0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00,\02\00\00\0E\00\00\00" }>, align 8
@alloc_99ac8a81a24cac863217ce4a5cbfabea = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Error" }>, align 1
@alloc_b20c6211b16a2df3c39015542c0ebf00 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\D0\03\00\00:\00\00\00" }>, align 8
@alloc_ce18dc9b9ca144fde65711b7622c392e = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"LexError" }>, align 1
@alloc_7c7447cbdfbe3a3bd23c753758158340 = private unnamed_addr constant <{ [81 x i8] }> <{ [81 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/alloc/src/vec/mod.rs" }>, align 1
@alloc_c6ad71a07698cb5254c9e16a44bea55e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c7447cbdfbe3a3bd23c753758158340, [16 x i8] c"Q\00\00\00\00\00\00\00\95\08\00\00$\00\00\00" }>, align 8
@__rust_no_alloc_shim_is_unstable = external global i8
@alloc_fd658439c397d335ee01abc3a4ed5fd5 = private unnamed_addr constant <{ [44 x i8] }> <{ [44 x i8] c"assertion failed: self.is_char_boundary(idx)" }>, align 1
@alloc_8e3a85c7678f157e80cbc88bda1bf520 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_56ddd9f8a83a5b1254ce7cdf41b13c3e, [16 x i8] c"P\00\00\00\00\00\00\00{\06\00\00\09\00\00\00" }>, align 8
@alloc_5f986b98c64f9d104e42c1f77cb49e68 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_56ddd9f8a83a5b1254ce7cdf41b13c3e, [16 x i8] c"P\00\00\00\00\00\00\00\B8\05\00\00\1C\00\00\00" }>, align 8
@alloc_ace97832e319df4c8a68695dbff2be3b = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"cannot remove a char from the end of a string" }>, align 1
@alloc_ac5f081713123e742296374c690108be = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_ace97832e319df4c8a68695dbff2be3b, [8 x i8] c"-\00\00\00\00\00\00\00" }>, align 8
@alloc_0480b8d0720691b885b9bda486974d1f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_56ddd9f8a83a5b1254ce7cdf41b13c3e, [16 x i8] c"P\00\00\00\00\00\00\00\BA\05\00\00\15\00\00\00" }>, align 8
@7 = private unnamed_addr constant <{ [8 x i8], [8 x i8] }> <{ [8 x i8] c"\01\00\00\00\00\00\00\80", [8 x i8] undef }>, align 8
@alloc_811a51e3fc41defd9fec0f2f879f57ca = private unnamed_addr constant <{ [88 x i8] }> <{ [88 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/alloc/src/vec/partial_eq.rs" }>, align 1
@alloc_9cb9ac9b9212467e1a10fc7ba4491431 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_811a51e3fc41defd9fec0f2f879f57ca, [16 x i8] c"X\00\00\00\00\00\00\00\17\00\00\00\01\00\00\00" }>, align 8
@alloc_37d2e53432a03a1f90b3e7253015eaf9 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"None" }>, align 1
@alloc_9535bf4c204f3eb9b19ec2c83e446e52 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Some" }>, align 1
@vtable.7 = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbf787cf7f6cc7e4bE" }>, align 8
@alloc_5cb263f26a5d50117adfcc5c7225745e = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"TryFromIntError" }>, align 1
@vtable.8 = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf908c21d3478875aE" }>, align 8
@alloc_a918088129574efbf4eb4c3e02dd5937 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00G\04\00\00$\00\00\00" }>, align 8
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc_4606dfc766e23d9646c00ebc31b83b5c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e09b762e23e7aab5d1c9567cce4bbe22, [16 x i8] c"T\00\00\00\00\00\00\00\BF\01\00\007\00\00\00" }>, align 8
@8 = private unnamed_addr constant <{ [8 x i8], [4 x i8], [4 x i8] }> <{ [8 x i8] undef, [4 x i8] c"\00\00\11\00", [4 x i8] undef }>, align 8
@alloc_5e12b16480b0bc81a9b2311086ce4caa = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/home/arsalan/Documents/Github/unsafe-rust-benchmark/library/core/src/slice/iter.rs" }>, align 1
@alloc_48efd6df13d24dae36913b79f4a7823a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_5e12b16480b0bc81a9b2311086ce4caa, [16 x i8] c"S\00\00\00\00\00\00\00<\05\00\00#\00\00\00" }>, align 8
@alloc_f9a4645200b32ea306ea6249b4c6d735 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_5e12b16480b0bc81a9b2311086ce4caa, [16 x i8] c"S\00\00\00\00\00\00\00=\05\00\00\1D\00\00\00" }>, align 8
@alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27 = private unnamed_addr constant <{ [98 x i8] }> <{ [98 x i8] c"/home/arsalan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.70/src/parse.rs" }>, align 1
@alloc_38786e819d09807ef6f22610c89f910b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00Q\00\00\00\14\00\00\00" }>, align 8
@alloc_d5f0f24268d469e3dc9e2ef7f6510983 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"//" }>, align 1
@alloc_a3cbf1622e18ce8557a1059d1d50984b = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"///" }>, align 1
@alloc_aa5d53d33a460a6f3784f1b7fa109f88 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"////" }>, align 1
@alloc_3dba12bdfc02f300bac5107fa50559e2 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"//!" }>, align 1
@alloc_59a513d8c7a03aa22faf89201dcc46f3 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"/**/" }>, align 1
@alloc_306b17c50e3f209e7082c0dad9084435 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"/*" }>, align 1
@alloc_c63f42f072c0f65a5c00be2f1e9c3fa6 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"/**" }>, align 1
@alloc_b361d2f6d45158fecc3ea02eedd442f7 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"/***" }>, align 1
@alloc_022cee65c935a399b1901330ff471e91 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"/*!" }>, align 1
@alloc_65dcc200471b709cd1931584d11c9cd2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00q\00\00\00+\00\00\00" }>, align 8
@alloc_0a21ca4c7cbd5c0b714c64959e7a9078 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\88\00\00\00\0C\00\00\00" }>, align 8
@alloc_4766321be587d77fde4b2683a5d4a559 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\88\00\00\00 \00\00\00" }>, align 8
@alloc_e9db3e09497f720e21128cb574315b1f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\8B\00\00\00\13\00\00\00" }>, align 8
@alloc_22633586b8bb72b663774f7f5909f4c9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\8B\00\00\00'\00\00\00" }>, align 8
@alloc_b0acb92159d58c76d83a5f25f23f8d50 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\8E\00\00\00=\00\00\00" }>, align 8
@alloc_8a5755c7923bb7fc54a716e61bfc895f = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"(/*ERROR*/)" }>, align 1
@alloc_db0a92ae52fea3f096ed364062cd51f4 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"r\22" }>, align 1
@alloc_08bffe54a7c6e4ba345e1a5ec029bf4e = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"r#\22" }>, align 1
@alloc_315158db7b4aa8f4f149c0c8884eafcb = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"r##" }>, align 1
@alloc_3050fe490e20e8ca0b126453c1f93f49 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"b\22" }>, align 1
@alloc_c230d367772640e7780c9805d76b7a5a = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"b'" }>, align 1
@alloc_c17a19ecc61c3d4c1674ac5bcf8c170f = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"br\22" }>, align 1
@alloc_e4a9753dd3733445c0f90fe1e8201aff = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"br#" }>, align 1
@alloc_354e8ac62b06cfdd3362af42ebb90859 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"c\22" }>, align 1
@alloc_3a34a0a500efeb5d223ee05713880aee = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"cr\22" }>, align 1
@alloc_335caab743944b23fad79cbbb7c2fb8a = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"cr#" }>, align 1
@alloc_7627a22b592e80dfa0b062f2da5f9c23 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_db0a92ae52fea3f096ed364062cd51f4, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_08bffe54a7c6e4ba345e1a5ec029bf4e, [8 x i8] c"\03\00\00\00\00\00\00\00", ptr @alloc_315158db7b4aa8f4f149c0c8884eafcb, [8 x i8] c"\03\00\00\00\00\00\00\00", ptr @alloc_3050fe490e20e8ca0b126453c1f93f49, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_c230d367772640e7780c9805d76b7a5a, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_c17a19ecc61c3d4c1674ac5bcf8c170f, [8 x i8] c"\03\00\00\00\00\00\00\00", ptr @alloc_e4a9753dd3733445c0f90fe1e8201aff, [8 x i8] c"\03\00\00\00\00\00\00\00", ptr @alloc_354e8ac62b06cfdd3362af42ebb90859, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_3a34a0a500efeb5d223ee05713880aee, [8 x i8] c"\03\00\00\00\00\00\00\00", ptr @alloc_335caab743944b23fad79cbbb7c2fb8a, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_26741d7be2999f870b5ef1ed52a52387 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"r#" }>, align 1
@alloc_27cca3636828088e60ce450d2eca2060 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"_" }>, align 1
@alloc_105895aecd604a09ec1be120f512aa8a = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"super" }>, align 1
@alloc_6aeac8d59cbcbd1aee06607ad2dd6674 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"self" }>, align 1
@alloc_7e323bfe8c2b6a467b3640606c98266f = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Self" }>, align 1
@alloc_b7d12448d3c2d0861386fea51f6ebf56 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"crate" }>, align 1
@alloc_3363be79f70cce6380191e87cbbe8cd4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00,\01\00\00\17\00\00\00" }>, align 8
@alloc_b3490e9107dfd396088b943cdcdabf9e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00R\01\00\00(\00\00\00" }>, align 8
@alloc_63c62eb0461031c16375ee89d85854ac = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00X\01\00\00'\00\00\00" }>, align 8
@alloc_649acb99022a4026e30edffc0f730b2a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00V\01\00\00\10\00\00\00" }>, align 8
@alloc_cf46f026acc4d198a9acedc9bd1a66b2 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\22" }>, align 1
@alloc_c7ca2384edadb766999f3f810e9a1faa = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"r" }>, align 1
@alloc_3cc5ff44286625411b873e05982e2b23 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\8F\01\00\00\15\00\00\00" }>, align 8
@alloc_be7670d825949a0947a3a95be7389423 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\93\01\00\00\15\00\00\00" }>, align 8
@alloc_4e45ed8763bfeb285120d5df461eb763 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\97\01\00\00\15\00\00\00" }>, align 8
@alloc_22736ecf1dcc9e5b21db289516d9e477 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\A7\01\00\00\1F\00\00\00" }>, align 8
@alloc_94b3dcb0165876ef7da94a4ad2dccabb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\A3\01\00\00\1E\00\00\00" }>, align 8
@alloc_1a50d1b7986d15496f07bc02bc2fa74c = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"br" }>, align 1
@alloc_252dc166ffebb279309b0099ff931bf5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\CD\01\00\00\15\00\00\00" }>, align 8
@alloc_73039457bd355c986a86daeb7a0e5eec = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\D2\01\00\00\15\00\00\00" }>, align 8
@alloc_a860890a6751586d220a8d35e3539ea9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\E6\01\00\00=\00\00\00" }>, align 8
@alloc_6abe1930b762e4857a8403952ff57f69 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\F4\01\00\00\1F\00\00\00" }>, align 8
@alloc_afb8878a1e4270ac72cb46d37b483045 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\F0\01\00\00\1E\00\00\00" }>, align 8
@alloc_1bae2be023d341346a677993c977de2b = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"cr" }>, align 1
@alloc_0209cf3bfeab477f7b4f4616c8749b2d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\15\02\00\00\1F\00\00\00" }>, align 8
@alloc_e176d1556de9327a25af1cc6586dd6a8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\11\02\00\00\1E\00\00\00" }>, align 8
@alloc_a420d794d5a28f6a30753f5133e1498a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\003\02\00\00\15\00\00\00" }>, align 8
@alloc_3b4ad0e6b6a7508615aa41d89d5f2d13 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\007\02\00\00\18\00\00\00" }>, align 8
@alloc_74f5422b8ef01d44b5949e3dce64fee7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00=\02\00\00\15\00\00\00" }>, align 8
@alloc_8b81d5a4eae5f23ca3c590a4cd01f630 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"'" }>, align 1
@alloc_d88c228165509910408aff46753347d2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00[\02\00\00\11\00\00\00" }>, align 8
@alloc_7c03eb0430874cebd72f545029a1517e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00W\02\00\00\17\00\00\00" }>, align 8
@alloc_5eb47c7ecc4b80ad9ce95456d5bc6196 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00J\02\00\00\11\00\00\00" }>, align 8
@alloc_a097579a7e3e8aad8744ae7276559d35 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00o\02\00\00\11\00\00\00" }>, align 8
@alloc_00bc14d34de57cbc36fbb60db20ab230 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00n\02\00\00\14\00\00\00" }>, align 8
@alloc_098fb19257ba5156fa70494d5b2c855d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00`\02\00\00\11\00\00\00" }>, align 8
@alloc_86b064d3e56b3dcc812549f662d9f71a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\CF\02\00\00\14\00\00\00" }>, align 8
@alloc_38a50dd405fb7ab3bd82bab079d9a675 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\CC\02\00\00\14\00\00\00" }>, align 8
@alloc_05cb19f7030c92bea6e3aec70b430577 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00.\03\00\00\14\00\00\00" }>, align 8
@alloc_8ed9556f8baea4867f470b507c6bae9a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00+\03\00\00\14\00\00\00" }>, align 8
@alloc_83d8d36e705c58ed11bda7b90dabc655 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"0x" }>, align 1
@alloc_3f5e304b2d3feb2147d7ca807297437a = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"0o" }>, align 1
@alloc_27d35d5cbe30361bd1ed04847fdae817 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"0b" }>, align 1
@alloc_091bf414a975b687633f25f773c76a98 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00n\03\00\00\0C\00\00\00" }>, align 8
@alloc_6119a4a3d8321bd55dbf2911789e2903 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00l\03\00\00\16\00\00\00" }>, align 8
@alloc_aae81247d080136175dbd352957cb012 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"~!@#$%^&*-=+|;:,<.>/?'" }>, align 1
@alloc_72fe15088ac8e741fd8e5026cc5133cb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\9F\03\00\00%\00\00\00" }>, align 8
@alloc_701ce0bb3ffd80e30a094997fe0bfddc = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"doc" }>, align 1
@alloc_ea1aaa9361726b6029f3d4676dce7b97 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\94\03\00\00$\00\00\00" }>, align 8
@alloc_044c8694bc252ae0e20331aba14bfa35 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\D0\03\00\006\00\00\00" }>, align 8
@alloc_a9e682675f3f5d032215aa5c333f91e0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\D2\03\00\00\17\00\00\00" }>, align 8
@alloc_63b191b973621cd9fc118a39795c58c7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\D1\03\00\00\1A\00\00\00" }>, align 8
@alloc_af991582243abe3267a6fc22d665a0fb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\C8\03\00\00\17\00\00\00" }>, align 8
@alloc_4ca3f5179382bcf41925481dcceecb81 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\C7\03\00\00\1A\00\00\00" }>, align 8
@alloc_a3d98426d9b6a64c4ffa03e9646ef4c8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\DD\03\00\002\00\00\00" }>, align 8
@alloc_bf2129c2660f7377cfffd08b8e87e99a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\DE\03\00\00+\00\00\00" }>, align 8
@alloc_9de1d4aff78dc5aba5ddcc3a83577e09 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e9b2a7c98a7f1e6e3fa5f9a4d1f3ef27, [16 x i8] c"b\00\00\00\00\00\00\00\DF\03\00\006\00\00\00" }>, align 8
@_ZN11proc_macro29detection5WORKS17ha239fa9223ed0a28E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN11proc_macro29detection4INIT17ha01234dd08f7075eE = internal global <{ [4 x i8] }> zeroinitializer, align 4
@alloc_dc7b19a6b3fd9a84fc4b42d53e9c8691 = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"/home/arsalan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.70/src/detection.rs" }>, align 1
@alloc_213e33e81e502673945f14a8c641d8e6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_dc7b19a6b3fd9a84fc4b42d53e9c8691, [16 x i8] c"f\00\00\00\00\00\00\00\0E\00\00\00\0A\00\00\00" }>, align 8
@alloc_e712762edc9ad31bc8ddf8c29ba2ab95 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"\EF\BB\BF" }>, align 1
@alloc_86ae06c694315714eba68fd4dbf9a3e7 = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"cannot parse string into token stream" }>, align 1
@alloc_0242e8ee118de705af76c627590b82cc = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c" " }>, align 1
@alloc_c00fe7fcdf183128eacaa5cead3e5b1f = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_0242e8ee118de705af76c627590b82cc, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_ff7e89f0f334a20ed2fe7a91437d46b8 = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"/home/arsalan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.70/src/fallback.rs" }>, align 1
@alloc_61a3ea68f6968f26b1d351a01078ff03 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00\C5\00\00\00\11\00\00\00" }>, align 8
@alloc_ca9947dbcaedc0cf87f039977b6aa83b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00\C8\00\00\00\0D\00\00\00" }>, align 8
@alloc_5c9190818faa303809fe44f74ab2b44a = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"TokenStream " }>, align 1
@alloc_5cb3a146b6615456afeeb7173bb1ecd9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00\D9\00\00\00\09\00\00\00" }>, align 8
@alloc_519bbb0683fc13a80d093e972ed5ffbd = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"compiler token stream parse failed" }>, align 1
@alloc_d5c8943d731e4c12bfd4cb7b8740ed85 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00\E4\00\00\00\0E\00\00\00" }>, align 8
@alloc_5ea67045834e20cd2b2dc529f8f680b8 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"failed to parse to compiler tokens" }>, align 1
@alloc_7b3565daa78a7229551e6b70affed39e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00\EE\00\00\00\0E\00\00\00" }>, align 8
@alloc_115ffe2e9ed1e007567a3bbfc0abb33e = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"SourceFile" }>, align 1
@alloc_1713fdbdd59e3f6dd78509f861b8bb36 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"path" }>, align 1
@vtable.9 = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h91833bae97a83f38E", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN55_$LT$std..path..PathBuf$u20$as$u20$core..fmt..Debug$GT$3fmt17h3fccc7738c99660fE" }>, align 8
@alloc_68f479c2f24e9297f788ed7dd88ff18a = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"is_real" }>, align 1
@vtable.a = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h41a9056ce763c337E" }>, align 8
@alloc_013ac183eb69ceaf6bbbdb62e96feb3c = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Span" }>, align 1
@alloc_aad67cf38ff50928db56315f0cc21b07 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_013ac183eb69ceaf6bbbdb62e96feb3c, [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc_1ff25e6ad58d770003043bae3c4113bf = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"(" }>, align 1
@alloc_9e3f62b0e6490cc45676dc85f910c2d0 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc_ba02d3c2bb83a9cd2b43a9c8021c63b5 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"{ " }>, align 1
@alloc_fcd552ca5ffc948e1053f652f94fed71 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"}" }>, align 1
@alloc_036636151bab3754536335311c8d3ab8 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"[" }>, align 1
@alloc_7a6887ef0f93938f57a4bb958cf80311 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"]" }>, align 1
@alloc_7248c0ab412e0a4f56381dc419954230 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00\DC\02\00\00\0D\00\00\00" }>, align 8
@alloc_6dd02269b23faa37975cf09c0218f385 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00\DE\02\00\00\09\00\00\00" }>, align 8
@alloc_9aee5f439ed8feffbc6f6580c149ef82 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00\DA\02\00\00\09\00\00\00" }>, align 8
@alloc_cbecd9d73e681bbaf4b5a9cd138aa12a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00\D9\02\00\00\09\00\00\00" }>, align 8
@alloc_9da9d291a90742fa8a71e87501ed4345 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Group" }>, align 1
@alloc_f18a9bd8117f705fa536a1dea2e1da89 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"delimiter" }>, align 1
@vtable.b = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN59_$LT$proc_macro2..Delimiter$u20$as$u20$core..fmt..Debug$GT$3fmt17h03c3a3ab6bfca45cE" }>, align 8
@alloc_16157024dd92dd2dc2624dbf6332a09b = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"stream" }>, align 1
@vtable.c = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h842cd8089ab57678E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN71_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc5baecbeabf7391E" }>, align 8
@alloc_a433354f33342351c461c70cc187d739 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c" is not a valid Ident" }>, align 1
@alloc_0b761235b698fc0bb61eb8c9cf2baa7f = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_a433354f33342351c461c70cc187d739, [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc_218a05756a37265d60694e13f7e3d209 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"Ident cannot be a number; use Literal instead" }>, align 1
@alloc_dfb0c1e49a652d1c226faedca3b3a6d3 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_218a05756a37265d60694e13f7e3d209, [8 x i8] c"-\00\00\00\00\00\00\00" }>, align 8
@alloc_223fa054b991c08dbf9067cd34c06732 = private unnamed_addr constant <{ [51 x i8] }> <{ [51 x i8] c"Ident is not allowed to be empty; use Option<Ident>" }>, align 1
@alloc_061a4c4961692303b78b16583ef2f676 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_223fa054b991c08dbf9067cd34c06732, [8 x i8] c"3\00\00\00\00\00\00\00" }>, align 8
@alloc_3febd6f7ad5b8bb0e8de9562dfd9fada = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00/\03\00\00\22\00\00\00" }>, align 8
@alloc_ab477093b59ce23eba21093007520201 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"`r#" }>, align 1
@alloc_7d1c330741f795d9c121ef3f0defae66 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"` cannot be a raw identifier" }>, align 1
@alloc_354dd15a14169b2de9b9c6dfe1ba2540 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_ab477093b59ce23eba21093007520201, [8 x i8] c"\03\00\00\00\00\00\00\00", ptr @alloc_7d1c330741f795d9c121ef3f0defae66, [8 x i8] c"\1C\00\00\00\00\00\00\00" }>, align 8
@alloc_2329b817f93c9dff96ec90c92a9ea716 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ff7e89f0f334a20ed2fe7a91437d46b8, [16 x i8] c"e\00\00\00\00\00\00\00c\03\00\00\0D\00\00\00" }>, align 8
@alloc_2dbfdc2e58db4d4910923c307a6e38ca = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Ident" }>, align 1
@alloc_b99730e73100e73a81f4fbfe74b3821d = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer }>, align 8
@vtable.d = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\000\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN57_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Debug$GT$3fmt17h88ad6f5138354091E" }>, align 8
@alloc_11813f653ed6a734517fe4070f367895 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".0" }>, align 1
@alloc_d555b1c9aff03f19dcb511ac1ac8841e = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\0" }>, align 1
@alloc_c6c4149d289afdcaafd000f8d4a6bfb9 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\\x00" }>, align 1
@alloc_d60793667b48d8597496d3dbc89c8177 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\t" }>, align 1
@alloc_3881d9bec5de5a4c65f8cbef37283713 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\n" }>, align 1
@alloc_84e26d65b99f72a64848d9745fc88101 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\r" }>, align 1
@alloc_ecfb9c41a817c0344047f6b7fab37bb4 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\\22" }>, align 1
@alloc_e9ab70823b006efb53ee24434a446271 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\\\" }>, align 1
@alloc_37ea2f75ed88fba5dc9d844fc43ee990 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\x" }>, align 1
@alloc_f3b6d8e642063abee154656dd60b1eda = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_37ea2f75ed88fba5dc9d844fc43ee990, [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc_33ac9531a9c2c24dc222b4b41e31ecf8 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Literal" }>, align 1
@alloc_9791236d4c0092df644cfaa29555826d = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"lit" }>, align 1
@alloc_904cc68e32aa0b4099202f3aba98e87b = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"compiler/fallback mismatch" }>, align 1
@alloc_312d8ee8e73f2d3cdf99a6ce3551f56b = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_904cc68e32aa0b4099202f3aba98e87b, [8 x i8] c"\1A\00\00\00\00\00\00\00" }>, align 8
@alloc_48258dac474065113184c5bc39f1fcd8 = private unnamed_addr constant <{ [100 x i8] }> <{ [100 x i8] c"/home/arsalan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.70/src/wrapper.rs" }>, align 1
@alloc_2eff838ed3163eb90d1619973b56be9b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00*\00\00\00\05\00\00\00" }>, align 8
@alloc_bc0ae40514e83e0af59c8f2c44b6c417 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00p\00\00\00&\00\00\00" }>, align 8
@alloc_77c00cca301e3144f91fa97d47d8d15e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00m\00\00\00\11\00\00\00" }>, align 8
@alloc_daac157542996d114ccfbf99aeb76120 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00x\00\00\00\0C\00\00\00" }>, align 8
@alloc_57c0aa826ab7be2b4b6ac673f8d888e3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00\8E\00\00\00G\00\00\00" }>, align 8
@alloc_cc1b511ec8ce0a9699a812ee920f7759 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00\9C\00\00\00;\00\00\00" }>, align 8
@alloc_924483463a8368a3d613abd716f9f893 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00\A6\00\00\00;\00\00\00" }>, align 8
@alloc_af23a9933ffa739b23f10a546a913025 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00\A4\00\00\00\13\00\00\00" }>, align 8
@alloc_b706e116591d24b8de204161f997f964 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00\A7\00\00\00=\00\00\00" }>, align 8
@alloc_1db4a8dc4931354d3832d67b630999ec = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00\B0\00\00\00)\00\00\00" }>, align 8
@alloc_69e014b21bd0ce3b2dc0ee2188ee1ba0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00\AE\00\00\00W\00\00\00" }>, align 8
@alloc_87a33879f94a3c068267525b6d2d40bb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00C\01\00\00Y\00\00\00" }>, align 8
@alloc_fd37ce6cbbc75f659823b130e6c71978 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00M\01\00\00W\00\00\00" }>, align 8
@alloc_55120d89cb7a2617208dd45fdd875923 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00K\01\00\00\13\00\00\00" }>, align 8
@alloc_6ef66a8593bd0837665b94528d527284 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00N\01\00\00]\00\00\00" }>, align 8
@alloc_87da24c6c4aee92f40a5980899f3858c = private unnamed_addr constant <{ [55 x i8] }> <{ [55 x i8] c"proc_macro::Span is only available in procedural macros" }>, align 1
@alloc_20cbea710a0c6cd6b255770ee94e71e0 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_87da24c6c4aee92f40a5980899f3858c, [8 x i8] c"7\00\00\00\00\00\00\00" }>, align 8
@alloc_583a7c01bca8b668b7b2440b42e37f33 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00\B4\01\00\00\22\00\00\00" }>, align 8
@alloc_d299c6d6ea3f96b88c1a3bb8e0f4fc1e = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"span" }>, align 1
@vtable.e = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", ptr @"_ZN53_$LT$proc_macro..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f979cfe424668feE" }>, align 8
@alloc_85f85a65aa8b036064a0f08f0d8d3d25 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"invalid literal" }>, align 1
@alloc_52f8e9a7451d2437ef7d66289d7b7c08 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00\FB\02\00\00C\00\00\00" }>, align 8
@alloc_349d3d0902daedd2f8a07c8b1672d51e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00y\03\00\00\1B\00\00\00" }>, align 8
@alloc_d6ac3a456a3e93b685e12b5b12a5db95 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48258dac474065113184c5bc39f1fcd8, [16 x i8] c"d\00\00\00\00\00\00\00v\03\00\00\1B\00\00\00" }>, align 8
@alloc_fed41a6437d9d4a534fea0dd6da7ce75 = private unnamed_addr constant <{ [96 x i8] }> <{ [96 x i8] c"/home/arsalan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.70/src/lib.rs" }>, align 1
@alloc_01616bba73a132287d1b443e5cf56679 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00\E7\00\00\00\11\00\00\00" }>, align 8
@alloc_1dd067137d2ae3739c101121a83a2ce3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00\F3\00\00\00!\00\00\00" }>, align 8
@alloc_64442ae03bbb0ea447d74bca42ae987d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00\FB\00\00\00\15\00\00\00" }>, align 8
@alloc_1350894a24d20d4f82d28f8389c28967 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00\87\01\00\00\1A\00\00\00" }>, align 8
@alloc_37d55b91621ff632e7c33748e32b9616 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"sym" }>, align 1
@alloc_987ee3fd87498fd3c36cc2e311f5302a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00\9C\02\00\00\1A\00\00\00" }>, align 8
@alloc_330d63602223408d89df37fc81986e6c = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Punct" }>, align 1
@alloc_9b5c8091e3b549959da5ff7ce59718f9 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"char" }>, align 1
@vtable.f = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", ptr @"_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h05733adebd5664c5E" }>, align 8
@alloc_033337e827ce54b74ba409e6d0ed4279 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"spacing" }>, align 1
@vtable.g = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN57_$LT$proc_macro2..Spacing$u20$as$u20$core..fmt..Debug$GT$3fmt17h7333ab3fcbdaa078E" }>, align 8
@alloc_f8bf7251edc18fa655df9e7da0822a2e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00C\04\00\00\1A\00\00\00" }>, align 8
@alloc_872e27944f452a359e6d9f0cdbf18a96 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c"assertion failed: f.is_finite()" }>, align 1
@alloc_768bdfc169e8e51d63be8a563a21a302 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00t\04\00\00\09\00\00\00" }>, align 8
@alloc_16ba1a5d3cf7af6d8d32cd9c069e323e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00\86\04\00\00\09\00\00\00" }>, align 8
@alloc_c7710b89408583fd9e6b8fda4d98613a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00\98\04\00\00\09\00\00\00" }>, align 8
@alloc_a4ff712d68acaeb5c8c3f41826999797 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00\AA\04\00\00\09\00\00\00" }>, align 8
@alloc_eb7db4ea0894f6a849171cf3ffc9835f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fed41a6437d9d4a534fea0dd6da7ce75, [16 x i8] c"`\00\00\00\00\00\00\00\15\05\00\00\0D\00\00\00" }>, align 8
@vtable.h = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb728857baa5ea652E" }>, align 8
@alloc_df66aaff7dc04933728ad5e7db359d0f = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"u8" }>, align 1
@alloc_6fcf3a3c992995ab262b575885136de3 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_df66aaff7dc04933728ad5e7db359d0f, [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc_0d3fdde1e4251889fe20be0554d3a4df = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"u16" }>, align 1
@alloc_857c672e5aa084e790e2d96873f630f9 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_0d3fdde1e4251889fe20be0554d3a4df, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_40dca76ea60e772225aeb9a5dae9c756 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"u32" }>, align 1
@alloc_edeab7fc71a3de415c4c4e722590f9ff = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_40dca76ea60e772225aeb9a5dae9c756, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_4c3daea643e86fcf49e0a8dcf3e4c20b = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"u64" }>, align 1
@alloc_b9cca7493ef3232c87286296b485ea8c = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_4c3daea643e86fcf49e0a8dcf3e4c20b, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_c6dac74b65b8f5d0fd6a204546100ec0 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"u128" }>, align 1
@alloc_d6141e8d36bc4091b00689cb2f965a44 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_c6dac74b65b8f5d0fd6a204546100ec0, [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc_087073340adf6d09480d7739d2e7638d = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"usize" }>, align 1
@alloc_b567e9b83c8d0530609ec26647d65119 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_087073340adf6d09480d7739d2e7638d, [8 x i8] c"\05\00\00\00\00\00\00\00" }>, align 8
@alloc_468bbdcdbefe19b6476616d87880f70c = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"i8" }>, align 1
@alloc_b44f9bbca021b1d6813f62ca3d91bbb1 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_468bbdcdbefe19b6476616d87880f70c, [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc_b65da51539f621df7a047bc43773eb81 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"i16" }>, align 1
@alloc_43f3cf3e9288ae1924ee84ddc07f53c1 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_b65da51539f621df7a047bc43773eb81, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_f5bb2e494f5d1658dbc347d7b24d2ac3 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"i32" }>, align 1
@alloc_962f2d8fade7bbcb7d97d863b8bc6e3f = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_f5bb2e494f5d1658dbc347d7b24d2ac3, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_b7a8a06bcc169bbf687e36ae2ac3129c = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"i64" }>, align 1
@alloc_be1121f0b8470f2bd7ac7ab700439f77 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_b7a8a06bcc169bbf687e36ae2ac3129c, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_fc155f0a6f9ce04075e55a71ca237d6b = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"i128" }>, align 1
@alloc_4d09191e7ae43e42eea36d00ffef3c2a = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_fc155f0a6f9ce04075e55a71ca237d6b, [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc_72df7fce5c308ce6e1f7311558c9728e = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"isize" }>, align 1
@alloc_0f927090f2196e1faa7cab05e6ad26b3 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_72df7fce5c308ce6e1f7311558c9728e, [8 x i8] c"\05\00\00\00\00\00\00\00" }>, align 8
@alloc_c8dbd11c0d0afd7250de135d09c6bf30 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"f32" }>, align 1
@alloc_274b061f0c6a48e0acb9874c0304499e = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_c8dbd11c0d0afd7250de135d09c6bf30, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_2717017e1ae813f478f43d8b0722e846 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"f64" }>, align 1
@alloc_09cd27f876d43cf651c7aed3f3df3f17 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr inttoptr (i64 1 to ptr), [8 x i8] zeroinitializer, ptr @alloc_2717017e1ae813f478f43d8b0722e846, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_0294e458fb90079136075a45e1b88064 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"Parenthesis" }>, align 1
@alloc_008064ec92f18d6001dc96ef0f11d89f = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Brace" }>, align 1
@alloc_a295c4aa60729a08b699a9334700da73 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Bracket" }>, align 1
@alloc_205c8fef0d2f3a459caa7a8e356d3db8 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Alone" }>, align 1
@alloc_9fa21bdf536aa6f2b9b2b030ef619bb2 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Joint" }>, align 1

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49af5079b345aadcE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_19 = alloca [32 x i8], align 8
  %self1 = alloca [8 x i8], align 8
  %ptr = alloca [8 x i8], align 8
  br label %bb4

bb4:                                              ; preds = %start
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %_16 = getelementptr inbounds i8, ptr %self, i64 24
  %0 = load ptr, ptr %_16, align 8
  store ptr %0, ptr %self1, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %1, align 8
  %_29 = load ptr, ptr %self1, align 8
  %_11 = icmp eq ptr %self3, %_29
  br i1 %_11, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %old = load ptr, ptr %2, align 8
  %_30 = getelementptr inbounds %TokenTree, ptr %old, i64 1
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %_30, ptr %3, align 8
  store ptr %old, ptr %ptr, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  store i64 -9223372036854775803, ptr %_0, align 8
  br label %bb8

bb7:                                              ; preds = %bb6
  %self4 = load ptr, ptr %ptr, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_19, ptr align 8 %self4, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_19, i64 32, i1 false)
  br label %bb9

bb8:                                              ; preds = %bb5
  br label %bb9

bb1:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable

bb10:                                             ; No predecessors!
  unreachable

bb9:                                              ; preds = %bb8, %bb7
  ret void

bb2:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7f954a3c5d955a4fE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_14 = alloca [16 x i8], align 8
  %exact = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %_11 = getelementptr inbounds i8, ptr %self, i64 24
  %self1 = load ptr, ptr %_11, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %subtracted = load ptr, ptr %0, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %1 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h7441ad264012b8a8E"(ptr %self1, ptr %subtracted)
  store i64 %1, ptr %exact, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = load i64, ptr %exact, align 8
  %_15 = load i64, ptr %exact, align 8
  %2 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %_15, ptr %2, align 8
  store i64 1, ptr %_14, align 8
  store i64 %_13, ptr %_0, align 8
  %3 = load i64, ptr %_14, align 8
  %4 = getelementptr inbounds i8, ptr %_14, i64 8
  %5 = load i64, ptr %4, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %3, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %5, ptr %7, align 8
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he0c251bcfdd6903fE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_14 = alloca [16 x i8], align 8
  %exact = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %_11 = getelementptr inbounds i8, ptr %self, i64 24
  %self1 = load ptr, ptr %_11, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %subtracted = load ptr, ptr %0, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %1 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h6cbd0d643e4b3110E"(ptr %self1, ptr %subtracted)
  store i64 %1, ptr %exact, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = load i64, ptr %exact, align 8
  %_15 = load i64, ptr %exact, align 8
  %2 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %_15, ptr %2, align 8
  store i64 1, ptr %_14, align 8
  store i64 %_13, ptr %_0, align 8
  %3 = load i64, ptr %_14, align 8
  %4 = getelementptr inbounds i8, ptr %_14, i64 8
  %5 = load i64, ptr %4, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %3, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %5, ptr %7, align 8
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro::bridge::TokenTree<TokenStream,Span,Symbol> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN103_$LT$proc_macro..bridge..TokenTree$LT$TokenStream$C$Span$C$Symbol$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h884af4b86fb15d3aE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 {
start:
  %_13 = alloca [16 x i8], align 4
  %_10 = alloca [12 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %_4 = alloca [20 x i8], align 4
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %1 = load i8, ptr %0, align 4
  %2 = sub i8 %1, 4
  %3 = zext i8 %2 to i64
  %4 = icmp ule i8 %2, 2
  %5 = add i64 %3, 1
  %_2 = select i1 %4, i64 %5, i64 0
  switch i64 %_2, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb5
    i64 2, label %bb6
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call <proc_macro::bridge::Group<TokenStream,Span> as core::clone::Clone>::clone
  call void @"_ZN90_$LT$proc_macro..bridge..Group$LT$TokenStream$C$Span$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h5e51b36949f2dffaE"(ptr sret([20 x i8]) align 4 %_4, ptr align 4 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_4, i64 20, i1 false)
  br label %bb9

bb5:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 4
  %6 = getelementptr inbounds i8, ptr %self, i64 4
  %_15 = load i8, ptr %6, align 4
  %self2 = getelementptr inbounds i8, ptr %self, i64 5
  %7 = getelementptr inbounds i8, ptr %self, i64 5
  %8 = load i8, ptr %7, align 1
  %_17 = trunc i8 %8 to i1
; call <proc_macro::bridge::client::Span as core::clone::Clone>::clone
  %_19 = call i32 @"_ZN71_$LT$proc_macro..bridge..client..Span$u20$as$u20$core..clone..Clone$GT$5clone17hd04af057693e265fE"(ptr align 4 %self)
  %9 = getelementptr inbounds i8, ptr %_7, i64 4
  store i8 %_15, ptr %9, align 4
  %10 = getelementptr inbounds i8, ptr %_7, i64 5
  %11 = zext i1 %_17 to i8
  store i8 %11, ptr %10, align 1
  store i32 %_19, ptr %_7, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_7, i64 8, i1 false)
  %12 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 4, ptr %12, align 4
  br label %bb9

bb6:                                              ; preds = %start
; call <proc_macro::bridge::Ident<Span,Symbol> as core::clone::Clone>::clone
  call void @"_ZN85_$LT$proc_macro..bridge..Ident$LT$Span$C$Symbol$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h22fe6daddc499655E"(ptr sret([12 x i8]) align 4 %_10, ptr align 4 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_10, i64 12, i1 false)
  %13 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 5, ptr %13, align 4
  br label %bb9

bb2:                                              ; preds = %start
; call <proc_macro::bridge::Literal<Span,Symbol> as core::clone::Clone>::clone
  call void @"_ZN87_$LT$proc_macro..bridge..Literal$LT$Span$C$Symbol$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h215841835d79a344E"(ptr sret([16 x i8]) align 4 %_13, ptr align 4 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_13, i64 16, i1 false)
  %14 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 6, ptr %14, align 4
  br label %bb9

bb9:                                              ; preds = %bb2, %bb6, %bb5, %bb3
  ret void
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define { i1, i8 } @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h99a198ac9de50c60E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %self1 = alloca [8 x i8], align 8
  %_0 = alloca [2 x i8], align 1
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %0 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha76358487c324f0eE"(ptr align 8 %self)
  store ptr %0, ptr %self1, align 8
  %1 = load ptr, ptr %self1, align 8
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_4 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb4, label %bb5

bb4:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb2

bb5:                                              ; preds = %start
  %_6 = load ptr, ptr %self1, align 8
  %v = load i8, ptr %_6, align 1
  %5 = getelementptr inbounds i8, ptr %_0, i64 1
  store i8 %v, ptr %5, align 1
  store i8 1, ptr %_0, align 1
  br label %bb2

bb2:                                              ; preds = %bb5, %bb4
  %6 = load i8, ptr %_0, align 1
  %7 = trunc i8 %6 to i1
  %8 = getelementptr inbounds i8, ptr %_0, i64 1
  %9 = load i8, ptr %8, align 1
  %10 = insertvalue { i1, i8 } poison, i1 %7, 0
  %11 = insertvalue { i1, i8 } %10, i8 %9, 1
  ret { i1, i8 } %11

bb3:                                              ; No predecessors!
  unreachable
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h4045db70bcbd116aE"() unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  store i8 1, ptr %_0, align 1
  %0 = load i8, ptr %_0, align 1
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hf52694d4d75ef921E"(i64 %0) unnamed_addr #0 {
start:
  %_0 = alloca [16 x i8], align 8
  %residual = alloca [8 x i8], align 8
  store i64 %0, ptr %residual, align 8
  %b = load i64, ptr %residual, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %b, ptr %1, align 8
  store i64 1, ptr %_0, align 8
  %2 = load i64, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  %4 = load i64, ptr %3, align 8
  %5 = insertvalue { i64, i64 } poison, i64 %2, 0
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1
  ret { i64, i64 } %6
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8a45788462871a0E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %rhs = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 8
  br label %bb3

bb3:                                              ; preds = %start
  store i64 %self.1, ptr %self, align 8
  store i64 %self.0, ptr %rhs, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %0 = load i64, ptr %self, align 8
  %1 = load i64, ptr %rhs, align 8
  %new_len = sub nuw i64 %0, %1
  %count = load i64, ptr %rhs, align 8
  %2 = load i64, ptr %rhs, align 8
  %data = getelementptr inbounds i8, ptr %slice.0, i64 %2
  %3 = insertvalue { ptr, i64 } poison, ptr %data, 0
  %4 = insertvalue { ptr, i64 } %3, i64 %new_len, 1
  ret { ptr, i64 } %4

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  %5 = load i64, ptr %self, align 8
  %6 = load i64, ptr %rhs, align 8
; call core::num::<impl usize>::unchecked_sub::precondition_check
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_sub18precondition_check17h412d3c0b38faa77eE"(i64 %5, i64 %6) #23
  br label %bb5
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h37f8c6bc13316486E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %rhs = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 8
  br label %bb3

bb3:                                              ; preds = %start
  store i64 %self.1, ptr %self, align 8
  store i64 %self.0, ptr %rhs, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %0 = load i64, ptr %self, align 8
  %1 = load i64, ptr %rhs, align 8
  %new_len = sub nuw i64 %0, %1
  %count = load i64, ptr %rhs, align 8
  %2 = load i64, ptr %rhs, align 8
  %data = getelementptr inbounds i8, ptr %slice.0, i64 %2
  %3 = insertvalue { ptr, i64 } poison, ptr %data, 0
  %4 = insertvalue { ptr, i64 } %3, i64 %new_len, 1
  ret { ptr, i64 } %4

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  %5 = load i64, ptr %self, align 8
  %6 = load i64, ptr %rhs, align 8
; call core::num::<impl usize>::unchecked_sub::precondition_check
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_sub18precondition_check17h412d3c0b38faa77eE"(i64 %5, i64 %6) #23
  br label %bb5
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h8282366d9378ce03E"(i64 %self.0, i64 %self.1, ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_0 = alloca [16 x i8], align 8
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_6 = icmp ugt i64 %self.1, %slice.1
  br i1 %_6, label %bb3, label %bb5

bb1:                                              ; preds = %start
  br label %bb4

bb5:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %0 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8a45788462871a0E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1)
  %_9.0 = extractvalue { ptr, i64 } %0, 0
  %_9.1 = extractvalue { ptr, i64 } %0, 1
  store ptr %_9.0, ptr %_0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_9.1, ptr %1, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  br label %bb4

bb7:                                              ; preds = %bb4, %bb5
  %2 = load ptr, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  %4 = load i64, ptr %3, align 8
  %5 = insertvalue { ptr, i64 } poison, ptr %2, 0
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1
  ret { ptr, i64 } %6

bb4:                                              ; preds = %bb1, %bb3
  %7 = load ptr, ptr @0, align 8
  %8 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %7, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %8, ptr %9, align 8
  br label %bb7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4e4cc40f540038acE"(i64 %self.0, i64 %self.1, ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 {
start:
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = icmp ugt i64 %self.1, %slice.1
  br i1 %_7, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h035de9af16d5a022E(i64 %self.0, i64 %self.1, ptr align 8 %0) #24
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h37f8c6bc13316486E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1)
  %_11.0 = extractvalue { ptr, i64 } %1, 0
  %_11.1 = extractvalue { ptr, i64 } %1, 1
  %2 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %_11.1, 1
  ret { ptr, i64 } %3

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h0342d27fee357d65E(i64 %self.1, i64 %slice.1, ptr align 8 %0) #24
  unreachable
}

; <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8ffd0830f296cdf1E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %src = alloca [4 x i8], align 4
  %result = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %self1 = getelementptr inbounds i8, ptr %self, i64 16
  store i32 1114113, ptr %src, align 4
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %1 = load i32, ptr %0, align 8
  store i32 %1, ptr %result, align 4
  %2 = getelementptr inbounds i8, ptr %self, i64 16
  %3 = load i32, ptr %src, align 4
  store i32 %3, ptr %2, align 8
  %4 = load i32, ptr %result, align 4
  %5 = icmp eq i32 %4, 1114113
  %_4 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_4, 0
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %7 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %self)
  store i32 %7, ptr %_0, align 4
  br label %bb5

bb3:                                              ; preds = %start
  %v = load i32, ptr %result, align 4
  store i32 %v, ptr %_0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb2
  %8 = load i32, ptr %_0, align 4
  ret i32 %8

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro::TokenStream as core::iter::traits::collect::Extend<proc_macro::TokenTree>>::extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN108_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..Extend$LT$proc_macro..TokenTree$GT$$GT$6extend17h0402403529be7ac7E"(ptr align 4 %self, ptr align 8 %trees) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_15 = alloca [1 x i8], align 1
  %_14 = alloca [1 x i8], align 1
  %_13 = alloca [24 x i8], align 8
  %_9 = alloca [40 x i8], align 8
  %_6 = alloca [24 x i8], align 8
  %builder = alloca [24 x i8], align 8
  %iter = alloca [40 x i8], align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4c823eebfc404252E"(ptr sret([40 x i8]) align 8 %iter, ptr align 8 %trees)
  store i8 1, ptr %_15, align 1
; invoke <alloc::vec::drain::Drain<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN96_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7fa34d6d892e69beE"(ptr sret([24 x i8]) align 8 %_6, ptr align 8 %iter)
          to label %bb2 unwind label %cleanup

bb10:                                             ; preds = %bb7, %bb8, %cleanup
  %1 = load i8, ptr %_15, align 1
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb9, label %bb6

cleanup:                                          ; preds = %bb2, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb10

bb2:                                              ; preds = %start
  %_5 = load i64, ptr %_6, align 8
; invoke proc_macro::ConcatTreesHelper::new
  invoke void @_ZN10proc_macro17ConcatTreesHelper3new17h21f20348c8009416E(ptr sret([24 x i8]) align 8 %builder, i64 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i8 1, ptr %_14, align 1
  store i8 0, ptr %_15, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %iter, i64 40, i1 false)
; invoke core::iter::traits::iterator::Iterator::for_each
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each17h3dbfc9ae0a36008eE(ptr align 8 %_9, ptr align 8 %builder)
          to label %bb4 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %7 = load i8, ptr %_14, align 1
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb7, label %bb10

cleanup1:                                         ; preds = %bb4, %bb3
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb8

bb4:                                              ; preds = %bb3
  store i8 0, ptr %_14, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_13, ptr align 8 %builder, i64 24, i1 false)
; invoke proc_macro::ConcatTreesHelper::append_to
  invoke void @_ZN10proc_macro17ConcatTreesHelper9append_to17h1bd72d7ceffcb109E(ptr align 8 %_13, ptr align 4 %self)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
  ret void

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<proc_macro::ConcatTreesHelper>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$proc_macro..ConcatTreesHelper$GT$17h5f92eaa83f855cf7E"(ptr align 8 %builder) #25
          to label %bb10 unwind label %terminate

terminate:                                        ; preds = %bb9, %bb7
  %13 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb6:                                              ; preds = %bb9, %bb10
  %16 = load ptr, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  %18 = load i32, ptr %17, align 8
  %19 = insertvalue { ptr, i32 } poison, ptr %16, 0
  %20 = insertvalue { ptr, i32 } %19, i32 %18, 1
  resume { ptr, i32 } %20

bb9:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<alloc::vec::drain::Drain<proc_macro::TokenTree>>
  invoke void @"_ZN4core3ptr74drop_in_place$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$GT$17h4b40ff3c4d5adce0E"(ptr align 8 %iter) #25
          to label %bb6 unwind label %terminate
}

; <proc_macro::TokenStream as core::iter::traits::collect::Extend<proc_macro::TokenTree>>::extend::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN108_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..Extend$LT$proc_macro..TokenTree$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hae3d897fcfad1003E"(ptr align 8 %_1, ptr align 4 %tree) unnamed_addr #0 {
start:
  %_3 = load ptr, ptr %_1, align 8
; call proc_macro::ConcatTreesHelper::push
  call void @_ZN10proc_macro17ConcatTreesHelper4push17ha4430720abe5341aE(ptr align 8 %_3, ptr align 4 %tree)
  ret void
}

; proc_macro::TokenStream::new
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN10proc_macro11TokenStream3new17h4e2646f2438232eeE() unnamed_addr #1 {
start:
  ret i32 0
}

; proc_macro::Group::span_close
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN10proc_macro5Group10span_close17he77c7993e308b342E(ptr align 4 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 4
  %_2 = load i32, ptr %0, align 4
  ret i32 %_2
}

; proc_macro::Group::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN10proc_macro5Group4span17h488b53ca5a909206E(ptr align 4 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2 = load i32, ptr %0, align 4
  ret i32 %_2
}

; proc_macro::Group::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10proc_macro5Group8set_span17h596ffbf1d77154c2E(ptr align 4 %self, i32 %span) unnamed_addr #1 {
start:
  %_3 = alloca [12 x i8], align 4
  store i32 %span, ptr %_3, align 4
  %0 = getelementptr inbounds i8, ptr %_3, i64 4
  store i32 %span, ptr %0, align 4
  %1 = getelementptr inbounds i8, ptr %_3, i64 8
  store i32 %span, ptr %1, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %self, ptr align 4 %_3, i64 12, i1 false)
  ret void
}

; proc_macro::Group::delimiter
; Function Attrs: nonlazybind uwtable
define internal i8 @_ZN10proc_macro5Group9delimiter17h97c85d9b7a922b7bE(ptr align 4 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %_0 = load i8, ptr %0, align 4
  ret i8 %_0
}

; proc_macro::Group::span_open
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN10proc_macro5Group9span_open17hd998f698eca2693aE(ptr align 4 %self) unnamed_addr #1 {
start:
  %_2 = load i32, ptr %self, align 4
  ret i32 %_2
}

; proc_macro::Ident::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN10proc_macro5Ident4span17ha73f440a4f0ae645E(ptr align 4 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 4
  %_2 = load i32, ptr %0, align 4
  ret i32 %_2
}

; proc_macro::Ident::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10proc_macro5Ident8set_span17hf64a60445fd35bcfE(ptr align 4 %self, i32 %span) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 4
  store i32 %span, ptr %0, align 4
  ret void
}

; proc_macro::Punct::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN10proc_macro5Punct4span17hb6521ee351e77018E(ptr align 4 %self) unnamed_addr #1 {
start:
  %_2 = load i32, ptr %self, align 4
  ret i32 %_2
}

; proc_macro::Punct::as_char
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN10proc_macro5Punct7as_char17hcbc153353054bf4bE(ptr align 4 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 4
  %_2 = load i8, ptr %0, align 4
  %_0 = zext i8 %_2 to i32
  ret i32 %_0
}

; proc_macro::Punct::spacing
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN10proc_macro5Punct7spacing17h15fa7f21e17dd2d5E(ptr align 4 %self) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = getelementptr inbounds i8, ptr %self, i64 5
  %1 = load i8, ptr %0, align 1
  %_2 = trunc i8 %1 to i1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %_0, align 1
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; proc_macro::Punct::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10proc_macro5Punct8set_span17hadcfb8ca45617141E(ptr align 4 %self, i32 %span) unnamed_addr #1 {
start:
  store i32 %span, ptr %self, align 4
  ret void
}

; proc_macro::Literal::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN10proc_macro7Literal4span17hbc6c3e3b3fe5cba3E(ptr align 4 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 4
  %_2 = load i32, ptr %0, align 4
  ret i32 %_2
}

; proc_macro::Literal::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10proc_macro7Literal8set_span17he2b522ddd4efc2d2E(ptr align 4 %self, i32 %span) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 4
  store i32 %span, ptr %0, align 4
  ret void
}

; <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %self1 = alloca [2 x i8], align 1
  %_3 = alloca [2 x i8], align 1
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
  %1 = call { i1, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h960866a992cd8c3eE"(ptr align 8 %self)
  %2 = extractvalue { i1, i8 } %1, 0
  %3 = extractvalue { i1, i8 } %1, 1
  %4 = zext i1 %2 to i8
  store i8 %4, ptr %self1, align 1
  %5 = getelementptr inbounds i8, ptr %self1, i64 1
  store i8 %3, ptr %5, align 1
  %6 = load i8, ptr %self1, align 1
  %7 = trunc i8 %6 to i1
  %_11 = zext i1 %7 to i64
  %8 = icmp eq i64 %_11, 0
  br i1 %8, label %bb7, label %bb8

bb7:                                              ; preds = %start
  store i64 0, ptr %_0, align 8
  br label %bb4

bb8:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self1, i64 1
  %v = load i8, ptr %9, align 1
  %10 = getelementptr inbounds i8, ptr %_3, i64 1
  store i8 %v, ptr %10, align 1
  store i8 0, ptr %_3, align 1
  %11 = getelementptr inbounds i8, ptr %_3, i64 1
  %val = load i8, ptr %11, align 1
  %12 = getelementptr inbounds i8, ptr %self, i64 16
  %i = load i64, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %self, i64 16
  %14 = load i64, ptr %13, align 8
  %15 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %14, i64 1)
  %_8.0 = extractvalue { i64, i1 } %15, 0
  %_8.1 = extractvalue { i64, i1 } %15, 1
  br label %bb3

bb4:                                              ; preds = %bb3, %bb7
  ret void

bb3:                                              ; preds = %bb8
  %16 = getelementptr inbounds i8, ptr %self, i64 16
  store i64 %_8.0, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %i, ptr %17, align 8
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  store i8 %val, ptr %18, align 8
  store i64 1, ptr %_0, align 8
  br label %bb4

bb5:                                              ; No predecessors!
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %0, i64 8
  %21 = load i32, ptr %20, align 8
  %22 = insertvalue { ptr, i32 } poison, ptr %19, 0
  %23 = insertvalue { ptr, i32 } %22, i32 %21, 1
  resume { ptr, i32 } %23

bb2:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, ptr } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e98d17d39b40a7cE"(ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %self1 = alloca [8 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %1 = call align 4 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5a9f91183977e1ccE"(ptr align 8 %self)
  store ptr %1, ptr %self1, align 8
  %2 = load ptr, ptr %self1, align 8
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_11 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_11, 0
  br i1 %5, label %bb7, label %bb8

bb7:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr null, ptr %6, align 8
  br label %bb4

bb8:                                              ; preds = %start
  %v = load ptr, ptr %self1, align 8
  store ptr %v, ptr %_3, align 8
  %val = load ptr, ptr %_3, align 8
  %7 = getelementptr inbounds i8, ptr %self, i64 16
  %i = load i64, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %self, i64 16
  %9 = load i64, ptr %8, align 8
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %9, i64 1)
  %_8.0 = extractvalue { i64, i1 } %10, 0
  %_8.1 = extractvalue { i64, i1 } %10, 1
  br label %bb3

bb4:                                              ; preds = %bb3, %bb7
  %11 = load i64, ptr %_0, align 8
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  %13 = load ptr, ptr %12, align 8
  %14 = insertvalue { i64, ptr } poison, i64 %11, 0
  %15 = insertvalue { i64, ptr } %14, ptr %13, 1
  ret { i64, ptr } %15

bb3:                                              ; preds = %bb8
  %16 = getelementptr inbounds i8, ptr %self, i64 16
  store i64 %_8.0, ptr %16, align 8
  store i64 %i, ptr %_0, align 8
  %17 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %val, ptr %17, align 8
  br label %bb4

bb5:                                              ; No predecessors!
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22

bb2:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, ptr } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hea12623d918201ebE"(ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %self1 = alloca [8 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %1 = call align 4 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0db038088eee548dE"(ptr align 8 %self)
  store ptr %1, ptr %self1, align 8
  %2 = load ptr, ptr %self1, align 8
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_11 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_11, 0
  br i1 %5, label %bb7, label %bb8

bb7:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr null, ptr %6, align 8
  br label %bb4

bb8:                                              ; preds = %start
  %v = load ptr, ptr %self1, align 8
  store ptr %v, ptr %_3, align 8
  %val = load ptr, ptr %_3, align 8
  %7 = getelementptr inbounds i8, ptr %self, i64 16
  %i = load i64, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %self, i64 16
  %9 = load i64, ptr %8, align 8
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %9, i64 1)
  %_8.0 = extractvalue { i64, i1 } %10, 0
  %_8.1 = extractvalue { i64, i1 } %10, 1
  br label %bb3

bb4:                                              ; preds = %bb3, %bb7
  %11 = load i64, ptr %_0, align 8
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  %13 = load ptr, ptr %12, align 8
  %14 = insertvalue { i64, ptr } poison, i64 %11, 0
  %15 = insertvalue { i64, ptr } %14, ptr %13, 1
  ret { i64, ptr } %15

bb3:                                              ; preds = %bb8
  %16 = getelementptr inbounds i8, ptr %self, i64 16
  store i64 %_8.0, ptr %16, align 8
  store i64 %i, ptr %_0, align 8
  %17 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %val, ptr %17, align 8
  br label %bb4

bb5:                                              ; No predecessors!
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22

bb2:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, ptr } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfe6a258013085ac9E"(ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %self1 = alloca [8 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %1 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hee40d2f377078eafE"(ptr align 8 %self)
  store ptr %1, ptr %self1, align 8
  %2 = load ptr, ptr %self1, align 8
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_11 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_11, 0
  br i1 %5, label %bb7, label %bb8

bb7:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr null, ptr %6, align 8
  br label %bb4

bb8:                                              ; preds = %start
  %v = load ptr, ptr %self1, align 8
  store ptr %v, ptr %_3, align 8
  %val = load ptr, ptr %_3, align 8
  %7 = getelementptr inbounds i8, ptr %self, i64 16
  %i = load i64, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %self, i64 16
  %9 = load i64, ptr %8, align 8
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %9, i64 1)
  %_8.0 = extractvalue { i64, i1 } %10, 0
  %_8.1 = extractvalue { i64, i1 } %10, 1
  br label %bb3

bb4:                                              ; preds = %bb3, %bb7
  %11 = load i64, ptr %_0, align 8
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  %13 = load ptr, ptr %12, align 8
  %14 = insertvalue { i64, ptr } poison, i64 %11, 0
  %15 = insertvalue { i64, ptr } %14, ptr %13, 1
  ret { i64, ptr } %15

bb3:                                              ; preds = %bb8
  %16 = getelementptr inbounds i8, ptr %self, i64 16
  store i64 %_8.0, ptr %16, align 8
  store i64 %i, ptr %_0, align 8
  %17 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %val, ptr %17, align 8
  br label %bb4

bb5:                                              ; No predecessors!
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22

bb2:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17hbdf288abe4237077E"(ptr sret([56 x i8]) align 8 %_0, ptr %0, ptr %1, ptr %2, ptr %3) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %4 = alloca [16 x i8], align 8
  %b = alloca [16 x i8], align 8
  %a = alloca [16 x i8], align 8
  store ptr %0, ptr %a, align 8
  %5 = getelementptr inbounds i8, ptr %a, i64 8
  store ptr %1, ptr %5, align 8
  store ptr %2, ptr %b, align 8
  %6 = getelementptr inbounds i8, ptr %b, i64 8
  store ptr %3, ptr %6, align 8
; invoke core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %a_len = invoke i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hfde28eea202c10ffE(ptr align 8 %a)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %7 = load ptr, ptr %4, align 8
  %8 = getelementptr inbounds i8, ptr %4, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = insertvalue { ptr, i32 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i32 } %10, i32 %9, 1
  resume { ptr, i32 } %11

cleanup:                                          ; preds = %bb2, %bb1, %start
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %4, align 8
  %15 = getelementptr inbounds i8, ptr %4, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %v2 = invoke i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hfde28eea202c10ffE(ptr align 8 %b)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::cmp::min_by
  %len = invoke i64 @_ZN4core3cmp6min_by17hdb33bb80198dea92E(i64 %a_len, i64 %v2)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb2
  %_8.0 = load ptr, ptr %a, align 8
  %16 = getelementptr inbounds i8, ptr %a, i64 8
  %_8.1 = load ptr, ptr %16, align 8
  %_9.0 = load ptr, ptr %b, align 8
  %17 = getelementptr inbounds i8, ptr %b, i64 8
  %_9.1 = load ptr, ptr %17, align 8
  store ptr %_8.0, ptr %_0, align 8
  %18 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_8.1, ptr %18, align 8
  %19 = getelementptr inbounds i8, ptr %_0, i64 16
  store ptr %_9.0, ptr %19, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 8
  store ptr %_9.1, ptr %20, align 8
  %21 = getelementptr inbounds i8, ptr %_0, i64 32
  store i64 0, ptr %21, align 8
  %22 = getelementptr inbounds i8, ptr %_0, i64 40
  store i64 %len, ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %_0, i64 48
  store i64 %a_len, ptr %23, align 8
  ret void
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17ha38bc279538fd114E"(ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 32
  %_3 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 40
  %_4 = load i64, ptr %2, align 8
  %_2 = icmp ult i64 %_3, %_4
  br i1 %_2, label %bb1, label %bb4

bb4:                                              ; preds = %start
  br label %bb10

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 32
  %i = load i64, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %self, i64 32
  %5 = getelementptr inbounds i8, ptr %self, i64 32
  %6 = load i64, ptr %5, align 8
  %7 = add i64 %6, 1
  store i64 %7, ptr %4, align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_7 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h0574fc78327255e4E"(ptr align 8 %self, i64 %i)
  %_10 = getelementptr inbounds i8, ptr %self, i64 16
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_9 = invoke align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h0574fc78327255e4E"(ptr align 8 %_10, i64 %i)
          to label %bb3 unwind label %cleanup

bb10:                                             ; preds = %bb4
  store ptr null, ptr %_0, align 8
  br label %bb11

bb5:                                              ; No predecessors!
  unreachable

bb9:                                              ; No predecessors!
  unreachable

bb11:                                             ; preds = %bb10
  br label %bb12

bb6:                                              ; No predecessors!
  unreachable

bb7:                                              ; No predecessors!
  unreachable

bb8:                                              ; No predecessors!
  unreachable

bb12:                                             ; preds = %bb3, %bb11
  %8 = load ptr, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  %10 = load ptr, ptr %9, align 8
  %11 = insertvalue { ptr, ptr } poison, ptr %8, 0
  %12 = insertvalue { ptr, ptr } %11, ptr %10, 1
  ret { ptr, ptr } %12

bb13:                                             ; preds = %cleanup
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

cleanup:                                          ; preds = %bb1
  %18 = landingpad { ptr, i32 }
          cleanup
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
  store ptr %19, ptr %0, align 8
  %21 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %20, ptr %21, align 8
  br label %bb13

bb3:                                              ; preds = %bb1
  store ptr %_7, ptr %_0, align 8
  %22 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_9, ptr %22, align 8
  br label %bb12
}

; <<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN125_$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h203d5c7096ee13f9E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %new_len = load i64, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self1, i64 16
  store i64 %new_len, ptr %1, align 8
  ret void
}

; <<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN125_$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8f3c4963b89df0e5E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %new_len = load i64, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self1, i64 16
  store i64 %new_len, ptr %1, align 8
  ret void
}

; <<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN125_$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he61cfbc2c2040ed5E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %new_len = load i64, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self1, i64 16
  store i64 %new_len, ptr %1, align 8
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h324e01ee7dec53f2E"(ptr align 8 %self, ptr %0, ptr %1) unnamed_addr #1 {
start:
  %len.i = alloca [8 x i8], align 8
  %iterator = alloca [16 x i8], align 8
  store ptr %0, ptr %iterator, align 8
  %2 = getelementptr inbounds i8, ptr %iterator, i64 8
  store ptr %1, ptr %2, align 8
  %self1.i = load ptr, ptr %iterator, align 8
  %self2.i = getelementptr inbounds i8, ptr %iterator, i64 8
  %end.i = load ptr, ptr %self2.i, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %3 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %end.i, ptr %self1.i)
  store i64 %3, ptr %len.i, align 8
  %_18.1.i = load i64, ptr %len.i, align 8
  %4 = insertvalue { ptr, i64 } poison, ptr %self1.i, 0
  %5 = insertvalue { ptr, i64 } %4, i64 %_18.1.i, 1
  %slice.0 = extractvalue { ptr, i64 } %5, 0
  %slice.1 = extractvalue { ptr, i64 } %5, 1
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h7d02c11bc0a87c88E"(ptr align 8 %self, ptr %slice.0, i64 %slice.1)
  ret void
}

; <<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h59b9c0c43db79569E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_16 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %_16, i64 32
  %_3 = load i64, ptr %0, align 8
  %_2 = icmp ugt i64 %_3, 0
  br i1 %_2, label %bb1, label %bb4

bb4:                                              ; preds = %start
  br label %bb5

bb1:                                              ; preds = %start
  %_17 = load ptr, ptr %self, align 8
  %self1 = getelementptr inbounds i8, ptr %_17, i64 16
  %1 = getelementptr inbounds i8, ptr %_17, i64 16
  %self2 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %self2, i64 16
  %start3 = load i64, ptr %2, align 8
  %_18 = load ptr, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %_18, i64 24
  %tail = load i64, ptr %3, align 8
  %_7 = icmp ne i64 %tail, %start3
  br i1 %_7, label %bb2, label %bb3

bb5:                                              ; preds = %bb3, %bb4
  ret void

bb3:                                              ; preds = %bb9, %bb1
  %_20 = load ptr, ptr %self, align 8
  %4 = getelementptr inbounds i8, ptr %_20, i64 32
  %_15 = load i64, ptr %4, align 8
  %new_len = add i64 %start3, %_15
  %5 = getelementptr inbounds i8, ptr %self2, i64 16
  store i64 %new_len, ptr %5, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  %6 = getelementptr inbounds i8, ptr %self2, i64 8
  %self4 = load ptr, ptr %6, align 8
  %src = getelementptr inbounds %"proc_macro::TokenTree", ptr %self4, i64 %tail
  %7 = getelementptr inbounds i8, ptr %self2, i64 8
  %self5 = load ptr, ptr %7, align 8
  %dst = getelementptr inbounds %"proc_macro::TokenTree", ptr %self5, i64 %start3
  %_19 = load ptr, ptr %self, align 8
  %8 = getelementptr inbounds i8, ptr %_19, i64 32
  %count = load i64, ptr %8, align 8
  br label %bb9

bb9:                                              ; preds = %bb2
  %9 = mul i64 20, %count
  call void @llvm.memmove.p0.p0.i64(ptr align 4 %dst, ptr align 4 %src, i64 %9, i1 false)
  br label %bb3

bb7:                                              ; No predecessors!
  unreachable

bb8:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h037afafb9c694217E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::imp::LexError as core::convert::From<proc_macro::LexError>>::from
  %_3 = call zeroext i1 @"_ZN94_$LT$proc_macro2..imp..LexError$u20$as$u20$core..convert..From$LT$proc_macro..LexError$GT$$GT$4from17hddbe6c1f2b594d25E"()
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  %2 = zext i1 %_3 to i8
  store i8 %2, ptr %1, align 8
  store i64 -9223372036854775807, ptr %_0, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h09b4ebb882e78b8dE"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
  %1 = getelementptr inbounds i8, ptr %_0, i64 32
  store i8 2, ptr %1, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h18197158e76603d5E"(ptr sret([48 x i8]) align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 -9223372036854775807, ptr %1, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h46e793a2663f8ecdE"(ptr sret([32 x i8]) align 8 %_0, i1 zeroext %0, ptr align 8 %1) unnamed_addr #0 {
start:
  %residual = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %residual, align 1
  %3 = load i8, ptr %residual, align 1
  %e = trunc i8 %3 to i1
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  %5 = zext i1 %e to i8
  store i8 %5, ptr %4, align 8
  store i64 -9223372036854775807, ptr %_0, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d73f080cb255475E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::imp::LexError as core::convert::From<proc_macro2::fallback::LexError>>::from
  %_3 = call zeroext i1 @"_ZN105_$LT$proc_macro2..imp..LexError$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..LexError$GT$$GT$4from17ha4759c8d33dce57dE"()
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  %2 = zext i1 %_3 to i8
  store i8 %2, ptr %1, align 8
  store i64 -9223372036854775807, ptr %_0, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6a82ac905179892eE"(ptr sret([32 x i8]) align 8 %_0, i1 zeroext %0, ptr align 8 %1) unnamed_addr #0 {
start:
  %residual = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %residual, align 1
  %3 = load i8, ptr %residual, align 1
  %e = trunc i8 %3 to i1
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  %5 = zext i1 %e to i8
  store i8 %5, ptr %4, align 8
  store i64 -9223372036854775807, ptr %_0, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 %0) unnamed_addr #0 {
start:
  %_0 = alloca [16 x i8], align 8
  store ptr null, ptr %_0, align 8
  %1 = load ptr, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load i64, ptr %2, align 8
  %4 = insertvalue { ptr, i64 } poison, ptr %1, 0
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1
  ret { ptr, i64 } %5
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he85727d26166c4ebE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i32 1114112, ptr %1, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hee58764ccc450388E"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 -9223372036854775808, ptr %1, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17heef7fdfefb2cebe4E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::imp::LexError as core::convert::From<proc_macro2::fallback::LexError>>::from
  %_3 = call zeroext i1 @"_ZN105_$LT$proc_macro2..imp..LexError$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..LexError$GT$$GT$4from17ha4759c8d33dce57dE"()
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  %2 = zext i1 %_3 to i8
  store i8 %2, ptr %1, align 8
  store i64 -9223372036854775807, ptr %_0, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hface6ca106ab4104E"(ptr align 8 %0) unnamed_addr #0 {
start:
  %_0 = alloca [16 x i8], align 8
  store ptr null, ptr %_0, align 8
  %1 = load ptr, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load i64, ptr %2, align 8
  %4 = insertvalue { ptr, i64 } poison, ptr %1, 0
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1
  ret { ptr, i64 } %5
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hff31d50f5af9a906E"(ptr align 8 %0) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  store i8 1, ptr %_0, align 1
  %1 = load i8, ptr %_0, align 1
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h00a9899cbc82d377E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %cap = alloca [8 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  %_7 = load ptr, ptr %self, align 8
  %slot = getelementptr inbounds i8, ptr %_7, i64 32
  %src = getelementptr inbounds i8, ptr %_7, i64 32
  %_8 = load ptr, ptr %self, align 8
  %ptr = load ptr, ptr %_8, align 8
  %_9 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %_9, i64 16
  %capacity = load i64, ptr %0, align 8
  br label %bb3

bb3:                                              ; preds = %start
  store i64 %capacity, ptr %cap, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %_14 = load i64, ptr %cap, align 8
  %1 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %ptr, ptr %1, align 8
  store i64 %_14, ptr %_4, align 8
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>>
  call void @"_ZN4core3ptr199drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$$GT$17ha8859ccedb293eb9E"(ptr align 8 %_4)
  ret void

bb2:                                              ; No predecessors!
  unreachable
}

; <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hca2c4e65e35878c4E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %cap = alloca [8 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  %_7 = load ptr, ptr %self, align 8
  %slot = getelementptr inbounds i8, ptr %_7, i64 32
  %src = getelementptr inbounds i8, ptr %_7, i64 32
  %_8 = load ptr, ptr %self, align 8
  %ptr = load ptr, ptr %_8, align 8
  %_9 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %_9, i64 16
  %capacity = load i64, ptr %0, align 8
  br label %bb3

bb3:                                              ; preds = %start
  store i64 %capacity, ptr %cap, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %_14 = load i64, ptr %cap, align 8
  %1 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %ptr, ptr %1, align 8
  store i64 %_14, ptr %_4, align 8
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr73drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro2..TokenTree$GT$$GT$17ha39b47c836e86927E"(ptr align 8 %_4)
  ret void

bb2:                                              ; No predecessors!
  unreachable
}

; std::sys::sync::once::futex::Once::call
; Function Attrs: cold nonlazybind uwtable
define void @_ZN3std3sys4sync4once5futex4Once4call17hb73b6c2fb138278cE(ptr align 4 %self, i1 zeroext %ignore_poisoning, ptr align 8 %f, ptr align 8 %0) unnamed_addr #2 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_37 = alloca [0 x i8], align 8
  %_35 = alloca [48 x i8], align 8
  %_26 = alloca [8 x i8], align 4
  %f_state = alloca [8 x i8], align 4
  %waiter_queue = alloca [16 x i8], align 8
  %_8 = alloca [8 x i8], align 4
  %_7 = alloca [48 x i8], align 8
  %state = alloca [4 x i8], align 4
; call core::sync::atomic::atomic_load
  %2 = call i32 @_ZN4core4sync6atomic11atomic_load17h528c1461ff3aea58E(ptr %self, i8 2)
  store i32 %2, ptr %state, align 4
  br label %bb1

bb1:                                              ; preds = %bb13, %bb11, %bb6, %start
  %3 = load i32, ptr %state, align 4
  switch i32 %3, label %bb2 [
    i32 1, label %bb3
    i32 0, label %bb5
    i32 2, label %bb9
    i32 3, label %bb9
    i32 4, label %bb16
  ]

bb2:                                              ; preds = %bb1
  store ptr @alloc_2a9cdb20370524832dacb396d295f90f, ptr %_35, align 8
  %4 = getelementptr inbounds i8, ptr %_35, i64 8
  store i64 1, ptr %4, align 8
  %5 = load ptr, ptr @0, align 8
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %7 = getelementptr inbounds i8, ptr %_35, i64 32
  store ptr %5, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  store i64 %6, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %_35, i64 16
  store ptr %_37, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 0, ptr %10, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_35, ptr align 8 %0) #24
  unreachable

bb3:                                              ; preds = %bb1
  br i1 %ignore_poisoning, label %bb5, label %bb4

bb5:                                              ; preds = %bb3, %bb1
  %current = load i32, ptr %state, align 4
; call core::sync::atomic::atomic_compare_exchange_weak
  %11 = call { i32, i32 } @_ZN4core4sync6atomic28atomic_compare_exchange_weak17h77e9fd30bb17d7a1E(ptr %self, i32 %current, i32 2, i8 2, i8 2)
  %12 = extractvalue { i32, i32 } %11, 0
  %13 = extractvalue { i32, i32 } %11, 1
  store i32 %12, ptr %_8, align 4
  %14 = getelementptr inbounds i8, ptr %_8, i64 4
  store i32 %13, ptr %14, align 4
  %15 = load i32, ptr %_8, align 4
  %_11 = zext i32 %15 to i64
  %16 = icmp eq i64 %_11, 1
  br i1 %16, label %bb6, label %bb7

bb9:                                              ; preds = %bb1, %bb1
  %_25 = load i32, ptr %state, align 4
  %_24 = icmp eq i32 %_25, 2
  br i1 %_24, label %bb10, label %bb12

bb16:                                             ; preds = %bb8, %bb1
  ret void

bb4:                                              ; preds = %bb3
  store ptr @alloc_9cc4df00976b591da2e084a2cf898fab, ptr %_7, align 8
  %17 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 1, ptr %17, align 8
  %18 = load ptr, ptr @0, align 8
  %19 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %20 = getelementptr inbounds i8, ptr %_7, i64 32
  store ptr %18, ptr %20, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 8
  store i64 %19, ptr %21, align 8
  %22 = getelementptr inbounds i8, ptr %_7, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 8
  store i64 0, ptr %23, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_7, ptr align 8 %0) #24
  unreachable

bb6:                                              ; preds = %bb5
  %24 = getelementptr inbounds i8, ptr %_8, i64 4
  %new = load i32, ptr %24, align 4
  store i32 %new, ptr %state, align 4
  br label %bb1

bb7:                                              ; preds = %bb5
  store ptr %self, ptr %waiter_queue, align 8
  %25 = getelementptr inbounds i8, ptr %waiter_queue, i64 8
  store i32 1, ptr %25, align 8
  %_18 = load i32, ptr %state, align 4
  %_17 = icmp eq i32 %_18, 1
  store i32 4, ptr %f_state, align 4
  %26 = getelementptr inbounds i8, ptr %f_state, i64 4
  %27 = zext i1 %_17 to i8
  store i8 %27, ptr %26, align 4
; invoke std::sync::once::Once::call_once::{{closure}}
  invoke void @"_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h26dc878653b92fdcE"(ptr align 8 %f, ptr align 4 %f_state)
          to label %bb8 unwind label %cleanup

bb17:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::sys::sync::once::futex::CompletionGuard>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$std..sys..sync..once..futex..CompletionGuard$GT$17h93c53ae467fc3dd7E"(ptr align 8 %waiter_queue) #25
          to label %bb18 unwind label %terminate

cleanup:                                          ; preds = %bb7
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = extractvalue { ptr, i32 } %28, 0
  %30 = extractvalue { ptr, i32 } %28, 1
  store ptr %29, ptr %1, align 8
  %31 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %30, ptr %31, align 8
  br label %bb17

bb8:                                              ; preds = %bb7
  %_22 = load i32, ptr %f_state, align 4
  %32 = getelementptr inbounds i8, ptr %waiter_queue, i64 8
  store i32 %_22, ptr %32, align 8
; call core::ptr::drop_in_place<std::sys::sync::once::futex::CompletionGuard>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sys..sync..once..futex..CompletionGuard$GT$17h93c53ae467fc3dd7E"(ptr align 8 %waiter_queue)
  br label %bb16

terminate:                                        ; preds = %bb17
  %33 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %34 = extractvalue { ptr, i32 } %33, 0
  %35 = extractvalue { ptr, i32 } %33, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb18:                                             ; preds = %bb17
  %36 = load ptr, ptr %1, align 8
  %37 = getelementptr inbounds i8, ptr %1, i64 8
  %38 = load i32, ptr %37, align 8
  %39 = insertvalue { ptr, i32 } poison, ptr %36, 0
  %40 = insertvalue { ptr, i32 } %39, i32 %38, 1
  resume { ptr, i32 } %40

bb12:                                             ; preds = %bb9
  br label %bb13

bb10:                                             ; preds = %bb9
; call core::sync::atomic::atomic_compare_exchange_weak
  %41 = call { i32, i32 } @_ZN4core4sync6atomic28atomic_compare_exchange_weak17h77e9fd30bb17d7a1E(ptr %self, i32 2, i32 3, i8 0, i8 2)
  %42 = extractvalue { i32, i32 } %41, 0
  %43 = extractvalue { i32, i32 } %41, 1
  store i32 %42, ptr %_26, align 4
  %44 = getelementptr inbounds i8, ptr %_26, i64 4
  store i32 %43, ptr %44, align 4
  %45 = load i32, ptr %_26, align 4
  %_28 = zext i32 %45 to i64
  %46 = icmp eq i64 %_28, 1
  br i1 %46, label %bb11, label %bb13

bb13:                                             ; preds = %bb10, %bb12
  %47 = load i64, ptr @1, align 8
  %48 = load i32, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
; call std::sys::pal::unix::futex::futex_wait
  %_30 = call zeroext i1 @_ZN3std3sys3pal4unix5futex10futex_wait17h609d76562e6a86f1E(ptr align 4 %self, i32 3, i64 %47, i32 %48)
; call core::sync::atomic::atomic_load
  %_32 = call i32 @_ZN4core4sync6atomic11atomic_load17h528c1461ff3aea58E(ptr %self, i8 2)
  store i32 %_32, ptr %state, align 4
  br label %bb1

bb11:                                             ; preds = %bb10
  %49 = getelementptr inbounds i8, ptr %_26, i64 4
  %new1 = load i32, ptr %49, align 4
  store i32 %new1, ptr %state, align 4
  br label %bb1

bb23:                                             ; No predecessors!
  unreachable
}

; std::sync::once::Once::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN3std4sync4once4Once9call_once17hf18674b432764184E(ptr align 4 %self, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_12 = alloca [1 x i8], align 1
  %_10 = alloca [8 x i8], align 8
  %f = alloca [1 x i8], align 1
  store i8 1, ptr %_12, align 1
; invoke core::sync::atomic::atomic_load
  %_13 = invoke i32 @_ZN4core4sync6atomic11atomic_load17h528c1461ff3aea58E(ptr %self, i8 2)
          to label %bb10 unwind label %cleanup

bb9:                                              ; preds = %bb6, %cleanup
  %2 = load i8, ptr %_12, align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb8, label %bb7

cleanup:                                          ; preds = %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %1, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb9

bb10:                                             ; preds = %start
  %_3 = icmp eq i32 %_13, 4
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %bb10
  store i8 0, ptr %_12, align 1
  store i8 1, ptr %f, align 1
  store ptr %f, ptr %_10, align 8
; invoke std::sys::sync::once::futex::Once::call
  invoke void @_ZN3std3sys4sync4once5futex4Once4call17hb73b6c2fb138278cE(ptr align 4 %self, i1 zeroext false, ptr align 8 %_10, ptr align 8 %0)
          to label %bb3 unwind label %cleanup1

bb1:                                              ; preds = %bb10
  br label %bb5

bb6:                                              ; preds = %cleanup1
  br label %bb9

cleanup1:                                         ; preds = %bb2
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb6

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb1, %bb4
  ret void

bb7:                                              ; preds = %bb8, %bb9
  %12 = load ptr, ptr %1, align 8
  %13 = getelementptr inbounds i8, ptr %1, i64 8
  %14 = load i32, ptr %13, align 8
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16

bb8:                                              ; preds = %bb9
  br label %bb7
}

; std::sync::once::Once::call_once::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h26dc878653b92fdcE"(ptr align 8 %_1, ptr align 4 %_2) unnamed_addr #0 {
start:
  %src = alloca [1 x i8], align 1
  %result = alloca [1 x i8], align 1
  %self = load ptr, ptr %_1, align 8
  store i8 0, ptr %src, align 1
  %0 = load i8, ptr %self, align 1
  %1 = trunc i8 %0 to i1
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %result, align 1
  %3 = load i8, ptr %src, align 1
  %4 = trunc i8 %3 to i1
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %self, align 1
  %6 = load i8, ptr %result, align 1
  %7 = trunc i8 %6 to i1
  %_7 = zext i1 %7 to i64
  %8 = icmp eq i64 %_7, 0
  br i1 %8, label %bb3, label %bb4

bb3:                                              ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h7a3768beeda72485E(ptr align 8 @alloc_323e3e924a872d3e19f6b8d20ac72063) #24
  unreachable

bb4:                                              ; preds = %start
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h056d972d5433f5d9E()
  ret void

bb2:                                              ; No predecessors!
  unreachable
}

; std::panic::catch_unwind
; Function Attrs: nonlazybind uwtable
define void @_ZN3std5panic12catch_unwind17he4fa292095b180f4E(ptr sret([16 x i8]) align 8 %_0, ptr align 1 %f.0, i64 %f.1) unnamed_addr #1 {
start:
; call std::panicking::try
  call void @_ZN3std9panicking3try17hc5eeec5fa1339cbaE(ptr sret([16 x i8]) align 8 %_0, ptr align 1 %f.0, i64 %f.1)
  ret void
}

; std::panicking::try
; Function Attrs: nonlazybind uwtable
define void @_ZN3std9panicking3try17hc5eeec5fa1339cbaE(ptr sret([16 x i8]) align 8 %_0, ptr align 1 %f.0, i64 %f.1) unnamed_addr #1 {
start:
  %0 = alloca [4 x i8], align 4
  %slot = alloca [8 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %data = alloca [16 x i8], align 8
  store ptr %f.0, ptr %data, align 8
  %1 = getelementptr inbounds i8, ptr %data, i64 8
  store i64 %f.1, ptr %1, align 8
  %2 = call i32 @__rust_try(ptr @_ZN3std9panicking3try7do_call17hf21d3531dcd1ba5cE, ptr %data, ptr @_ZN3std9panicking3try8do_catch17hf7a7b53331b83cddE)
  store i32 %2, ptr %0, align 4
  %_6 = load i32, ptr %0, align 4
  %3 = icmp eq i32 %_6, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %slot, ptr align 8 %data, i64 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_9, ptr align 4 %slot, i64 8, i1 false)
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 4 %_9, i64 8, i1 false)
  store ptr null, ptr %_0, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %slot.0 = load ptr, ptr %data, align 8
  %5 = getelementptr inbounds i8, ptr %data, i64 8
  %slot.1 = load ptr, ptr %5, align 8
  store ptr %slot.0, ptr %_0, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %slot.1, ptr %6, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  ret void
}

; std::panicking::try::do_call
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN3std9panicking3try7do_call17hf21d3531dcd1ba5cE(ptr %data) unnamed_addr #0 {
start:
  %0 = alloca [8 x i8], align 8
  %value = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %f.0 = load ptr, ptr %data, align 8
  %1 = getelementptr inbounds i8, ptr %data, i64 8
  %f.1 = load i64, ptr %1, align 8
; call proc_macro2::imp::proc_macro_parse::{{closure}}
  %2 = call i64 @"_ZN11proc_macro23imp16proc_macro_parse28_$u7b$$u7b$closure$u7d$$u7d$17h1459fe7f7613ca3fE"(ptr align 1 %f.0, i64 %f.1)
  store i64 %2, ptr %0, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %value, ptr align 8 %0, i64 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_5, ptr align 4 %value, i64 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %data, ptr align 4 %_5, i64 8, i1 false)
  ret void
}

; std::panicking::try::do_catch
; Function Attrs: inlinehint nounwind nonlazybind uwtable
define void @_ZN3std9panicking3try8do_catch17hf7a7b53331b83cddE(ptr %data, ptr %payload) unnamed_addr #3 personality ptr @rust_eh_personality {
start:
; invoke std::panicking::try::cleanup
  %0 = invoke { ptr, ptr } @_ZN3std9panicking3try7cleanup17hd6ade9b987c70092E(ptr %payload)
          to label %bb1 unwind label %terminate

terminate:                                        ; preds = %start
  %1 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
; call core::panicking::panic_cannot_unwind
  call void @_ZN4core9panicking19panic_cannot_unwind17h3f96c9c07954d1a5E() #26
  unreachable

bb1:                                              ; preds = %start
  %obj.0 = extractvalue { ptr, ptr } %0, 0
  %obj.1 = extractvalue { ptr, ptr } %0, 1
  store ptr %obj.0, ptr %data, align 8
  %4 = getelementptr inbounds i8, ptr %data, i64 8
  store ptr %obj.1, ptr %4, align 8
  ret void
}

; <bool as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h41a9056ce763c337E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
; call <bool as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17he691df9786a4e217E"(ptr align 1 %self, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h25c4ed0fda439c9dE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8
; call <core::option::Option<T> as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h371c877135043a4eE"(ptr align 8 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h48501bd31ab487e2E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_3.1 = load i64, ptr %0, align 8
; call <str as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h8addf800304f3e1bE"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb728857baa5ea652E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8
; call <proc_macro2::fallback::Span as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN64_$LT$proc_macro2..fallback..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h03ee8393c0975a1cE"(ptr align 1 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbf787cf7f6cc7e4bE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %_0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h26494a2e8bdf3a46E"(ptr align 8 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf908c21d3478875aE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8
; call <() as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17hef9b2d111c4a2be9E"(ptr align 1 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h712de8ab85f6cdf4E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8
; call <proc_macro2::Ident as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h13ab6285103b9791E"(ptr align 8 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hec7503cea7e607bfE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_3.1 = load i64, ptr %0, align 8
; call <str as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h49e1caa39cb6eebbE"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hffcb42745d686124E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8
; call <proc_macro2::fallback::Ident as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h48b8bf5759c640f8E"(ptr align 8 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <() as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17hef9b2d111c4a2be9E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
; call core::fmt::Formatter::pad
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter3pad17h7a36b2c624c9ffbaE(ptr align 8 %f, ptr align 1 @alloc_ae6dc619079e3c3b08144a35532ecff7, i64 2)
  ret i1 %_0
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h0eab573f9f9be2eaE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hc7ee99daaeefde73E"(ptr align 8 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h2632bf872344f2b0E"(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::float::<impl core::fmt::Display for f32>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f32$GT$3fmt17h9d1fb135b90234dbE"(ptr align 4 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h795939dcc53db5daE"(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h2bca854f0e3dfdc9E"(ptr align 4 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h97e4fce07de56d2cE"(ptr sret([24 x i8]) align 8 %_0, ptr align 16 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::num::<impl core::fmt::Display for u128>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$u128$GT$3fmt17h53f8c3c9c9658b88E"(ptr align 16 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17ha9a334f45b5af9abE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$isize$GT$3fmt17h709f746719dccc8dE"(ptr align 8 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hb9e45ec6e9b397a6E"(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h83d00f149ba150d3E"(ptr align 4 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hc76ccbad6d89f13dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hdabfc7932e5a3df0E"(ptr align 8 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hcb36413e52dfce93E"(ptr sret([24 x i8]) align 8 %_0, ptr align 2 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u16$GT$3fmt17h4cf804de4f49c839E"(ptr align 2 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hcf458a619c10cf1cE"(ptr sret([24 x i8]) align 8 %_0, ptr align 2 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::num::imp::<impl core::fmt::Display for i16>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i16$GT$3fmt17hc8f65d45dbff6373E"(ptr align 2 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hde21636323dc166eE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke <proc_macro2::Ident as core::fmt::Display>::fmt
  %_7 = invoke zeroext i1 @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h13ab6285103b9791E"(ptr align 8 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hde652701f13d04b5E"(ptr sret([24 x i8]) align 8 %_0, ptr align 16 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::num::<impl core::fmt::Display for i128>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$i128$GT$3fmt17h8a0854989bd1bd1dE"(ptr align 16 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17he589f669e6d41345E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::float::<impl core::fmt::Display for f64>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f64$GT$3fmt17h458dab3bc31bc88aE"(ptr align 8 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hefda00df03ec6466E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke core::fmt::num::imp::<impl core::fmt::Display for i64>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h4d6e5db9f03e76fbE"(ptr align 8 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hf329a8bd2a7de3e7E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %formatter = alloca [64 x i8], align 8
  %buf = alloca [24 x i8], align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 16
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds i8, ptr %formatter, i64 52
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds i8, ptr %formatter, i64 48
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %formatter, i64 56
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @0, align 8
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %11 = getelementptr inbounds i8, ptr %formatter, i64 16
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %formatter, i64 32
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.0, ptr %14, align 8
; invoke <proc_macro2::fallback::TokenStream as core::fmt::Display>::fmt
  %_7 = invoke zeroext i1 @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h82a2cde990a97ccaE"(ptr align 8 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_f886f96e9a07c60a12107d674cf0d185)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <i8 as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN46_$LT$i8$u20$as$u20$alloc..string..ToString$GT$9to_string17hac2c2d0f6760e98dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_32 = alloca [1 x i8], align 1
  %_28 = alloca [24 x i8], align 8
  %_26 = alloca [24 x i8], align 8
  %self1 = alloca [1 x i8], align 1
  %n = alloca [1 x i8], align 1
  %buf = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17h7a9fee94d5cce3e5E"(ptr sret([24 x i8]) align 8 %_28, i64 4, i1 zeroext false)
  %_29 = load i64, ptr %_28, align 8
  %1 = icmp eq i64 %_29, 0
  br i1 %1, label %bb18, label %bb17

bb18:                                             ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_28, i64 8
  %res.0 = load i64, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 8
  %res.1 = load ptr, ptr %3, align 8
  store i64 %res.0, ptr %_26, align 8
  %4 = getelementptr inbounds i8, ptr %_26, i64 8
  store ptr %res.1, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_26, i64 16
  store i64 0, ptr %5, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_26, i64 24, i1 false)
  %self2 = load i8, ptr %self, align 1
  %_3 = icmp slt i8 %self2, 0
  br i1 %_3, label %bb1, label %bb3

bb17:                                             ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_28, i64 8
  %err.0 = load i64, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %err.1 = load i64, ptr %7, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb3:                                              ; preds = %bb18
  store i8 %self2, ptr %self1, align 1
  store i8 %self2, ptr %_32, align 1
  br label %bb19

bb1:                                              ; preds = %bb18
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %buf, i32 45)
          to label %bb2 unwind label %cleanup

bb19:                                             ; preds = %bb2, %bb3
  %8 = load i8, ptr %_32, align 1
  store i8 %8, ptr %n, align 1
  %_10 = load i8, ptr %n, align 1
  %_9 = icmp uge i8 %_10, 10
  br i1 %_9, label %bb4, label %bb10

bb13:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb14 unwind label %terminate

cleanup:                                          ; preds = %bb11, %bb8, %bb5, %bb1
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb13

bb2:                                              ; preds = %bb1
  store i8 %self2, ptr %self1, align 1
  %13 = sub i8 0, %self2
  store i8 %13, ptr %_32, align 1
  br label %bb19

bb10:                                             ; preds = %bb19
  br label %bb11

bb4:                                              ; preds = %bb19
  %_12 = load i8, ptr %n, align 1
  %_11 = icmp uge i8 %_12, 100
  br i1 %_11, label %bb5, label %bb7

bb11:                                             ; preds = %bb9, %bb10
  %_25 = load i8, ptr %n, align 1
  %_24 = add i8 48, %_25
  %_23 = zext i8 %_24 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %buf, i32 %_23)
          to label %bb12 unwind label %cleanup

bb7:                                              ; preds = %bb4
  br label %bb8

bb5:                                              ; preds = %bb4
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %buf, i32 49)
          to label %bb6 unwind label %cleanup

bb8:                                              ; preds = %bb6, %bb7
  %_20 = load i8, ptr %n, align 1
  %_19 = udiv i8 %_20, 10
  %_18 = add i8 48, %_19
  %_17 = zext i8 %_18 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %buf, i32 %_17)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %14 = load i8, ptr %n, align 1
  %15 = sub i8 %14, 100
  store i8 %15, ptr %n, align 1
  br label %bb8

bb9:                                              ; preds = %bb8
  %16 = load i8, ptr %n, align 1
  %17 = urem i8 %16, 10
  store i8 %17, ptr %n, align 1
  br label %bb11

bb12:                                             ; preds = %bb11
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb13
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb14:                                             ; preds = %bb13
  %21 = load ptr, ptr %0, align 8
  %22 = getelementptr inbounds i8, ptr %0, i64 8
  %23 = load i32, ptr %22, align 8
  %24 = insertvalue { ptr, i32 } poison, ptr %21, 0
  %25 = insertvalue { ptr, i32 } %24, i32 %23, 1
  resume { ptr, i32 } %25

bb16:                                             ; No predecessors!
  unreachable
}

; <u8 as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN46_$LT$u8$u20$as$u20$alloc..string..ToString$GT$9to_string17h921aa7e82343b2acE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_27 = alloca [24 x i8], align 8
  %_25 = alloca [24 x i8], align 8
  %n = alloca [1 x i8], align 1
  %buf = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17h7a9fee94d5cce3e5E"(ptr sret([24 x i8]) align 8 %_27, i64 3, i1 zeroext false)
  %_28 = load i64, ptr %_27, align 8
  %1 = icmp eq i64 %_28, 0
  br i1 %1, label %bb15, label %bb14

bb15:                                             ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_27, i64 8
  %res.0 = load i64, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 8
  %res.1 = load ptr, ptr %3, align 8
  store i64 %res.0, ptr %_25, align 8
  %4 = getelementptr inbounds i8, ptr %_25, i64 8
  store ptr %res.1, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_25, i64 16
  store i64 0, ptr %5, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_25, i64 24, i1 false)
  %6 = load i8, ptr %self, align 1
  store i8 %6, ptr %n, align 1
  %_5 = load i8, ptr %n, align 1
  %_4 = icmp uge i8 %_5, 10
  br i1 %_4, label %bb1, label %bb7

bb14:                                             ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_27, i64 8
  %err.0 = load i64, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  %err.1 = load i64, ptr %8, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb7:                                              ; preds = %bb15
  br label %bb8

bb1:                                              ; preds = %bb15
  %_7 = load i8, ptr %n, align 1
  %_6 = icmp uge i8 %_7, 100
  br i1 %_6, label %bb2, label %bb4

bb8:                                              ; preds = %bb6, %bb7
  %_24 = load i8, ptr %n, align 1
  %_23 = add i8 48, %_24
  %_22 = zext i8 %_23 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %buf, i32 %_22)
          to label %bb9 unwind label %cleanup

bb4:                                              ; preds = %bb1
  br label %bb5

bb2:                                              ; preds = %bb1
  %_13 = load i8, ptr %n, align 1
  %_12 = udiv i8 %_13, 100
  %_11 = add i8 48, %_12
  %_10 = zext i8 %_11 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %buf, i32 %_10)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %bb3, %bb4
  %_19 = load i8, ptr %n, align 1
  %_18 = udiv i8 %_19, 10
  %_17 = add i8 48, %_18
  %_16 = zext i8 %_17 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %buf, i32 %_16)
          to label %bb6 unwind label %cleanup

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %buf) #25
          to label %bb11 unwind label %terminate

cleanup:                                          ; preds = %bb8, %bb5, %bb2
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  %13 = load i8, ptr %n, align 1
  %14 = urem i8 %13, 100
  store i8 %14, ptr %n, align 1
  br label %bb5

bb6:                                              ; preds = %bb5
  %15 = load i8, ptr %n, align 1
  %16 = urem i8 %15, 10
  store i8 %16, ptr %n, align 1
  br label %bb8

bb9:                                              ; preds = %bb8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb10
  %17 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb11:                                             ; preds = %bb10
  %20 = load ptr, ptr %0, align 8
  %21 = getelementptr inbounds i8, ptr %0, i64 8
  %22 = load i32, ptr %21, align 8
  %23 = insertvalue { ptr, i32 } poison, ptr %20, 0
  %24 = insertvalue { ptr, i32 } %23, i32 %22, 1
  resume { ptr, i32 } %24

bb13:                                             ; No predecessors!
  unreachable
}

; <u8 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN46_$LT$u8$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hb9d4695345e6ee27E"(i8 %start1, i64 %n) unnamed_addr #0 {
start:
  %rhs = trunc i64 %n to i8
  br label %bb2

bb2:                                              ; preds = %start
  %_0 = add nuw i8 %start1, %rhs
  ret i8 %_0

bb1:                                              ; No predecessors!
  unreachable
}

; <str as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h3e948ad4e99fedb5E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %bytes = alloca [24 x i8], align 8
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hd7a43e3d4155bfffE"(ptr sret([24 x i8]) align 8 %bytes, ptr align 1 %self.0, i64 %self.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %bytes, i64 24, i1 false)
  ret void
}

; <F as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h1b23068e08a0f4a9E"(ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
; call core::str::pattern::Pattern::is_prefix_of
  %_0 = call zeroext i1 @_ZN4core3str7pattern7Pattern12is_prefix_of17h3a9b9c982a6a6b18E(ptr align 1 %haystack.0, i64 %haystack.1)
  ret i1 %_0
}

; <F as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h7d92889405bf7c17E"(ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
; call core::str::pattern::Pattern::is_prefix_of
  %_0 = call zeroext i1 @_ZN4core3str7pattern7Pattern12is_prefix_of17h1c8ce13458d80e65E(ptr align 1 %haystack.0, i64 %haystack.1)
  ret i1 %_0
}

; <u8 as core::slice::cmp::SliceOrd>::compare
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN49_$LT$u8$u20$as$u20$core..slice..cmp..SliceOrd$GT$7compare17h77325c80cc2e1489E"(ptr align 1 %left.0, i64 %left.1, ptr align 1 %right.0, i64 %right.1) unnamed_addr #0 {
start:
  %0 = alloca [4 x i8], align 4
  %order = alloca [8 x i8], align 8
  %len = alloca [8 x i8], align 8
  %diff = sub i64 %left.1, %right.1
  %_9 = icmp ult i64 %left.1, %right.1
  br i1 %_9, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i64 %right.1, ptr %len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 %left.1, ptr %len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %_14 = load i64, ptr %len, align 8
  %1 = call i32 @memcmp(ptr %left.0, ptr %right.0, i64 %_14)
  store i32 %1, ptr %0, align 4
  %_11 = load i32, ptr %0, align 4
  %2 = sext i32 %_11 to i64
  store i64 %2, ptr %order, align 8
  %_15 = load i64, ptr %order, align 8
  %3 = icmp eq i64 %_15, 0
  br i1 %3, label %bb5, label %bb6

bb5:                                              ; preds = %bb3
  store i64 %diff, ptr %order, align 8
  br label %bb7

bb6:                                              ; preds = %bb3
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %_19 = load i64, ptr %order, align 8
  %4 = icmp sgt i64 %_19, 0
  %5 = zext i1 %4 to i8
  %6 = icmp slt i64 %_19, 0
  %7 = zext i1 %6 to i8
  %_0 = sub nsw i8 %5, %7
  ret i8 %_0
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h90ab81a631f3c349E"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  br label %bb2

bb2:                                              ; preds = %start
  %_0 = add nuw i64 %start1, %n
  ret i64 %_0

bb1:                                              ; No predecessors!
  unreachable
}

; <usize as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h79cf839added308bE"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  br label %bb2

bb2:                                              ; preds = %start
  %_0 = sub nuw i64 %start1, %n
  ret i64 %_0

bb1:                                              ; No predecessors!
  unreachable
}

; core::intrinsics::write_bytes::precondition_check
; Function Attrs: inlinehint nounwind nonlazybind uwtable
define internal void @_ZN4core10intrinsics11write_bytes18precondition_check17h377ecd87b38956f1E(ptr %addr, i64 %align) unnamed_addr #3 personality ptr @rust_eh_personality {
start:
  %0 = alloca [4 x i8], align 4
  %_8 = alloca [48 x i8], align 8
  %_6 = ptrtoint ptr %addr to i64
  %1 = icmp eq i64 %_6, 0
  br i1 %1, label %bb3, label %bb4

bb3:                                              ; preds = %start
  br label %bb2

bb4:                                              ; preds = %start
  %2 = call i64 @llvm.ctpop.i64(i64 %align)
  %3 = trunc i64 %2 to i32
  store i32 %3, ptr %0, align 4
  %_9 = load i32, ptr %0, align 4
  %4 = icmp eq i32 %_9, 1
  br i1 %4, label %bb5, label %bb6

bb2:                                              ; preds = %bb5, %bb3
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfb4a192166a1619dE(ptr align 1 @alloc_424341b75ece3fa20496f1c69b9fb0ac, i64 111) #27
  unreachable

bb5:                                              ; preds = %bb4
  %_13 = sub i64 %align, 1
  %_12 = and i64 %_6, %_13
  %_3 = icmp eq i64 %_12, 0
  br i1 %_3, label %bb1, label %bb2

bb6:                                              ; preds = %bb4
  store ptr @alloc_041983ee8170efdaaf95ba67fd072d26, ptr %_8, align 8
  %5 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 1, ptr %5, align 8
  %6 = load ptr, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %8 = getelementptr inbounds i8, ptr %_8, i64 32
  store ptr %6, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %_8, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %10, i64 8
  store i64 0, ptr %11, align 8
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_8, ptr align 8 @alloc_03d266dccd993e13de22250e3dccd7d7) #24
          to label %unreachable unwind label %terminate

bb1:                                              ; preds = %bb5
  ret void

terminate:                                        ; preds = %bb6
  %12 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
; call core::panicking::panic_cannot_unwind
  call void @_ZN4core9panicking19panic_cannot_unwind17h3f96c9c07954d1a5E() #26
  unreachable

unreachable:                                      ; preds = %bb6
  unreachable
}

; core::intrinsics::is_val_statically_known
; Function Attrs: nounwind nonlazybind uwtable
define zeroext i1 @_ZN4core10intrinsics23is_val_statically_known17h69b6fd216a4f675dE(i1 zeroext %_arg) unnamed_addr #4 {
start:
  ret i1 false
}

; core::intrinsics::unlikely
; Function Attrs: nounwind nonlazybind uwtable
define internal zeroext i1 @_ZN4core10intrinsics8unlikely17h374b2e850917cb67E(i1 zeroext %b) unnamed_addr #4 {
start:
  ret i1 %b
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hc5ec81f66f13964bE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
  %_3 = load i64, ptr %self, align 8
  %_4 = load i64, ptr %other, align 8
  %0 = icmp ugt i64 %_3, %_4
  %1 = zext i1 %0 to i8
  %2 = icmp ult i64 %_3, %_4
  %3 = zext i1 %2 to i8
  %_0 = sub nsw i8 %1, %3
  ret i8 %_0
}

; core::cmp::impls::<impl core::cmp::PartialEq for usize>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17hb38bc76ae998cc78E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
  %_3 = load i64, ptr %self, align 8
  %_4 = load i64, ptr %other, align 8
  %_0 = icmp eq i64 %_3, %_4
  ret i1 %_0
}

; core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h1c02d3ff5df7c858E"(ptr align 1 %self, ptr align 1 %_other) unnamed_addr #0 {
start:
  ret i1 true
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17ha6280410ce1c311fE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
  %_3 = load ptr, ptr %self, align 8
  %_4 = load ptr, ptr %other, align 8
; call <proc_macro2::fallback::Ident as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN69_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..cmp..PartialEq$GT$2eq17h47bc6993d82599f7E"(ptr align 8 %_3, ptr align 8 %_4)
  ret i1 %_0
}

; core::cmp::max_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6max_by17h68594a3dd1a7ccabE(i64 %0, i64 %1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca [16 x i8], align 8
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  %v2 = alloca [8 x i8], align 8
  %v1 = alloca [8 x i8], align 8
  store i64 %0, ptr %v1, align 8
  store i64 %1, ptr %v2, align 8
  store i8 1, ptr %_9, align 1
; invoke core::ops::function::FnOnce::call_once
  %3 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17h7aaeee97712f4694E(ptr align 8 %v1, ptr align 8 %v2)
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %2, align 8
  %7 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i8 %3, ptr %_4, align 1
  %_8 = load i8, ptr %_4, align 1
  switch i8 %_8, label %bb2 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb3
  ]

bb2:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  %8 = load i64, ptr %v2, align 8
  store i64 %8, ptr %_0, align 8
  %9 = load i8, ptr %_9, align 1
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb8, label %bb5

bb3:                                              ; preds = %bb1
  store i8 0, ptr %_9, align 1
  %11 = load i64, ptr %v1, align 8
  store i64 %11, ptr %_0, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb8, %bb4
  %12 = load i64, ptr %_0, align 8
  ret i64 %12

bb8:                                              ; preds = %bb4
  br label %bb5

bb10:                                             ; preds = %bb6
  %13 = load i8, ptr %_9, align 1
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb9, label %bb7

bb7:                                              ; preds = %bb9, %bb10
  %15 = load ptr, ptr %2, align 8
  %16 = getelementptr inbounds i8, ptr %2, i64 8
  %17 = load i32, ptr %16, align 8
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19

bb9:                                              ; preds = %bb10
  br label %bb7
}

; core::cmp::min_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6min_by17hdb33bb80198dea92E(i64 %0, i64 %1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca [16 x i8], align 8
  %_10 = alloca [1 x i8], align 1
  %_4 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  %v2 = alloca [8 x i8], align 8
  %v1 = alloca [8 x i8], align 8
  store i64 %0, ptr %v1, align 8
  store i64 %1, ptr %v2, align 8
  store i8 1, ptr %_10, align 1
; invoke core::ops::function::FnOnce::call_once
  %3 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17h7aaeee97712f4694E(ptr align 8 %v1, ptr align 8 %v2)
          to label %bb1 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  br label %bb12

cleanup:                                          ; preds = %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %2, align 8
  %7 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 %3, ptr %_4, align 1
  %_8 = load i8, ptr %_4, align 1
  switch i8 %_8, label %bb2 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb3
  ]

bb2:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, ptr %_10, align 1
  %8 = load i64, ptr %v1, align 8
  store i64 %8, ptr %_0, align 8
  br label %bb9

bb3:                                              ; preds = %bb1
  %9 = load i64, ptr %v2, align 8
  store i64 %9, ptr %_0, align 8
  br label %bb5

bb9:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb10, %bb5, %bb9
  %10 = load i64, ptr %_0, align 8
  ret i64 %10

bb5:                                              ; preds = %bb3
  %11 = load i8, ptr %_10, align 1
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb10, label %bb6

bb10:                                             ; preds = %bb5
  br label %bb6

bb12:                                             ; preds = %bb7
  %13 = load i8, ptr %_10, align 1
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb11, label %bb8

bb8:                                              ; preds = %bb11, %bb12
  %15 = load ptr, ptr %2, align 8
  %16 = getelementptr inbounds i8, ptr %2, i64 8
  %17 = load i32, ptr %16, align 8
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19

bb11:                                             ; preds = %bb12
  br label %bb8
}

; core::cmp::PartialEq::ne
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3cmp9PartialEq2ne17h30bff06b33a0a6d9E(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 {
start:
; call <proc_macro2::Delimiter as core::cmp::PartialEq>::eq
  %_3 = call zeroext i1 @"_ZN63_$LT$proc_macro2..Delimiter$u20$as$u20$core..cmp..PartialEq$GT$2eq17h201eac3222e2ae70E"(ptr align 1 %self, ptr align 1 %other)
  %_0 = xor i1 %_3, true
  ret i1 %_0
}

; core::f32::<impl f32>::is_finite
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9is_finite17h29cb87bdbcafbd47E"(float %self) unnamed_addr #0 {
start:
  %_4 = bitcast float %self to i32
  %_3 = and i32 %_4, 2147483647
  %_2 = bitcast i32 %_3 to float
  %_0 = fcmp olt float %_2, 0x7FF0000000000000
  ret i1 %_0
}

; core::f64::<impl f64>::is_finite
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9is_finite17h9478bc51df474f90E"(double %self) unnamed_addr #0 {
start:
  %_4 = bitcast double %self to i64
  %_3 = and i64 %_4, 9223372036854775807
  %_2 = bitcast i64 %_3 to double
  %_0 = fcmp olt double %_2, 0x7FF0000000000000
  ret i1 %_0
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h26494a2e8bdf3a46E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = getelementptr inbounds i8, ptr %f, i64 52
  %_4 = load i32, ptr %0, align 4
  %_3 = and i32 %_4, 16
  %1 = icmp eq i32 %_3, 0
  br i1 %1, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %f, i64 52
  %_6 = load i32, ptr %2, align 4
  %_5 = and i32 %_6, 32
  %3 = icmp eq i32 %_5, 0
  br i1 %3, label %bb4, label %bb3

bb1:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %4 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hb89b543945fdac37E"(ptr align 8 %self, ptr align 8 %f)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb6

bb4:                                              ; preds = %bb2
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %6 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hdabfc7932e5a3df0E"(ptr align 8 %self, ptr align 8 %f)
  %7 = zext i1 %6 to i8
  store i8 %7, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %8 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hb258a21f77c3d954E"(ptr align 8 %self, ptr align 8 %f)
  %9 = zext i1 %8 to i8
  store i8 %9, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  br label %bb6

bb6:                                              ; preds = %bb1, %bb5
  %10 = load i8, ptr %_0, align 1
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17h3d12c4d9511c7708E(ptr align 8 %self, ptr align 8 %args) unnamed_addr #1 {
start:
; call <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
  %_0 = call zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17hf7e58a847a67d178E"(ptr align 8 %self, ptr align 8 %args)
  ret i1 %_0
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h5e80cd2dba1bedd4E(ptr align 8 %self, ptr %entries) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %entry = alloca [32 x i8], align 8
  %_5 = alloca [32 x i8], align 8
  %iter = alloca [32 x i8], align 8
  %_3 = alloca [32 x i8], align 8
; call <proc_macro2::fallback::TokenStream as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN96_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h44640d5281a39aadE"(ptr sret([32 x i8]) align 8 %_3, ptr %entries)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %_3, i64 32, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb8, %start
; invoke <proc_macro2::rcvec::RcVecIntoIter<T> as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN101_$LT$proc_macro2..rcvec..RcVecIntoIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h141ed75263b6a7c8E"(ptr sret([32 x i8]) align 8 %_5, ptr align 8 %iter)
          to label %bb3 unwind label %cleanup

bb11:                                             ; preds = %bb10, %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>
  invoke void @"_ZN4core3ptr84drop_in_place$LT$proc_macro2..rcvec..RcVecIntoIter$LT$proc_macro2..TokenTree$GT$$GT$17ha4650a712ed3a52bE"(ptr align 8 %iter) #25
          to label %bb12 unwind label %terminate

cleanup:                                          ; preds = %bb7, %bb2
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb11

bb3:                                              ; preds = %bb2
  %5 = load i64, ptr %_5, align 8
  %6 = icmp eq i64 %5, -9223372036854775803
  %_7 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_7, 0
  br i1 %7, label %bb6, label %bb5

bb6:                                              ; preds = %bb3
; call core::ptr::drop_in_place<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr84drop_in_place$LT$proc_macro2..rcvec..RcVecIntoIter$LT$proc_macro2..TokenTree$GT$$GT$17ha4650a712ed3a52bE"(ptr align 8 %iter)
  ret ptr %self

bb5:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %entry, ptr align 8 %_5, i64 32, i1 false)
; invoke core::fmt::builders::DebugList::entry
  %_9 = invoke align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17he5a4465e1dd4a691E(ptr align 8 %self, ptr align 1 %entry, ptr align 8 @vtable.1)
          to label %bb7 unwind label %cleanup1

bb10:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %entry) #25
          to label %bb11 unwind label %terminate

cleanup1:                                         ; preds = %bb5
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb10

bb7:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %entry)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb2

terminate:                                        ; preds = %bb11, %bb10
  %12 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; No predecessors!
  unreachable

bb12:                                             ; preds = %bb11
  %15 = load ptr, ptr %0, align 8
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  %17 = load i32, ptr %16, align 8
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h9c27150143f9e58aE(ptr align 8 %self, ptr align 8 %entries) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %entry = alloca [32 x i8], align 8
  %_5 = alloca [32 x i8], align 8
  %iter = alloca [40 x i8], align 8
  %_3 = alloca [40 x i8], align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h69e0b88c277af0e1E"(ptr sret([40 x i8]) align 8 %_3, ptr align 8 %entries)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %_3, i64 40, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb8, %start
; invoke <proc_macro2::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN94_$LT$proc_macro2..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17heb17dd1b1d8d4b7bE"(ptr sret([32 x i8]) align 8 %_5, ptr align 8 %iter)
          to label %bb3 unwind label %cleanup

bb11:                                             ; preds = %bb10, %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::token_stream::IntoIter>
  invoke void @"_ZN4core3ptr56drop_in_place$LT$proc_macro2..token_stream..IntoIter$GT$17hd0c29609ab24b4c6E"(ptr align 8 %iter) #25
          to label %bb12 unwind label %terminate

cleanup:                                          ; preds = %bb7, %bb2
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb11

bb3:                                              ; preds = %bb2
  %5 = load i64, ptr %_5, align 8
  %6 = icmp eq i64 %5, -9223372036854775803
  %_7 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_7, 0
  br i1 %7, label %bb6, label %bb5

bb6:                                              ; preds = %bb3
; call core::ptr::drop_in_place<proc_macro2::token_stream::IntoIter>
  call void @"_ZN4core3ptr56drop_in_place$LT$proc_macro2..token_stream..IntoIter$GT$17hd0c29609ab24b4c6E"(ptr align 8 %iter)
  ret ptr %self

bb5:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %entry, ptr align 8 %_5, i64 32, i1 false)
; invoke core::fmt::builders::DebugList::entry
  %_9 = invoke align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17he5a4465e1dd4a691E(ptr align 8 %self, ptr align 1 %entry, ptr align 8 @vtable.1)
          to label %bb7 unwind label %cleanup1

bb10:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %entry) #25
          to label %bb11 unwind label %terminate

cleanup1:                                         ; preds = %bb5
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb10

bb7:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %entry)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb2

terminate:                                        ; preds = %bb11, %bb10
  %12 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; No predecessors!
  unreachable

bb12:                                             ; preds = %bb11
  %15 = load ptr, ptr %0, align 8
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  %17 = load i32, ptr %16, align 8
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17h5a02ada783f089b5E(ptr sret([48 x i8]) align 8 %_0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1, ptr align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 {
start:
  %_5 = alloca [16 x i8], align 8
  store ptr %fmt.0, ptr %_5, align 8
  %0 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %fmt.1, ptr %0, align 8
  store ptr %pieces.0, ptr %_0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %pieces.1, ptr %1, align 8
  %2 = load ptr, ptr %_5, align 8
  %3 = getelementptr inbounds i8, ptr %_5, i64 8
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 32
  store ptr %2, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %4, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 16
  store ptr %args.0, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  store i64 %args.1, ptr %8, align 8
  ret void
}

; core::fmt::Arguments::as_statically_known_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @_ZN4core3fmt9Arguments23as_statically_known_str17h870be75be737bb80E(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca [1 x i8], align 1
  %_4 = alloca [1 x i8], align 1
  %s = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %_6.0 = load ptr, ptr %self, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %_6.1 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 16
  %_7.0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 8
  %_7.1 = load i64, ptr %3, align 8
  %4 = icmp eq i64 %_6.1, 0
  br i1 %4, label %bb7, label %bb8

bb7:                                              ; preds = %start
  %5 = icmp eq i64 %_7.1, 0
  br i1 %5, label %bb10, label %bb6

bb8:                                              ; preds = %start
  %6 = icmp eq i64 %_6.1, 1
  br i1 %6, label %bb9, label %bb6

bb10:                                             ; preds = %bb7
  store ptr inttoptr (i64 1 to ptr), ptr %s, align 8
  %7 = getelementptr inbounds i8, ptr %s, i64 8
  store i64 0, ptr %7, align 8
  br label %bb5

bb6:                                              ; preds = %bb9, %bb8, %bb7
  %8 = load ptr, ptr @0, align 8
  %9 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %8, ptr %s, align 8
  %10 = getelementptr inbounds i8, ptr %s, i64 8
  store i64 %9, ptr %10, align 8
  br label %bb5

bb5:                                              ; preds = %bb6, %bb11, %bb10
  %11 = load ptr, ptr %s, align 8
  %12 = ptrtoint ptr %11 to i64
  %13 = icmp eq i64 %12, 0
  %_14 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_14, 1
  br i1 %14, label %bb14, label %bb13

bb9:                                              ; preds = %bb8
  %15 = icmp eq i64 %_7.1, 0
  br i1 %15, label %bb11, label %bb6

bb11:                                             ; preds = %bb9
  %s1 = getelementptr inbounds [0 x { ptr, i64 }], ptr %_6.0, i64 0, i64 0
  %16 = getelementptr inbounds [0 x { ptr, i64 }], ptr %_6.0, i64 0, i64 0
  %_13.0 = load ptr, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %16, i64 8
  %_13.1 = load i64, ptr %17, align 8
  store ptr %_13.0, ptr %s, align 8
  %18 = getelementptr inbounds i8, ptr %s, i64 8
  store i64 %_13.1, ptr %18, align 8
  br label %bb5

bb14:                                             ; preds = %bb5
  store i8 1, ptr %_4, align 1
  br label %bb12

bb13:                                             ; preds = %bb5
  store i8 0, ptr %_4, align 1
  br label %bb12

bb12:                                             ; preds = %bb13, %bb14
  %19 = load i8, ptr %_4, align 1
  %20 = trunc i8 %19 to i1
  %21 = call i1 @llvm.is.constant.i1(i1 %20)
  %22 = zext i1 %21 to i8
  store i8 %22, ptr %0, align 1
  %23 = load i8, ptr %0, align 1
  %_3 = trunc i8 %23 to i1
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %bb12
  %24 = load ptr, ptr @0, align 8
  %25 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %24, ptr %_0, align 8
  %26 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %25, ptr %26, align 8
  br label %bb4

bb2:                                              ; preds = %bb12
  %27 = load ptr, ptr %s, align 8
  %28 = getelementptr inbounds i8, ptr %s, i64 8
  %29 = load i64, ptr %28, align 8
  store ptr %27, ptr %_0, align 8
  %30 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %29, ptr %30, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %31 = load ptr, ptr %_0, align 8
  %32 = getelementptr inbounds i8, ptr %_0, i64 8
  %33 = load i64, ptr %32, align 8
  %34 = insertvalue { ptr, i64 } poison, ptr %31, 0
  %35 = insertvalue { ptr, i64 } %34, i64 %33, 1
  ret { ptr, i64 } %35

bb15:                                             ; No predecessors!
  unreachable
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_0, ptr align 8 %pieces, ptr align 8 %args) unnamed_addr #0 {
start:
  store ptr %pieces, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 2, ptr %0, align 8
  %1 = load ptr, ptr @0, align 8
  %2 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 32
  store ptr %1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %2, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 16
  store ptr %args, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 1, ptr %6, align 8
  ret void
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3fmt9Arguments6new_v117hdeca39192332b7e4E(ptr sret([48 x i8]) align 8 %_0, ptr align 8 %pieces, ptr align 8 %args) unnamed_addr #0 {
start:
  store ptr %pieces, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 1, ptr %0, align 8
  %1 = load ptr, ptr @0, align 8
  %2 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 32
  store ptr %1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %2, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 16
  store ptr %args, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 1, ptr %6, align 8
  ret void
}

; core::fmt::Arguments::new_const
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3fmt9Arguments9new_const17h604c02e065326e13E(ptr sret([48 x i8]) align 8 %_0, ptr align 8 %pieces) unnamed_addr #0 {
start:
  store ptr %pieces, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 1, ptr %0, align 8
  %1 = load ptr, ptr @0, align 8
  %2 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 32
  store ptr %1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %2, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 0, ptr %6, align 8
  ret void
}

; core::fmt::Formatter::write_fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hf52dee6246e00a78E(ptr align 8 %self, ptr align 8 %fmt) unnamed_addr #0 {
start:
  %0 = alloca [48 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
; call core::fmt::Arguments::as_statically_known_str
  %1 = call { ptr, i64 } @_ZN4core3fmt9Arguments23as_statically_known_str17h870be75be737bb80E(ptr align 8 %fmt)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %_3, align 8
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %_3, align 8
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_5, 1
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %s.0 = load ptr, ptr %_3, align 8
  %9 = getelementptr inbounds i8, ptr %_3, i64 8
  %s.1 = load i64, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %self, i64 32
  %_7.0 = load ptr, ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %10, i64 8
  %_7.1 = load ptr, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %_7.1, i64 24
  %13 = load ptr, ptr %12, align 8, !invariant.load !3, !nonnull !3
  %14 = call zeroext i1 %13(ptr align 1 %_7.0, ptr align 1 %s.0, i64 %s.1)
  %15 = zext i1 %14 to i8
  store i8 %15, ptr %_0, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %16 = getelementptr inbounds i8, ptr %self, i64 32
  %_8.0 = load ptr, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %16, i64 8
  %_8.1 = load ptr, ptr %17, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %fmt, i64 48, i1 false)
; call core::fmt::write
  %18 = call zeroext i1 @_ZN4core3fmt5write17h2b71bd12250911d0E(ptr align 1 %_8.0, ptr align 8 %_8.1, ptr align 8 %0)
  %19 = zext i1 %18 to i8
  store i8 %19, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %20 = load i8, ptr %_0, align 1
  %21 = trunc i8 %20 to i1
  ret i1 %21

bb5:                                              ; No predecessors!
  unreachable
}

; core::mem::take
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4take17h2be42f166503770cE(ptr sret([24 x i8]) align 8 %result, ptr align 8 %dest) unnamed_addr #0 {
start:
  %src = alloca [24 x i8], align 8
; call <alloc::vec::Vec<T> as core::default::Default>::default
  call void @"_ZN67_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h6ba4ecfb7c114fdaE"(ptr sret([24 x i8]) align 8 %src)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %result, ptr align 8 %dest, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dest, ptr align 8 %src, i64 24, i1 false)
  ret void
}

; core::num::<impl u8>::is_ascii
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$8is_ascii17h29c107146d85e639E"(ptr align 1 %self) unnamed_addr #0 {
start:
  %_2 = load i8, ptr %self, align 1
  %_0 = icmp ule i8 %_2, 127
  ret i1 %_0
}

; core::num::<impl usize>::unchecked_sub::precondition_check
; Function Attrs: inlinehint nounwind nonlazybind uwtable
define internal void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_sub18precondition_check17h412d3c0b38faa77eE"(i64 %lhs, i64 %rhs) unnamed_addr #3 {
start:
  %_6.0 = sub i64 %lhs, %rhs
  %_6.1 = icmp ult i64 %lhs, %rhs
  br i1 %_6.1, label %bb1, label %bb2

bb2:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfb4a192166a1619dE(ptr align 1 @alloc_d30a741e02fc5ea2d050c92e901091a3, i64 69) #27
  unreachable
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h056d972d5433f5d9E() unnamed_addr #0 {
start:
  %_2 = alloca [0 x i8], align 1
; call proc_macro2::detection::initialize
  call void @_ZN11proc_macro29detection10initialize17hde66b1812ee0c516E()
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h39d4a4c3dac1e9afE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
  %_2 = alloca [24 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %0, i64 24, i1 false)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h7322ffc30c4e0825E(i32 %0) unnamed_addr #0 {
start:
  %_2 = alloca [4 x i8], align 4
  store i32 %0, ptr %_2, align 4
  %1 = load i32, ptr %_2, align 4
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %1)
  ret i32 %_0
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17h7aaeee97712f4694E(ptr align 8 %0, ptr align 8 %1) unnamed_addr #0 {
start:
  %_2 = alloca [16 x i8], align 8
  store ptr %0, ptr %_2, align 8
  %2 = getelementptr inbounds i8, ptr %_2, i64 8
  store ptr %1, ptr %2, align 8
  %3 = load ptr, ptr %_2, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %5 = load ptr, ptr %4, align 8
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %_0 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hc5ec81f66f13964bE"(ptr align 8 %3, ptr align 8 %5)
  ret i8 %_0
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17h82880d0733e821e1E() unnamed_addr #0 {
start:
  %_2 = alloca [0 x i8], align 1
; call proc_macro2::imp::LexError::Compiler
  %_0 = call zeroext i1 @_ZN11proc_macro23imp8LexError8Compiler17h913a20820b02c219E()
  ret i1 %_0
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h88ecffbcedbd9f54E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_2 = alloca [16 x i8], align 8
  store ptr %0, ptr %_2, align 8
  %2 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load ptr, ptr %_2, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %5 = load i64, ptr %4, align 8
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h87532753356c6506E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %3, i64 %5)
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h94700498d62385e9E(i8 %0) unnamed_addr #0 {
start:
  %_2 = alloca [1 x i8], align 1
  store i8 %0, ptr %_2, align 1
  %1 = load i8, ptr %_2, align 1
; call core::char::convert::<impl core::convert::From<u8> for char>::from
  %_0 = call i32 @"_ZN4core4char7convert64_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$char$GT$4from17h8c870905c03a7dc5E"(i8 %1)
  ret i32 %_0
}

; core::ptr::drop_in_place<[(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr105drop_in_place$LT$$u5b$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$u5d$$GT$17h00130a9844cf67c6E"(ptr align 8 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8
  %_6 = getelementptr inbounds [0 x { i8, [7 x i8], %"fallback::TokenStreamBuilder" }], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$GT$17h3ef45e39eb45e706E"(ptr align 8 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8
  %_4 = getelementptr inbounds [0 x { i8, [7 x i8], %"fallback::TokenStreamBuilder" }], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$GT$17h3ef45e39eb45e706E"(ptr align 8 %_4) #25
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; core::ptr::drop_in_place<alloc::vec::Vec<(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr118drop_in_place$LT$alloc..vec..Vec$LT$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$GT$$GT$17ha4063a01c9ecff89E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h64e27fe981929a3dE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)>>
  invoke void @"_ZN4core3ptr125drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$GT$$GT$17ha4e090e19ed80d6fE"(ptr align 8 %_1) #25
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)>>
  call void @"_ZN4core3ptr125drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$GT$$GT$17ha4e090e19ed80d6fE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr125drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$GT$$GT$17ha4e090e19ed80d6fE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h568fb5da6e4ebda8E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr128drop_in_place$LT$proc_macro..bridge..Group$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$GT$$GT$17h43cd21a8cbd25519E"(ptr align 4 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_1, i64 12
; call core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::TokenStream>>
  call void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$GT$17hbed412bb2c2b3e14E"(ptr align 4 %0)
  ret void
}

; core::ptr::drop_in_place<core::result::Result<(proc_macro2::parse::Cursor,proc_macro2::Ident),proc_macro2::parse::Reject>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr133drop_in_place$LT$core..result..Result$LT$$LP$proc_macro2..parse..Cursor$C$proc_macro2..Ident$RP$$C$proc_macro2..parse..Reject$GT$$GT$17h9f1109abe5f34cf6E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_1, i64 16
  %1 = load i64, ptr %0, align 8
  %2 = icmp eq i64 %1, -9223372036854775807
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb2, label %bb1

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<(proc_macro2::parse::Cursor,proc_macro2::Ident)>
  call void @"_ZN4core3ptr76drop_in_place$LT$$LP$proc_macro2..parse..Cursor$C$proc_macro2..Ident$RP$$GT$17h55bf2ead262fc9b8E"(ptr align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %bb2, %start
  ret void
}

; core::ptr::drop_in_place<<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr143drop_in_place$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17h4d621679a4bfa7e5E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN125_$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he61cfbc2c2040ed5E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro2::TokenTree,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr144drop_in_place$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$proc_macro2..TokenTree$C$alloc..alloc..Global$GT$$GT$17hf001dceed83a2775E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN125_$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h203d5c7096ee13f9E"(ptr align 8 %_1)
  ret void
}

; core::ptr::read_unaligned
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3ptr14read_unaligned17h00be0e02cbdfa1a2E(ptr %src) unnamed_addr #0 {
start:
  %tmp = alloca [4 x i8], align 4
  br label %bb3

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp, ptr align 1 %src, i64 4, i1 false)
  %self = load i32, ptr %tmp, align 4
  ret i32 %self

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::ptr::read_unaligned
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr14read_unaligned17h0fd1a5bebf7557b6E(ptr sret([16 x i8]) align 16 %_0, ptr %src) unnamed_addr #0 {
start:
  %tmp = alloca [16 x i8], align 16
  br label %bb3

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp, ptr align 1 %src, i64 16, i1 false)
  %self = load <16 x i8>, ptr %tmp, align 16
  store <16 x i8> %self, ptr %_0, align 16
  ret void

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr168drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17h032deeb255e3ec64E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h59b9c0c43db79569E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr169drop_in_place$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$17h76151c3df7f804dbE"(ptr align 4 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_1, i64 16
  %1 = load i8, ptr %0, align 4
  %2 = sub i8 %1, 4
  %3 = zext i8 %2 to i64
  %4 = icmp ule i8 %2, 2
  %5 = add i64 %3, 1
  %_2 = select i1 %4, i64 %5, i64 0
  switch i64 %_2, label %bb1 [
    i64 0, label %bb2
    i64 1, label %bb1
    i64 2, label %bb1
  ]

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span>>
  call void @"_ZN4core3ptr128drop_in_place$LT$proc_macro..bridge..Group$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$GT$$GT$17h43cd21a8cbd25519E"(ptr align 4 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro2::TokenTree,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr176drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro2..TokenTree$C$alloc..alloc..Global$GT$$GT$17hc77b24eff7f38041E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hca2c4e65e35878c4E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<[proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr179drop_in_place$LT$$u5b$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$u5d$$GT$17h51455dae7f2997e5E"(ptr align 4 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8
  %_6 = getelementptr inbounds [0 x %"proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>"], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>
  invoke void @"_ZN4core3ptr169drop_in_place$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$17h76151c3df7f804dbE"(ptr align 4 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8
  %_4 = getelementptr inbounds [0 x %"proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>"], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>
  invoke void @"_ZN4core3ptr169drop_in_place$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$17h76151c3df7f804dbE"(ptr align 4 %_4) #25
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr192drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$$GT$17h2a152f61a7920508E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he9f6d9adf9f8788aE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>>
  invoke void @"_ZN4core3ptr199drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$$GT$17ha8859ccedb293eb9E"(ptr align 8 %_1) #25
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>>
  call void @"_ZN4core3ptr199drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$$GT$17ha8859ccedb293eb9E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr199drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$$GT$17ha8859ccedb293eb9E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbcbd65e0e1627debE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr208drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$$GT$17h8702ac6ddee13c90E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5f25a4e3a922637aE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<bool>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr25drop_in_place$LT$bool$GT$17h47e55f9d18cb57cbE"(ptr align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<char>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr25drop_in_place$LT$char$GT$17h5d6298e91e329779E"(ptr align 4 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr270drop_in_place$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$C$alloc..alloc..Global$GT$$GT$17h09f63b39f45a62c9E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN125_$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8f3c4963b89df0e5E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr302drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$C$alloc..alloc..Global$GT$$GT$17hfa1c34fbde24c473E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h00a9899cbc82d377E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h2d37da3d1d918eedE"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&()>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17he24542e07e67fb7cE"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<core::fmt::Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17hdeccf2a062ad45b0E"(ptr align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro::Span>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr37drop_in_place$LT$proc_macro..Span$GT$17h55d94ae389b909b5E"(ptr align 4 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro::Group>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr38drop_in_place$LT$proc_macro..Group$GT$17h9bad555f6d6cab0fE"(ptr align 4 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span>>
  call void @"_ZN4core3ptr128drop_in_place$LT$proc_macro..bridge..Group$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$GT$$GT$17h43cd21a8cbd25519E"(ptr align 4 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::Group>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Group$GT$17hf3079a2bed2d5e2eE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<proc_macro2::imp::Group>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17hdb32b9b469366b91E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::Ident>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Ident$GT$17h13f4f34f41aabf0cE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<proc_macro2::imp::Ident>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Ident$GT$17h4af07ca6816db39cE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<std::path::PathBuf>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h91833bae97a83f38E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h2b7a3cb046ecae21E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::fmt::Arguments>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr41drop_in_place$LT$core..fmt..Arguments$GT$17h0f4d6157c3e10235E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro::LexError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr41drop_in_place$LT$proc_macro..LexError$GT$17h789c0af6144c89baE"(ptr align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro2::Literal>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr41drop_in_place$LT$proc_macro2..Literal$GT$17h23fc1ed60d658ab3E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<proc_macro2::imp::Literal>
  call void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17hf6d171391c72d161E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::Spacing>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr41drop_in_place$LT$proc_macro2..Spacing$GT$17he54d7be9f34dead1E"(ptr align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hb32e2f1460cb048eE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro::TokenTree>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17hf98df681a9340e87E"(ptr align 4 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_1, i64 16
  %1 = load i8, ptr %0, align 4
  %2 = sub i8 %1, 4
  %3 = zext i8 %2 to i64
  %4 = icmp ule i8 %2, 2
  %5 = add i64 %3, 1
  %_2 = select i1 %4, i64 %5, i64 0
  switch i64 %_2, label %bb1 [
    i64 0, label %bb2
    i64 1, label %bb1
    i64 2, label %bb1
  ]

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro::Group>
  call void @"_ZN4core3ptr38drop_in_place$LT$proc_macro..Group$GT$17h9bad555f6d6cab0fE"(ptr align 4 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<proc_macro2::Delimiter>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..Delimiter$GT$17h6a33f05eb91922c8E"(ptr align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro2::TokenTree>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8
  %1 = sub i64 %0, -9223372036854775807
  %2 = icmp ule i64 %1, 3
  %_2 = select i1 %2, i64 %1, i64 1
  switch i64 %_2, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
    i64 2, label %bb1
  ]

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
; call core::ptr::drop_in_place<proc_macro2::Literal>
  call void @"_ZN4core3ptr41drop_in_place$LT$proc_macro2..Literal$GT$17h23fc1ed60d658ab3E"(ptr align 8 %3)
  br label %bb1

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_1, i64 8
; call core::ptr::drop_in_place<proc_macro2::Group>
  call void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Group$GT$17hf3079a2bed2d5e2eE"(ptr align 8 %4)
  br label %bb1

bb3:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro2::Ident>
  call void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Ident$GT$17h13f4f34f41aabf0cE"(ptr align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %bb4, %bb3, %bb2, %start
  ret void
}

; core::ptr::drop_in_place<proc_macro::TokenStream>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5907fc6780300241E"(ptr align 4 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::TokenStream>>
  call void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$GT$17hbed412bb2c2b3e14E"(ptr align 4 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::imp::Group>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17hdb32b9b469366b91E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i32, ptr %_1, align 8
  %_2 = zext i32 %0 to i64
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_1, i64 4
; call core::ptr::drop_in_place<proc_macro::Group>
  call void @"_ZN4core3ptr38drop_in_place$LT$proc_macro..Group$GT$17h9bad555f6d6cab0fE"(ptr align 4 %2)
  br label %bb1

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
; call core::ptr::drop_in_place<proc_macro2::fallback::Group>
  call void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Group$GT$17he77456d9688945f3E"(ptr align 8 %3)
  br label %bb1

bb1:                                              ; preds = %bb3, %bb2
  ret void
}

; core::ptr::drop_in_place<proc_macro2::imp::Ident>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Ident$GT$17h4af07ca6816db39cE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro2::fallback::Ident>
  call void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Ident$GT$17h613975fde25ff11aE"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hb32e2f1460cb048eE"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb17ae3895e9b4ee1E"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h4c5dafa8e4b8e715E"(ptr align 8 %_1) #25
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h4c5dafa8e4b8e715E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<proc_macro2::imp::Literal>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17hf6d171391c72d161E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17h63b97baac7be2b8bE"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<std::ffi::os_str::OsString>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h2b7a3cb046ecae21E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sys::os_str::bytes::Buf>
  call void @"_ZN4core3ptr49drop_in_place$LT$std..sys..os_str..bytes..Buf$GT$17h284b9d1967b338d5E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::fallback::Group>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Group$GT$17he77456d9688945f3E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h842cd8089ab57678E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::fallback::Ident>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Ident$GT$17h613975fde25ff11aE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<std::sys::os_str::bytes::Buf>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$std..sys..os_str..bytes..Buf$GT$17h284b9d1967b338d5E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hb32e2f1460cb048eE"(ptr align 8 %_1)
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define ptr @_ZN4core3ptr4read17h7e4a75aa6d8bab82E(ptr %src) unnamed_addr #0 {
start:
  %_0 = load ptr, ptr %src, align 8
  ret ptr %_0
}

; core::ptr::drop_in_place<proc_macro::ConcatTreesHelper>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr50drop_in_place$LT$proc_macro..ConcatTreesHelper$GT$17h5f92eaa83f855cf7E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>>
  call void @"_ZN4core3ptr192drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$$GT$17h2a152f61a7920508E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h5011ab6d6a88b5efE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro2::imp::DeferredTokenStream>
  call void @"_ZN4core3ptr58drop_in_place$LT$proc_macro2..imp..DeferredTokenStream$GT$17hb86844e8abf23437E"(ptr align 8 %_1)
  br label %bb1

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h842cd8089ab57678E"(ptr align 8 %3)
  br label %bb1

bb1:                                              ; preds = %bb3, %bb2
  ret void
}

; core::ptr::drop_in_place<proc_macro2::fallback::Literal>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17h63b97baac7be2b8bE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<&proc_macro2::fallback::Span>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$$RF$proc_macro2..fallback..Span$GT$17hcc91121b8e2ab309E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<[proc_macro::TokenTree]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr52drop_in_place$LT$$u5b$proc_macro..TokenTree$u5d$$GT$17hf6f0e2258747ab88E"(ptr align 4 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8
  %_6 = getelementptr inbounds [0 x %"proc_macro::TokenTree"], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<proc_macro::TokenTree>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17hf98df681a9340e87E"(ptr align 4 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8
  %_4 = getelementptr inbounds [0 x %"proc_macro::TokenTree"], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<proc_macro::TokenTree>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17hf98df681a9340e87E"(ptr align 4 %_4) #25
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; core::ptr::drop_in_place<proc_macro2::fallback::LexError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$proc_macro2..fallback..LexError$GT$17heb61d8e0de7cee7dE"(ptr align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro2::imp::TokenTreeIter>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr52drop_in_place$LT$proc_macro2..imp..TokenTreeIter$GT$17ha6577036cfd942c5E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %_2 = load i64, ptr %_1, align 8
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
; call core::ptr::drop_in_place<proc_macro::token_stream::IntoIter>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..token_stream..IntoIter$GT$17h83ebb46faae004e2E"(ptr align 8 %1)
  br label %bb1

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_1, i64 8
; call core::ptr::drop_in_place<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr84drop_in_place$LT$proc_macro2..rcvec..RcVecIntoIter$LT$proc_macro2..TokenTree$GT$$GT$17ha4650a712ed3a52bE"(ptr align 8 %2)
  br label %bb1

bb1:                                              ; preds = %bb3, %bb2
  ret void
}

; core::ptr::drop_in_place<[proc_macro2::TokenTree]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$$u5b$proc_macro2..TokenTree$u5d$$GT$17h307a84eeb83678a1E"(ptr align 8 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8
  %_6 = getelementptr inbounds [0 x %TokenTree], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8
  %_4 = getelementptr inbounds [0 x %TokenTree], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %_4) #25
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h4c5dafa8e4b8e715E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6a36eb4d40c40930E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::num::error::TryFromIntError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr54drop_in_place$LT$core..num..error..TryFromIntError$GT$17h233d1aa9499af22bE"(ptr align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro::token_stream::IntoIter>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..token_stream..IntoIter$GT$17h83ebb46faae004e2E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>>
  call void @"_ZN4core3ptr208drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$$GT$17h8702ac6ddee13c90E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h842cd8089ab57678E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
; invoke <proc_macro2::fallback::TokenStream as core::ops::drop::Drop>::drop
  invoke void @"_ZN76_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbdb88b205740a3a1E"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>>
  invoke void @"_ZN4core3ptr76drop_in_place$LT$proc_macro2..rcvec..RcVec$LT$proc_macro2..TokenTree$GT$$GT$17h08d580087c29f985E"(ptr align 8 %_1) #25
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr76drop_in_place$LT$proc_macro2..rcvec..RcVec$LT$proc_macro2..TokenTree$GT$$GT$17h08d580087c29f985E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<proc_macro2::token_stream::IntoIter>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr56drop_in_place$LT$proc_macro2..token_stream..IntoIter$GT$17hd0c29609ab24b4c6E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<proc_macro2::imp::TokenTreeIter>
  call void @"_ZN4core3ptr52drop_in_place$LT$proc_macro2..imp..TokenTreeIter$GT$17ha6577036cfd942c5E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<&core::option::Option<usize>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$$RF$core..option..Option$LT$usize$GT$$GT$17h1b284d3b03a97c87E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro2::imp::DeferredTokenStream>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr58drop_in_place$LT$proc_macro2..imp..DeferredTokenStream$GT$17hb86844e8abf23437E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %1 = getelementptr inbounds i8, ptr %_1, i64 24
; invoke core::ptr::drop_in_place<proc_macro::TokenStream>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5907fc6780300241E"(ptr align 4 %1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::TokenTree>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..TokenTree$GT$$GT$17hc6605ed38dbad50aE"(ptr align 8 %_1) #25
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..TokenTree$GT$$GT$17hc6605ed38dbad50aE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %6 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; preds = %bb3
  %9 = load ptr, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load i32, ptr %10, align 8
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13
}

; core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h0ba97c6acee7cb21E"(ptr align 4 %_1) unnamed_addr #1 {
start:
; call <proc_macro::bridge::client::TokenStream as core::ops::drop::Drop>::drop
  call void @"_ZN81_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbbdf9c20e85e4ff1E"(ptr align 4 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::fallback::TokenStreamBuilder>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr62drop_in_place$LT$proc_macro2..fallback..TokenStreamBuilder$GT$17hc947a9bf142072dcE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<proc_macro2::rcvec::RcVecBuilder<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr83drop_in_place$LT$proc_macro2..rcvec..RcVecBuilder$LT$proc_macro2..TokenTree$GT$$GT$17hd557b2739f90b988E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..TokenTree$GT$$GT$17hc6605ed38dbad50aE"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2bf50abed4c4b156E"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro::TokenTree>>
  invoke void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro..TokenTree$GT$$GT$17h3bae54580186885fE"(ptr align 8 %_1) #25
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro..TokenTree$GT$$GT$17h3bae54580186885fE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<std::sys::sync::once::futex::CompletionGuard>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$std..sys..sync..once..futex..CompletionGuard$GT$17h93c53ae467fc3dd7E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <std::sys::sync::once::futex::CompletionGuard as core::ops::drop::Drop>::drop
  call void @"_ZN86_$LT$std..sys..sync..once..futex..CompletionGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha1506ce481ce549eE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17h110007b9863c5fe0E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h275ad38174f08544E"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro2::TokenTree>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro2..TokenTree$GT$$GT$17ha39b47c836e86927E"(ptr align 8 %_1) #25
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr73drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro2..TokenTree$GT$$GT$17ha39b47c836e86927E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<dyn core::any::Any+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17h6a1d2a06ca4ab4d7E"(ptr align 1 %_1.0, ptr align 8 %_1.1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_1.1, i64 0
  %1 = load ptr, ptr %0, align 8, !invariant.load !3
  %2 = icmp ne ptr %1, null
  br i1 %2, label %is_not_null, label %bb1

is_not_null:                                      ; preds = %start
  call void %1(ptr align 1 %_1.0)
  br label %bb1

bb1:                                              ; preds = %is_not_null, %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<proc_macro::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$proc_macro..TokenTree$GT$$GT$17h6a6ff45a7970fde0E"(ptr align 4 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_1, i64 16
  %1 = load i8, ptr %0, align 4
  %2 = icmp eq i8 %1, 7
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro::TokenTree>
  call void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17hf98df681a9340e87E"(ptr align 4 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<core::option::Option<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr71drop_in_place$LT$core..option..Option$LT$proc_macro2..TokenTree$GT$$GT$17h875682ad77382b8dE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8
  %1 = icmp eq i64 %0, -9223372036854775803
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro..TokenTree$GT$$GT$17h3bae54580186885fE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h580ee621a14e4e41E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr73drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro2..TokenTree$GT$$GT$17ha39b47c836e86927E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0f7ceae530493837E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::drain::Drain<proc_macro::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr74drop_in_place$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$GT$17h4b40ff3c4d5adce0E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8a8eb599258f7b34E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<(proc_macro2::parse::Cursor,proc_macro2::Ident)>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr76drop_in_place$LT$$LP$proc_macro2..parse..Cursor$C$proc_macro2..Ident$RP$$GT$17h55bf2ead262fc9b8E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_1, i64 16
; call core::ptr::drop_in_place<proc_macro2::Ident>
  call void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Ident$GT$17h13f4f34f41aabf0cE"(ptr align 8 %0)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr76drop_in_place$LT$proc_macro2..rcvec..RcVec$LT$proc_macro2..TokenTree$GT$$GT$17h08d580087c29f985E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::rc::Rc<alloc::vec::Vec<proc_macro2::TokenTree>>>
  call void @"_ZN4core3ptr87drop_in_place$LT$alloc..rc..Rc$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$$GT$17hf3540d805629b083E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr82drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$proc_macro2..TokenTree$GT$$GT$17hfb430d6bf79a58d1E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfc495b657b66aa09E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::rcvec::RcVecBuilder<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr83drop_in_place$LT$proc_macro2..rcvec..RcVecBuilder$LT$proc_macro2..TokenTree$GT$$GT$17hd557b2739f90b988E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17h110007b9863c5fe0E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr84drop_in_place$LT$proc_macro2..rcvec..RcVecIntoIter$LT$proc_macro2..TokenTree$GT$$GT$17ha4650a712ed3a52bE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr82drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$proc_macro2..TokenTree$GT$$GT$17hfb430d6bf79a58d1E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::rc::Rc<alloc::vec::Vec<proc_macro2::TokenTree>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr87drop_in_place$LT$alloc..rc..Rc$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$$GT$17hf3540d805629b083E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::rc::Rc<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..rc..Rc$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h41174feae40984f0E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::TokenStream>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$GT$17hbed412bb2c2b3e14E"(ptr align 4 %_1) unnamed_addr #1 {
start:
  %0 = load i32, ptr %_1, align 4
  %1 = icmp eq i32 %0, 0
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
  call void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h0ba97c6acee7cb21E"(ptr align 4 %_1)
  br label %bb1
}

; core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
; Function Attrs: inlinehint nounwind nonlazybind uwtable
define internal void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17h8dd7c7c5843aae0eE"(ptr %ptr) unnamed_addr #3 {
start:
  %_4 = ptrtoint ptr %ptr to i64
  %0 = icmp eq i64 %_4, 0
  br i1 %0, label %bb1, label %bb2

bb1:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfb4a192166a1619dE(ptr align 1 @alloc_20b3d155afd5c58c42e598b7e6d186ef, i64 93) #27
  unreachable

bb2:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::rc::RcBox<alloc::vec::Vec<proc_macro2::TokenTree>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr90drop_in_place$LT$alloc..rc..RcBox$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$$GT$17hb672f69c94fcf1ebE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_1, i64 16
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17h110007b9863c5fe0E"(ptr align 8 %0)
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17hd7d75b0cb2d5fee9E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_6.0 = load ptr, ptr %_1, align 8
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %_6.1 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_6.1, i64 0
  %3 = load ptr, ptr %2, align 8, !invariant.load !3
  %4 = icmp ne ptr %3, null
  br i1 %4, label %is_not_null, label %bb3

is_not_null:                                      ; preds = %start
  invoke void %3(ptr align 1 %_6.0)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %is_not_null, %start
; call <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1e05ff940898b300E"(ptr align 8 %_1)
  ret void

bb4:                                              ; preds = %cleanup
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1e05ff940898b300E"(ptr align 8 %_1) #25
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %is_not_null
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb4

terminate:                                        ; preds = %bb4
  %9 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; preds = %bb4
  %12 = load ptr, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16
}

; core::ptr::drop_in_place<(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr95drop_in_place$LT$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$GT$17h3ef45e39eb45e706E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_1, i64 8
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStreamBuilder>
  call void @"_ZN4core3ptr62drop_in_place$LT$proc_macro2..fallback..TokenStreamBuilder$GT$17hc947a9bf142072dcE"(ptr align 8 %0)
  ret void
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h6cbd0d643e4b3110E"(ptr %self, ptr %origin) unnamed_addr #0 {
start:
  %0 = alloca [8 x i8], align 8
  br label %bb3

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = ptrtoint ptr %self to i64
  %2 = ptrtoint ptr %origin to i64
  %3 = sub nuw i64 %1, %2
  %4 = udiv exact i64 %3, 32
  store i64 %4, ptr %0, align 8
  %_0 = load i64, ptr %0, align 8
  ret i64 %_0

bb6:                                              ; No predecessors!
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdc606204151d5569E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_cedbb71194daee93c1287f403fa88727) #24
  unreachable
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h7441ad264012b8a8E"(ptr %self, ptr %origin) unnamed_addr #0 {
start:
  %0 = alloca [8 x i8], align 8
  br label %bb3

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = ptrtoint ptr %self to i64
  %2 = ptrtoint ptr %origin to i64
  %3 = sub nuw i64 %1, %2
  %4 = udiv exact i64 %3, 20
  store i64 %4, ptr %0, align 8
  %_0 = load i64, ptr %0, align 8
  ret i64 %_0

bb6:                                              ; No predecessors!
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdc606204151d5569E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_cedbb71194daee93c1287f403fa88727) #24
  unreachable
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %self, ptr %origin) unnamed_addr #0 {
start:
  %0 = alloca [8 x i8], align 8
  br label %bb3

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = ptrtoint ptr %self to i64
  %2 = ptrtoint ptr %origin to i64
  %3 = sub nuw i64 %1, %2
  %4 = udiv exact i64 %3, 1
  store i64 %4, ptr %0, align 8
  %_0 = load i64, ptr %0, align 8
  ret i64 %_0

bb6:                                              ; No predecessors!
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdc606204151d5569E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_cedbb71194daee93c1287f403fa88727) #24
  unreachable
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hff0ae4bb7b0f94e3E"(ptr %self, ptr %origin) unnamed_addr #0 {
start:
  %0 = alloca [8 x i8], align 8
  br label %bb3

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = ptrtoint ptr %self to i64
  %2 = ptrtoint ptr %origin to i64
  %3 = sub nuw i64 %1, %2
  %4 = udiv exact i64 %3, 20
  store i64 %4, ptr %0, align 8
  %_0 = load i64, ptr %0, align 8
  ret i64 %_0

bb6:                                              ; No predecessors!
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdc606204151d5569E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_cedbb71194daee93c1287f403fa88727) #24
  unreachable
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3str11validations15next_code_point17h198a1085531c01a8E(ptr align 8 %bytes) unnamed_addr #0 {
start:
  %self3 = alloca [8 x i8], align 8
  %self2 = alloca [8 x i8], align 8
  %ch = alloca [4 x i8], align 4
  %self1 = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %0 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha76358487c324f0eE"(ptr align 8 %bytes)
  store ptr %0, ptr %self, align 8
  %1 = load ptr, ptr %self, align 8
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_27 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_27, 0
  br i1 %4, label %bb13, label %bb14

bb13:                                             ; preds = %start
  %5 = load i32, ptr @2, align 4
  %6 = load i32, ptr getelementptr inbounds (i8, ptr @2, i64 4), align 4
  store i32 %5, ptr %_0, align 4
  %7 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %6, ptr %7, align 4
  br label %bb12

bb14:                                             ; preds = %start
  %v = load ptr, ptr %self, align 8
  store ptr %v, ptr %_3, align 8
  %val = load ptr, ptr %_3, align 8
  %x = load i8, ptr %val, align 1
  %_6 = icmp ult i8 %x, -128
  br i1 %_6, label %bb3, label %bb4

bb12:                                             ; preds = %bb3, %bb11, %bb13
  %8 = load i32, ptr %_0, align 4
  %9 = getelementptr inbounds i8, ptr %_0, i64 4
  %10 = load i32, ptr %9, align 4
  %11 = insertvalue { i32, i32 } poison, i32 %8, 0
  %12 = insertvalue { i32, i32 } %11, i32 %10, 1
  ret { i32, i32 } %12

bb4:                                              ; preds = %bb14
  %_29 = and i8 %x, 31
  %init = zext i8 %_29 to i32
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %13 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha76358487c324f0eE"(ptr align 8 %bytes)
  store ptr %13, ptr %self1, align 8
  %14 = load ptr, ptr %self1, align 8
  %15 = ptrtoint ptr %14 to i64
  %16 = icmp eq i64 %15, 0
  %_30 = select i1 %16, i64 0, i64 1
  %17 = icmp eq i64 %_30, 0
  br i1 %17, label %bb15, label %bb16

bb3:                                              ; preds = %bb14
  %_7 = zext i8 %x to i32
  %18 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_7, ptr %18, align 4
  store i32 1, ptr %_0, align 4
  br label %bb12

bb15:                                             ; preds = %bb4
; call core::hint::unreachable_unchecked::precondition_check
  call void @_ZN4core4hint21unreachable_unchecked18precondition_check17h7ac5a7755e93f72eE() #23
  br label %bb2

bb16:                                             ; preds = %bb4
  %val4 = load ptr, ptr %self1, align 8
  %y = load i8, ptr %val4, align 1
  %_33 = shl i32 %init, 6
  %_35 = and i8 %y, 63
  %ch5 = zext i8 %_35 to i32
  %19 = or i32 %_33, %ch5
  store i32 %19, ptr %ch, align 4
  %_13 = icmp uge i8 %x, -32
  br i1 %_13, label %bb6, label %bb11

bb2:                                              ; preds = %bb19, %bb17, %bb15
  unreachable

bb11:                                             ; preds = %bb10, %bb16
  %_26 = load i32, ptr %ch, align 4
  %20 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_26, ptr %20, align 4
  store i32 1, ptr %_0, align 4
  br label %bb12

bb6:                                              ; preds = %bb16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %21 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha76358487c324f0eE"(ptr align 8 %bytes)
  store ptr %21, ptr %self2, align 8
  %22 = load ptr, ptr %self2, align 8
  %23 = ptrtoint ptr %22 to i64
  %24 = icmp eq i64 %23, 0
  %_36 = select i1 %24, i64 0, i64 1
  %25 = icmp eq i64 %_36, 0
  br i1 %25, label %bb17, label %bb18

bb17:                                             ; preds = %bb6
; call core::hint::unreachable_unchecked::precondition_check
  call void @_ZN4core4hint21unreachable_unchecked18precondition_check17h7ac5a7755e93f72eE() #23
  br label %bb2

bb18:                                             ; preds = %bb6
  %val6 = load ptr, ptr %self2, align 8
  %z = load i8, ptr %val6, align 1
  %_39 = shl i32 %ch5, 6
  %_41 = and i8 %z, 63
  %_40 = zext i8 %_41 to i32
  %y_z = or i32 %_39, %_40
  %_18 = shl i32 %init, 12
  %26 = or i32 %_18, %y_z
  store i32 %26, ptr %ch, align 4
  %_19 = icmp uge i8 %x, -16
  br i1 %_19, label %bb8, label %bb10

bb10:                                             ; preds = %bb20, %bb18
  br label %bb11

bb8:                                              ; preds = %bb18
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %27 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha76358487c324f0eE"(ptr align 8 %bytes)
  store ptr %27, ptr %self3, align 8
  %28 = load ptr, ptr %self3, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = icmp eq i64 %29, 0
  %_42 = select i1 %30, i64 0, i64 1
  %31 = icmp eq i64 %_42, 0
  br i1 %31, label %bb19, label %bb20

bb19:                                             ; preds = %bb8
; call core::hint::unreachable_unchecked::precondition_check
  call void @_ZN4core4hint21unreachable_unchecked18precondition_check17h7ac5a7755e93f72eE() #23
  br label %bb2

bb20:                                             ; preds = %bb8
  %val7 = load ptr, ptr %self3, align 8
  %w = load i8, ptr %val7, align 1
  %_24 = and i32 %init, 7
  %_23 = shl i32 %_24, 18
  %_45 = shl i32 %y_z, 6
  %_47 = and i8 %w, 63
  %_46 = zext i8 %_47 to i32
  %_25 = or i32 %_45, %_46
  %32 = or i32 %_23, %_25
  store i32 %32, ptr %ch, align 4
  br label %bb10
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h0f1093bad03826c1E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call <F as core::str::pattern::Pattern>::is_prefix_of
  %_0 = call zeroext i1 @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h1b23068e08a0f4a9E"(ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h33855fa118a0389aE"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %pat.0, i64 %pat.1) unnamed_addr #1 {
start:
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %_0 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hcd7c0c452dd18550E"(ptr align 1 %pat.0, i64 %pat.1, ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h663c5e50794458edE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call <F as core::str::pattern::Pattern>::is_prefix_of
  %_0 = call zeroext i1 @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h7d92889405bf7c17E"(ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hf8dc8d170394ab8dE"(ptr align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #1 {
start:
; call <char as core::str::pattern::Pattern>::is_prefix_of
  %_0 = call zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h74c684e1f2d4a6eaE"(i32 %pat, ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; core::str::<impl str>::char_indices
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h5373d93c13cf4f97E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_9 = getelementptr inbounds i8, ptr %self.0, i64 %self.1
  %0 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 0, ptr %0, align 8
  store ptr %self.0, ptr %_0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_9, ptr %1, align 8
  ret void
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h213c77745b6a4bb9E"(ptr align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
  %_3 = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %0 = icmp eq i64 %index, 0
  br i1 %0, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb7

bb2:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %1 = call align 1 ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h26c289e2423d5f4eE"(i64 %index, ptr align 1 %self.0, i64 %self.1)
  store ptr %1, ptr %_3, align 8
  %2 = load ptr, ptr %_3, align 8
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_5 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_5, 0
  br i1 %5, label %bb5, label %bb4

bb7:                                              ; preds = %bb6, %bb1
  %6 = load i8, ptr %_0, align 1
  %7 = trunc i8 %6 to i1
  ret i1 %7

bb5:                                              ; preds = %bb2
  %8 = icmp eq i64 %index, %self.1
  %9 = zext i1 %8 to i8
  store i8 %9, ptr %_0, align 1
  br label %bb6

bb4:                                              ; preds = %bb2
  %_8 = load ptr, ptr %_3, align 8
  %b = load i8, ptr %_8, align 1
  %10 = icmp sge i8 %b, -64
  %11 = zext i1 %10 to i8
  store i8 %11, ptr %_0, align 1
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  br label %bb7

bb3:                                              ; No predecessors!
  unreachable
}

; core::str::<impl str>::split_at_checked
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$16split_at_checked17h470eaae4d676e2f5E"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 {
start:
  %i1 = alloca [8 x i8], align 8
  %i = alloca [8 x i8], align 8
  %slice = alloca [16 x i8], align 8
  %_20 = alloca [16 x i8], align 8
  %_18 = alloca [16 x i8], align 8
  %self = alloca [8 x i8], align 8
  %data = alloca [8 x i8], align 8
  %_15 = alloca [16 x i8], align 8
  %new_len = alloca [8 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %_7 = alloca [8 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_4 = alloca [32 x i8], align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h213c77745b6a4bb9E"(ptr align 1 %self.0, i64 %self.1, i64 %mid)
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %start
  br label %bb7

bb4:                                              ; preds = %bb10, %bb3
  ret void

bb7:                                              ; preds = %bb2
  store i64 %mid, ptr %new_len, align 8
  store ptr %self.0, ptr %self, align 8
  %0 = load ptr, ptr %self, align 8
  store ptr %0, ptr %data, align 8
  %1 = load ptr, ptr %data, align 8
  %2 = load i64, ptr %new_len, align 8
  store ptr %1, ptr %_15, align 8
  %3 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load ptr, ptr %_15, align 8
  %5 = getelementptr inbounds i8, ptr %_15, i64 8
  %6 = load i64, ptr %5, align 8
  store ptr %4, ptr %_8, align 8
  %7 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %6, ptr %7, align 8
  %8 = load ptr, ptr %_8, align 8
  %9 = getelementptr inbounds i8, ptr %_8, i64 8
  %10 = load i64, ptr %9, align 8
  store ptr %8, ptr %_5, align 8
  %11 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %10, ptr %11, align 8
  store ptr %self.0, ptr %_18, align 8
  %12 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %self.1, ptr %12, align 8
  %13 = load ptr, ptr %_18, align 8
  %14 = getelementptr inbounds i8, ptr %_18, i64 8
  %15 = load i64, ptr %14, align 8
  store i64 %15, ptr %_7, align 8
  store i64 %mid, ptr %i, align 8
  %16 = load i64, ptr %_7, align 8
  store i64 %16, ptr %i1, align 8
  store ptr %self.0, ptr %_20, align 8
  %17 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 %self.1, ptr %17, align 8
  %18 = load ptr, ptr %_20, align 8
  %19 = getelementptr inbounds i8, ptr %_20, i64 8
  %20 = load i64, ptr %19, align 8
  store ptr %18, ptr %slice, align 8
  %21 = getelementptr inbounds i8, ptr %slice, i64 8
  store i64 %20, ptr %21, align 8
  br label %bb10

bb10:                                             ; preds = %bb8, %bb7
  %22 = load i64, ptr %_7, align 8
  %new_len2 = sub nuw i64 %22, %mid
  %self3 = load ptr, ptr %_20, align 8
  %23 = getelementptr inbounds i8, ptr %_20, i64 8
  %24 = load i64, ptr %23, align 8
  %data4 = getelementptr inbounds i8, ptr %self3, i64 %mid
  %25 = load ptr, ptr %_5, align 8
  %26 = getelementptr inbounds i8, ptr %_5, i64 8
  %27 = load i64, ptr %26, align 8
  store ptr %25, ptr %_4, align 8
  %28 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %27, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %_4, i64 16
  store ptr %data4, ptr %29, align 8
  %30 = getelementptr inbounds i8, ptr %29, i64 8
  store i64 %new_len2, ptr %30, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 32, i1 false)
  br label %bb4

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable

bb8:                                              ; No predecessors!
  %31 = load ptr, ptr %slice, align 8
  %32 = getelementptr inbounds i8, ptr %slice, i64 8
  %_23 = load i64, ptr %32, align 8
  %33 = load i64, ptr %_7, align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked::precondition_check
  call void @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked18precondition_check17h9c0792de23aa5142E"(i64 %mid, i64 %33, i64 %_23) #23
  br label %bb10
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  ret i64 %self.1
}

; core::str::<impl str>::find
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17h06ff591bf7136cc7E"(ptr align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_5 = alloca [48 x i8], align 8
  %self = alloca [24 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call <char as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h955858081be0acfdE"(ptr sret([48 x i8]) align 8 %_5, i32 %pat, ptr align 1 %self.0, i64 %self.1)
; invoke <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  invoke void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h6fef58955358fcbbE"(ptr sret([24 x i8]) align 8 %self, ptr align 8 %_5)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %1 = load ptr, ptr %0, align 8
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load i32, ptr %2, align 8
  %4 = insertvalue { ptr, i32 } poison, ptr %1, 0
  %5 = insertvalue { ptr, i32 } %4, i32 %3, 1
  resume { ptr, i32 } %5

cleanup:                                          ; preds = %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb2:                                              ; preds = %start
  %_6 = load i64, ptr %self, align 8
  %10 = icmp eq i64 %_6, 0
  br i1 %10, label %bb8, label %bb9

bb8:                                              ; preds = %bb2
  %11 = load i64, ptr @0, align 8
  %12 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %11, ptr %_0, align 8
  %13 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %12, ptr %13, align 8
  br label %bb6

bb9:                                              ; preds = %bb2
  %14 = getelementptr inbounds i8, ptr %self, i64 8
  %x = load i64, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %self, i64 8
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  %x1 = load i64, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %x, ptr %17, align 8
  store i64 1, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb9, %bb8
  %18 = load i64, ptr %_0, align 8
  %19 = getelementptr inbounds i8, ptr %_0, i64 8
  %20 = load i64, ptr %19, align 8
  %21 = insertvalue { i64, i64 } poison, i64 %18, 0
  %22 = insertvalue { i64, i64 } %21, i64 %20, 1
  ret { i64, i64 } %22

bb7:                                              ; No predecessors!
  unreachable
}

; core::str::<impl str>::bytes
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h29092a163d71c0caE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_9 = getelementptr inbounds i8, ptr %self.0, i64 %self.1
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %_9, 1
  ret { ptr, ptr } %1
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h47bd3aaa82775925E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_8 = getelementptr inbounds i8, ptr %self.0, i64 %self.1
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %_8, 1
  ret { ptr, ptr } %1
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h4f67217496e96200E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <proc_macro::TokenStream as core::str::traits::FromStr>::from_str
  %0 = call { i32, i32 } @"_ZN70_$LT$proc_macro..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h5c6a3cd3e98bdf7cE"(ptr align 1 %self.0, i64 %self.1)
  %_0.0 = extractvalue { i32, i32 } %0, 0
  %_0.1 = extractvalue { i32, i32 } %0, 1
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1
  ret { i32, i32 } %2
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hc1998dc0ca28c7fcE"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <proc_macro2::imp::TokenStream as core::str::traits::FromStr>::from_str
  call void @"_ZN76_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h990f01192e5bff30E"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1)
  ret void
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hd221010cef59d8f2E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <proc_macro2::imp::Literal as core::str::traits::FromStr>::from_str
  call void @"_ZN72_$LT$proc_macro2..imp..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hcba01aed1f4ad8fcE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1)
  ret void
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define ptr @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hd2d3103995bcf3aeE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <proc_macro2::fallback::TokenStream as core::str::traits::FromStr>::from_str
  %_0 = call ptr @"_ZN81_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hf484e5f91c83f533E"(ptr align 1 %self.0, i64 %self.1)
  ret ptr %_0
}

; core::str::<impl str>::contains
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h2bbbe8fdf831cb02E"(ptr align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #0 {
start:
; call <char as core::str::pattern::Pattern>::is_contained_in
  %_0 = call zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17h9520a2c4c2d49963E"(i32 %pat, ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha8cf31eb77c19853E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_0 = icmp eq i64 %self.1, 0
  ret i1 %_0
}

; core::str::<impl str>::split_at
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$8split_at17h767ecf8aec9e77d3E"(ptr sret([32 x i8]) align 8 %pair, ptr align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 {
start:
  %_3 = alloca [32 x i8], align 8
; call core::str::<impl str>::split_at_checked
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$16split_at_checked17h470eaae4d676e2f5E"(ptr sret([32 x i8]) align 8 %_3, ptr align 1 %self.0, i64 %self.1, i64 %mid)
  %0 = load ptr, ptr %_3, align 8
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 0
  br i1 %3, label %bb4, label %bb3

bb4:                                              ; preds = %start
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h7213e65c8ef344e8E(ptr align 1 %self.0, i64 %self.1, i64 0, i64 %mid, ptr align 8 @alloc_90d339349fb90c34ee429f9a17b2b451) #24
  unreachable

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %pair, ptr align 8 %_3, i64 32, i1 false)
  ret void

bb2:                                              ; No predecessors!
  unreachable
}

; core::str::iter::Chars::as_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @_ZN4core3str4iter5Chars6as_str17h2cc07eda4faa3691E(ptr align 8 %self) unnamed_addr #0 {
start:
  %len.i = alloca [8 x i8], align 8
  %self1.i = load ptr, ptr %self, align 8
  %self2.i = getelementptr inbounds i8, ptr %self, i64 8
  %end.i = load ptr, ptr %self2.i, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %0 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %end.i, ptr %self1.i)
  store i64 %0, ptr %len.i, align 8
  %_18.1.i = load i64, ptr %len.i, align 8
  %1 = insertvalue { ptr, i64 } poison, ptr %self1.i, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_18.1.i, 1
  %v.0 = extractvalue { ptr, i64 } %2, 0
  %v.1 = extractvalue { ptr, i64 } %2, 1
  %3 = insertvalue { ptr, i64 } poison, ptr %v.0, 0
  %4 = insertvalue { ptr, i64 } %3, i64 %v.1, 1
  ret { ptr, i64 } %4
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked::precondition_check
; Function Attrs: inlinehint nounwind nonlazybind uwtable
define internal void @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked18precondition_check17h9c0792de23aa5142E"(i64 %start1, i64 %end, i64 %len) unnamed_addr #3 {
start:
  %_4 = icmp uge i64 %end, %start1
  br i1 %_4, label %bb1, label %bb3

bb3:                                              ; preds = %bb1, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfb4a192166a1619dE(ptr align 1 @alloc_e6db3cfc6902fb736f1ea6506b7198e8, i64 102) #27
  unreachable

bb1:                                              ; preds = %start
  %_5 = icmp ule i64 %end, %len
  br i1 %_5, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  ret void
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17h54b4c443d64d6f2dE"(i64 %self.0, i64 %self.1, ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_0 = alloca [16 x i8], align 8
  %_3 = icmp ule i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb6

bb6:                                              ; preds = %bb3, %bb1, %start
  %0 = load ptr, ptr @0, align 8
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb7

bb1:                                              ; preds = %start
; call core::str::<impl str>::is_char_boundary
  %_6 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h213c77745b6a4bb9E"(ptr align 1 %slice.0, i64 %slice.1, i64 %self.0)
  br i1 %_6, label %bb3, label %bb6

bb3:                                              ; preds = %bb1
; call core::str::<impl str>::is_char_boundary
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h213c77745b6a4bb9E"(ptr align 1 %slice.0, i64 %slice.1, i64 %self.1)
  br i1 %_7, label %bb5, label %bb6

bb5:                                              ; preds = %bb3
  br label %bb10

bb7:                                              ; preds = %bb10, %bb6
  %3 = load ptr, ptr %_0, align 8
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  %5 = load i64, ptr %4, align 8
  %6 = insertvalue { ptr, i64 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1
  ret { ptr, i64 } %7

bb10:                                             ; preds = %bb5
  %new_len = sub nuw i64 %self.1, %self.0
  %data = getelementptr inbounds i8, ptr %slice.0, i64 %self.0
  store ptr %data, ptr %_0, align 8
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %new_len, ptr %8, align 8
  br label %bb7

bb8:                                              ; No predecessors!
  unreachable

bb9:                                              ; No predecessors!
  unreachable
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h0de7169debe7b5bbE"(i64 %self.0, i64 %self.1, ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 {
start:
  %_5 = alloca [16 x i8], align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
  %1 = call { ptr, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17h54b4c443d64d6f2dE"(i64 %self.0, i64 %self.1, ptr align 1 %slice.0, i64 %slice.1)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %_5, align 8
  %4 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %_5, align 8
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_6 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_6, 0
  br i1 %8, label %bb3, label %bb4

bb3:                                              ; preds = %start
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h7213e65c8ef344e8E(ptr align 1 %slice.0, i64 %slice.1, i64 %self.0, i64 %self.1, ptr align 8 %0) #24
  unreachable

bb4:                                              ; preds = %start
  %s.0 = load ptr, ptr %_5, align 8
  %9 = getelementptr inbounds i8, ptr %_5, i64 8
  %s.1 = load i64, ptr %9, align 8
  %10 = insertvalue { ptr, i64 } poison, ptr %s.0, 0
  %11 = insertvalue { ptr, i64 } %10, i64 %s.1, 1
  ret { ptr, i64 } %11

bb2:                                              ; No predecessors!
  unreachable
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$3get17h2eafad71340ec1d3E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_0 = alloca [16 x i8], align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h213c77745b6a4bb9E"(ptr align 1 %slice.0, i64 %slice.1, i64 %self)
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %start
  %0 = load ptr, ptr @0, align 8
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb4

bb2:                                              ; preds = %start
  br label %bb7

bb4:                                              ; preds = %bb7, %bb3
  %3 = load ptr, ptr %_0, align 8
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  %5 = load i64, ptr %4, align 8
  %6 = insertvalue { ptr, i64 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1
  ret { ptr, i64 } %7

bb7:                                              ; preds = %bb2
  store ptr %slice.0, ptr %_0, align 8
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %self, ptr %8, align 8
  br label %bb4

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index17h524490e0b922b627E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 {
start:
  %_4 = alloca [16 x i8], align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get
  %1 = call { ptr, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$3get17h2eafad71340ec1d3E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %_4, align 8
  %4 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %_4, align 8
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_5, 0
  br i1 %8, label %bb3, label %bb4

bb3:                                              ; preds = %start
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h7213e65c8ef344e8E(ptr align 1 %slice.0, i64 %slice.1, i64 0, i64 %self, ptr align 8 %0) #24
  unreachable

bb4:                                              ; preds = %start
  %s.0 = load ptr, ptr %_4, align 8
  %9 = getelementptr inbounds i8, ptr %_4, i64 8
  %s.1 = load i64, ptr %9, align 8
  %10 = insertvalue { ptr, i64 } poison, ptr %s.0, 0
  %11 = insertvalue { ptr, i64 } %10, i64 %s.1, 1
  ret { ptr, i64 } %11

bb2:                                              ; No predecessors!
  unreachable
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h4988ca18d308d125E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_0 = alloca [16 x i8], align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h213c77745b6a4bb9E"(ptr align 1 %slice.0, i64 %slice.1, i64 %self)
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %start
  %0 = load ptr, ptr @0, align 8
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb4

bb2:                                              ; preds = %start
  br label %bb7

bb4:                                              ; preds = %bb7, %bb3
  %3 = load ptr, ptr %_0, align 8
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  %5 = load i64, ptr %4, align 8
  %6 = insertvalue { ptr, i64 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1
  ret { ptr, i64 } %7

bb7:                                              ; preds = %bb2
  %new_len = sub nuw i64 %slice.1, %self
  %data = getelementptr inbounds i8, ptr %slice.0, i64 %self
  store ptr %data, ptr %_0, align 8
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %new_len, ptr %8, align 8
  br label %bb4

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17hadbd0124669421b1E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 {
start:
  %_5 = alloca [16 x i8], align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %1 = call { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h4988ca18d308d125E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %_5, align 8
  %4 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %_5, align 8
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_6 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_6, 0
  br i1 %8, label %bb3, label %bb4

bb3:                                              ; preds = %start
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h7213e65c8ef344e8E(ptr align 1 %slice.0, i64 %slice.1, i64 %self, i64 %slice.1, ptr align 8 %0) #24
  unreachable

bb4:                                              ; preds = %start
  %s.0 = load ptr, ptr %_5, align 8
  %9 = getelementptr inbounds i8, ptr %_5, i64 8
  %s.1 = load i64, ptr %9, align 8
  %10 = insertvalue { ptr, i64 } poison, ptr %s.0, 0
  %11 = insertvalue { ptr, i64 } %10, i64 %s.1, 1
  ret { ptr, i64 } %11

bb2:                                              ; No predecessors!
  unreachable
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %other = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %self.1, ptr %0, align 8
  store ptr %other.0, ptr %other, align 8
  %1 = getelementptr inbounds i8, ptr %other, i64 8
  store i64 %other.1, ptr %1, align 8
  %2 = load ptr, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i64, ptr %3, align 8
  %5 = load ptr, ptr %other, align 8
  %6 = getelementptr inbounds i8, ptr %other, i64 8
  %7 = load i64, ptr %6, align 8
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %_0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h21bdc8f6df394f4dE"(ptr align 1 %2, i64 %4, ptr align 1 %5, i64 %7)
  ret i1 %_0
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h197e8d84eedb0ca8E"(ptr align 1 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index
  %1 = call { ptr, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index17h524490e0b922b627E"(i64 %index, ptr align 1 %self.0, i64 %self.1, ptr align 8 %0)
  %_0.0 = extractvalue { ptr, i64 } %1, 0
  %_0.1 = extractvalue { ptr, i64 } %1, 1
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1
  ret { ptr, i64 } %3
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h6a51beaaf4f29efaE"(ptr align 1 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %1 = call { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17hadbd0124669421b1E"(i64 %index, ptr align 1 %self.0, i64 %self.1, ptr align 8 %0)
  %_0.0 = extractvalue { ptr, i64 } %1, 0
  %_0.1 = extractvalue { ptr, i64 } %1, 1
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1
  ret { ptr, i64 } %3
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hd9425dcc3a2cc23cE"(ptr align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
  %1 = call { ptr, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h0de7169debe7b5bbE"(i64 %index.0, i64 %index.1, ptr align 1 %self.0, i64 %self.1, ptr align 8 %0)
  %_0.0 = extractvalue { ptr, i64 } %1, 0
  %_0.1 = extractvalue { ptr, i64 } %1, 1
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1
  ret { ptr, i64 } %3
}

; core::str::pattern::simd_contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3str7pattern13simd_contains17h308e6c7f42915001E(ptr align 1 %needle.0, i64 %needle.1, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %0 = alloca [1 x i8], align 1
  %1 = alloca [1 x i8], align 1
  %2 = alloca [8 x i8], align 8
  %array6 = alloca [1 x i8], align 1
  %array5 = alloca [1 x i8], align 1
  %array4 = alloca [1 x i8], align 1
  %array = alloca [1 x i8], align 1
  %_103 = alloca [1 x i8], align 1
  %self3 = alloca [8 x i8], align 8
  %_94 = alloca [24 x i8], align 8
  %self = alloca [16 x i8], align 8
  %_90 = alloca [16 x i8], align 8
  %_80 = alloca [16 x i8], align 8
  %_64 = alloca [16 x i8], align 8
  %_57 = alloca [16 x i8], align 8
  %iter2 = alloca [16 x i8], align 8
  %_46 = alloca [16 x i8], align 8
  %iter = alloca [16 x i8], align 8
  %masks = alloca [8 x i8], align 2
  %result = alloca [1 x i8], align 1
  %i = alloca [8 x i8], align 8
  %test_chunk = alloca [40 x i8], align 8
  %check_mask = alloca [32 x i8], align 8
  %second_probe = alloca [16 x i8], align 16
  %first_probe1 = alloca [16 x i8], align 16
  %_23 = alloca [24 x i8], align 8
  %predicate = alloca [24 x i8], align 8
  %_13 = alloca [16 x i8], align 8
  %_11 = alloca [16 x i8], align 8
  %second_probe_offset = alloca [8 x i8], align 8
  %first_probe = alloca [1 x i8], align 1
  %needle = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %needle.0, ptr %needle, align 8
  %3 = getelementptr inbounds i8, ptr %needle, i64 8
  store i64 %needle.1, ptr %3, align 8
  %4 = load ptr, ptr %needle, align 8
  %5 = getelementptr inbounds i8, ptr %needle, i64 8
  %self7 = load i64, ptr %5, align 8
  %_7 = icmp ult i64 0, %self7
  br i1 %_7, label %bb1, label %panic

bb1:                                              ; preds = %start
  %6 = load ptr, ptr %needle, align 8
  %7 = getelementptr inbounds i8, ptr %needle, i64 8
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds [0 x i8], ptr %6, i64 0, i64 0
  %10 = load i8, ptr %9, align 1
  store i8 %10, ptr %first_probe, align 1
  %last_byte_offset = sub i64 %self7, 1
  %11 = icmp eq i64 %self7, 2
  br i1 %11, label %bb2, label %bb3

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 0, i64 %self7, ptr align 8 @alloc_0453b75c606d890f49eaeb1e871fc4a0) #24
  unreachable

bb2:                                              ; preds = %bb1
  store i64 1, ptr %second_probe_offset, align 8
  br label %bb6

bb3:                                              ; preds = %bb1
  %12 = call i64 @llvm.usub.sat.i64(i64 %self7, i64 4)
  store i64 %12, ptr %2, align 8
  %_14 = load i64, ptr %2, align 8
  store i64 %_14, ptr %_13, align 8
  %13 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %self7, ptr %13, align 8
  %14 = load ptr, ptr %needle, align 8
  %15 = getelementptr inbounds i8, ptr %needle, i64 8
  %16 = load i64, ptr %15, align 8
  store ptr %14, ptr %predicate, align 8
  %17 = getelementptr inbounds i8, ptr %predicate, i64 8
  store i64 %16, ptr %17, align 8
  %18 = getelementptr inbounds i8, ptr %predicate, i64 16
  store ptr %first_probe, ptr %18, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_94, ptr align 8 %predicate, i64 24, i1 false)
; call core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
  %19 = call { i64, i64 } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17hc79dfe3c89c92dcfE(ptr align 8 %_13, ptr align 8 %_94)
  %20 = extractvalue { i64, i64 } %19, 0
  %21 = extractvalue { i64, i64 } %19, 1
  store i64 %20, ptr %self, align 8
  %22 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %21, ptr %22, align 8
  %_95 = load i64, ptr %self, align 8
  %23 = icmp eq i64 %_95, 0
  br i1 %23, label %bb42, label %bb41

bb6:                                              ; preds = %bb4, %bb2
  %_20 = add i64 16, %last_byte_offset
  %_18 = icmp ult i64 %haystack.1, %_20
  br i1 %_18, label %bb7, label %bb8

bb42:                                             ; preds = %bb3
  %24 = load i64, ptr @0, align 8
  %25 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %24, ptr %_11, align 8
  %26 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %25, ptr %26, align 8
  br label %bb43

bb41:                                             ; preds = %bb3
  %27 = getelementptr inbounds i8, ptr %self, i64 8
  %x = load i64, ptr %27, align 8
  %28 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %x, ptr %28, align 8
  store i64 1, ptr %_11, align 8
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42
  %_17 = load i64, ptr %_11, align 8
  %29 = icmp eq i64 %_17, 1
  br i1 %29, label %bb4, label %bb5

bb4:                                              ; preds = %bb43
  %30 = getelementptr inbounds i8, ptr %_11, i64 8
  %second_probe_offset8 = load i64, ptr %30, align 8
  store i64 %second_probe_offset8, ptr %second_probe_offset, align 8
  br label %bb6

bb5:                                              ; preds = %bb43
  store i8 2, ptr %_0, align 1
  br label %bb37

bb8:                                              ; preds = %bb6
  %31 = load i8, ptr %first_probe, align 1
  %32 = getelementptr inbounds [1 x i8], ptr %array, i64 0, i64 0
  store i8 %31, ptr %32, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %array4, ptr align 1 %array, i64 1, i1 false)
; call core::core_simd::vector::Simd<T,_>::load
  call void @"_ZN4core9core_simd6vector17Simd$LT$T$C$_$GT$4load17h3a0dbb29f1bedad3E"(ptr sret([1 x i8]) align 1 %1, ptr %array4)
  %vector = load <1 x i8>, ptr %1, align 1
  %33 = shufflevector <1 x i8> %vector, <1 x i8> %vector, <16 x i32> zeroinitializer
  store <16 x i8> %33, ptr %first_probe1, align 16
  %_29 = load i64, ptr %second_probe_offset, align 8
  %_30 = icmp ult i64 %_29, %self7
  br i1 %_30, label %bb9, label %panic9

bb7:                                              ; preds = %bb6
  store i64 %self7, ptr %self3, align 8
  %34 = load i64, ptr %self3, align 8
  %35 = icmp eq i64 %34, 0
  %_100 = select i1 %35, i64 0, i64 1
  %36 = icmp eq i64 %_100, 0
  br i1 %36, label %bb44, label %bb45

bb9:                                              ; preds = %bb8
  %37 = load ptr, ptr %needle, align 8
  %38 = getelementptr inbounds i8, ptr %needle, i64 8
  %39 = load i64, ptr %38, align 8
  %40 = getelementptr inbounds [0 x i8], ptr %37, i64 0, i64 %_29
  %value = load i8, ptr %40, align 1
  %41 = getelementptr inbounds [1 x i8], ptr %array5, i64 0, i64 0
  store i8 %value, ptr %41, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %array6, ptr align 1 %array5, i64 1, i1 false)
; call core::core_simd::vector::Simd<T,_>::load
  call void @"_ZN4core9core_simd6vector17Simd$LT$T$C$_$GT$4load17h3a0dbb29f1bedad3E"(ptr sret([1 x i8]) align 1 %0, ptr %array6)
  %vector10 = load <1 x i8>, ptr %0, align 1
  %42 = shufflevector <1 x i8> %vector10, <1 x i8> %vector10, <16 x i32> zeroinitializer
  store <16 x i8> %42, ptr %second_probe, align 16
  %_113 = icmp ugt i64 1, %self7
  br i1 %_113, label %bb52, label %bb53

panic9:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_29, i64 %self7, ptr align 8 @alloc_6bfc19cc357790f8d752bfe72883159b) #24
  unreachable

bb53:                                             ; preds = %bb9
  %_116.0 = load ptr, ptr %needle, align 8
  %43 = getelementptr inbounds i8, ptr %needle, i64 8
  %_116.1 = load i64, ptr %43, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %44 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8a45788462871a0E"(i64 1, i64 %_116.1, ptr %_116.0, i64 %_116.1)
  %trimmed_needle.0 = extractvalue { ptr, i64 } %44, 0
  %trimmed_needle.1 = extractvalue { ptr, i64 } %44, 1
  store ptr %haystack.0, ptr %check_mask, align 8
  %45 = getelementptr inbounds i8, ptr %check_mask, i64 8
  store i64 %haystack.1, ptr %45, align 8
  %46 = getelementptr inbounds i8, ptr %check_mask, i64 16
  store ptr %trimmed_needle.0, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store i64 %trimmed_needle.1, ptr %47, align 8
  store ptr %haystack.0, ptr %test_chunk, align 8
  %48 = getelementptr inbounds i8, ptr %test_chunk, i64 8
  store i64 %haystack.1, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %test_chunk, i64 16
  store ptr %second_probe_offset, ptr %49, align 8
  %50 = getelementptr inbounds i8, ptr %test_chunk, i64 24
  store ptr %first_probe1, ptr %50, align 8
  %51 = getelementptr inbounds i8, ptr %test_chunk, i64 32
  store ptr %second_probe, ptr %51, align 8
  store i64 0, ptr %i, align 8
  store i8 0, ptr %result, align 1
  br label %bb10

bb52:                                             ; preds = %bb9
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17hb1af95f5e8ac2a4fE(i64 1, i64 %self7, ptr align 8 @alloc_6581e7233c441557faa14a09e84c8b0e) #24
  unreachable

bb10:                                             ; preds = %bb60, %bb53
  %_42 = load i64, ptr %i, align 8
  %_41 = add i64 %_42, %last_byte_offset
  %_40 = add i64 %_41, 64
  %_39 = icmp ult i64 %_40, %haystack.1
  br i1 %_39, label %bb11, label %bb22

bb22:                                             ; preds = %bb10
  br label %bb23

bb11:                                             ; preds = %bb10
  %52 = load i8, ptr %result, align 1
  %_43 = trunc i8 %52 to i1
  br i1 %_43, label %bb23, label %bb12

bb23:                                             ; preds = %bb11, %bb22
  br label %bb24

bb12:                                             ; preds = %bb11
  call void @llvm.memset.p0.i64(ptr align 2 %masks, i8 0, i64 8, i1 false)
  store i64 0, ptr %iter, align 8
  %53 = getelementptr inbounds i8, ptr %iter, i64 8
  store i64 4, ptr %53, align 8
  br label %bb13

bb13:                                             ; preds = %bb16, %bb12
  %other = getelementptr inbounds i8, ptr %iter, i64 8
  %_124 = load i64, ptr %iter, align 8
  %54 = getelementptr inbounds i8, ptr %iter, i64 8
  %_125 = load i64, ptr %54, align 8
  %_119 = icmp ult i64 %_124, %_125
  br i1 %_119, label %bb55, label %bb57

bb57:                                             ; preds = %bb13
  store i64 0, ptr %iter2, align 8
  %55 = getelementptr inbounds i8, ptr %iter2, i64 8
  store i64 4, ptr %55, align 8
  br label %bb17

bb55:                                             ; preds = %bb13
  %old13 = load i64, ptr %iter, align 8
; call <usize as core::iter::range::Step>::forward_unchecked
  %_123 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h90ab81a631f3c349E"(i64 %old13, i64 1)
  store i64 %_123, ptr %iter, align 8
  %56 = getelementptr inbounds i8, ptr %_46, i64 8
  store i64 %old13, ptr %56, align 8
  store i64 1, ptr %_46, align 8
  %57 = getelementptr inbounds i8, ptr %_46, i64 8
  %j14 = load i64, ptr %57, align 8
  %_53 = load i64, ptr %i, align 8
  %_54 = mul i64 %j14, 16
  %_52 = add i64 %_53, %_54
; call core::str::pattern::simd_contains::{{closure}}
  %_49 = call i16 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hd77d86778f6aa341E"(ptr align 8 %test_chunk, i64 %_52)
  %_55 = icmp ult i64 %j14, 4
  br i1 %_55, label %bb16, label %panic15

bb17:                                             ; preds = %bb21, %bb57
  %other11 = getelementptr inbounds i8, ptr %iter2, i64 8
  %_131 = load i64, ptr %iter2, align 8
  %58 = getelementptr inbounds i8, ptr %iter2, i64 8
  %_132 = load i64, ptr %58, align 8
  %_126 = icmp ult i64 %_131, %_132
  br i1 %_126, label %bb58, label %bb60

bb60:                                             ; preds = %bb17
  %59 = load i64, ptr %i, align 8
  %60 = add i64 %59, 64
  store i64 %60, ptr %i, align 8
  br label %bb10

bb58:                                             ; preds = %bb17
  %old = load i64, ptr %iter2, align 8
; call <usize as core::iter::range::Step>::forward_unchecked
  %_130 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h90ab81a631f3c349E"(i64 %old, i64 1)
  store i64 %_130, ptr %iter2, align 8
  %61 = getelementptr inbounds i8, ptr %_57, i64 8
  store i64 %old, ptr %61, align 8
  store i64 1, ptr %_57, align 8
  %62 = getelementptr inbounds i8, ptr %_57, i64 8
  %j = load i64, ptr %62, align 8
  %_61 = icmp ult i64 %j, 4
  br i1 %_61, label %bb18, label %panic12

bb18:                                             ; preds = %bb58
  %63 = getelementptr inbounds [4 x i16], ptr %masks, i64 0, i64 %j
  %mask = load i16, ptr %63, align 2
  %64 = icmp eq i16 %mask, 0
  br i1 %64, label %bb21, label %bb19

panic12:                                          ; preds = %bb58
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %j, i64 4, ptr align 8 @alloc_b909a04b5e0d31af8ff45541f6106dff) #24
  unreachable

bb21:                                             ; preds = %bb19, %bb18
  br label %bb17

bb19:                                             ; preds = %bb18
  %_66 = load i64, ptr %i, align 8
  %_67 = mul i64 %j, 16
  %_65 = add i64 %_66, %_67
  %65 = load i8, ptr %result, align 1
  %_68 = trunc i8 %65 to i1
  store i64 %_65, ptr %_64, align 8
  %66 = getelementptr inbounds i8, ptr %_64, i64 8
  store i16 %mask, ptr %66, align 8
  %67 = getelementptr inbounds i8, ptr %_64, i64 10
  %68 = zext i1 %_68 to i8
  store i8 %68, ptr %67, align 2
  %69 = load i64, ptr %_64, align 8
  %70 = getelementptr inbounds i8, ptr %_64, i64 8
  %71 = load i16, ptr %70, align 8
  %72 = getelementptr inbounds i8, ptr %_64, i64 10
  %73 = load i8, ptr %72, align 2
  %74 = trunc i8 %73 to i1
; call core::str::pattern::simd_contains::{{closure}}
  %_62 = call zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hcb18cc7aa3876fdaE"(ptr align 8 %check_mask, i64 %69, i16 %71, i1 zeroext %74)
  %75 = load i8, ptr %result, align 1
  %76 = trunc i8 %75 to i1
  %77 = or i1 %76, %_62
  %78 = zext i1 %77 to i8
  store i8 %78, ptr %result, align 1
  br label %bb21

bb16:                                             ; preds = %bb55
  %79 = getelementptr inbounds [4 x i16], ptr %masks, i64 0, i64 %j14
  store i16 %_49, ptr %79, align 2
  br label %bb13

panic15:                                          ; preds = %bb55
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %j14, i64 4, ptr align 8 @alloc_9a698867b0bf7c385ee30a72e4035d4d) #24
  unreachable

bb24:                                             ; preds = %bb30, %bb23
  %_72 = load i64, ptr %i, align 8
  %_71 = add i64 %_72, %last_byte_offset
  %_70 = add i64 %_71, 16
  %_69 = icmp ult i64 %_70, %haystack.1
  br i1 %_69, label %bb25, label %bb31

bb31:                                             ; preds = %bb24
  br label %bb32

bb25:                                             ; preds = %bb24
  %80 = load i8, ptr %result, align 1
  %_73 = trunc i8 %80 to i1
  br i1 %_73, label %bb32, label %bb26

bb32:                                             ; preds = %bb25, %bb31
  %_84 = sub i64 %haystack.1, %last_byte_offset
  %i17 = sub i64 %_84, 16
; call core::str::pattern::simd_contains::{{closure}}
  %mask18 = call i16 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hd77d86778f6aa341E"(ptr align 8 %test_chunk, i64 %i17)
  %81 = icmp eq i16 %mask18, 0
  br i1 %81, label %bb36, label %bb34

bb26:                                             ; preds = %bb25
  %_77 = load i64, ptr %i, align 8
; call core::str::pattern::simd_contains::{{closure}}
  %mask16 = call i16 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hd77d86778f6aa341E"(ptr align 8 %test_chunk, i64 %_77)
  %82 = icmp eq i16 %mask16, 0
  br i1 %82, label %bb30, label %bb28

bb30:                                             ; preds = %bb28, %bb26
  %83 = load i64, ptr %i, align 8
  %84 = add i64 %83, 16
  store i64 %84, ptr %i, align 8
  br label %bb24

bb28:                                             ; preds = %bb26
  %_81 = load i64, ptr %i, align 8
  %85 = load i8, ptr %result, align 1
  %_82 = trunc i8 %85 to i1
  store i64 %_81, ptr %_80, align 8
  %86 = getelementptr inbounds i8, ptr %_80, i64 8
  store i16 %mask16, ptr %86, align 8
  %87 = getelementptr inbounds i8, ptr %_80, i64 10
  %88 = zext i1 %_82 to i8
  store i8 %88, ptr %87, align 2
  %89 = load i64, ptr %_80, align 8
  %90 = getelementptr inbounds i8, ptr %_80, i64 8
  %91 = load i16, ptr %90, align 8
  %92 = getelementptr inbounds i8, ptr %_80, i64 10
  %93 = load i8, ptr %92, align 2
  %94 = trunc i8 %93 to i1
; call core::str::pattern::simd_contains::{{closure}}
  %_78 = call zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hcb18cc7aa3876fdaE"(ptr align 8 %check_mask, i64 %89, i16 %91, i1 zeroext %94)
  %95 = load i8, ptr %result, align 1
  %96 = trunc i8 %95 to i1
  %97 = or i1 %96, %_78
  %98 = zext i1 %97 to i8
  store i8 %98, ptr %result, align 1
  br label %bb30

bb36:                                             ; preds = %bb34, %bb32
  %99 = load i8, ptr %result, align 1
  %_92 = trunc i8 %99 to i1
  %100 = zext i1 %_92 to i8
  store i8 %100, ptr %_0, align 1
  br label %bb38

bb34:                                             ; preds = %bb32
  %101 = load i8, ptr %result, align 1
  %_91 = trunc i8 %101 to i1
  store i64 %i17, ptr %_90, align 8
  %102 = getelementptr inbounds i8, ptr %_90, i64 8
  store i16 %mask18, ptr %102, align 8
  %103 = getelementptr inbounds i8, ptr %_90, i64 10
  %104 = zext i1 %_91 to i8
  store i8 %104, ptr %103, align 2
  %105 = load i64, ptr %_90, align 8
  %106 = getelementptr inbounds i8, ptr %_90, i64 8
  %107 = load i16, ptr %106, align 8
  %108 = getelementptr inbounds i8, ptr %_90, i64 10
  %109 = load i8, ptr %108, align 2
  %110 = trunc i8 %109 to i1
; call core::str::pattern::simd_contains::{{closure}}
  %_88 = call zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hcb18cc7aa3876fdaE"(ptr align 8 %check_mask, i64 %105, i16 %107, i1 zeroext %110)
  %111 = load i8, ptr %result, align 1
  %112 = trunc i8 %111 to i1
  %113 = or i1 %112, %_88
  %114 = zext i1 %113 to i8
  store i8 %114, ptr %result, align 1
  br label %bb36

bb38:                                             ; preds = %bb37, %bb36
  %115 = load i8, ptr %_0, align 1
  ret i8 %115

bb44:                                             ; preds = %bb7
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17h28cbd671da1a9710E(ptr align 1 @alloc_d0b5540d38aa67683bd942cb6db4a43b, i64 28, ptr align 8 @alloc_6cf54154542de7742fe5e8314c4406a8) #24
  unreachable

bb45:                                             ; preds = %bb7
  %size = load i64, ptr %self3, align 8
  store ptr %haystack.0, ptr %_23, align 8
  %116 = getelementptr inbounds i8, ptr %_23, i64 8
  store i64 %haystack.1, ptr %116, align 8
  %117 = getelementptr inbounds i8, ptr %_23, i64 16
  store i64 %size, ptr %117, align 8
; call core::iter::traits::iterator::Iterator::try_fold
  %118 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h76ff4b623d9d14dfE(ptr align 8 %_23, ptr align 8 %needle)
  %119 = zext i1 %118 to i8
  store i8 %119, ptr %_103, align 1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %_21 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9845fa6704d4410dE"(ptr align 1 %_103, ptr align 1 @alloc_8821998f047ca62cad40e6bc4e4d87c4)
  %120 = zext i1 %_21 to i8
  store i8 %120, ptr %_0, align 1
  br label %bb37

bb37:                                             ; preds = %bb5, %bb45
  br label %bb38

bb14:                                             ; No predecessors!
  unreachable
}

; core::str::pattern::simd_contains::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h020499926cfa9a18E"(ptr align 8 %_1, ptr align 8 %_2) unnamed_addr #0 {
start:
  %idx = load i64, ptr %_2, align 8
  %_8.0 = load ptr, ptr %_1, align 8
  %0 = getelementptr inbounds i8, ptr %_1, i64 8
  %_8.1 = load i64, ptr %0, align 8
  %_6 = icmp ult i64 %idx, %_8.1
  br i1 %_6, label %bb1, label %panic

bb1:                                              ; preds = %start
  %_9.0 = load ptr, ptr %_1, align 8
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %_9.1 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds [0 x i8], ptr %_9.0, i64 0, i64 %idx
  %_4 = load i8, ptr %2, align 1
  %3 = getelementptr inbounds i8, ptr %_1, i64 16
  %_10 = load ptr, ptr %3, align 8
  %_7 = load i8, ptr %_10, align 1
  %_0 = icmp ne i8 %_4, %_7
  ret i1 %_0

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %idx, i64 %_8.1, ptr align 8 @alloc_8cc17694d981e8ffc4bb82cceee5e7d7) #24
  unreachable
}

; core::str::pattern::simd_contains::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h99aea8dd5ea36e44E"(ptr align 8 %_1, ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %c = alloca [16 x i8], align 8
  store ptr %0, ptr %c, align 8
  %2 = getelementptr inbounds i8, ptr %c, i64 8
  store i64 %1, ptr %2, align 8
  %other = load ptr, ptr %_1, align 8
  %other.0 = load ptr, ptr %other, align 8
  %3 = getelementptr inbounds i8, ptr %other, i64 8
  %other.1 = load i64, ptr %3, align 8
  %4 = load ptr, ptr %c, align 8
  %5 = getelementptr inbounds i8, ptr %c, i64 8
  %6 = load i64, ptr %5, align 8
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %_0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h21bdc8f6df394f4dE"(ptr align 1 %4, i64 %6, ptr align 1 %other.0, i64 %other.1)
  ret i1 %_0
}

; core::str::pattern::simd_contains::{{closure}}
; Function Attrs: cold inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hcb18cc7aa3876fdaE"(ptr align 8 %_1, i64 %idx, i16 %mask, i1 zeroext %skip) unnamed_addr #5 {
start:
  %0 = alloca [4 x i8], align 4
  %mask1 = alloca [2 x i8], align 2
  %_0 = alloca [1 x i8], align 1
  br i1 %skip, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i16 %mask, ptr %mask1, align 2
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb10

bb3:                                              ; preds = %bb7, %bb2
  %_6 = load i16, ptr %mask1, align 2
  %1 = icmp eq i16 %_6, 0
  br i1 %1, label %bb8, label %bb4

bb8:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1
  br label %bb9

bb4:                                              ; preds = %bb3
  %self = load i16, ptr %mask1, align 2
  %2 = call i16 @llvm.cttz.i16(i16 %self, i1 false)
  %3 = zext i16 %2 to i32
  store i32 %3, ptr %0, align 4
  %trailing = load i32, ptr %0, align 4
  %_11 = zext i32 %trailing to i64
  %_10 = add i64 %idx, %_11
  %offset = add i64 %_10, 1
  %self.0 = load ptr, ptr %_1, align 8
  %4 = getelementptr inbounds i8, ptr %_1, i64 8
  %self.1 = load i64, ptr %4, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8a45788462871a0E"(i64 %offset, i64 %self.1, ptr %self.0, i64 %self.1)
  %self.02 = extractvalue { ptr, i64 } %5, 0
  %self.13 = extractvalue { ptr, i64 } %5, 1
  %6 = getelementptr inbounds i8, ptr %_1, i64 16
  %_18.0 = load ptr, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %_18.1 = load i64, ptr %7, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8a45788462871a0E"(i64 0, i64 %_18.1, ptr %self.02, i64 %self.13)
  %sub.0 = extractvalue { ptr, i64 } %8, 0
  %sub.1 = extractvalue { ptr, i64 } %8, 1
; call core::str::pattern::small_slice_eq
  %_13 = call zeroext i1 @_ZN4core3str7pattern14small_slice_eq17h55eb046a09857c17E(ptr align 1 %sub.0, i64 %sub.1, ptr align 1 %_18.0, i64 %_18.1)
  br i1 %_13, label %bb6, label %bb7

bb9:                                              ; preds = %bb6, %bb8
  br label %bb10

bb7:                                              ; preds = %bb4
  %9 = and i32 %trailing, 15
  %10 = trunc i32 %9 to i16
  %_16 = shl i16 1, %10
  %_15 = xor i16 %_16, -1
  %11 = load i16, ptr %mask1, align 2
  %12 = and i16 %11, %_15
  store i16 %12, ptr %mask1, align 2
  br label %bb3

bb6:                                              ; preds = %bb4
  store i8 1, ptr %_0, align 1
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9
  %13 = load i8, ptr %_0, align 1
  %14 = trunc i8 %13 to i1
  ret i1 %14
}

; core::str::pattern::simd_contains::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i16 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hd77d86778f6aa341E"(ptr align 8 %_1, i64 %idx) unnamed_addr #0 {
start:
  %0 = alloca [16 x i8], align 16
  %1 = alloca [16 x i8], align 16
  %2 = alloca [16 x i8], align 16
  %3 = alloca [16 x i8], align 16
  %4 = alloca [16 x i8], align 16
  %5 = alloca [16 x i8], align 16
  %6 = alloca [16 x i8], align 16
  %7 = alloca [16 x i8], align 16
  %self.0 = load ptr, ptr %_1, align 8
  %8 = getelementptr inbounds i8, ptr %_1, i64 8
  %self.1 = load i64, ptr %8, align 8
  %self = getelementptr inbounds i8, ptr %self.0, i64 %idx
; call core::ptr::read_unaligned
  call void @_ZN4core3ptr14read_unaligned17h0fd1a5bebf7557b6E(ptr sret([16 x i8]) align 16 %7, ptr %self)
  %a = load <16 x i8>, ptr %7, align 16
  %self1 = getelementptr inbounds i8, ptr %self.0, i64 %idx
  %9 = getelementptr inbounds i8, ptr %_1, i64 16
  %_17 = load ptr, ptr %9, align 8
  %count = load i64, ptr %_17, align 8
  %self2 = getelementptr inbounds i8, ptr %self1, i64 %count
; call core::ptr::read_unaligned
  call void @_ZN4core3ptr14read_unaligned17h0fd1a5bebf7557b6E(ptr sret([16 x i8]) align 16 %6, ptr %self2)
  %b = load <16 x i8>, ptr %6, align 16
  %10 = getelementptr inbounds i8, ptr %_1, i64 24
  %_18 = load ptr, ptr %10, align 8
  %other = load <16 x i8>, ptr %_18, align 16
  %11 = icmp eq <16 x i8> %a, %other
  %12 = sext <16 x i1> %11 to <16 x i8>
  store <16 x i8> %12, ptr %5, align 16
  %eq_first = load <16 x i8>, ptr %5, align 16
  store <16 x i8> %eq_first, ptr %4, align 16
; call core::core_simd::masks::<impl core::core_simd::masks::sealed::Sealed for i8>::valid
  %_23 = call zeroext i1 @"_ZN4core9core_simd5masks71_$LT$impl$u20$core..core_simd..masks..sealed..Sealed$u20$for$u20$i8$GT$5valid17h3e99a41ac809b249E"(ptr align 16 %4)
  %13 = getelementptr inbounds i8, ptr %_1, i64 32
  %_19 = load ptr, ptr %13, align 8
  %other3 = load <16 x i8>, ptr %_19, align 16
  %14 = icmp eq <16 x i8> %b, %other3
  %15 = sext <16 x i1> %14 to <16 x i8>
  store <16 x i8> %15, ptr %3, align 16
  %eq_last = load <16 x i8>, ptr %3, align 16
  store <16 x i8> %eq_last, ptr %2, align 16
; call core::core_simd::masks::<impl core::core_simd::masks::sealed::Sealed for i8>::valid
  %_25 = call zeroext i1 @"_ZN4core9core_simd5masks71_$LT$impl$u20$core..core_simd..masks..sealed..Sealed$u20$for$u20$i8$GT$5valid17h3e99a41ac809b249E"(ptr align 16 %2)
  %16 = and <16 x i8> %eq_first, %eq_last
  store <16 x i8> %16, ptr %1, align 16
  %_27 = load <16 x i8>, ptr %1, align 16
  store <16 x i8> %_27, ptr %0, align 16
; call core::core_simd::masks::mask_impl::Mask<T,_>::to_bitmask_integer
  %_15 = call i64 @"_ZN4core9core_simd5masks9mask_impl17Mask$LT$T$C$_$GT$18to_bitmask_integer17h79bbf7cb4f173dfdE"(ptr align 16 %0)
  %mask = trunc i64 %_15 to i16
  ret i16 %mask
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17h10fe1895c4771606E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self, ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 {
start:
  %_45 = alloca [16 x i8], align 8
  %iter3 = alloca [16 x i8], align 8
  %start2 = alloca [8 x i8], align 8
  %_25 = alloca [16 x i8], align 8
  %iter = alloca [16 x i8], align 8
  %start1 = alloca [8 x i8], align 8
  %_8 = alloca [8 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 32
  %old_pos = load i64, ptr %0, align 8
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb42, %start
  %1 = getelementptr inbounds i8, ptr %self, i64 32
  %_10 = load i64, ptr %1, align 8
  %index = add i64 %_10, %needle_last
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %2 = call align 1 ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h26c289e2423d5f4eE"(i64 %index, ptr align 1 %haystack.0, i64 %haystack.1)
  store ptr %2, ptr %_8, align 8
  %3 = load ptr, ptr %_8, align 8
  %4 = ptrtoint ptr %3 to i64
  %5 = icmp eq i64 %4, 0
  %_11 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_11, 0
  br i1 %6, label %bb3, label %bb4

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds i8, ptr %self, i64 32
  store i64 %haystack.1, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %self, i64 32
  %_14 = load i64, ptr %8, align 8
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h272e14c96eaab67aE"(ptr sret([24 x i8]) align 8 %_0, i64 %old_pos, i64 %_14)
  br label %bb43

bb4:                                              ; preds = %bb1
  %_61 = load ptr, ptr %_8, align 8
  %tail_byte = load i8, ptr %_61, align 1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_15 = call zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h06fe4151f1dcea5eE"()
  br i1 %_15, label %bb7, label %bb11

bb43:                                             ; preds = %bb8, %bb39, %bb3
  ret void

bb11:                                             ; preds = %bb10, %bb4
  %9 = getelementptr inbounds i8, ptr %self, i64 24
  %_64 = load i64, ptr %9, align 8
  %_66 = and i8 %tail_byte, 63
  %_65 = zext i8 %_66 to i64
  %10 = and i64 %_65, 63
  %_63 = lshr i64 %_64, %10
  %_62 = and i64 %_63, 1
  %11 = icmp eq i64 %_62, 0
  br i1 %11, label %bb13, label %bb12

bb7:                                              ; preds = %bb4
  %12 = getelementptr inbounds i8, ptr %self, i64 32
  %_17 = load i64, ptr %12, align 8
  %_16 = icmp ne i64 %old_pos, %_17
  br i1 %_16, label %bb8, label %bb10

bb10:                                             ; preds = %bb7
  br label %bb11

bb8:                                              ; preds = %bb7
  %13 = getelementptr inbounds i8, ptr %self, i64 32
  %_18 = load i64, ptr %13, align 8
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h272e14c96eaab67aE"(ptr sret([24 x i8]) align 8 %_0, i64 %old_pos, i64 %_18)
  br label %bb43

bb13:                                             ; preds = %bb11
  %14 = getelementptr inbounds i8, ptr %self, i64 32
  %15 = getelementptr inbounds i8, ptr %self, i64 32
  %16 = load i64, ptr %15, align 8
  %17 = add i64 %16, %needle.1
  store i64 %17, ptr %14, align 8
  br i1 %long_period, label %bb15, label %bb14

bb12:                                             ; preds = %bb11
  br i1 %long_period, label %bb16, label %bb17

bb14:                                             ; preds = %bb13
  %18 = getelementptr inbounds i8, ptr %self, i64 48
  store i64 0, ptr %18, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  br label %bb42

bb42:                                             ; preds = %bb41, %bb15
  br label %bb1

bb17:                                             ; preds = %bb12
  %v1 = load i64, ptr %self, align 8
  %19 = getelementptr inbounds i8, ptr %self, i64 48
  %v2 = load i64, ptr %19, align 8
; call core::cmp::max_by
  %20 = call i64 @_ZN4core3cmp6max_by17h68594a3dd1a7ccabE(i64 %v1, i64 %v2)
  store i64 %20, ptr %start1, align 8
  br label %bb18

bb16:                                             ; preds = %bb12
  %21 = load i64, ptr %self, align 8
  store i64 %21, ptr %start1, align 8
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %_23 = load i64, ptr %start1, align 8
  store i64 %_23, ptr %iter, align 8
  %22 = getelementptr inbounds i8, ptr %iter, i64 8
  store i64 %needle.1, ptr %22, align 8
  br label %bb19

bb19:                                             ; preds = %bb25, %bb18
  %other = getelementptr inbounds i8, ptr %iter, i64 8
  %_72 = load i64, ptr %iter, align 8
  %23 = getelementptr inbounds i8, ptr %iter, i64 8
  %_73 = load i64, ptr %23, align 8
  %_67 = icmp ult i64 %_72, %_73
  br i1 %_67, label %bb46, label %bb48

bb48:                                             ; preds = %bb19
  br i1 %long_period, label %bb26, label %bb27

bb46:                                             ; preds = %bb19
  %old = load i64, ptr %iter, align 8
; call <usize as core::iter::range::Step>::forward_unchecked
  %_71 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h90ab81a631f3c349E"(i64 %old, i64 1)
  store i64 %_71, ptr %iter, align 8
  %24 = getelementptr inbounds i8, ptr %_25, i64 8
  store i64 %old, ptr %24, align 8
  store i64 1, ptr %_25, align 8
  %25 = getelementptr inbounds i8, ptr %_25, i64 8
  %i5 = load i64, ptr %25, align 8
  %_30 = icmp ult i64 %i5, %needle.1
  br i1 %_30, label %bb20, label %panic6

bb27:                                             ; preds = %bb48
  %26 = getelementptr inbounds i8, ptr %self, i64 48
  %27 = load i64, ptr %26, align 8
  store i64 %27, ptr %start2, align 8
  br label %bb28

bb26:                                             ; preds = %bb48
  store i64 0, ptr %start2, align 8
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %_42 = load i64, ptr %start2, align 8
  %_43 = load i64, ptr %self, align 8
  store i64 %_42, ptr %iter3, align 8
  %28 = getelementptr inbounds i8, ptr %iter3, i64 8
  store i64 %_43, ptr %28, align 8
  br label %bb29

bb29:                                             ; preds = %bb37, %bb28
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %29 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h676d50916aa403cbE"(ptr align 8 %iter3)
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  store i64 %30, ptr %_45, align 8
  %32 = getelementptr inbounds i8, ptr %_45, i64 8
  store i64 %31, ptr %32, align 8
  %_47 = load i64, ptr %_45, align 8
  %33 = icmp eq i64 %_47, 0
  br i1 %33, label %bb31, label %bb30

bb31:                                             ; preds = %bb29
  %34 = getelementptr inbounds i8, ptr %self, i64 32
  %match_pos = load i64, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %self, i64 32
  %36 = getelementptr inbounds i8, ptr %self, i64 32
  %37 = load i64, ptr %36, align 8
  %38 = add i64 %37, %needle.1
  store i64 %38, ptr %35, align 8
  br i1 %long_period, label %bb39, label %bb38

bb30:                                             ; preds = %bb29
  %39 = getelementptr inbounds i8, ptr %_45, i64 8
  %i = load i64, ptr %39, align 8
  %_51 = icmp ult i64 %i, %needle.1
  br i1 %_51, label %bb32, label %panic

bb38:                                             ; preds = %bb31
  %40 = getelementptr inbounds i8, ptr %self, i64 48
  store i64 0, ptr %40, align 8
  br label %bb39

bb39:                                             ; preds = %bb38, %bb31
  %_60 = add i64 %match_pos, %needle.1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17haa3234222c2b51ebE"(ptr sret([24 x i8]) align 8 %_0, i64 %match_pos, i64 %_60)
  br label %bb43

bb32:                                             ; preds = %bb30
  %41 = getelementptr inbounds [0 x i8], ptr %needle.0, i64 0, i64 %i
  %_50 = load i8, ptr %41, align 1
  %42 = getelementptr inbounds i8, ptr %self, i64 32
  %_54 = load i64, ptr %42, align 8
  %_53 = add i64 %_54, %i
  %_56 = icmp ult i64 %_53, %haystack.1
  br i1 %_56, label %bb33, label %panic4

panic:                                            ; preds = %bb30
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %i, i64 %needle.1, ptr align 8 @alloc_ff3d81b5c02c61ff6765870bae09bd90) #24
  unreachable

bb33:                                             ; preds = %bb32
  %43 = getelementptr inbounds [0 x i8], ptr %haystack.0, i64 0, i64 %_53
  %_52 = load i8, ptr %43, align 1
  %_49 = icmp ne i8 %_50, %_52
  br i1 %_49, label %bb34, label %bb37

panic4:                                           ; preds = %bb32
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_53, i64 %haystack.1, ptr align 8 @alloc_a1f18b7736b2d62dfea50214c99bc585) #24
  unreachable

bb37:                                             ; preds = %bb33
  br label %bb29

bb34:                                             ; preds = %bb33
  %44 = getelementptr inbounds i8, ptr %self, i64 16
  %_57 = load i64, ptr %44, align 8
  %45 = getelementptr inbounds i8, ptr %self, i64 32
  %46 = getelementptr inbounds i8, ptr %self, i64 32
  %47 = load i64, ptr %46, align 8
  %48 = add i64 %47, %_57
  store i64 %48, ptr %45, align 8
  br i1 %long_period, label %bb36, label %bb35

bb35:                                             ; preds = %bb34
  %49 = getelementptr inbounds i8, ptr %self, i64 16
  %_58 = load i64, ptr %49, align 8
  %50 = getelementptr inbounds i8, ptr %self, i64 48
  %51 = sub i64 %needle.1, %_58
  store i64 %51, ptr %50, align 8
  br label %bb36

bb36:                                             ; preds = %bb35, %bb34
  br label %bb41

bb41:                                             ; preds = %bb24, %bb36
  br label %bb42

bb20:                                             ; preds = %bb46
  %52 = getelementptr inbounds [0 x i8], ptr %needle.0, i64 0, i64 %i5
  %_29 = load i8, ptr %52, align 1
  %53 = getelementptr inbounds i8, ptr %self, i64 32
  %_33 = load i64, ptr %53, align 8
  %_32 = add i64 %_33, %i5
  %_35 = icmp ult i64 %_32, %haystack.1
  br i1 %_35, label %bb21, label %panic7

panic6:                                           ; preds = %bb46
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %i5, i64 %needle.1, ptr align 8 @alloc_70e067e9caceffb0495a1ba70e5bde5b) #24
  unreachable

bb21:                                             ; preds = %bb20
  %54 = getelementptr inbounds [0 x i8], ptr %haystack.0, i64 0, i64 %_32
  %_31 = load i8, ptr %54, align 1
  %_28 = icmp ne i8 %_29, %_31
  br i1 %_28, label %bb22, label %bb25

panic7:                                           ; preds = %bb20
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_32, i64 %haystack.1, ptr align 8 @alloc_1be711072f2b745146df4e520c0dc296) #24
  unreachable

bb25:                                             ; preds = %bb21
  br label %bb19

bb22:                                             ; preds = %bb21
  %_38 = load i64, ptr %self, align 8
  %_37 = sub i64 %i5, %_38
  %_36 = add i64 %_37, 1
  %55 = getelementptr inbounds i8, ptr %self, i64 32
  %56 = getelementptr inbounds i8, ptr %self, i64 32
  %57 = load i64, ptr %56, align 8
  %58 = add i64 %57, %_36
  store i64 %58, ptr %55, align 8
  br i1 %long_period, label %bb24, label %bb23

bb23:                                             ; preds = %bb22
  %59 = getelementptr inbounds i8, ptr %self, i64 48
  store i64 0, ptr %59, align 8
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  br label %bb41

bb2:                                              ; No predecessors!
  unreachable
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17hc7e43cb2739db90dE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self, ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 {
start:
  %_45 = alloca [16 x i8], align 8
  %iter3 = alloca [16 x i8], align 8
  %start2 = alloca [8 x i8], align 8
  %_25 = alloca [16 x i8], align 8
  %iter = alloca [16 x i8], align 8
  %start1 = alloca [8 x i8], align 8
  %_8 = alloca [8 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 32
  %old_pos = load i64, ptr %0, align 8
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb42, %start
  %1 = getelementptr inbounds i8, ptr %self, i64 32
  %_10 = load i64, ptr %1, align 8
  %index = add i64 %_10, %needle_last
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %2 = call align 1 ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h26c289e2423d5f4eE"(i64 %index, ptr align 1 %haystack.0, i64 %haystack.1)
  store ptr %2, ptr %_8, align 8
  %3 = load ptr, ptr %_8, align 8
  %4 = ptrtoint ptr %3 to i64
  %5 = icmp eq i64 %4, 0
  %_11 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_11, 0
  br i1 %6, label %bb3, label %bb4

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds i8, ptr %self, i64 32
  store i64 %haystack.1, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %self, i64 32
  %_14 = load i64, ptr %8, align 8
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h512240583d5d6e51E"(ptr sret([24 x i8]) align 8 %_0, i64 %old_pos, i64 %_14)
  br label %bb43

bb4:                                              ; preds = %bb1
  %_61 = load ptr, ptr %_8, align 8
  %tail_byte = load i8, ptr %_61, align 1
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_15 = call zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hb01ea9a561902202E"()
  br i1 %_15, label %bb7, label %bb11

bb43:                                             ; preds = %bb8, %bb39, %bb3
  ret void

bb11:                                             ; preds = %bb10, %bb4
  %9 = getelementptr inbounds i8, ptr %self, i64 24
  %_64 = load i64, ptr %9, align 8
  %_66 = and i8 %tail_byte, 63
  %_65 = zext i8 %_66 to i64
  %10 = and i64 %_65, 63
  %_63 = lshr i64 %_64, %10
  %_62 = and i64 %_63, 1
  %11 = icmp eq i64 %_62, 0
  br i1 %11, label %bb13, label %bb12

bb7:                                              ; preds = %bb4
  %12 = getelementptr inbounds i8, ptr %self, i64 32
  %_17 = load i64, ptr %12, align 8
  %_16 = icmp ne i64 %old_pos, %_17
  br i1 %_16, label %bb8, label %bb10

bb10:                                             ; preds = %bb7
  br label %bb11

bb8:                                              ; preds = %bb7
  %13 = getelementptr inbounds i8, ptr %self, i64 32
  %_18 = load i64, ptr %13, align 8
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h512240583d5d6e51E"(ptr sret([24 x i8]) align 8 %_0, i64 %old_pos, i64 %_18)
  br label %bb43

bb13:                                             ; preds = %bb11
  %14 = getelementptr inbounds i8, ptr %self, i64 32
  %15 = getelementptr inbounds i8, ptr %self, i64 32
  %16 = load i64, ptr %15, align 8
  %17 = add i64 %16, %needle.1
  store i64 %17, ptr %14, align 8
  br i1 %long_period, label %bb15, label %bb14

bb12:                                             ; preds = %bb11
  br i1 %long_period, label %bb16, label %bb17

bb14:                                             ; preds = %bb13
  %18 = getelementptr inbounds i8, ptr %self, i64 48
  store i64 0, ptr %18, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  br label %bb42

bb42:                                             ; preds = %bb41, %bb15
  br label %bb1

bb17:                                             ; preds = %bb12
  %v1 = load i64, ptr %self, align 8
  %19 = getelementptr inbounds i8, ptr %self, i64 48
  %v2 = load i64, ptr %19, align 8
; call core::cmp::max_by
  %20 = call i64 @_ZN4core3cmp6max_by17h68594a3dd1a7ccabE(i64 %v1, i64 %v2)
  store i64 %20, ptr %start1, align 8
  br label %bb18

bb16:                                             ; preds = %bb12
  %21 = load i64, ptr %self, align 8
  store i64 %21, ptr %start1, align 8
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %_23 = load i64, ptr %start1, align 8
  store i64 %_23, ptr %iter, align 8
  %22 = getelementptr inbounds i8, ptr %iter, i64 8
  store i64 %needle.1, ptr %22, align 8
  br label %bb19

bb19:                                             ; preds = %bb25, %bb18
  %other = getelementptr inbounds i8, ptr %iter, i64 8
  %_72 = load i64, ptr %iter, align 8
  %23 = getelementptr inbounds i8, ptr %iter, i64 8
  %_73 = load i64, ptr %23, align 8
  %_67 = icmp ult i64 %_72, %_73
  br i1 %_67, label %bb46, label %bb48

bb48:                                             ; preds = %bb19
  br i1 %long_period, label %bb26, label %bb27

bb46:                                             ; preds = %bb19
  %old = load i64, ptr %iter, align 8
; call <usize as core::iter::range::Step>::forward_unchecked
  %_71 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h90ab81a631f3c349E"(i64 %old, i64 1)
  store i64 %_71, ptr %iter, align 8
  %24 = getelementptr inbounds i8, ptr %_25, i64 8
  store i64 %old, ptr %24, align 8
  store i64 1, ptr %_25, align 8
  %25 = getelementptr inbounds i8, ptr %_25, i64 8
  %i5 = load i64, ptr %25, align 8
  %_30 = icmp ult i64 %i5, %needle.1
  br i1 %_30, label %bb20, label %panic6

bb27:                                             ; preds = %bb48
  %26 = getelementptr inbounds i8, ptr %self, i64 48
  %27 = load i64, ptr %26, align 8
  store i64 %27, ptr %start2, align 8
  br label %bb28

bb26:                                             ; preds = %bb48
  store i64 0, ptr %start2, align 8
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %_42 = load i64, ptr %start2, align 8
  %_43 = load i64, ptr %self, align 8
  store i64 %_42, ptr %iter3, align 8
  %28 = getelementptr inbounds i8, ptr %iter3, i64 8
  store i64 %_43, ptr %28, align 8
  br label %bb29

bb29:                                             ; preds = %bb37, %bb28
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %29 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h676d50916aa403cbE"(ptr align 8 %iter3)
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  store i64 %30, ptr %_45, align 8
  %32 = getelementptr inbounds i8, ptr %_45, i64 8
  store i64 %31, ptr %32, align 8
  %_47 = load i64, ptr %_45, align 8
  %33 = icmp eq i64 %_47, 0
  br i1 %33, label %bb31, label %bb30

bb31:                                             ; preds = %bb29
  %34 = getelementptr inbounds i8, ptr %self, i64 32
  %match_pos = load i64, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %self, i64 32
  %36 = getelementptr inbounds i8, ptr %self, i64 32
  %37 = load i64, ptr %36, align 8
  %38 = add i64 %37, %needle.1
  store i64 %38, ptr %35, align 8
  br i1 %long_period, label %bb39, label %bb38

bb30:                                             ; preds = %bb29
  %39 = getelementptr inbounds i8, ptr %_45, i64 8
  %i = load i64, ptr %39, align 8
  %_51 = icmp ult i64 %i, %needle.1
  br i1 %_51, label %bb32, label %panic

bb38:                                             ; preds = %bb31
  %40 = getelementptr inbounds i8, ptr %self, i64 48
  store i64 0, ptr %40, align 8
  br label %bb39

bb39:                                             ; preds = %bb38, %bb31
  %_60 = add i64 %match_pos, %needle.1
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h3e180846c835f52cE"(ptr sret([24 x i8]) align 8 %_0, i64 %match_pos, i64 %_60)
  br label %bb43

bb32:                                             ; preds = %bb30
  %41 = getelementptr inbounds [0 x i8], ptr %needle.0, i64 0, i64 %i
  %_50 = load i8, ptr %41, align 1
  %42 = getelementptr inbounds i8, ptr %self, i64 32
  %_54 = load i64, ptr %42, align 8
  %_53 = add i64 %_54, %i
  %_56 = icmp ult i64 %_53, %haystack.1
  br i1 %_56, label %bb33, label %panic4

panic:                                            ; preds = %bb30
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %i, i64 %needle.1, ptr align 8 @alloc_ff3d81b5c02c61ff6765870bae09bd90) #24
  unreachable

bb33:                                             ; preds = %bb32
  %43 = getelementptr inbounds [0 x i8], ptr %haystack.0, i64 0, i64 %_53
  %_52 = load i8, ptr %43, align 1
  %_49 = icmp ne i8 %_50, %_52
  br i1 %_49, label %bb34, label %bb37

panic4:                                           ; preds = %bb32
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_53, i64 %haystack.1, ptr align 8 @alloc_a1f18b7736b2d62dfea50214c99bc585) #24
  unreachable

bb37:                                             ; preds = %bb33
  br label %bb29

bb34:                                             ; preds = %bb33
  %44 = getelementptr inbounds i8, ptr %self, i64 16
  %_57 = load i64, ptr %44, align 8
  %45 = getelementptr inbounds i8, ptr %self, i64 32
  %46 = getelementptr inbounds i8, ptr %self, i64 32
  %47 = load i64, ptr %46, align 8
  %48 = add i64 %47, %_57
  store i64 %48, ptr %45, align 8
  br i1 %long_period, label %bb36, label %bb35

bb35:                                             ; preds = %bb34
  %49 = getelementptr inbounds i8, ptr %self, i64 16
  %_58 = load i64, ptr %49, align 8
  %50 = getelementptr inbounds i8, ptr %self, i64 48
  %51 = sub i64 %needle.1, %_58
  store i64 %51, ptr %50, align 8
  br label %bb36

bb36:                                             ; preds = %bb35, %bb34
  br label %bb41

bb41:                                             ; preds = %bb24, %bb36
  br label %bb42

bb20:                                             ; preds = %bb46
  %52 = getelementptr inbounds [0 x i8], ptr %needle.0, i64 0, i64 %i5
  %_29 = load i8, ptr %52, align 1
  %53 = getelementptr inbounds i8, ptr %self, i64 32
  %_33 = load i64, ptr %53, align 8
  %_32 = add i64 %_33, %i5
  %_35 = icmp ult i64 %_32, %haystack.1
  br i1 %_35, label %bb21, label %panic7

panic6:                                           ; preds = %bb46
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %i5, i64 %needle.1, ptr align 8 @alloc_70e067e9caceffb0495a1ba70e5bde5b) #24
  unreachable

bb21:                                             ; preds = %bb20
  %54 = getelementptr inbounds [0 x i8], ptr %haystack.0, i64 0, i64 %_32
  %_31 = load i8, ptr %54, align 1
  %_28 = icmp ne i8 %_29, %_31
  br i1 %_28, label %bb22, label %bb25

panic7:                                           ; preds = %bb20
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_32, i64 %haystack.1, ptr align 8 @alloc_1be711072f2b745146df4e520c0dc296) #24
  unreachable

bb25:                                             ; preds = %bb21
  br label %bb19

bb22:                                             ; preds = %bb21
  %_38 = load i64, ptr %self, align 8
  %_37 = sub i64 %i5, %_38
  %_36 = add i64 %_37, 1
  %55 = getelementptr inbounds i8, ptr %self, i64 32
  %56 = getelementptr inbounds i8, ptr %self, i64 32
  %57 = load i64, ptr %56, align 8
  %58 = add i64 %57, %_36
  store i64 %58, ptr %55, align 8
  br i1 %long_period, label %bb24, label %bb23

bb23:                                             ; preds = %bb22
  %59 = getelementptr inbounds i8, ptr %self, i64 48
  store i64 0, ptr %59, align 8
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  br label %bb41

bb2:                                              ; No predecessors!
  unreachable
}

; core::str::pattern::small_slice_eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3str7pattern14small_slice_eq17h55eb046a09857c17E(ptr align 1 %x.0, i64 %x.1, ptr align 1 %y.0, i64 %y.1) unnamed_addr #0 {
start:
  %py = alloca [8 x i8], align 8
  %px = alloca [8 x i8], align 8
  %_10 = alloca [16 x i8], align 8
  %iter = alloca [56 x i8], align 8
  %self = alloca [56 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %_5 = icmp ult i64 %x.1, 4
  br i1 %_5, label %bb1, label %bb9

bb9:                                              ; preds = %start
  store ptr %x.0, ptr %px, align 8
  store ptr %y.0, ptr %py, align 8
  %self1 = load ptr, ptr %px, align 8
  %count = sub i64 %x.1, 4
  %pxend = getelementptr inbounds i8, ptr %self1, i64 %count
  %self2 = load ptr, ptr %py, align 8
  %count3 = sub i64 %y.1, 4
  %pyend = getelementptr inbounds i8, ptr %self2, i64 %count3
  br label %bb10

bb1:                                              ; preds = %start
  %_49 = getelementptr inbounds i8, ptr %x.0, i64 %x.1
; call core::iter::traits::iterator::Iterator::zip
  call void @_ZN4core4iter6traits8iterator8Iterator3zip17hd1dae65df1035c60E(ptr sret([56 x i8]) align 8 %self, ptr %x.0, ptr %_49, ptr align 1 %y.0, i64 %y.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %self, i64 56, i1 false)
  br label %bb3

bb10:                                             ; preds = %bb13, %bb9
  %_28 = load ptr, ptr %px, align 8
  %_27 = icmp ult ptr %_28, %pxend
  br i1 %_27, label %bb11, label %bb14

bb14:                                             ; preds = %bb10
; call core::ptr::read_unaligned
  %vx = call i32 @_ZN4core3ptr14read_unaligned17h00be0e02cbdfa1a2E(ptr %pxend)
; call core::ptr::read_unaligned
  %vy = call i32 @_ZN4core3ptr14read_unaligned17h00be0e02cbdfa1a2E(ptr %pyend)
  %0 = icmp eq i32 %vx, %vy
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %_0, align 1
  br label %bb16

bb11:                                             ; preds = %bb10
  %_31 = load ptr, ptr %px, align 8
; call core::ptr::read_unaligned
  %vx4 = call i32 @_ZN4core3ptr14read_unaligned17h00be0e02cbdfa1a2E(ptr %_31)
  %_34 = load ptr, ptr %py, align 8
; call core::ptr::read_unaligned
  %vy5 = call i32 @_ZN4core3ptr14read_unaligned17h00be0e02cbdfa1a2E(ptr %_34)
  %_35 = icmp ne i32 %vx4, %vy5
  br i1 %_35, label %bb12, label %bb13

bb16:                                             ; preds = %bb15, %bb12, %bb14
  %2 = load i8, ptr %_0, align 1
  %3 = trunc i8 %2 to i1
  ret i1 %3

bb13:                                             ; preds = %bb11
  %self6 = load ptr, ptr %px, align 8
  %_36 = getelementptr inbounds i8, ptr %self6, i64 4
  store ptr %_36, ptr %px, align 8
  %self7 = load ptr, ptr %py, align 8
  %_38 = getelementptr inbounds i8, ptr %self7, i64 4
  store ptr %_38, ptr %py, align 8
  br label %bb10

bb12:                                             ; preds = %bb11
  store i8 0, ptr %_0, align 1
  br label %bb16

bb3:                                              ; preds = %bb8, %bb1
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
  %4 = call { ptr, ptr } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17ha38bc279538fd114E"(ptr align 8 %iter)
  %5 = extractvalue { ptr, ptr } %4, 0
  %6 = extractvalue { ptr, ptr } %4, 1
  store ptr %5, ptr %_10, align 8
  %7 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr %6, ptr %7, align 8
  %8 = load ptr, ptr %_10, align 8
  %9 = ptrtoint ptr %8 to i64
  %10 = icmp eq i64 %9, 0
  %_12 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_12, 0
  br i1 %11, label %bb6, label %bb5

bb6:                                              ; preds = %bb3
  store i8 1, ptr %_0, align 1
  br label %bb15

bb5:                                              ; preds = %bb3
  %_44 = load ptr, ptr %_10, align 8
  %b1 = load i8, ptr %_44, align 1
  %12 = getelementptr inbounds i8, ptr %_10, i64 8
  %_45 = load ptr, ptr %12, align 8
  %b2 = load i8, ptr %_45, align 1
  %_15 = icmp ne i8 %b1, %b2
  br i1 %_15, label %bb7, label %bb8

bb15:                                             ; preds = %bb7, %bb6
  br label %bb16

bb8:                                              ; preds = %bb5
  br label %bb3

bb7:                                              ; preds = %bb5
  store i8 0, ptr %_0, align 1
  br label %bb15

bb4:                                              ; No predecessors!
  unreachable
}

; core::str::pattern::Pattern::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3str7pattern7Pattern12is_prefix_of17h1c8ce13458d80e65E(ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_5 = alloca [40 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  %_0 = alloca [1 x i8], align 1
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hb296ea99339f3085E"(ptr sret([40 x i8]) align 8 %_5, ptr align 1 %haystack.0, i64 %haystack.1)
; invoke <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  invoke void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h7ae911c40d0b8e09E"(ptr sret([24 x i8]) align 8 %_3, ptr align 8 %_5)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %1 = load ptr, ptr %0, align 8
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load i32, ptr %2, align 8
  %4 = insertvalue { ptr, i32 } poison, ptr %1, 0
  %5 = insertvalue { ptr, i32 } %4, i32 %3, 1
  resume { ptr, i32 } %5

cleanup:                                          ; preds = %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb7

bb2:                                              ; preds = %start
  %_6 = load i64, ptr %_3, align 8
  %10 = icmp eq i64 %_6, 0
  br i1 %10, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  %11 = getelementptr inbounds i8, ptr %_3, i64 8
  %_7 = load i64, ptr %11, align 8
  %12 = icmp eq i64 %_7, 0
  %13 = zext i1 %12 to i8
  store i8 %13, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %14 = load i8, ptr %_0, align 1
  %15 = trunc i8 %14 to i1
  ret i1 %15
}

; core::str::pattern::Pattern::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3str7pattern7Pattern12is_prefix_of17h3a9b9c982a6a6b18E(ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_5 = alloca [40 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  %_0 = alloca [1 x i8], align 1
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h4f1bcb253573b6d9E"(ptr sret([40 x i8]) align 8 %_5, ptr align 1 %haystack.0, i64 %haystack.1)
; invoke <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  invoke void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h0ff2cd40df5daff6E"(ptr sret([24 x i8]) align 8 %_3, ptr align 8 %_5)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %1 = load ptr, ptr %0, align 8
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load i32, ptr %2, align 8
  %4 = insertvalue { ptr, i32 } poison, ptr %1, 0
  %5 = insertvalue { ptr, i32 } %4, i32 %3, 1
  resume { ptr, i32 } %5

cleanup:                                          ; preds = %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb7

bb2:                                              ; preds = %start
  %_6 = load i64, ptr %_3, align 8
  %10 = icmp eq i64 %_6, 0
  br i1 %10, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  %11 = getelementptr inbounds i8, ptr %_3, i64 8
  %_7 = load i64, ptr %11, align 8
  %12 = icmp eq i64 %_7, 0
  %13 = zext i1 %12 to i8
  store i8 %13, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %14 = load i8, ptr %_0, align 1
  %15 = trunc i8 %14 to i1
  ret i1 %15
}

; core::char::convert::<impl core::convert::From<u8> for char>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core4char7convert64_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$char$GT$4from17h8c870905c03a7dc5E"(i8 %i) unnamed_addr #0 {
start:
  %_0 = zext i8 %i to i32
  ret i32 %_0
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17he28c9db22ecb6556E(i32 %0, ptr align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %_71 = alloca [16 x i8], align 8
  %_67 = alloca [16 x i8], align 8
  %_63 = alloca [16 x i8], align 8
  %_57 = alloca [8 x i8], align 8
  %_55 = alloca [16 x i8], align 8
  %_53 = alloca [16 x i8], align 8
  %_51 = alloca [16 x i8], align 8
  %_50 = alloca [48 x i8], align 8
  %_48 = alloca [48 x i8], align 8
  %len = alloca [8 x i8], align 8
  %code = alloca [4 x i8], align 4
  store i32 %0, ptr %code, align 4
  %1 = load i32, ptr %code, align 4
  %_59 = icmp ult i32 %1, 128
  br i1 %_59, label %bb11, label %bb12

bb12:                                             ; preds = %start
  %2 = load i32, ptr %code, align 4
  %_60 = icmp ult i32 %2, 2048
  br i1 %_60, label %bb13, label %bb14

bb11:                                             ; preds = %start
  store i64 1, ptr %len, align 8
  br label %bb19

bb14:                                             ; preds = %bb12
  %3 = load i32, ptr %code, align 4
  %_61 = icmp ult i32 %3, 65536
  br i1 %_61, label %bb15, label %bb16

bb13:                                             ; preds = %bb12
  store i64 2, ptr %len, align 8
  br label %bb18

bb16:                                             ; preds = %bb14
  store i64 4, ptr %len, align 8
  br label %bb17

bb15:                                             ; preds = %bb14
  store i64 3, ptr %len, align 8
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  br label %bb18

bb18:                                             ; preds = %bb13, %bb17
  br label %bb19

bb19:                                             ; preds = %bb11, %bb18
  %_4 = load i64, ptr %len, align 8
  switch i64 %_4, label %bb1 [
    i64 1, label %bb2
    i64 2, label %bb3
    i64 3, label %bb4
    i64 4, label %bb5
  ]

bb1:                                              ; preds = %bb5, %bb4, %bb3, %bb2, %bb19
  store ptr %len, ptr %_63, align 8
  %4 = getelementptr inbounds i8, ptr %_63, i64 8
  store ptr @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hdabfc7932e5a3df0E", ptr %4, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_51, ptr align 8 %_63, i64 16, i1 false)
  store ptr %code, ptr %_67, align 8
  %5 = getelementptr inbounds i8, ptr %_67, i64 8
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h3eaafe46ae0cfb90E", ptr %5, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_53, ptr align 8 %_67, i64 16, i1 false)
  store i64 %dst.1, ptr %_57, align 8
  store ptr %_57, ptr %_71, align 8
  %6 = getelementptr inbounds i8, ptr %_71, i64 8
  store ptr @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hdabfc7932e5a3df0E", ptr %6, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_55, ptr align 8 %_71, i64 16, i1 false)
  %7 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_50, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %_51, i64 16, i1 false)
  %8 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_50, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %_53, i64 16, i1 false)
  %9 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_50, i64 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %_55, i64 16, i1 false)
  store ptr @alloc_d51214f097f67314513b76e97e13aa6b, ptr %_48, align 8
  %10 = getelementptr inbounds i8, ptr %_48, i64 8
  store i64 3, ptr %10, align 8
  %11 = load ptr, ptr @0, align 8
  %12 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %13 = getelementptr inbounds i8, ptr %_48, i64 32
  store ptr %11, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store i64 %12, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %_48, i64 16
  store ptr %_50, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  store i64 3, ptr %16, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_48, ptr align 8 @alloc_054e99fbcf449d4476ca571e33a9e487) #24
  unreachable

bb2:                                              ; preds = %bb19
  %_6 = icmp uge i64 %dst.1, 1
  br i1 %_6, label %bb6, label %bb1

bb3:                                              ; preds = %bb19
  %_8 = icmp uge i64 %dst.1, 2
  br i1 %_8, label %bb7, label %bb1

bb4:                                              ; preds = %bb19
  %_10 = icmp uge i64 %dst.1, 3
  br i1 %_10, label %bb8, label %bb1

bb5:                                              ; preds = %bb19
  %_12 = icmp uge i64 %dst.1, 4
  br i1 %_12, label %bb9, label %bb1

bb6:                                              ; preds = %bb2
  %a = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %17 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %18 = load i32, ptr %code, align 4
  %19 = trunc i32 %18 to i8
  store i8 %19, ptr %17, align 1
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8, %bb7, %bb6
  %index = load i64, ptr %len, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %20 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4e4cc40f540038acE"(i64 0, i64 %index, ptr align 1 %dst.0, i64 %dst.1, ptr align 8 @alloc_57859aeb3d01b34b21a99a66643e2791)
  %_0.0 = extractvalue { ptr, i64 } %20, 0
  %_0.1 = extractvalue { ptr, i64 } %20, 1
  %21 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %22 = insertvalue { ptr, i64 } %21, i64 %_0.1, 1
  ret { ptr, i64 } %22

bb7:                                              ; preds = %bb3
  %a1 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %b = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %23 = load i32, ptr %code, align 4
  %_18 = lshr i32 %23, 6
  %_17 = and i32 %_18, 31
  %_16 = trunc i32 %_17 to i8
  %24 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %25 = or i8 %_16, -64
  store i8 %25, ptr %24, align 1
  %26 = load i32, ptr %code, align 4
  %_20 = and i32 %26, 63
  %_19 = trunc i32 %_20 to i8
  %27 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %28 = or i8 %_19, -128
  store i8 %28, ptr %27, align 1
  br label %bb10

bb8:                                              ; preds = %bb4
  %a2 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %b3 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %c = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 2
  %29 = load i32, ptr %code, align 4
  %_26 = lshr i32 %29, 12
  %_25 = and i32 %_26, 15
  %_24 = trunc i32 %_25 to i8
  %30 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %31 = or i8 %_24, -32
  store i8 %31, ptr %30, align 1
  %32 = load i32, ptr %code, align 4
  %_29 = lshr i32 %32, 6
  %_28 = and i32 %_29, 63
  %_27 = trunc i32 %_28 to i8
  %33 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %34 = or i8 %_27, -128
  store i8 %34, ptr %33, align 1
  %35 = load i32, ptr %code, align 4
  %_31 = and i32 %35, 63
  %_30 = trunc i32 %_31 to i8
  %36 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 2
  %37 = or i8 %_30, -128
  store i8 %37, ptr %36, align 1
  br label %bb10

bb9:                                              ; preds = %bb5
  %a4 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %b5 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %c6 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 2
  %d = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 3
  %38 = load i32, ptr %code, align 4
  %_38 = lshr i32 %38, 18
  %_37 = and i32 %_38, 7
  %_36 = trunc i32 %_37 to i8
  %39 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %40 = or i8 %_36, -16
  store i8 %40, ptr %39, align 1
  %41 = load i32, ptr %code, align 4
  %_41 = lshr i32 %41, 12
  %_40 = and i32 %_41, 63
  %_39 = trunc i32 %_40 to i8
  %42 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %43 = or i8 %_39, -128
  store i8 %43, ptr %42, align 1
  %44 = load i32, ptr %code, align 4
  %_44 = lshr i32 %44, 6
  %_43 = and i32 %_44, 63
  %_42 = trunc i32 %_43 to i8
  %45 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 2
  %46 = or i8 %_42, -128
  store i8 %46, ptr %45, align 1
  %47 = load i32, ptr %code, align 4
  %_46 = and i32 %47, 63
  %_45 = trunc i32 %_46 to i8
  %48 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 3
  %49 = or i8 %_45, -128
  store i8 %49, ptr %48, align 1
  br label %bb10
}

; core::char::methods::<impl char>::escape_debug
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17heeb2590e1a2f96f4E"(ptr sret([12 x i8]) align 4 %_0, i32 %self) unnamed_addr #0 {
start:
  %0 = alloca [3 x i8], align 4
  %1 = alloca [3 x i8], align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %1, ptr align 1 @3, i64 3, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %0, ptr align 1 %1, i64 3, i1 false)
  %2 = load i24, ptr %0, align 4
; call core::char::methods::<impl char>::escape_debug_ext
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h2760e72e183ffdd9E"(ptr sret([12 x i8]) align 4 %_0, i32 %self, i24 %2)
  ret void
}

; core::char::methods::<impl char>::is_whitespace
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17hd93299c048642694E"(i32 %self) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = icmp eq i32 %self, 32
  br i1 %0, label %bb4, label %bb2

bb4:                                              ; preds = %bb3, %start
  store i8 1, ptr %_0, align 1
  br label %bb8

bb2:                                              ; preds = %start
  %_2 = icmp ule i32 9, %self
  br i1 %_2, label %bb3, label %bb1

bb1:                                              ; preds = %bb3, %bb2
  %_4 = icmp ugt i32 %self, 127
  br i1 %_4, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_3 = icmp ule i32 %self, 13
  br i1 %_3, label %bb4, label %bb1

bb6:                                              ; preds = %bb1
  store i8 0, ptr %_0, align 1
  br label %bb7

bb5:                                              ; preds = %bb1
; call core::unicode::unicode_data::white_space::lookup
  %1 = call zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17hd872382b9bd94aefE(i32 %self)
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  br label %bb8

bb8:                                              ; preds = %bb4, %bb7
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::char::methods::<impl char>::is_ascii_digit
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$14is_ascii_digit17h2eb29001067da05eE"(ptr align 4 %self) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i32, ptr %self, align 4
  %_2 = icmp ule i32 48, %0
  br i1 %_2, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %1 = load i32, ptr %self, align 4
  %_3 = icmp ule i32 %1, 57
  %2 = zext i1 %_3 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::char::methods::<impl char>::escape_debug_ext
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h2760e72e183ffdd9E"(ptr sret([12 x i8]) align 4 %_0, i32 %self, i24 %0) unnamed_addr #0 {
start:
  %_34 = alloca [12 x i8], align 1
  %data1 = alloca [10 x i8], align 1
  %_31 = alloca [12 x i8], align 1
  %_30 = alloca [12 x i8], align 4
  %_29 = alloca [12 x i8], align 4
  %_28 = alloca [12 x i8], align 1
  %data = alloca [10 x i8], align 1
  %_25 = alloca [12 x i8], align 1
  %_24 = alloca [12 x i8], align 4
  %_21 = alloca [12 x i8], align 1
  %_20 = alloca [12 x i8], align 4
  %_19 = alloca [12 x i8], align 1
  %_18 = alloca [12 x i8], align 4
  %_17 = alloca [12 x i8], align 1
  %_16 = alloca [12 x i8], align 4
  %_15 = alloca [12 x i8], align 1
  %_14 = alloca [12 x i8], align 4
  %_13 = alloca [12 x i8], align 1
  %_12 = alloca [12 x i8], align 4
  %_11 = alloca [12 x i8], align 1
  %_10 = alloca [12 x i8], align 4
  %_9 = alloca [12 x i8], align 1
  %_8 = alloca [12 x i8], align 4
  %1 = alloca [3 x i8], align 4
  %args = alloca [3 x i8], align 1
  store i24 %0, ptr %1, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %args, ptr align 4 %1, i64 3, i1 false)
  switch i32 %self, label %bb13 [
    i32 0, label %bb2
    i32 9, label %bb3
    i32 13, label %bb4
    i32 10, label %bb5
    i32 92, label %bb6
    i32 34, label %bb7
    i32 39, label %bb10
  ]

bb13:                                             ; preds = %bb12, %bb9, %start
  %2 = load i8, ptr %args, align 1
  %_5 = trunc i8 %2 to i1
  br i1 %_5, label %bb14, label %bb17

bb2:                                              ; preds = %start
; call core::escape::EscapeIterInner<_>::backslash
  call void @"_ZN4core6escape24EscapeIterInner$LT$_$GT$9backslash17ha1662a6d7eb382a6E"(ptr sret([12 x i8]) align 1 %_9, i8 48)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_8, ptr align 1 %_9, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_8, i64 12, i1 false)
  br label %bb21

bb3:                                              ; preds = %start
; call core::escape::EscapeIterInner<_>::backslash
  call void @"_ZN4core6escape24EscapeIterInner$LT$_$GT$9backslash17ha1662a6d7eb382a6E"(ptr sret([12 x i8]) align 1 %_11, i8 116)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_10, ptr align 1 %_11, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_10, i64 12, i1 false)
  br label %bb21

bb4:                                              ; preds = %start
; call core::escape::EscapeIterInner<_>::backslash
  call void @"_ZN4core6escape24EscapeIterInner$LT$_$GT$9backslash17ha1662a6d7eb382a6E"(ptr sret([12 x i8]) align 1 %_13, i8 114)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_12, ptr align 1 %_13, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_12, i64 12, i1 false)
  br label %bb21

bb5:                                              ; preds = %start
; call core::escape::EscapeIterInner<_>::backslash
  call void @"_ZN4core6escape24EscapeIterInner$LT$_$GT$9backslash17ha1662a6d7eb382a6E"(ptr sret([12 x i8]) align 1 %_15, i8 110)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_14, ptr align 1 %_15, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_14, i64 12, i1 false)
  br label %bb21

bb6:                                              ; preds = %start
; call core::escape::EscapeIterInner<_>::backslash
  call void @"_ZN4core6escape24EscapeIterInner$LT$_$GT$9backslash17ha1662a6d7eb382a6E"(ptr sret([12 x i8]) align 1 %_17, i8 92)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_16, ptr align 1 %_17, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_16, i64 12, i1 false)
  br label %bb21

bb7:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %args, i64 2
  %4 = load i8, ptr %3, align 1
  %_3 = trunc i8 %4 to i1
  br i1 %_3, label %bb8, label %bb9

bb10:                                             ; preds = %start
  %5 = getelementptr inbounds i8, ptr %args, i64 1
  %6 = load i8, ptr %5, align 1
  %_4 = trunc i8 %6 to i1
  br i1 %_4, label %bb11, label %bb12

bb21:                                             ; preds = %bb15, %bb19, %bb20, %bb11, %bb8, %bb6, %bb5, %bb4, %bb3, %bb2
  ret void

bb9:                                              ; preds = %bb7
  br label %bb13

bb8:                                              ; preds = %bb7
; call core::escape::EscapeIterInner<_>::backslash
  call void @"_ZN4core6escape24EscapeIterInner$LT$_$GT$9backslash17ha1662a6d7eb382a6E"(ptr sret([12 x i8]) align 1 %_19, i8 34)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_18, ptr align 1 %_19, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_18, i64 12, i1 false)
  br label %bb21

bb12:                                             ; preds = %bb10
  br label %bb13

bb11:                                             ; preds = %bb10
; call core::escape::EscapeIterInner<_>::backslash
  call void @"_ZN4core6escape24EscapeIterInner$LT$_$GT$9backslash17ha1662a6d7eb382a6E"(ptr sret([12 x i8]) align 1 %_21, i8 39)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_20, ptr align 1 %_21, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_20, i64 12, i1 false)
  br label %bb21

bb17:                                             ; preds = %bb13
  br label %bb1

bb14:                                             ; preds = %bb13
  %_22 = icmp uge i32 %self, 768
  br i1 %_22, label %bb29, label %bb30

bb1:                                              ; preds = %bb16, %bb17
; call core::unicode::printable::is_printable
  %_7 = call zeroext i1 @_ZN4core7unicode9printable12is_printable17h9aaa1cc273b92272E(i32 %self)
  br i1 %_7, label %bb19, label %bb20

bb30:                                             ; preds = %bb14
  br label %bb16

bb29:                                             ; preds = %bb14
; call core::unicode::unicode_data::grapheme_extend::lookup_slow
  %_6 = call zeroext i1 @_ZN4core7unicode12unicode_data15grapheme_extend11lookup_slow17h07815f5474a2d182E(i32 %self)
  br i1 %_6, label %bb15, label %bb16

bb16:                                             ; preds = %bb29, %bb30
  br label %bb1

bb15:                                             ; preds = %bb29
; call core::escape::escape_unicode
  call void @_ZN4core6escape14escape_unicode17hde11ab7e1fed01d8E(ptr sret([12 x i8]) align 1 %_28, i32 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %data, ptr align 1 %_28, i64 10, i1 false)
  %7 = getelementptr inbounds i8, ptr %_28, i64 10
  %range.02 = load i8, ptr %7, align 1
  %8 = getelementptr inbounds i8, ptr %7, i64 1
  %range.13 = load i8, ptr %8, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_25, ptr align 1 %data, i64 10, i1 false)
  %9 = getelementptr inbounds i8, ptr %_25, i64 10
  store i8 %range.02, ptr %9, align 1
  %10 = getelementptr inbounds i8, ptr %9, i64 1
  store i8 %range.13, ptr %10, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_24, ptr align 1 %_25, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_24, i64 12, i1 false)
  br label %bb21

bb20:                                             ; preds = %bb1
; call core::escape::escape_unicode
  call void @_ZN4core6escape14escape_unicode17hde11ab7e1fed01d8E(ptr sret([12 x i8]) align 1 %_34, i32 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %data1, ptr align 1 %_34, i64 10, i1 false)
  %11 = getelementptr inbounds i8, ptr %_34, i64 10
  %range.0 = load i8, ptr %11, align 1
  %12 = getelementptr inbounds i8, ptr %11, i64 1
  %range.1 = load i8, ptr %12, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_31, ptr align 1 %data1, i64 10, i1 false)
  %13 = getelementptr inbounds i8, ptr %_31, i64 10
  store i8 %range.0, ptr %13, align 1
  %14 = getelementptr inbounds i8, ptr %13, i64 1
  store i8 %range.1, ptr %14, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_30, ptr align 1 %_31, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_30, i64 12, i1 false)
  br label %bb21

bb19:                                             ; preds = %bb1
  %15 = getelementptr inbounds i8, ptr %_29, i64 4
  store i32 %self, ptr %15, align 4
  store i8 -128, ptr %_29, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_29, i64 12, i1 false)
  br label %bb21
}

; core::char::methods::<impl char>::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hbf950d9badac8aeeE"(i32 %self) unnamed_addr #0 {
start:
  %_0 = alloca [8 x i8], align 8
  %_3 = icmp ult i32 %self, 128
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %self, 2048
  br i1 %_4, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i64 1, ptr %_0, align 8
  br label %bb9

bb4:                                              ; preds = %bb2
  %_5 = icmp ult i32 %self, 65536
  br i1 %_5, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  store i64 2, ptr %_0, align 8
  br label %bb8

bb6:                                              ; preds = %bb4
  store i64 4, ptr %_0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  store i64 3, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  br label %bb8

bb8:                                              ; preds = %bb3, %bb7
  br label %bb9

bb9:                                              ; preds = %bb1, %bb8
  %0 = load i64, ptr %_0, align 8
  ret i64 %0
}

; core::char::from_u32
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char8from_u3217h1772704f89439240E(i32 %i) unnamed_addr #0 {
start:
  %_0 = alloca [4 x i8], align 4
  %self = xor i32 %i, 55296
  %_3 = sub i32 %self, 2048
  %_2 = icmp uge i32 %_3, 1112064
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %start
  store i32 %i, ptr %_0, align 4
  br label %bb1

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4
  br label %bb1

bb1:                                              ; preds = %bb2, %bb3
  %0 = load i32, ptr %_0, align 4
  ret i32 %0
}

; core::hint::unreachable_unchecked::precondition_check
; Function Attrs: inlinehint nounwind nonlazybind uwtable
define internal void @_ZN4core4hint21unreachable_unchecked18precondition_check17h7ac5a7755e93f72eE() unnamed_addr #3 {
start:
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfb4a192166a1619dE(ptr align 1 @alloc_1eb6f53a157dccb32488e066ad957e6d, i64 82) #27
  unreachable
}

; core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h8be6ba829c415c88E"(ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h676d50916aa403cbE"(ptr align 8 %self)
  %_0.0 = extractvalue { i64, i64 } %0, 0
  %_0.1 = extractvalue { i64, i64 } %0, 1
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1
  ret { i64, i64 } %2
}

; core::iter::traits::exact_size::ExactSizeIterator::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17h6bd2106c5e1a168eE(ptr align 8 %self) unnamed_addr #0 {
start:
  %_9 = alloca [48 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  %upper = alloca [16 x i8], align 8
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7f954a3c5d955a4fE"(ptr sret([24 x i8]) align 8 %_3, ptr align 8 %self)
  %lower = load i64, ptr %_3, align 8
  %0 = getelementptr inbounds i8, ptr %_3, i64 8
  %1 = load i64, ptr %0, align 8
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load i64, ptr %2, align 8
  store i64 %1, ptr %upper, align 8
  %4 = getelementptr inbounds i8, ptr %upper, i64 8
  store i64 %3, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %lower, ptr %5, align 8
  store i64 1, ptr %_6, align 8
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_7 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc3754a84f2ec0b85E"(ptr align 8 %upper, ptr align 8 %_6)
  br i1 %_7, label %bb3, label %bb4

bb4:                                              ; preds = %start
  store ptr null, ptr %_9, align 8
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h3de64ea7145e7494E(i8 0, ptr align 8 %upper, ptr align 8 %_6, ptr align 8 %_9, ptr align 8 @alloc_aef40131b878795ce468e408084e211f) #24
  unreachable

bb3:                                              ; preds = %start
  ret i64 %lower
}

; core::iter::traits::exact_size::ExactSizeIterator::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hb42f7ec0ac13234aE(ptr align 8 %self) unnamed_addr #0 {
start:
  %_9 = alloca [48 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  %upper = alloca [16 x i8], align 8
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he0c251bcfdd6903fE"(ptr sret([24 x i8]) align 8 %_3, ptr align 8 %self)
  %lower = load i64, ptr %_3, align 8
  %0 = getelementptr inbounds i8, ptr %_3, i64 8
  %1 = load i64, ptr %0, align 8
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load i64, ptr %2, align 8
  store i64 %1, ptr %upper, align 8
  %4 = getelementptr inbounds i8, ptr %upper, i64 8
  store i64 %3, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %lower, ptr %5, align 8
  store i64 1, ptr %_6, align 8
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_7 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc3754a84f2ec0b85E"(ptr align 8 %upper, ptr align 8 %_6)
  br i1 %_7, label %bb3, label %bb4

bb4:                                              ; preds = %start
  store ptr null, ptr %_9, align 8
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h3de64ea7145e7494E(i8 0, ptr align 8 %upper, ptr align 8 %_6, ptr align 8 %_9, ptr align 8 @alloc_aef40131b878795ce468e408084e211f) #24
  unreachable

bb3:                                              ; preds = %start
  ret i64 %lower
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17ha541092709e8c409E"(ptr align 8 %_1, i64 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %x = alloca [8 x i8], align 8
  store i64 %0, ptr %x, align 8
; invoke core::str::pattern::simd_contains::{{closure}}
  %_4 = invoke zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h020499926cfa9a18E"(ptr align 8 %_1, ptr align 8 %x)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds i8, ptr %1, i64 8
  %4 = load i32, ptr %3, align 8
  %5 = insertvalue { ptr, i32 } poison, ptr %2, 0
  %6 = insertvalue { ptr, i32 } %5, i32 %4, 1
  resume { ptr, i32 } %6

cleanup:                                          ; preds = %start
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb5

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i64 0, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  %_8 = load i64, ptr %x, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_8, ptr %11, align 8
  store i64 1, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %12 = load i64, ptr %_0, align 8
  %13 = getelementptr inbounds i8, ptr %_0, i64 8
  %14 = load i64, ptr %13, align 8
  %15 = insertvalue { i64, i64 } poison, i64 %12, 0
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1
  ret { i64, i64 } %16
}

; core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17hc79dfe3c89c92dcfE(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_17 = alloca [1 x i8], align 1
  %_8 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store i8 1, ptr %_17, align 1
  br label %bb1

bb1:                                              ; preds = %bb7, %start
; invoke core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
  %1 = invoke { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h8be6ba829c415c88E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb17:                                             ; preds = %cleanup
  %2 = load i8, ptr %_17, align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb16, label %bb14

cleanup:                                          ; preds = %bb11, %bb8, %bb4, %bb3, %bb1
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  %8 = extractvalue { i64, i64 } %1, 0
  %9 = extractvalue { i64, i64 } %1, 1
  store i64 %8, ptr %_5, align 8
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %9, ptr %10, align 8
  %_6 = load i64, ptr %_5, align 8
  %11 = icmp eq i64 %_6, 1
  br i1 %11, label %bb3, label %bb10

bb3:                                              ; preds = %bb2
  %12 = getelementptr inbounds i8, ptr %_5, i64 8
  %x = load i64, ptr %12, align 8
  store i8 0, ptr %_17, align 1
; invoke core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}}
  %13 = invoke { i64, i64 } @"_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17ha541092709e8c409E"(ptr align 8 %f, i64 %x)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { i64, i64 } %13, 0
  %_9.1 = extractvalue { i64, i64 } %13, 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %14 = invoke { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcb598b8e1c91ed97E"(i64 %_9.0, i64 %_9.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  store i64 %15, ptr %_8, align 8
  %17 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %16, ptr %17, align 8
  %_13 = load i64, ptr %_8, align 8
  %18 = icmp eq i64 %_13, 0
  br i1 %18, label %bb7, label %bb8

bb7:                                              ; preds = %bb5
  store i8 1, ptr %_17, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
  %19 = getelementptr inbounds i8, ptr %_8, i64 8
  %residual = load i64, ptr %19, align 8
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %20 = invoke { i64, i64 } @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hf52694d4d75ef921E"(i64 %residual)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %21 = extractvalue { i64, i64 } %20, 0
  %22 = extractvalue { i64, i64 } %20, 1
  store i64 %21, ptr %_0, align 8
  %23 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %22, ptr %23, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb9
  %24 = load i64, ptr %_0, align 8
  %25 = getelementptr inbounds i8, ptr %_0, i64 8
  %26 = load i64, ptr %25, align 8
  %27 = insertvalue { i64, i64 } poison, i64 %24, 0
  %28 = insertvalue { i64, i64 } %27, i64 %26, 1
  ret { i64, i64 } %28

bb11:                                             ; preds = %bb10
  store i8 0, ptr %_17, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %29 = invoke { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h856cb386c74e38caE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  store i64 %30, ptr %_0, align 8
  %32 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %31, ptr %32, align 8
  br label %bb13

bb6:                                              ; No predecessors!
  unreachable

bb14:                                             ; preds = %bb16, %bb17
  %33 = load ptr, ptr %0, align 8
  %34 = getelementptr inbounds i8, ptr %0, i64 8
  %35 = load i32, ptr %34, align 8
  %36 = insertvalue { ptr, i32 } poison, ptr %33, 0
  %37 = insertvalue { ptr, i32 } %36, i32 %35, 1
  resume { ptr, i32 } %37

bb16:                                             ; preds = %bb17
  br label %bb14
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hea8ab3b13ac8eb84E"(ptr align 1 %_1, i8 %x) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
; call proc_macro2::fallback::validate_ident::{{closure}}
  %_4 = call zeroext i1 @"_ZN11proc_macro28fallback14validate_ident28_$u7b$$u7b$closure$u7d$$u7d$17h71f4d074d870c443E"(ptr align 1 %_1, i8 %x)
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %0 = load i8, ptr %_0, align 1
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; core::iter::traits::iterator::Iterator::any::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h5cd8999ad142402eE"(ptr align 8 %_1, ptr align 1 %x.0, i64 %x.1) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
; call core::str::pattern::simd_contains::{{closure}}
  %_4 = call zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h99aea8dd5ea36e44E"(ptr align 8 %_1, ptr align 1 %x.0, i64 %x.1)
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %0 = load i8, ptr %_0, align 1
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; core::iter::traits::iterator::Iterator::zip
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3zip17hd1dae65df1035c60E(ptr sret([56 x i8]) align 8 %_0, ptr %self.0, ptr %self.1, ptr align 1 %other.0, i64 %other.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_5 = alloca [1 x i8], align 1
  store i8 1, ptr %_5, align 1
; invoke core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %1 = invoke { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h0a1fd3bb7e7c9cdbE"(ptr align 1 %other.0, i64 %other.1)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %2 = load i8, ptr %_5, align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb3, label %bb2

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %b.0 = extractvalue { ptr, ptr } %1, 0
  %b.1 = extractvalue { ptr, ptr } %1, 1
  store i8 0, ptr %_5, align 1
; invoke <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
  invoke void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17hbdf288abe4237077E"(ptr sret([56 x i8]) align 8 %_0, ptr %self.0, ptr %self.1, ptr %b.0, ptr %b.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb1
  ret void

bb2:                                              ; preds = %bb3, %bb4
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

bb3:                                              ; preds = %bb4
  br label %bb2
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator4fold17h21165fa47555b895E(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_13 = alloca [1 x i8], align 1
  %_11 = alloca [20 x i8], align 4
  %x = alloca [20 x i8], align 4
  %_5 = alloca [20 x i8], align 4
  %f = alloca [8 x i8], align 8
  store ptr %0, ptr %f, align 8
  store i8 1, ptr %_13, align 1
  br label %bb1

bb1:                                              ; preds = %bb4, %start
; invoke <alloc::vec::drain::Drain<T,A> as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN96_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h58bd492d4d4576a1E"(ptr sret([20 x i8]) align 4 %_5, ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb13:                                             ; preds = %cleanup
  %2 = load i8, ptr %_13, align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb12, label %bb9

cleanup:                                          ; preds = %bb5, %bb3, %bb1
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %1, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb13

bb2:                                              ; preds = %bb1
  %8 = getelementptr inbounds i8, ptr %_5, i64 16
  %9 = load i8, ptr %8, align 4
  %10 = icmp eq i8 %9, 7
  %_7 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_7, 1
  br i1 %11, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %x, ptr align 4 %_5, i64 20, i1 false)
  store i8 0, ptr %_13, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_11, ptr align 4 %x, i64 20, i1 false)
; invoke core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hc32800e7fda5fd31E"(ptr align 8 %f, ptr align 4 %_11)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::TokenTree>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$proc_macro..TokenTree$GT$$GT$17h6a6ff45a7970fde0E"(ptr align 4 %_5)
          to label %bb6 unwind label %cleanup

bb4:                                              ; preds = %bb3
  store i8 1, ptr %_13, align 1
  br label %bb1

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::ptr::drop_in_place<alloc::vec::drain::Drain<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr74drop_in_place$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$GT$17h4b40ff3c4d5adce0E"(ptr align 8 %self)
  ret void

bb14:                                             ; No predecessors!
  unreachable

bb9:                                              ; preds = %bb12, %bb13
  br label %bb10

bb12:                                             ; preds = %bb13
  br label %bb9

bb10:                                             ; preds = %bb9
; invoke core::ptr::drop_in_place<alloc::vec::drain::Drain<proc_macro::TokenTree>>
  invoke void @"_ZN4core3ptr74drop_in_place$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$GT$17h4b40ff3c4d5adce0E"(ptr align 8 %self) #25
          to label %bb11 unwind label %terminate

terminate:                                        ; preds = %bb10
  %12 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb11:                                             ; preds = %bb10
  %15 = load ptr, ptr %1, align 8
  %16 = getelementptr inbounds i8, ptr %1, i64 8
  %17 = load i32, ptr %16, align 8
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator4fold17h51b34a4dcdeffb4aE(ptr align 4 %self, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_13 = alloca [1 x i8], align 1
  %_5 = alloca [4 x i8], align 4
  %f = alloca [8 x i8], align 8
  store ptr %0, ptr %f, align 8
  store i8 1, ptr %_13, align 1
  br label %bb1

bb1:                                              ; preds = %bb4, %start
; invoke <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next
  %2 = invoke i32 @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9cf21a454fcf1c17E"(ptr align 4 %self)
          to label %bb2 unwind label %cleanup

bb13:                                             ; preds = %cleanup
  %3 = load i8, ptr %_13, align 1
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb12, label %bb9

cleanup:                                          ; preds = %bb3, %bb1
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %1, align 8
  %8 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb13

bb2:                                              ; preds = %bb1
  store i32 %2, ptr %_5, align 4
  %9 = load i32, ptr %_5, align 4
  %10 = icmp eq i32 %9, 1114112
  %_7 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_7, 1
  br i1 %11, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %x = load i32, ptr %_5, align 4
  store i8 0, ptr %_13, align 1
; invoke core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hd70b6e390a6d0bb4E"(ptr align 8 %f, i32 %x)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb2
  br label %bb6

bb4:                                              ; preds = %bb3
  store i8 1, ptr %_13, align 1
  br label %bb1

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6
  ret void

bb14:                                             ; No predecessors!
  unreachable

bb9:                                              ; preds = %bb12, %bb13
  br label %bb10

bb12:                                             ; preds = %bb13
  br label %bb9

bb10:                                             ; preds = %bb9
  %12 = load ptr, ptr %1, align 8
  %13 = getelementptr inbounds i8, ptr %1, i64 8
  %14 = load i32, ptr %13, align 8
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17h3dbfc9ae0a36008eE(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 {
start:
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17h21165fa47555b895E(ptr align 8 %self, ptr align 8 %f)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17h630033c2d7d8bc0fE(ptr align 4 %self, ptr align 8 %f) unnamed_addr #0 {
start:
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17h51b34a4dcdeffb4aE(ptr align 4 %self, ptr align 8 %f)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hc32800e7fda5fd31E"(ptr align 8 %_1, ptr align 4 %item) unnamed_addr #0 {
start:
  %_5 = alloca [20 x i8], align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_5, ptr align 4 %item, i64 20, i1 false)
; call <proc_macro::TokenStream as core::iter::traits::collect::Extend<proc_macro::TokenTree>>::extend::{{closure}}
  call void @"_ZN108_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..Extend$LT$proc_macro..TokenTree$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hae3d897fcfad1003E"(ptr align 8 %_1, ptr align 4 %_5)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hd70b6e390a6d0bb4E"(ptr align 8 %_1, i32 %item) unnamed_addr #0 {
start:
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17ha23fb3a8845fd57dE"(ptr align 8 %_1, i32 %item)
  ret void
}

; core::iter::traits::iterator::Iterator::peekable
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8peekable17h4b479fc6134793efE(ptr sret([24 x i8]) align 8 %_0, ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_2 = alloca [4 x i8], align 4
  store i32 1114113, ptr %_2, align 4
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load i32, ptr %_2, align 4
  %2 = getelementptr inbounds i8, ptr %_0, i64 16
  store i32 %1, ptr %2, align 8
  ret void
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h283306c8600f9c1eE(ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_17 = alloca [1 x i8], align 1
  %_8 = alloca [1 x i8], align 1
  %_5 = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %f = alloca [0 x i8], align 1
  store i8 1, ptr %_17, align 1
  br label %bb1

bb1:                                              ; preds = %bb7, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %1 = invoke align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha76358487c324f0eE"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb17:                                             ; preds = %cleanup
  %2 = load i8, ptr %_17, align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb16, label %bb14

cleanup:                                          ; preds = %bb11, %bb8, %bb4, %bb3, %bb1
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  store ptr %1, ptr %_5, align 8
  %8 = load ptr, ptr %_5, align 8
  %9 = ptrtoint ptr %8 to i64
  %10 = icmp eq i64 %9, 0
  %_6 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_6, 1
  br i1 %11, label %bb3, label %bb10

bb3:                                              ; preds = %bb2
  %x = load ptr, ptr %_5, align 8
  store i8 0, ptr %_17, align 1
; invoke core::iter::adapters::copied::copy_try_fold::{{closure}}
  %_9 = invoke zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h30fed49cacd03c27E"(ptr align 1 %f, ptr align 1 %x)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %12 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha31f2aaf842bf30bE"(i1 zeroext %_9)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %13 = zext i1 %12 to i8
  store i8 %13, ptr %_8, align 1
  %14 = load i8, ptr %_8, align 1
  %15 = trunc i8 %14 to i1
  %_13 = zext i1 %15 to i64
  %16 = icmp eq i64 %_13, 0
  br i1 %16, label %bb7, label %bb8

bb7:                                              ; preds = %bb5
  store i8 1, ptr %_17, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %17 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h4045db70bcbd116aE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %18 = zext i1 %17 to i8
  store i8 %18, ptr %_0, align 1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb9
  %19 = load i8, ptr %_0, align 1
  %20 = trunc i8 %19 to i1
  ret i1 %20

bb11:                                             ; preds = %bb10
  store i8 0, ptr %_17, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %21 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h75633f8158c368bdE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %22 = zext i1 %21 to i8
  store i8 %22, ptr %_0, align 1
  br label %bb13

bb6:                                              ; No predecessors!
  unreachable

bb14:                                             ; preds = %bb16, %bb17
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %0, i64 8
  %25 = load i32, ptr %24, align 8
  %26 = insertvalue { ptr, i32 } poison, ptr %23, 0
  %27 = insertvalue { ptr, i32 } %26, i32 %25, 1
  resume { ptr, i32 } %27

bb16:                                             ; preds = %bb17
  br label %bb14
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h76ff4b623d9d14dfE(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_17 = alloca [1 x i8], align 1
  %_8 = alloca [1 x i8], align 1
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %f = alloca [8 x i8], align 8
  store ptr %0, ptr %f, align 8
  store i8 1, ptr %_17, align 1
  br label %bb1

bb1:                                              ; preds = %bb7, %start
; invoke <core::slice::iter::Windows<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke { ptr, i64 } @"_ZN94_$LT$core..slice..iter..Windows$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h70941507ad5d4966E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb17:                                             ; preds = %cleanup
  %3 = load i8, ptr %_17, align 1
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb16, label %bb14

cleanup:                                          ; preds = %bb11, %bb8, %bb4, %bb3, %bb1
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %1, align 8
  %8 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  %9 = extractvalue { ptr, i64 } %2, 0
  %10 = extractvalue { ptr, i64 } %2, 1
  store ptr %9, ptr %_5, align 8
  %11 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %10, ptr %11, align 8
  %12 = load ptr, ptr %_5, align 8
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_6 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_6, 1
  br i1 %15, label %bb3, label %bb10

bb3:                                              ; preds = %bb2
  %x.0 = load ptr, ptr %_5, align 8
  %16 = getelementptr inbounds i8, ptr %_5, i64 8
  %x.1 = load i64, ptr %16, align 8
  store i8 0, ptr %_17, align 1
; invoke core::iter::traits::iterator::Iterator::any::check::{{closure}}
  %_9 = invoke zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h5cd8999ad142402eE"(ptr align 8 %f, ptr align 1 %x.0, i64 %x.1)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %17 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha31f2aaf842bf30bE"(i1 zeroext %_9)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %18 = zext i1 %17 to i8
  store i8 %18, ptr %_8, align 1
  %19 = load i8, ptr %_8, align 1
  %20 = trunc i8 %19 to i1
  %_13 = zext i1 %20 to i64
  %21 = icmp eq i64 %_13, 0
  br i1 %21, label %bb7, label %bb8

bb7:                                              ; preds = %bb5
  store i8 1, ptr %_17, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %22 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h4045db70bcbd116aE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %23 = zext i1 %22 to i8
  store i8 %23, ptr %_0, align 1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb9
  %24 = load i8, ptr %_0, align 1
  %25 = trunc i8 %24 to i1
  ret i1 %25

bb11:                                             ; preds = %bb10
  store i8 0, ptr %_17, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %26 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h75633f8158c368bdE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %27 = zext i1 %26 to i8
  store i8 %27, ptr %_0, align 1
  br label %bb13

bb6:                                              ; No predecessors!
  unreachable

bb14:                                             ; preds = %bb16, %bb17
  %28 = load ptr, ptr %1, align 8
  %29 = getelementptr inbounds i8, ptr %1, i64 8
  %30 = load i32, ptr %29, align 8
  %31 = insertvalue { ptr, i32 } poison, ptr %28, 0
  %32 = insertvalue { ptr, i32 } %31, i32 %30, 1
  resume { ptr, i32 } %32

bb16:                                             ; preds = %bb17
  br label %bb14
}

; core::iter::traits::iterator::Iterator::enumerate
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hb25bb09893c6bca0E(ptr sret([24 x i8]) align 8 %_0, ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 0, ptr %1, align 8
  ret void
}

; core::iter::traits::iterator::Iterator::enumerate
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd91fc6968f447b8cE(ptr sret([24 x i8]) align 8 %_0, ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 0, ptr %1, align 8
  ret void
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hfde28eea202c10ffE(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hc7d284755b4d8795E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self)
  %_0 = load i64, ptr %_2, align 8
  ret i64 %_0
}

; core::iter::adapters::copied::copy_try_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h30fed49cacd03c27E"(ptr align 1 %_1, ptr align 1 %_3) unnamed_addr #0 {
start:
  %elt = load i8, ptr %_3, align 1
; call core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_0 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hea8ab3b13ac8eb84E"(ptr align 1 %_1, i8 %elt)
  ret i1 %_0
}

; core::iter::adapters::peekable::Peekable<I>::peek
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 ptr @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h7191fa38a56e33d9E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_0 = alloca [8 x i8], align 8
  %_4 = getelementptr inbounds i8, ptr %self, i64 16
; call core::option::Option<T>::get_or_insert_with
  %self1 = call align 4 ptr @"_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17hb62946e41281579bE"(ptr align 4 %_4, ptr align 8 %self)
  %0 = load i32, ptr %self1, align 4
  %1 = icmp eq i32 %0, 1114112
  %_7 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_7, 0
  br i1 %2, label %bb4, label %bb5

bb4:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb2

bb5:                                              ; preds = %start
  store ptr %self1, ptr %_0, align 8
  br label %bb2

bb2:                                              ; preds = %bb5, %bb4
  %3 = load ptr, ptr %_0, align 8
  ret ptr %3

bb3:                                              ; No predecessors!
  unreachable
}

; core::iter::adapters::peekable::Peekable<I>::peek::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17hdc02940e94b32597E"(ptr align 8 %_1) unnamed_addr #0 {
start:
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_0 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %_1)
  ret i32 %_0
}

; core::sync::atomic::AtomicUsize::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize4load17he4baa38074124831E(ptr align 8 %self, i8 %order) unnamed_addr #0 {
start:
; call core::sync::atomic::atomic_load
  %_0 = call i64 @_ZN4core4sync6atomic11atomic_load17hf92f85ace2bbc2b4E(ptr %self, i8 %order)
  ret i64 %_0
}

; core::sync::atomic::AtomicUsize::store
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic11AtomicUsize5store17h04465bf0e60b201bE(ptr align 8 %self, i64 %val, i8 %order) unnamed_addr #0 {
start:
; call core::sync::atomic::atomic_store
  call void @_ZN4core4sync6atomic12atomic_store17h1e97f9333d3b6d00E(ptr %self, i64 %val, i8 %order)
  ret void
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core4sync6atomic11atomic_load17h528c1461ff3aea58E(ptr %dst, i8 %0) unnamed_addr #0 {
start:
  %_7 = alloca [48 x i8], align 8
  %_5 = alloca [48 x i8], align 8
  %_0 = alloca [4 x i8], align 4
  %order = alloca [1 x i8], align 1
  store i8 %0, ptr %order, align 1
  %1 = load i8, ptr %order, align 1
  %_3 = zext i8 %1 to i64
  switch i64 %_3, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb6
    i64 2, label %bb4
    i64 3, label %bb2
    i64 4, label %bb5
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = load atomic i32, ptr %dst monotonic, align 4
  store i32 %2, ptr %_0, align 4
  br label %bb7

bb6:                                              ; preds = %start
  store ptr @alloc_cf8f91dd8bc9347b20052f6ccc905cd7, ptr %_5, align 8
  %3 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 1, ptr %3, align 8
  %4 = load ptr, ptr @0, align 8
  %5 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %6 = getelementptr inbounds i8, ptr %_5, i64 32
  store ptr %4, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %5, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %_5, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 0, ptr %9, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_5, ptr align 8 @alloc_553a57103207da2b168072f4d019d879) #24
  unreachable

bb4:                                              ; preds = %start
  %10 = load atomic i32, ptr %dst acquire, align 4
  store i32 %10, ptr %_0, align 4
  br label %bb7

bb2:                                              ; preds = %start
  store ptr @alloc_7e8e9a1d4bc7d0bbec692f0a50681e22, ptr %_7, align 8
  %11 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 1, ptr %11, align 8
  %12 = load ptr, ptr @0, align 8
  %13 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %14 = getelementptr inbounds i8, ptr %_7, i64 32
  store ptr %12, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  store i64 %13, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %_7, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %16, i64 8
  store i64 0, ptr %17, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_7, ptr align 8 @alloc_565c56ce3543e16b198dd2fe92d8c46e) #24
  unreachable

bb5:                                              ; preds = %start
  %18 = load atomic i32, ptr %dst seq_cst, align 4
  store i32 %18, ptr %_0, align 4
  br label %bb7

bb7:                                              ; preds = %bb5, %bb4, %bb3
  %19 = load i32, ptr %_0, align 4
  ret i32 %19
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic11atomic_load17hf92f85ace2bbc2b4E(ptr %dst, i8 %0) unnamed_addr #0 {
start:
  %_7 = alloca [48 x i8], align 8
  %_5 = alloca [48 x i8], align 8
  %_0 = alloca [8 x i8], align 8
  %order = alloca [1 x i8], align 1
  store i8 %0, ptr %order, align 1
  %1 = load i8, ptr %order, align 1
  %_3 = zext i8 %1 to i64
  switch i64 %_3, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb6
    i64 2, label %bb4
    i64 3, label %bb2
    i64 4, label %bb5
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = load atomic i64, ptr %dst monotonic, align 8
  store i64 %2, ptr %_0, align 8
  br label %bb7

bb6:                                              ; preds = %start
  store ptr @alloc_cf8f91dd8bc9347b20052f6ccc905cd7, ptr %_5, align 8
  %3 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 1, ptr %3, align 8
  %4 = load ptr, ptr @0, align 8
  %5 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %6 = getelementptr inbounds i8, ptr %_5, i64 32
  store ptr %4, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %5, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %_5, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 0, ptr %9, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_5, ptr align 8 @alloc_553a57103207da2b168072f4d019d879) #24
  unreachable

bb4:                                              ; preds = %start
  %10 = load atomic i64, ptr %dst acquire, align 8
  store i64 %10, ptr %_0, align 8
  br label %bb7

bb2:                                              ; preds = %start
  store ptr @alloc_7e8e9a1d4bc7d0bbec692f0a50681e22, ptr %_7, align 8
  %11 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 1, ptr %11, align 8
  %12 = load ptr, ptr @0, align 8
  %13 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %14 = getelementptr inbounds i8, ptr %_7, i64 32
  store ptr %12, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  store i64 %13, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %_7, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %16, i64 8
  store i64 0, ptr %17, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_7, ptr align 8 @alloc_565c56ce3543e16b198dd2fe92d8c46e) #24
  unreachable

bb5:                                              ; preds = %start
  %18 = load atomic i64, ptr %dst seq_cst, align 8
  store i64 %18, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb4, %bb3
  %19 = load i64, ptr %_0, align 8
  ret i64 %19
}

; core::sync::atomic::atomic_store
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4sync6atomic12atomic_store17h1e97f9333d3b6d00E(ptr %dst, i64 %val, i8 %0) unnamed_addr #0 {
start:
  %_8 = alloca [48 x i8], align 8
  %_6 = alloca [48 x i8], align 8
  %order = alloca [1 x i8], align 1
  store i8 %0, ptr %order, align 1
  %1 = load i8, ptr %order, align 1
  %_4 = zext i8 %1 to i64
  switch i64 %_4, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb6
    i64 3, label %bb2
    i64 4, label %bb5
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store atomic i64 %val, ptr %dst monotonic, align 8
  br label %bb7

bb4:                                              ; preds = %start
  store atomic i64 %val, ptr %dst release, align 8
  br label %bb7

bb6:                                              ; preds = %start
  store ptr @alloc_47c752ba42fbab56d43a37cfd56e4899, ptr %_6, align 8
  %2 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 1, ptr %2, align 8
  %3 = load ptr, ptr @0, align 8
  %4 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %5 = getelementptr inbounds i8, ptr %_6, i64 32
  store ptr %3, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %4, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %_6, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  store i64 0, ptr %8, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_6, ptr align 8 @alloc_f2490b91ac8f38c5812eaf37ef0bf1a7) #24
  unreachable

bb2:                                              ; preds = %start
  store ptr @alloc_f8dbac861f87e25e445761cc4af66745, ptr %_8, align 8
  %9 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 1, ptr %9, align 8
  %10 = load ptr, ptr @0, align 8
  %11 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %12 = getelementptr inbounds i8, ptr %_8, i64 32
  store ptr %10, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  store i64 %11, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %_8, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  store i64 0, ptr %15, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_8, ptr align 8 @alloc_582e46b8c50b44926d73f5c37db6c088) #24
  unreachable

bb5:                                              ; preds = %start
  store atomic i64 %val, ptr %dst seq_cst, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb4, %bb3
  ret void
}

; core::sync::atomic::atomic_compare_exchange_weak
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core4sync6atomic28atomic_compare_exchange_weak17h77e9fd30bb17d7a1E(ptr %dst, i32 %old, i32 %new, i8 %0, i8 %1) unnamed_addr #0 {
start:
  %_19 = alloca [48 x i8], align 8
  %_17 = alloca [48 x i8], align 8
  %_8 = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %failure = alloca [1 x i8], align 1
  %success = alloca [1 x i8], align 1
  store i8 %0, ptr %success, align 1
  store i8 %1, ptr %failure, align 1
  %2 = load i8, ptr %success, align 1
  %_15 = zext i8 %2 to i64
  switch i64 %_15, label %bb1 [
    i64 0, label %bb4
    i64 1, label %bb6
    i64 2, label %bb5
    i64 3, label %bb7
    i64 4, label %bb8
  ]

bb1:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  %3 = load i8, ptr %failure, align 1
  %_10 = zext i8 %3 to i64
  switch i64 %_10, label %bb2 [
    i64 0, label %bb9
    i64 2, label %bb10
    i64 4, label %bb11
  ]

bb6:                                              ; preds = %start
  %4 = load i8, ptr %failure, align 1
  %_12 = zext i8 %4 to i64
  switch i64 %_12, label %bb2 [
    i64 0, label %bb15
    i64 2, label %bb16
    i64 4, label %bb17
  ]

bb5:                                              ; preds = %start
  %5 = load i8, ptr %failure, align 1
  %_11 = zext i8 %5 to i64
  switch i64 %_11, label %bb2 [
    i64 0, label %bb12
    i64 2, label %bb13
    i64 4, label %bb14
  ]

bb7:                                              ; preds = %start
  %6 = load i8, ptr %failure, align 1
  %_13 = zext i8 %6 to i64
  switch i64 %_13, label %bb2 [
    i64 0, label %bb18
    i64 2, label %bb19
    i64 4, label %bb20
  ]

bb8:                                              ; preds = %start
  %7 = load i8, ptr %failure, align 1
  %_14 = zext i8 %7 to i64
  switch i64 %_14, label %bb2 [
    i64 0, label %bb21
    i64 2, label %bb22
    i64 4, label %bb23
  ]

bb2:                                              ; preds = %bb8, %bb7, %bb5, %bb6, %bb4
  %8 = load i8, ptr %failure, align 1
  %_9 = zext i8 %8 to i64
  %9 = icmp eq i64 %_9, 1
  br i1 %9, label %bb3, label %bb24

bb9:                                              ; preds = %bb4
  %10 = cmpxchg weak ptr %dst, i32 %old, i32 %new monotonic monotonic, align 4
  %11 = extractvalue { i32, i1 } %10, 0
  %12 = extractvalue { i32, i1 } %10, 1
  %13 = zext i1 %12 to i8
  store i32 %11, ptr %_8, align 4
  %14 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %13, ptr %14, align 4
  br label %bb25

bb10:                                             ; preds = %bb4
  %15 = cmpxchg weak ptr %dst, i32 %old, i32 %new monotonic acquire, align 4
  %16 = extractvalue { i32, i1 } %15, 0
  %17 = extractvalue { i32, i1 } %15, 1
  %18 = zext i1 %17 to i8
  store i32 %16, ptr %_8, align 4
  %19 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %18, ptr %19, align 4
  br label %bb25

bb11:                                             ; preds = %bb4
  %20 = cmpxchg weak ptr %dst, i32 %old, i32 %new monotonic seq_cst, align 4
  %21 = extractvalue { i32, i1 } %20, 0
  %22 = extractvalue { i32, i1 } %20, 1
  %23 = zext i1 %22 to i8
  store i32 %21, ptr %_8, align 4
  %24 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %23, ptr %24, align 4
  br label %bb25

bb25:                                             ; preds = %bb23, %bb22, %bb21, %bb20, %bb19, %bb18, %bb14, %bb13, %bb12, %bb17, %bb16, %bb15, %bb11, %bb10, %bb9
  %val = load i32, ptr %_8, align 4
  %25 = getelementptr inbounds i8, ptr %_8, i64 4
  %26 = load i8, ptr %25, align 4
  %ok = trunc i8 %26 to i1
  br i1 %ok, label %bb26, label %bb27

bb15:                                             ; preds = %bb6
  %27 = cmpxchg weak ptr %dst, i32 %old, i32 %new release monotonic, align 4
  %28 = extractvalue { i32, i1 } %27, 0
  %29 = extractvalue { i32, i1 } %27, 1
  %30 = zext i1 %29 to i8
  store i32 %28, ptr %_8, align 4
  %31 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %30, ptr %31, align 4
  br label %bb25

bb16:                                             ; preds = %bb6
  %32 = cmpxchg weak ptr %dst, i32 %old, i32 %new release acquire, align 4
  %33 = extractvalue { i32, i1 } %32, 0
  %34 = extractvalue { i32, i1 } %32, 1
  %35 = zext i1 %34 to i8
  store i32 %33, ptr %_8, align 4
  %36 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %35, ptr %36, align 4
  br label %bb25

bb17:                                             ; preds = %bb6
  %37 = cmpxchg weak ptr %dst, i32 %old, i32 %new release seq_cst, align 4
  %38 = extractvalue { i32, i1 } %37, 0
  %39 = extractvalue { i32, i1 } %37, 1
  %40 = zext i1 %39 to i8
  store i32 %38, ptr %_8, align 4
  %41 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %40, ptr %41, align 4
  br label %bb25

bb12:                                             ; preds = %bb5
  %42 = cmpxchg weak ptr %dst, i32 %old, i32 %new acquire monotonic, align 4
  %43 = extractvalue { i32, i1 } %42, 0
  %44 = extractvalue { i32, i1 } %42, 1
  %45 = zext i1 %44 to i8
  store i32 %43, ptr %_8, align 4
  %46 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %45, ptr %46, align 4
  br label %bb25

bb13:                                             ; preds = %bb5
  %47 = cmpxchg weak ptr %dst, i32 %old, i32 %new acquire acquire, align 4
  %48 = extractvalue { i32, i1 } %47, 0
  %49 = extractvalue { i32, i1 } %47, 1
  %50 = zext i1 %49 to i8
  store i32 %48, ptr %_8, align 4
  %51 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %50, ptr %51, align 4
  br label %bb25

bb14:                                             ; preds = %bb5
  %52 = cmpxchg weak ptr %dst, i32 %old, i32 %new acquire seq_cst, align 4
  %53 = extractvalue { i32, i1 } %52, 0
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = zext i1 %54 to i8
  store i32 %53, ptr %_8, align 4
  %56 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %55, ptr %56, align 4
  br label %bb25

bb18:                                             ; preds = %bb7
  %57 = cmpxchg weak ptr %dst, i32 %old, i32 %new acq_rel monotonic, align 4
  %58 = extractvalue { i32, i1 } %57, 0
  %59 = extractvalue { i32, i1 } %57, 1
  %60 = zext i1 %59 to i8
  store i32 %58, ptr %_8, align 4
  %61 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %60, ptr %61, align 4
  br label %bb25

bb19:                                             ; preds = %bb7
  %62 = cmpxchg weak ptr %dst, i32 %old, i32 %new acq_rel acquire, align 4
  %63 = extractvalue { i32, i1 } %62, 0
  %64 = extractvalue { i32, i1 } %62, 1
  %65 = zext i1 %64 to i8
  store i32 %63, ptr %_8, align 4
  %66 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %65, ptr %66, align 4
  br label %bb25

bb20:                                             ; preds = %bb7
  %67 = cmpxchg weak ptr %dst, i32 %old, i32 %new acq_rel seq_cst, align 4
  %68 = extractvalue { i32, i1 } %67, 0
  %69 = extractvalue { i32, i1 } %67, 1
  %70 = zext i1 %69 to i8
  store i32 %68, ptr %_8, align 4
  %71 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %70, ptr %71, align 4
  br label %bb25

bb21:                                             ; preds = %bb8
  %72 = cmpxchg weak ptr %dst, i32 %old, i32 %new seq_cst monotonic, align 4
  %73 = extractvalue { i32, i1 } %72, 0
  %74 = extractvalue { i32, i1 } %72, 1
  %75 = zext i1 %74 to i8
  store i32 %73, ptr %_8, align 4
  %76 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %75, ptr %76, align 4
  br label %bb25

bb22:                                             ; preds = %bb8
  %77 = cmpxchg weak ptr %dst, i32 %old, i32 %new seq_cst acquire, align 4
  %78 = extractvalue { i32, i1 } %77, 0
  %79 = extractvalue { i32, i1 } %77, 1
  %80 = zext i1 %79 to i8
  store i32 %78, ptr %_8, align 4
  %81 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %80, ptr %81, align 4
  br label %bb25

bb23:                                             ; preds = %bb8
  %82 = cmpxchg weak ptr %dst, i32 %old, i32 %new seq_cst seq_cst, align 4
  %83 = extractvalue { i32, i1 } %82, 0
  %84 = extractvalue { i32, i1 } %82, 1
  %85 = zext i1 %84 to i8
  store i32 %83, ptr %_8, align 4
  %86 = getelementptr inbounds i8, ptr %_8, i64 4
  store i8 %85, ptr %86, align 4
  br label %bb25

bb27:                                             ; preds = %bb25
  %87 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %val, ptr %87, align 4
  store i32 1, ptr %_0, align 4
  br label %bb28

bb26:                                             ; preds = %bb25
  %88 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %val, ptr %88, align 4
  store i32 0, ptr %_0, align 4
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %89 = load i32, ptr %_0, align 4
  %90 = getelementptr inbounds i8, ptr %_0, i64 4
  %91 = load i32, ptr %90, align 4
  %92 = insertvalue { i32, i32 } poison, i32 %89, 0
  %93 = insertvalue { i32, i32 } %92, i32 %91, 1
  ret { i32, i32 } %93

bb3:                                              ; preds = %bb2
  store ptr @alloc_04ab601c54c6e0a22ff11d72dc7f4511, ptr %_19, align 8
  %94 = getelementptr inbounds i8, ptr %_19, i64 8
  store i64 1, ptr %94, align 8
  %95 = load ptr, ptr @0, align 8
  %96 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %97 = getelementptr inbounds i8, ptr %_19, i64 32
  store ptr %95, ptr %97, align 8
  %98 = getelementptr inbounds i8, ptr %97, i64 8
  store i64 %96, ptr %98, align 8
  %99 = getelementptr inbounds i8, ptr %_19, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %99, align 8
  %100 = getelementptr inbounds i8, ptr %99, i64 8
  store i64 0, ptr %100, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_19, ptr align 8 @alloc_951d71d7fc9a3a03b1604bfc8e6b5b47) #24
  unreachable

bb24:                                             ; preds = %bb2
  store ptr @alloc_dd7d8f77c173bf31726eae321f955bec, ptr %_17, align 8
  %101 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 1, ptr %101, align 8
  %102 = load ptr, ptr @0, align 8
  %103 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %104 = getelementptr inbounds i8, ptr %_17, i64 32
  store ptr %102, ptr %104, align 8
  %105 = getelementptr inbounds i8, ptr %104, i64 8
  store i64 %103, ptr %105, align 8
  %106 = getelementptr inbounds i8, ptr %_17, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %106, align 8
  %107 = getelementptr inbounds i8, ptr %106, i64 8
  store i64 0, ptr %107, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_17, ptr align 8 @alloc_f8164208b1501e1231a4c490b4e7c4d3) #24
  unreachable
}

; core::alloc::layout::Layout::array::inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17hb5a11287fca44129E(i64 %element_size, i64 %align, i64 %n) unnamed_addr #0 {
start:
  %_20 = alloca [8 x i8], align 8
  %_13 = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %0 = icmp eq i64 %element_size, 0
  br i1 %0, label %bb5, label %bb1

bb5:                                              ; preds = %bb4, %start
  br label %bb8

bb1:                                              ; preds = %start
  store i64 %align, ptr %_13, align 8
  %_14 = load i64, ptr %_13, align 8
  %_15 = icmp uge i64 %_14, 1
  %_16 = icmp ule i64 %_14, -9223372036854775808
  %_17 = and i1 %_15, %_16
  %_11 = sub i64 %_14, 1
  %_6 = sub i64 9223372036854775807, %_11
  %_7 = icmp eq i64 %element_size, 0
  br i1 %_7, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %_5 = udiv i64 %_6, %element_size
  %_4 = icmp ugt i64 %n, %_5
  br i1 %_4, label %bb3, label %bb4

panic:                                            ; preds = %bb1
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17hb740a5eb188e0d10E(ptr align 8 @alloc_a9c36de80897ff407f24bba36ae610b4) #24
  unreachable

bb4:                                              ; preds = %bb2
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = load i64, ptr @0, align 8
  %2 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %1, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %2, ptr %3, align 8
  br label %bb6

bb8:                                              ; preds = %bb5
  %array_size = mul nuw i64 %element_size, %n
  store i64 %align, ptr %_20, align 8
  %_21 = load i64, ptr %_20, align 8
  %_22 = icmp uge i64 %_21, 1
  %_23 = icmp ule i64 %_21, -9223372036854775808
  %_24 = and i1 %_22, %_23
  store i64 %_21, ptr %_0, align 8
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %array_size, ptr %4, align 8
  br label %bb6

bb7:                                              ; No predecessors!
  unreachable

bb6:                                              ; preds = %bb3, %bb8
  %5 = load i64, ptr %_0, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  %7 = load i64, ptr %6, align 8
  %8 = insertvalue { i64, i64 } poison, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define internal ptr @_ZN4core5alloc6layout6Layout8dangling17h423ad447534b270dE(ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [8 x i8], align 8
  %self1 = load i64, ptr %self, align 8
  store i64 %self1, ptr %_5, align 8
  %_6 = load i64, ptr %_5, align 8
  %_7 = icmp uge i64 %_6, 1
  %_8 = icmp ule i64 %_6, -9223372036854775808
  %_9 = and i1 %_7, %_8
  %ptr = getelementptr i8, ptr null, i64 %_6
  br label %bb3

bb3:                                              ; preds = %start
  ret ptr %ptr

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::slice::<impl [T]>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17hcc632291aa3e4ad3E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_8 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %needle = alloca [16 x i8], align 8
  store ptr %0, ptr %needle, align 8
  %2 = getelementptr inbounds i8, ptr %needle, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load ptr, ptr %needle, align 8
  %4 = getelementptr inbounds i8, ptr %needle, i64 8
  %n = load i64, ptr %4, align 8
  %_4 = icmp uge i64 %self.1, %n
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %_7.i = icmp ugt i64 %n, %self.1
  br i1 %_7.i, label %bb3.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit"

bb3.i:                                            ; preds = %bb1
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h0342d27fee357d65E(i64 %n, i64 %self.1, ptr align 8 @alloc_c64833276dcb5250e04ff430ea42f372) #24
  unreachable

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit": ; preds = %bb1
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8a45788462871a0E"(i64 0, i64 %n, ptr %self.0, i64 %self.1)
  %_11.0.i = extractvalue { ptr, i64 } %5, 0
  %_11.1.i = extractvalue { ptr, i64 } %5, 1
  %other.0 = extractvalue { ptr, i64 } %5, 0
  %other.1 = extractvalue { ptr, i64 } %5, 1
  store ptr %other.0, ptr %_8, align 8
  %6 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %other.1, ptr %6, align 8
  %7 = load ptr, ptr %needle, align 8
  %8 = getelementptr inbounds i8, ptr %needle, i64 8
  %9 = load i64, ptr %8, align 8
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %10 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h21bdc8f6df394f4dE"(ptr align 1 %7, i64 %9, ptr align 1 %other.0, i64 %other.1)
  %11 = zext i1 %10 to i8
  store i8 %11, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit", %bb2
  %12 = load i8, ptr %_0, align 1
  %13 = trunc i8 %12 to i1
  ret i1 %13
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h45cafd79d6b203e3E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %end_or_len = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %_7 = getelementptr inbounds { ptr, i64 }, ptr %self.0, i64 %self.1
  store ptr %_7, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_9 = load ptr, ptr %end_or_len, align 8
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %_9, 1
  ret { ptr, ptr } %1

bb1:                                              ; No predecessors!
  unreachable
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h95d9f5e8671f7802E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %end_or_len = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %_7 = getelementptr inbounds i8, ptr %self.0, i64 %self.1
  store ptr %_7, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_9 = load ptr, ptr %end_or_len, align 8
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %_9, 1
  ret { ptr, ptr } %1

bb1:                                              ; No predecessors!
  unreachable
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h9b7e8e22378318ebE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %end_or_len = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %_7 = getelementptr inbounds %TokenTree, ptr %self.0, i64 %self.1
  store ptr %_7, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_9 = load ptr, ptr %end_or_len, align 8
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %_9, 1
  ret { ptr, ptr } %1

bb1:                                              ; No predecessors!
  unreachable
}

; core::slice::<impl [T]>::last
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17hd5497a1304935795E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_0 = alloca [8 x i8], align 8
  %_3 = icmp uge i64 %self.1, 1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %0 = sub i64 %self.1, 1
  %last = getelementptr inbounds [0 x { i8, [7 x i8], %"fallback::TokenStreamBuilder" }], ptr %self.0, i64 0, i64 %0
  %1 = sub i64 %self.1, 1
  %_5 = getelementptr inbounds [0 x { i8, [7 x i8], %"fallback::TokenStreamBuilder" }], ptr %self.0, i64 0, i64 %1
  store ptr %_5, ptr %_0, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %2 = load ptr, ptr %_0, align 8
  ret ptr %2
}

; core::slice::<impl [T]>::first
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$5first17h895a1f56efe39a4fE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_0 = alloca [8 x i8], align 8
  %_3 = icmp uge i64 %self.1, 1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %first = getelementptr inbounds [0 x i8], ptr %self.0, i64 0, i64 0
  %_5 = getelementptr inbounds [0 x i8], ptr %self.0, i64 0, i64 0
  store ptr %_5, ptr %_0, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %0 = load ptr, ptr %_0, align 8
  ret ptr %0
}

; core::slice::raw::from_raw_parts::precondition_check
; Function Attrs: inlinehint nounwind nonlazybind uwtable
define internal void @_ZN4core5slice3raw14from_raw_parts18precondition_check17hc8bfc4acc9aff47fE(ptr %data, i64 %size, i64 %align, i64 %len) unnamed_addr #3 personality ptr @rust_eh_personality {
start:
  %0 = alloca [4 x i8], align 4
  %max_len = alloca [8 x i8], align 8
  %_12 = alloca [48 x i8], align 8
  %_10 = ptrtoint ptr %data to i64
  %1 = icmp eq i64 %_10, 0
  br i1 %1, label %bb6, label %bb7

bb6:                                              ; preds = %start
  br label %bb4

bb7:                                              ; preds = %start
  %2 = call i64 @llvm.ctpop.i64(i64 %align)
  %3 = trunc i64 %2 to i32
  store i32 %3, ptr %0, align 4
  %_13 = load i32, ptr %0, align 4
  %4 = icmp eq i32 %_13, 1
  br i1 %4, label %bb8, label %bb9

bb4:                                              ; preds = %bb8, %bb6
  br label %bb5

bb8:                                              ; preds = %bb7
  %_17 = sub i64 %align, 1
  %_16 = and i64 %_10, %_17
  %_5 = icmp eq i64 %_16, 0
  br i1 %_5, label %bb1, label %bb4

bb9:                                              ; preds = %bb7
  store ptr @alloc_041983ee8170efdaaf95ba67fd072d26, ptr %_12, align 8
  %5 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 1, ptr %5, align 8
  %6 = load ptr, ptr @0, align 8
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %8 = getelementptr inbounds i8, ptr %_12, i64 32
  store ptr %6, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %_12, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %10, i64 8
  store i64 0, ptr %11, align 8
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_12, ptr align 8 @alloc_03d266dccd993e13de22250e3dccd7d7) #24
          to label %unreachable unwind label %terminate

bb1:                                              ; preds = %bb8
  %_19 = icmp eq i64 %size, 0
  %12 = icmp eq i64 %size, 0
  br i1 %12, label %bb11, label %bb12

bb5:                                              ; preds = %bb3, %bb4
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfb4a192166a1619dE(ptr align 1 @alloc_11195730e5236cfdc15ea13be1c301f9, i64 162) #27
  unreachable

bb11:                                             ; preds = %bb1
  store i64 -1, ptr %max_len, align 8
  br label %bb14

bb12:                                             ; preds = %bb1
  br i1 %_19, label %panic, label %bb13

bb14:                                             ; preds = %bb13, %bb11
  %_20 = load i64, ptr %max_len, align 8
  %_7 = icmp ule i64 %len, %_20
  br i1 %_7, label %bb2, label %bb3

bb13:                                             ; preds = %bb12
  %13 = udiv i64 9223372036854775807, %size
  store i64 %13, ptr %max_len, align 8
  br label %bb14

panic:                                            ; preds = %bb12
; invoke core::panicking::panic_const::panic_const_div_by_zero
  invoke void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17hb740a5eb188e0d10E(ptr align 8 @alloc_039c3f0e51c3c794cef31b8a39b44f71) #24
          to label %unreachable unwind label %terminate

terminate:                                        ; preds = %bb9, %panic
  %14 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
; call core::panicking::panic_cannot_unwind
  call void @_ZN4core9panicking19panic_cannot_unwind17h3f96c9c07954d1a5E() #26
  unreachable

unreachable:                                      ; preds = %bb9, %panic
  unreachable

bb3:                                              ; preds = %bb14
  br label %bb5

bb2:                                              ; preds = %bb14
  ret void
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h76d84ed20a5eab15E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %len.i = alloca [8 x i8], align 8
  %self1.i = load ptr, ptr %self, align 8
  %self2.i = getelementptr inbounds i8, ptr %self, i64 8
  %end.i = load ptr, ptr %self2.i, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %0 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %end.i, ptr %self1.i)
  store i64 %0, ptr %len.i, align 8
  %_18.1.i = load i64, ptr %len.i, align 8
  %1 = insertvalue { ptr, i64 } poison, ptr %self1.i, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_18.1.i, 1
  %_0.0 = extractvalue { ptr, i64 } %2, 0
  %_0.1 = extractvalue { ptr, i64 } %2, 1
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1
  ret { ptr, i64 } %4
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h0a1fd3bb7e7c9cdbE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %end_or_len = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %_7 = getelementptr inbounds i8, ptr %self.0, i64 %self.1
  store ptr %_7, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_9 = load ptr, ptr %end_or_len, align 8
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %_9, 1
  ret { ptr, ptr } %1

bb1:                                              ; No predecessors!
  unreachable
}

; core::slice::index::range
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5slice5index5range17hd93dcf9b0ccbdef7E(i64 %bounds, ptr align 8 %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [1 x i8], align 1
  %2 = alloca [1 x i8], align 1
  %3 = alloca [16 x i8], align 8
  %self2 = alloca [16 x i8], align 8
  %_13 = alloca [16 x i8], align 8
  %end = alloca [8 x i8], align 8
  %self = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %start1 = alloca [8 x i8], align 8
  %range = alloca [0 x i8], align 1
; invoke <core::ops::range::RangeFull as core::ops::range::RangeBounds<T>>::start_bound
  %4 = invoke { i64, ptr } @"_ZN86_$LT$core..ops..range..RangeFull$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h63dd4470f9f006cbE"(ptr align 1 %range)
          to label %bb1 unwind label %cleanup

bb17:                                             ; preds = %cleanup
  %5 = load ptr, ptr %3, align 8
  %6 = getelementptr inbounds i8, ptr %3, i64 8
  %7 = load i32, ptr %6, align 8
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1
  resume { ptr, i32 } %9

cleanup:                                          ; preds = %bb12, %bb14, %bb23, %bb6, %bb20, %start
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %3, align 8
  %13 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb17

bb1:                                              ; preds = %start
  %14 = extractvalue { i64, ptr } %4, 0
  %15 = extractvalue { i64, ptr } %4, 1
  store i64 %14, ptr %_5, align 8
  %16 = getelementptr inbounds i8, ptr %_5, i64 8
  store ptr %15, ptr %16, align 8
  %_7 = load i64, ptr %_5, align 8
  switch i64 %_7, label %bb2 [
    i64 0, label %bb4
    i64 1, label %bb5
    i64 2, label %bb3
  ]

bb2:                                              ; preds = %bb7, %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %17 = getelementptr inbounds i8, ptr %_5, i64 8
  %_32 = load ptr, ptr %17, align 8
  %start3 = load i64, ptr %_32, align 8
  store i64 %start3, ptr %start1, align 8
  br label %bb6

bb5:                                              ; preds = %bb1
  %18 = getelementptr inbounds i8, ptr %_5, i64 8
  %start4 = load ptr, ptr %18, align 8
  %self5 = load i64, ptr %start4, align 8
  %19 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self5, i64 1)
  %_37.0 = extractvalue { i64, i1 } %19, 0
  %_37.1 = extractvalue { i64, i1 } %19, 1
  %20 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false)
  %21 = zext i1 %20 to i8
  store i8 %21, ptr %2, align 1
  %22 = load i8, ptr %2, align 1
  %_34 = trunc i8 %22 to i1
  br i1 %_34, label %bb20, label %bb21

bb3:                                              ; preds = %bb1
  store i64 0, ptr %start1, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb21, %bb4
; invoke <core::ops::range::RangeFull as core::ops::range::RangeBounds<T>>::end_bound
  %23 = invoke { i64, ptr } @"_ZN86_$LT$core..ops..range..RangeFull$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17h4f2bdc7dde16f106E"(ptr align 1 %range)
          to label %bb7 unwind label %cleanup

bb21:                                             ; preds = %bb5
  %24 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %_37.0, ptr %24, align 8
  store i64 1, ptr %self, align 8
  %25 = getelementptr inbounds i8, ptr %self, i64 8
  %x = load i64, ptr %25, align 8
  store i64 %x, ptr %start1, align 8
  br label %bb6

bb20:                                             ; preds = %bb5
  %26 = load i64, ptr @0, align 8
  %27 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %26, ptr %self, align 8
  %28 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %27, ptr %28, align 8
; invoke core::slice::index::slice_start_index_overflow_fail
  invoke void @_ZN4core5slice5index31slice_start_index_overflow_fail17hc48d791526b1c078E(ptr align 8 @alloc_e6b42d2b8789752d925cb7715548de74) #24
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb12, %bb14, %bb23, %bb20
  unreachable

bb7:                                              ; preds = %bb6
  %29 = extractvalue { i64, ptr } %23, 0
  %30 = extractvalue { i64, ptr } %23, 1
  store i64 %29, ptr %_13, align 8
  %31 = getelementptr inbounds i8, ptr %_13, i64 8
  store ptr %30, ptr %31, align 8
  %_15 = load i64, ptr %_13, align 8
  switch i64 %_15, label %bb2 [
    i64 0, label %bb9
    i64 1, label %bb10
    i64 2, label %bb8
  ]

bb9:                                              ; preds = %bb7
  %32 = getelementptr inbounds i8, ptr %_13, i64 8
  %end6 = load ptr, ptr %32, align 8
  %self7 = load i64, ptr %end6, align 8
  %33 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self7, i64 1)
  %_45.0 = extractvalue { i64, i1 } %33, 0
  %_45.1 = extractvalue { i64, i1 } %33, 1
  %34 = call i1 @llvm.expect.i1(i1 %_45.1, i1 false)
  %35 = zext i1 %34 to i8
  store i8 %35, ptr %1, align 1
  %36 = load i8, ptr %1, align 1
  %_42 = trunc i8 %36 to i1
  br i1 %_42, label %bb23, label %bb24

bb10:                                             ; preds = %bb7
  %37 = getelementptr inbounds i8, ptr %_13, i64 8
  %_33 = load ptr, ptr %37, align 8
  %end9 = load i64, ptr %_33, align 8
  store i64 %end9, ptr %end, align 8
  br label %bb11

bb8:                                              ; preds = %bb7
  store i64 %bounds, ptr %end, align 8
  br label %bb11

bb24:                                             ; preds = %bb9
  %38 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_45.0, ptr %38, align 8
  store i64 1, ptr %self2, align 8
  %39 = getelementptr inbounds i8, ptr %self2, i64 8
  %x8 = load i64, ptr %39, align 8
  store i64 %x8, ptr %end, align 8
  br label %bb11

bb23:                                             ; preds = %bb9
  %40 = load i64, ptr @0, align 8
  %41 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %40, ptr %self2, align 8
  %42 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %41, ptr %42, align 8
; invoke core::slice::index::slice_end_index_overflow_fail
  invoke void @_ZN4core5slice5index29slice_end_index_overflow_fail17h9dc95cd7fee8d549E(ptr align 8 @alloc_188ed9c65822adf63bb6310b805a766e) #24
          to label %unreachable unwind label %cleanup

bb11:                                             ; preds = %bb8, %bb10, %bb24
  %_21 = load i64, ptr %start1, align 8
  %_22 = load i64, ptr %end, align 8
  %_20 = icmp ugt i64 %_21, %_22
  br i1 %_20, label %bb12, label %bb13

bb13:                                             ; preds = %bb11
  %_27 = load i64, ptr %end, align 8
  %_26 = icmp ugt i64 %_27, %bounds
  br i1 %_26, label %bb14, label %bb15

bb12:                                             ; preds = %bb11
  %_24 = load i64, ptr %start1, align 8
  %_25 = load i64, ptr %end, align 8
; invoke core::slice::index::slice_index_order_fail
  invoke void @_ZN4core5slice5index22slice_index_order_fail17h035de9af16d5a022E(i64 %_24, i64 %_25, ptr align 8 %0) #24
          to label %unreachable unwind label %cleanup

bb15:                                             ; preds = %bb13
  %_30 = load i64, ptr %start1, align 8
  %_31 = load i64, ptr %end, align 8
  %43 = insertvalue { i64, i64 } poison, i64 %_30, 0
  %44 = insertvalue { i64, i64 } %43, i64 %_31, 1
  ret { i64, i64 } %44

bb14:                                             ; preds = %bb13
  %_29 = load i64, ptr %end, align 8
; invoke core::slice::index::slice_end_index_len_fail
  invoke void @_ZN4core5slice5index24slice_end_index_len_fail17h0342d27fee357d65E(i64 %_29, i64 %bounds, ptr align 8 %0) #24
          to label %unreachable unwind label %cleanup
}

; core::slice::memchr::memchr_naive
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5slice6memchr12memchr_naive17h6a356d7a0cc16d09E(i8 %x, ptr align 1 %text.0, i64 %text.1) unnamed_addr #0 {
start:
  %i = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store i64 0, ptr %i, align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
  %_5 = load i64, ptr %i, align 8
  %_4 = icmp ult i64 %_5, %text.1
  br i1 %_4, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %0 = load i64, ptr @0, align 8
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_9 = load i64, ptr %i, align 8
  %_10 = icmp ult i64 %_9, %text.1
  br i1 %_10, label %bb3, label %panic

bb7:                                              ; preds = %bb4, %bb6
  %3 = load i64, ptr %_0, align 8
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  %5 = load i64, ptr %4, align 8
  %6 = insertvalue { i64, i64 } poison, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7

bb3:                                              ; preds = %bb2
  %8 = getelementptr inbounds [0 x i8], ptr %text.0, i64 0, i64 %_9
  %_8 = load i8, ptr %8, align 1
  %_7 = icmp eq i8 %_8, %x
  br i1 %_7, label %bb4, label %bb5

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_9, i64 %text.1, ptr align 8 @alloc_088f7798d70e5f6ed62563131ebc7f15) #24
  unreachable

bb5:                                              ; preds = %bb3
  %9 = load i64, ptr %i, align 8
  %10 = add i64 %9, 1
  store i64 %10, ptr %i, align 8
  br label %bb1

bb4:                                              ; preds = %bb3
  %_11 = load i64, ptr %i, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_11, ptr %11, align 8
  store i64 1, ptr %_0, align 8
  br label %bb7
}

; core::escape::escape_unicode
; Function Attrs: nonlazybind uwtable
define void @_ZN4core6escape14escape_unicode17hde11ab7e1fed01d8E(ptr sret([12 x i8]) align 1 %_0, i32 %c) unnamed_addr #1 {
start:
  %0 = alloca [4 x i8], align 4
  %_51 = alloca [10 x i8], align 1
  %_10 = alloca [16 x i8], align 1
  %output = alloca [10 x i8], align 1
  %self = or i32 %c, 1
  %1 = call i32 @llvm.ctlz.i32(i32 %self, i1 false)
  store i32 %1, ptr %0, align 4
  %_6 = load i32, ptr %0, align 4
  %_5 = zext i32 %_6 to i64
  %_4 = udiv i64 %_5, 4
  %start1 = sub i64 %_4, 2
  call void @llvm.memset.p0.i64(ptr align 1 %output, i8 0, i64 10, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_10, ptr align 1 @4, i64 16, i1 false)
  %_13 = lshr i32 %c, 20
  %_12 = and i32 %_13, 15
  %_11 = zext i32 %_12 to i64
  %_14 = icmp ult i64 %_11, 16
  br i1 %_14, label %bb1, label %panic

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [16 x i8], ptr %_10, i64 0, i64 %_11
  %_9 = load i8, ptr %2, align 1
  %3 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 3
  store i8 %_9, ptr %3, align 1
  %_19 = lshr i32 %c, 16
  %_18 = and i32 %_19, 15
  %_17 = zext i32 %_18 to i64
  %_20 = icmp ult i64 %_17, 16
  br i1 %_20, label %bb3, label %panic2

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_11, i64 16, ptr align 8 @alloc_2fe1776bf412731d032283afde9952f0) #24
  unreachable

bb3:                                              ; preds = %bb1
  %4 = getelementptr inbounds [16 x i8], ptr %_10, i64 0, i64 %_17
  %_16 = load i8, ptr %4, align 1
  %5 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 4
  store i8 %_16, ptr %5, align 1
  %_25 = lshr i32 %c, 12
  %_24 = and i32 %_25, 15
  %_23 = zext i32 %_24 to i64
  %_26 = icmp ult i64 %_23, 16
  br i1 %_26, label %bb5, label %panic3

panic2:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_17, i64 16, ptr align 8 @alloc_4a5b1a47d4f18a95da9da1987cd8c239) #24
  unreachable

bb5:                                              ; preds = %bb3
  %6 = getelementptr inbounds [16 x i8], ptr %_10, i64 0, i64 %_23
  %_22 = load i8, ptr %6, align 1
  %7 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 5
  store i8 %_22, ptr %7, align 1
  %_31 = lshr i32 %c, 8
  %_30 = and i32 %_31, 15
  %_29 = zext i32 %_30 to i64
  %_32 = icmp ult i64 %_29, 16
  br i1 %_32, label %bb7, label %panic4

panic3:                                           ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_23, i64 16, ptr align 8 @alloc_73fc148532a0690c92ce39e322beca7c) #24
  unreachable

bb7:                                              ; preds = %bb5
  %8 = getelementptr inbounds [16 x i8], ptr %_10, i64 0, i64 %_29
  %_28 = load i8, ptr %8, align 1
  %9 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 6
  store i8 %_28, ptr %9, align 1
  %_37 = lshr i32 %c, 4
  %_36 = and i32 %_37, 15
  %_35 = zext i32 %_36 to i64
  %_38 = icmp ult i64 %_35, 16
  br i1 %_38, label %bb9, label %panic5

panic4:                                           ; preds = %bb5
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_29, i64 16, ptr align 8 @alloc_7a8230073db0345c385103f1210eb63b) #24
  unreachable

bb9:                                              ; preds = %bb7
  %10 = getelementptr inbounds [16 x i8], ptr %_10, i64 0, i64 %_35
  %_34 = load i8, ptr %10, align 1
  %11 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 7
  store i8 %_34, ptr %11, align 1
  %_42 = and i32 %c, 15
  %_41 = zext i32 %_42 to i64
  %_43 = icmp ult i64 %_41, 16
  br i1 %_43, label %bb11, label %panic6

panic5:                                           ; preds = %bb7
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_35, i64 16, ptr align 8 @alloc_81be960a2b3cc1eeef322c81e8df9f31) #24
  unreachable

bb11:                                             ; preds = %bb9
  %12 = getelementptr inbounds [16 x i8], ptr %_10, i64 0, i64 %_41
  %_40 = load i8, ptr %12, align 1
  %13 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 8
  store i8 %_40, ptr %13, align 1
  %14 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 9
  store i8 125, ptr %14, align 1
  %_46 = icmp ult i64 %start1, 10
  br i1 %_46, label %bb14, label %panic7

panic6:                                           ; preds = %bb9
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_41, i64 16, ptr align 8 @alloc_e69def46d8151dddc43334e0c35c2ea7) #24
  unreachable

bb14:                                             ; preds = %bb11
  %15 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 %start1
  store i8 92, ptr %15, align 1
  %_47 = add i64 %start1, 1
  %_48 = icmp ult i64 %_47, 10
  br i1 %_48, label %bb15, label %panic8

panic7:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %start1, i64 10, ptr align 8 @alloc_9e9af40a78aac243287019176b82a546) #24
  unreachable

bb15:                                             ; preds = %bb14
  %16 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 %_47
  store i8 117, ptr %16, align 1
  %_49 = add i64 %start1, 2
  %_50 = icmp ult i64 %_49, 10
  br i1 %_50, label %bb16, label %panic9

panic8:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_47, i64 10, ptr align 8 @alloc_ba534666585302d11e7d1a0c0b6c5df7) #24
  unreachable

bb16:                                             ; preds = %bb15
  %17 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 %_49
  store i8 123, ptr %17, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_51, ptr align 1 %output, i64 10, i1 false)
  %_53 = trunc i64 %start1 to i8
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0, ptr align 1 %_51, i64 10, i1 false)
  %18 = getelementptr inbounds i8, ptr %_0, i64 10
  store i8 %_53, ptr %18, align 1
  %19 = getelementptr inbounds i8, ptr %18, i64 1
  store i8 10, ptr %19, align 1
  ret void

panic9:                                           ; preds = %bb15
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_49, i64 10, ptr align 8 @alloc_4ebd51857ec52ed806b6777aa014b67e) #24
  unreachable
}

; core::escape::EscapeIterInner<_>::next
; Function Attrs: nonlazybind uwtable
define { i1, i8 } @"_ZN4core6escape24EscapeIterInner$LT$_$GT$4next17hb630fa9178636829E"(ptr align 1 %self) unnamed_addr #1 {
start:
  %self2 = alloca [1 x i8], align 1
  %self1 = alloca [2 x i8], align 1
  %_2 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  %self3 = getelementptr inbounds i8, ptr %self, i64 10
  %self4 = getelementptr inbounds i8, ptr %self, i64 10
  %0 = getelementptr inbounds i8, ptr %self, i64 10
  %other = getelementptr inbounds i8, ptr %0, i64 1
  %1 = getelementptr inbounds i8, ptr %self, i64 10
  %_16 = load i8, ptr %1, align 1
  %2 = getelementptr inbounds i8, ptr %self, i64 10
  %3 = getelementptr inbounds i8, ptr %2, i64 1
  %_17 = load i8, ptr %3, align 1
  %_11 = icmp ult i8 %_16, %_17
  br i1 %_11, label %bb2, label %bb4

bb4:                                              ; preds = %start
  %4 = load i8, ptr @5, align 1
  %5 = trunc i8 %4 to i1
  %6 = load i8, ptr getelementptr inbounds (i8, ptr @5, i64 1), align 1
  %7 = zext i1 %5 to i8
  store i8 %7, ptr %self1, align 1
  %8 = getelementptr inbounds i8, ptr %self1, i64 1
  store i8 %6, ptr %8, align 1
  %9 = load i8, ptr @5, align 1
  %10 = trunc i8 %9 to i1
  %11 = load i8, ptr getelementptr inbounds (i8, ptr @5, i64 1), align 1
  %12 = zext i1 %10 to i8
  store i8 %12, ptr %_0, align 1
  %13 = getelementptr inbounds i8, ptr %_0, i64 1
  store i8 %11, ptr %13, align 1
  br label %bb1

bb2:                                              ; preds = %start
  %14 = getelementptr inbounds i8, ptr %self, i64 10
  %old = load i8, ptr %14, align 1
; call <u8 as core::iter::range::Step>::forward_unchecked
  %_15 = call i8 @"_ZN46_$LT$u8$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hb9d4695345e6ee27E"(i8 %old, i64 1)
  %15 = getelementptr inbounds i8, ptr %self, i64 10
  store i8 %_15, ptr %15, align 1
  %16 = getelementptr inbounds i8, ptr %self1, i64 1
  store i8 %old, ptr %16, align 1
  store i8 1, ptr %self1, align 1
  %17 = getelementptr inbounds i8, ptr %self1, i64 1
  %v = load i8, ptr %17, align 1
  %18 = getelementptr inbounds i8, ptr %_2, i64 1
  store i8 %v, ptr %18, align 1
  store i8 0, ptr %_2, align 1
  %19 = getelementptr inbounds i8, ptr %_2, i64 1
  %i = load i8, ptr %19, align 1
  %index = zext i8 %i to i64
  br label %bb7

bb1:                                              ; preds = %bb7, %bb4
  %20 = load i8, ptr %_0, align 1
  %21 = trunc i8 %20 to i1
  %22 = getelementptr inbounds i8, ptr %_0, i64 1
  %23 = load i8, ptr %22, align 1
  %24 = insertvalue { i1, i8 } poison, i1 %21, 0
  %25 = insertvalue { i1, i8 } %24, i8 %23, 1
  ret { i1, i8 } %25

bb7:                                              ; preds = %bb2
  %_24 = icmp ult i64 %index, 10
  %_19 = getelementptr inbounds i8, ptr %self, i64 %index
  %26 = load i8, ptr %_19, align 1
  store i8 %26, ptr %self2, align 1
  %_6 = load i8, ptr %self2, align 1
  %_27 = icmp ule i8 %_6, 127
  %27 = getelementptr inbounds i8, ptr %_0, i64 1
  store i8 %_6, ptr %27, align 1
  store i8 1, ptr %_0, align 1
  br label %bb1

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable
}

; core::escape::EscapeIterInner<_>::backslash
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core6escape24EscapeIterInner$LT$_$GT$9backslash17ha1662a6d7eb382a6E"(ptr sret([12 x i8]) align 1 %_0, i8 %c) unnamed_addr #1 {
start:
  %data = alloca [10 x i8], align 1
  %output = alloca [10 x i8], align 1
  call void @llvm.memset.p0.i64(ptr align 1 %output, i8 0, i64 10, i1 false)
  %0 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 0
  store i8 92, ptr %0, align 1
  %1 = getelementptr inbounds [10 x i8], ptr %output, i64 0, i64 1
  store i8 %c, ptr %1, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %data, ptr align 1 %output, i64 10, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0, ptr align 1 %data, i64 10, i1 false)
  %2 = getelementptr inbounds i8, ptr %_0, i64 10
  store i8 0, ptr %2, align 1
  %3 = getelementptr inbounds i8, ptr %2, i64 1
  store i8 2, ptr %3, align 1
  ret void
}

; core::option::Option<T>::map_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$11map_or_else17h7069af26f3352e31E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %0, i64 %1, ptr align 8 %default) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca [16 x i8], align 8
  %_10 = alloca [1 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %self = alloca [16 x i8], align 8
  store ptr %0, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %3, align 8
  store i8 1, ptr %_10, align 1
  store i8 1, ptr %_9, align 1
  %4 = load ptr, ptr %self, align 8
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_4 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_4, 0
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
; invoke alloc::fmt::format::{{closure}}
  invoke void @"_ZN5alloc3fmt6format28_$u7b$$u7b$closure$u7d$$u7d$17hf7179c704a36a626E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %default)
          to label %bb5 unwind label %cleanup

bb3:                                              ; preds = %start
  %t.0 = load ptr, ptr %self, align 8
  %8 = getelementptr inbounds i8, ptr %self, i64 8
  %t.1 = load i64, ptr %8, align 8
  store i8 0, ptr %_9, align 1
; invoke core::ops::function::FnOnce::call_once
  invoke void @_ZN4core3ops8function6FnOnce9call_once17h88ecffbcedbd9f54E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %t.0, i64 %t.1)
          to label %bb4 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %9 = load i8, ptr %_9, align 1
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb10, label %bb7

cleanup:                                          ; preds = %bb3, %bb2
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %2, align 8
  %14 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb11

bb5:                                              ; preds = %bb2
  br label %bb6

bb6:                                              ; preds = %bb9, %bb4, %bb5
  ret void

bb4:                                              ; preds = %bb3
  %15 = load i8, ptr %_10, align 1
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb9, label %bb6

bb9:                                              ; preds = %bb4
  br label %bb6

bb7:                                              ; preds = %bb10, %bb11
  %17 = load i8, ptr %_10, align 1
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb12, label %bb8

bb10:                                             ; preds = %bb11
  br label %bb7

bb8:                                              ; preds = %bb12, %bb7
  %19 = load ptr, ptr %2, align 8
  %20 = getelementptr inbounds i8, ptr %2, i64 8
  %21 = load i32, ptr %20, align 8
  %22 = insertvalue { ptr, i32 } poison, ptr %19, 0
  %23 = insertvalue { ptr, i32 } %22, i32 %21, 1
  resume { ptr, i32 } %23

bb12:                                             ; preds = %bb7
  br label %bb8

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::get_or_insert_with
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 ptr @"_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17hb62946e41281579bE"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_8 = alloca [1 x i8], align 1
  %self1 = alloca [8 x i8], align 8
  %_4 = alloca [4 x i8], align 4
  store i8 1, ptr %_8, align 1
  %1 = load i32, ptr %self, align 4
  %2 = icmp eq i32 %1, 1114113
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb1, label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_8, align 1
; invoke core::iter::adapters::peekable::Peekable<I>::peek::{{closure}}
  %_5 = invoke i32 @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17hdc02940e94b32597E"(ptr align 8 %f)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %bb3, %start
  %4 = load i32, ptr %self, align 4
  %5 = icmp eq i32 %4, 1114113
  %_9 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_9, 0
  br i1 %6, label %bb12, label %bb13

bb10:                                             ; preds = %bb4, %cleanup
  %7 = load i8, ptr %_8, align 1
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb7

cleanup:                                          ; preds = %bb1
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i32 %_5, ptr %_4, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %13 = load i32, ptr %_4, align 4
  store i32 %13, ptr %self, align 4
  br label %bb5

bb4:                                              ; No predecessors!
  %14 = load i32, ptr %_4, align 4
  store i32 %14, ptr %self, align 4
  br label %bb10

bb7:                                              ; preds = %bb9, %bb10
  %15 = load ptr, ptr %0, align 8
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  %17 = load i32, ptr %16, align 8
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19

bb9:                                              ; preds = %bb10
  br label %bb7

bb12:                                             ; preds = %bb5
  store ptr null, ptr %self1, align 8
; call core::hint::unreachable_unchecked::precondition_check
  call void @_ZN4core4hint21unreachable_unchecked18precondition_check17h7ac5a7755e93f72eE() #23
  br label %bb11

bb13:                                             ; preds = %bb5
  store ptr %self, ptr %self1, align 8
  %val = load ptr, ptr %self1, align 8
  %20 = load i8, ptr %_8, align 1
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb8, label %bb6

bb11:                                             ; preds = %bb12
  unreachable

bb6:                                              ; preds = %bb8, %bb13
  ret ptr %val

bb8:                                              ; preds = %bb13
  br label %bb6
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17h3898e5c4679b08b5E"(i64 %0, i32 %1) unnamed_addr #0 {
start:
  %_0 = alloca [4 x i8], align 4
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i32 %1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i32, ptr %3, align 8
  %5 = icmp eq i32 %4, 1114112
  %_3 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_3, 0
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4
  br label %bb5

bb3:                                              ; preds = %start
  %x.0 = load i64, ptr %self, align 8
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %x.1 = load i32, ptr %7, align 8
; call proc_macro2::parse::character::{{closure}}
  %_5 = call i32 @"_ZN11proc_macro25parse9character28_$u7b$$u7b$closure$u7d$$u7d$17hfde333cf12f9597eE"(i64 %x.0, i32 %x.1)
  store i32 %_5, ptr %_0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb2
  %8 = load i32, ptr %_0, align 4
  ret i32 %8

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17h41646620a4ff6ac6E"(i64 %0, i32 %1) unnamed_addr #0 {
start:
  %_0 = alloca [4 x i8], align 4
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i32 %1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i32, ptr %3, align 8
  %5 = icmp eq i32 %4, 1114112
  %_3 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_3, 0
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4
  br label %bb5

bb3:                                              ; preds = %start
  %x.0 = load i64, ptr %self, align 8
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %x.1 = load i32, ptr %7, align 8
; call proc_macro2::parse::character::{{closure}}
  %_5 = call i32 @"_ZN11proc_macro25parse9character28_$u7b$$u7b$closure$u7d$$u7d$17h477beb8b765bad15E"(i64 %x.0, i32 %x.1)
  store i32 %_5, ptr %_0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb2
  %8 = load i32, ptr %_0, align 4
  ret i32 %8

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17h72fac4cf7b2d6d4cE"(i32 %0, i32 %1) unnamed_addr #0 {
start:
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i64 4
  store i32 %1, ptr %2, align 4
  %3 = load i32, ptr %self, align 4
  %_3 = zext i32 %3 to i64
  %4 = icmp eq i64 %_3, 0
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4
  br label %bb5

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i64 4
  %x = load i32, ptr %5, align 4
; call core::ops::function::FnOnce::call_once
  %_5 = call i32 @_ZN4core3ops8function6FnOnce9call_once17h7322ffc30c4e0825E(i32 %x)
  %6 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_5, ptr %6, align 4
  store i32 1, ptr %_0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb2
  %7 = load i32, ptr %_0, align 4
  %8 = getelementptr inbounds i8, ptr %_0, i64 4
  %9 = load i32, ptr %8, align 4
  %10 = insertvalue { i32, i32 } poison, i32 %7, 0
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1
  ret { i32, i32 } %11

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17h77ecd3a3409cd483E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_0 = alloca [2 x i8], align 1
  %_3 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %x.0 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %x.1 = load i8, ptr %2, align 8
; call proc_macro2::parse::byte::{{closure}}
  %_5 = call i8 @"_ZN11proc_macro25parse4byte28_$u7b$$u7b$closure$u7d$$u7d$17hae83d82df0adc770E"(i64 %x.0, i8 %x.1)
  %3 = getelementptr inbounds i8, ptr %_0, i64 1
  store i8 %_5, ptr %3, align 1
  store i8 1, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb2
  %4 = load i8, ptr %_0, align 1
  %5 = trunc i8 %4 to i1
  %6 = getelementptr inbounds i8, ptr %_0, i64 1
  %7 = load i8, ptr %6, align 1
  %8 = insertvalue { i1, i8 } poison, i1 %5, 0
  %9 = insertvalue { i1, i8 } %8, i8 %7, 1
  ret { i1, i8 } %9

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17hf65f361b6762d726E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_0 = alloca [2 x i8], align 1
  %_3 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %x.0 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %x.1 = load i8, ptr %2, align 8
; call proc_macro2::parse::byte::{{closure}}
  %_5 = call i8 @"_ZN11proc_macro25parse4byte28_$u7b$$u7b$closure$u7d$$u7d$17h60d38292a419d32bE"(i64 %x.0, i8 %x.1)
  %3 = getelementptr inbounds i8, ptr %_0, i64 1
  store i8 %_5, ptr %3, align 1
  store i8 1, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb2
  %4 = load i8, ptr %_0, align 1
  %5 = trunc i8 %4 to i1
  %6 = getelementptr inbounds i8, ptr %_0, i64 1
  %7 = load i8, ptr %6, align 1
  %8 = insertvalue { i1, i8 } poison, i1 %5, 0
  %9 = insertvalue { i1, i8 } %8, i8 %7, 1
  ret { i1, i8 } %9

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h2409134a6cf7687bE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_3 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i64 1, ptr %_0, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %v.0 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %v.1 = load i8, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %v.0, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i8 %v.1, ptr %4, align 8
  store i64 0, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17h72f90ef19e2267ecE"(i32 %0) unnamed_addr #0 {
start:
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
  %1 = load i32, ptr %self, align 4
  %2 = icmp eq i32 %1, 1114112
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i32, ptr %self, align 4
  store i32 %v, ptr %_0, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %4 = load i32, ptr %_0, align 4
  ret i32 %4

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17head6a7e7518d104bE"(i64 %0, i32 %1) unnamed_addr #0 {
start:
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i32 %1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i32, ptr %3, align 8
  %5 = icmp eq i32 %4, 1114112
  %_3 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_3, 0
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 1114112, ptr %7, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v.0 = load i64, ptr %self, align 8
  %8 = getelementptr inbounds i8, ptr %self, i64 8
  %v.1 = load i32, ptr %8, align 8
  store i64 %v.0, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 %v.1, ptr %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %10 = load i64, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { i64, i32 } poison, i64 %10, 0
  %14 = insertvalue { i64, i32 } %13, i32 %12, 1
  ret { i64, i32 } %14

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::map_or
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17h1672abf021d31527E"(ptr align 8 %self, i1 zeroext %default) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  store i8 1, ptr %_8, align 1
  %_4 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %_4, 0
  br i1 %1, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i8 0, ptr %_8, align 1
  %2 = zext i1 %default to i8
  store i8 %2, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %t.0 = load i64, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  %t.1 = load i8, ptr %4, align 8
; invoke proc_macro2::parse::trailing_backslash::{{closure}}
  %5 = invoke zeroext i1 @"_ZN11proc_macro25parse18trailing_backslash28_$u7b$$u7b$closure$u7d$$u7d$17hfd2ac76fad59c85fE"(i64 %t.0, i8 %t.1)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb7, %bb4, %bb2
  %6 = load i8, ptr %_0, align 1
  %7 = trunc i8 %6 to i1
  ret i1 %7

bb9:                                              ; preds = %cleanup
  %8 = load i8, ptr %_8, align 1
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb8, label %bb6

cleanup:                                          ; preds = %bb3
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  %14 = zext i1 %5 to i8
  store i8 %14, ptr %_0, align 1
  %15 = load i8, ptr %_8, align 1
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb7, label %bb5

bb7:                                              ; preds = %bb4
  br label %bb5

bb6:                                              ; preds = %bb8, %bb9
  %17 = load ptr, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  %19 = load i32, ptr %18, align 8
  %20 = insertvalue { ptr, i32 } poison, ptr %17, 0
  %21 = insertvalue { ptr, i32 } %20, i32 %19, 1
  resume { ptr, i32 } %21

bb8:                                              ; preds = %bb9
  br label %bb6

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::map_or
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17h9dc9f2e4f6680401E"(ptr align 4 %0, i1 zeroext %default) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 8
  store ptr %0, ptr %self, align 8
  store i8 1, ptr %_8, align 1
  %2 = load ptr, ptr %self, align 8
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_4 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i8 0, ptr %_8, align 1
  %6 = zext i1 %default to i8
  store i8 %6, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %start
  %t = load ptr, ptr %self, align 8
; invoke proc_macro2::parse::float_digits::{{closure}}
  %7 = invoke zeroext i1 @"_ZN11proc_macro25parse12float_digits28_$u7b$$u7b$closure$u7d$$u7d$17he97c94eb2472df3fE"(ptr align 4 %t)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb7, %bb4, %bb2
  %8 = load i8, ptr %_0, align 1
  %9 = trunc i8 %8 to i1
  ret i1 %9

bb9:                                              ; preds = %cleanup
  %10 = load i8, ptr %_8, align 1
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb8, label %bb6

cleanup:                                          ; preds = %bb3
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %1, align 8
  %15 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  %16 = zext i1 %7 to i8
  store i8 %16, ptr %_0, align 1
  %17 = load i8, ptr %_8, align 1
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb7, label %bb5

bb7:                                              ; preds = %bb4
  br label %bb5

bb6:                                              ; preds = %bb8, %bb9
  %19 = load ptr, ptr %1, align 8
  %20 = getelementptr inbounds i8, ptr %1, i64 8
  %21 = load i32, ptr %20, align 8
  %22 = insertvalue { ptr, i32 } poison, ptr %19, 0
  %23 = insertvalue { ptr, i32 } %22, i32 %21, 1
  resume { ptr, i32 } %23

bb8:                                              ; preds = %bb9
  br label %bb6

bb1:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h569e8a89eda19de5E"(ptr align 1 %self) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i8, ptr %self, align 1
  %1 = trunc i8 %0 to i1
  %_2 = zext i1 %1 to i64
  %2 = icmp eq i64 %_2, 1
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb4:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h7d854fe3cc20bfe7E"(ptr align 4 %self) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i32, ptr %self, align 4
  %1 = icmp eq i32 %0, 1114112
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 1
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb4:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hefe0c23647d98469E"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
  %1 = alloca [8 x i8], align 8
  %t = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %2 = load ptr, ptr %self, align 8
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_3 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_3, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %t, ptr align 8 %6, i64 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %t, i64 8, i1 false)
  br label %bb5

bb2:                                              ; preds = %start
  %e.0 = load ptr, ptr %self, align 8
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %e.1 = load ptr, ptr %7, align 8
; call proc_macro2::imp::proc_macro_parse::{{closure}}
  %8 = call i64 @"_ZN11proc_macro23imp16proc_macro_parse28_$u7b$$u7b$closure$u7d$$u7d$17h55185e1290a02161E"(ptr align 1 %e.0, ptr align 8 %e.1)
  store i64 %8, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 8 %1, i64 8, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  %9 = load i64, ptr %_0, align 4
  ret i64 %9

bb1:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h66e27003990d93bbE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_7 = alloca [24 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %t = alloca [24 x i8], align 8
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775807
  %_3 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %t, i64 24, i1 false)
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h39d4a4c3dac1e9afE(ptr sret([24 x i8]) align 8 %_5, ptr align 8 %_7)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_5, i64 24, i1 false)
  br label %bb5

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i8, ptr %3, align 8
  %e = trunc i8 %4 to i1
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = zext i1 %e to i8
  store i8 %6, ptr %5, align 8
  store i64 -9223372036854775807, ptr %_0, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h7be2dc538074a140E"(ptr align 1 %self) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i8, ptr %self, align 1
  %1 = trunc i8 %0 to i1
  %_2 = zext i1 %1 to i64
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb4:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hdc96799374bc9093E"(ptr align 4 %self) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i32, ptr %self, align 4
  %1 = icmp eq i32 %0, 1114112
  %_2 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb4:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define ptr @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h4c7175faae8c50e5E"(ptr %0, ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca [16 x i8], align 8
  %e = alloca [0 x i8], align 1
  %self = alloca [8 x i8], align 8
  store ptr %0, ptr %self, align 8
  %3 = load ptr, ptr %self, align 8
  %4 = ptrtoint ptr %3 to i64
  %5 = icmp eq i64 %4, 0
  %_3 = select i1 %5, i64 1, i64 0
  %6 = icmp eq i64 %_3, 0
  br i1 %6, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %t = load ptr, ptr %self, align 8
  ret ptr %t

bb2:                                              ; preds = %start
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hebd1efddce947a93E(ptr align 1 %msg.0, i64 %msg.1, ptr align 1 %e, ptr align 8 @vtable.2, ptr align 8 %1) #24
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %7 = load ptr, ptr %2, align 8
  %8 = getelementptr inbounds i8, ptr %2, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = insertvalue { ptr, i32 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i32 } %10, i32 %9, 1
  resume { ptr, i32 } %11

cleanup:                                          ; preds = %bb2
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %2, align 8
  %15 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb4

unreachable:                                      ; preds = %bb2
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5b07cb8b95e79068E"(ptr sret([16 x i8]) align 4 %t, ptr align 4 %self, ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %e = alloca [0 x i8], align 1
  %2 = getelementptr inbounds i8, ptr %self, i64 12
  %3 = load i8, ptr %2, align 4
  %4 = icmp eq i8 %3, 11
  %_3 = select i1 %4, i64 1, i64 0
  %5 = icmp eq i64 %_3, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %t, ptr align 4 %self, i64 16, i1 false)
  ret void

bb2:                                              ; preds = %start
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hebd1efddce947a93E(ptr align 1 %msg.0, i64 %msg.1, ptr align 1 %e, ptr align 8 @vtable.3, ptr align 8 %0) #24
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %6 = load ptr, ptr %1, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 8
  %8 = load i32, ptr %7, align 8
  %9 = insertvalue { ptr, i32 } poison, ptr %6, 0
  %10 = insertvalue { ptr, i32 } %9, i32 %8, 1
  resume { ptr, i32 } %10

cleanup:                                          ; preds = %bb2
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %1, align 8
  %14 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb4

unreachable:                                      ; preds = %bb2
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9c5bf26c83cf714bE"(i32 %0, i32 %1, ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %2) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %3 = alloca [16 x i8], align 8
  %e = alloca [0 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %4 = getelementptr inbounds i8, ptr %self, i64 4
  store i32 %1, ptr %4, align 4
  %5 = load i32, ptr %self, align 4
  %_3 = zext i32 %5 to i64
  %6 = icmp eq i64 %_3, 0
  br i1 %6, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i64 4
  %t = load i32, ptr %7, align 4
  ret i32 %t

bb2:                                              ; preds = %start
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hebd1efddce947a93E(ptr align 1 %msg.0, i64 %msg.1, ptr align 1 %e, ptr align 8 @vtable.3, ptr align 8 %2) #24
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %8 = load ptr, ptr %3, align 8
  %9 = getelementptr inbounds i8, ptr %3, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

cleanup:                                          ; preds = %bb2
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %3, align 8
  %16 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb4

unreachable:                                      ; preds = %bb2
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hb753597c9ee33e55E"(i1 zeroext %0, i8 %1, ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %2) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %3 = alloca [16 x i8], align 8
  %e = alloca [0 x i8], align 1
  %self = alloca [2 x i8], align 1
  %4 = zext i1 %0 to i8
  store i8 %4, ptr %self, align 1
  %5 = getelementptr inbounds i8, ptr %self, i64 1
  store i8 %1, ptr %5, align 1
  %6 = load i8, ptr %self, align 1
  %7 = trunc i8 %6 to i1
  %_3 = zext i1 %7 to i64
  %8 = icmp eq i64 %_3, 0
  br i1 %8, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self, i64 1
  %t = load i8, ptr %9, align 1
  ret i8 %t

bb2:                                              ; preds = %start
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hebd1efddce947a93E(ptr align 1 %msg.0, i64 %msg.1, ptr align 1 %e, ptr align 8 @vtable.4, ptr align 8 %2) #24
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %10 = load ptr, ptr %3, align 8
  %11 = getelementptr inbounds i8, ptr %3, i64 8
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14

cleanup:                                          ; preds = %bb2
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %3, align 8
  %18 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb4

unreachable:                                      ; preds = %bb2
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8e43af1e0cacad3E"(i1 zeroext %0, ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca [16 x i8], align 8
  %e = alloca [0 x i8], align 1
  %self = alloca [1 x i8], align 1
  %3 = zext i1 %0 to i8
  store i8 %3, ptr %self, align 1
  %4 = load i8, ptr %self, align 1
  %5 = trunc i8 %4 to i1
  %_3 = zext i1 %5 to i64
  %6 = icmp eq i64 %_3, 0
  br i1 %6, label %bb3, label %bb2

bb3:                                              ; preds = %start
  ret void

bb2:                                              ; preds = %start
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hebd1efddce947a93E(ptr align 1 %msg.0, i64 %msg.1, ptr align 1 %e, ptr align 8 @vtable.5, ptr align 8 %1) #24
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %7 = load ptr, ptr %2, align 8
  %8 = getelementptr inbounds i8, ptr %2, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = insertvalue { ptr, i32 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i32 } %10, i32 %9, 1
  resume { ptr, i32 } %11

cleanup:                                          ; preds = %bb2
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %2, align 8
  %15 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb4

unreachable:                                      ; preds = %bb2
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4152b2f32f1b8defE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %t = alloca [24 x i8], align 8
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775807
  %_3 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %t, i64 24, i1 false)
  br label %bb5

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i8, ptr %3, align 8
  %e = trunc i8 %4 to i1
; call <proc_macro2::Literal as core::str::traits::FromStr>::from_str::{{closure}}
  %_6 = call zeroext i1 @"_ZN67_$LT$proc_macro2..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17hf5f011b77284604dE"(i1 zeroext %e)
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = zext i1 %_6 to i8
  store i8 %6, ptr %5, align 8
  store i64 -9223372036854775807, ptr %_0, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha7570834730c3e9cE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %t = alloca [32 x i8], align 8
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775807
  %_3 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %t, i64 32, i1 false)
  br label %bb5

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i8, ptr %3, align 8
  %e = trunc i8 %4 to i1
; call <proc_macro2::TokenStream as core::str::traits::FromStr>::from_str::{{closure}}
  %_6 = call zeroext i1 @"_ZN71_$LT$proc_macro2..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17h8c9aabf99acb282fE"(i1 zeroext %e)
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = zext i1 %_6 to i8
  store i8 %6, ptr %5, align 8
  store i64 -9223372036854775807, ptr %_0, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc8ff1f712d75a0f9E"(i32 %0, i32 %1) unnamed_addr #0 {
start:
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i64 4
  store i32 %1, ptr %2, align 4
  %3 = load i32, ptr %self, align 4
  %_3 = zext i32 %3 to i64
  %4 = icmp eq i64 %_3, 0
  br i1 %4, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i64 4
  %t = load i32, ptr %5, align 4
  %6 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %t, ptr %6, align 4
  store i8 0, ptr %_0, align 4
  br label %bb5

bb2:                                              ; preds = %start
; call core::ops::function::FnOnce::call_once
  %_6 = call zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17h82880d0733e821e1E()
  %7 = getelementptr inbounds i8, ptr %_0, i64 1
  %8 = zext i1 %_6 to i8
  store i8 %8, ptr %7, align 1
  store i8 1, ptr %_0, align 4
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  %9 = load i64, ptr %_0, align 4
  ret i64 %9

bb1:                                              ; No predecessors!
  unreachable
}

; core::unicode::unicode_data::white_space::lookup
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17hd872382b9bd94aefE(i32 %c) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %_2 = lshr i32 %c, 8
  switch i32 %_2, label %bb1 [
    i32 0, label %bb2
    i32 22, label %bb4
    i32 32, label %bb5
    i32 48, label %bb7
  ]

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb8

bb2:                                              ; preds = %start
  %_8 = zext i32 %c to i64
  %_7 = and i64 %_8, 255
  %_9 = icmp ult i64 %_7, 256
  br i1 %_9, label %bb3, label %panic

bb4:                                              ; preds = %start
  %0 = icmp eq i32 %c, 5760
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %_0, align 1
  br label %bb8

bb5:                                              ; preds = %start
  %_14 = zext i32 %c to i64
  %_13 = and i64 %_14, 255
  %_15 = icmp ult i64 %_13, 256
  br i1 %_15, label %bb6, label %panic1

bb7:                                              ; preds = %start
  %2 = icmp eq i32 %c, 12288
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %_0, align 1
  br label %bb8

bb3:                                              ; preds = %bb2
  %4 = getelementptr inbounds [256 x i8], ptr @_ZN4core7unicode12unicode_data11white_space14WHITESPACE_MAP17he63ff13526352a5cE, i64 0, i64 %_7
  %_5 = load i8, ptr %4, align 1
  %_4 = and i8 %_5, 1
  %5 = icmp ne i8 %_4, 0
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb8

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_7, i64 256, ptr align 8 @alloc_9ad48ca586742b9ab121bf87fcbd1a9d) #24
  unreachable

bb8:                                              ; preds = %bb1, %bb7, %bb6, %bb4, %bb3
  %7 = load i8, ptr %_0, align 1
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb6:                                              ; preds = %bb5
  %9 = getelementptr inbounds [256 x i8], ptr @_ZN4core7unicode12unicode_data11white_space14WHITESPACE_MAP17he63ff13526352a5cE, i64 0, i64 %_13
  %_11 = load i8, ptr %9, align 1
  %_10 = and i8 %_11, 2
  %10 = icmp ne i8 %_10, 0
  %11 = zext i1 %10 to i8
  store i8 %11, ptr %_0, align 1
  br label %bb8

panic1:                                           ; preds = %bb5
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_13, i64 256, ptr align 8 @alloc_bf59a592960a1522cd4ff178e3b5b01a) #24
  unreachable
}

; core::core_simd::masks::<impl core::core_simd::masks::sealed::Sealed for i8>::valid
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core9core_simd5masks71_$LT$impl$u20$core..core_simd..masks..sealed..Sealed$u20$for$u20$i8$GT$5valid17h3e99a41ac809b249E"(ptr align 16 %value) unnamed_addr #0 {
start:
  %0 = alloca [1 x i8], align 1
  %1 = alloca [16 x i8], align 16
  %2 = alloca [16 x i8], align 16
  %3 = alloca [16 x i8], align 16
  %4 = alloca [1 x i8], align 1
  %5 = alloca [16 x i8], align 16
  %6 = alloca [16 x i8], align 16
  %7 = alloca [1 x i8], align 1
  %array3 = alloca [1 x i8], align 1
  %array2 = alloca [1 x i8], align 1
  %array1 = alloca [1 x i8], align 1
  %array = alloca [1 x i8], align 1
  %8 = getelementptr inbounds [1 x i8], ptr %array, i64 0, i64 0
  store i8 0, ptr %8, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %array1, ptr align 1 %array, i64 1, i1 false)
; call core::core_simd::vector::Simd<T,_>::load
  call void @"_ZN4core9core_simd6vector17Simd$LT$T$C$_$GT$4load17h6af55bf7e8d98b28E"(ptr sret([1 x i8]) align 1 %7, ptr %array1)
  %vector = load <1 x i8>, ptr %7, align 1
  %9 = shufflevector <1 x i8> %vector, <1 x i8> %vector, <16 x i32> zeroinitializer
  store <16 x i8> %9, ptr %6, align 16
  %_3 = load <16 x i8>, ptr %6, align 16
  %10 = load <16 x i8>, ptr %value, align 16
  %11 = icmp eq <16 x i8> %10, %_3
  %12 = sext <16 x i1> %11 to <16 x i8>
  store <16 x i8> %12, ptr %5, align 16
  %falses = load <16 x i8>, ptr %5, align 16
  %13 = getelementptr inbounds [1 x i8], ptr %array2, i64 0, i64 0
  store i8 -1, ptr %13, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %array3, ptr align 1 %array2, i64 1, i1 false)
; call core::core_simd::vector::Simd<T,_>::load
  call void @"_ZN4core9core_simd6vector17Simd$LT$T$C$_$GT$4load17h6af55bf7e8d98b28E"(ptr sret([1 x i8]) align 1 %4, ptr %array3)
  %vector4 = load <1 x i8>, ptr %4, align 1
  %14 = shufflevector <1 x i8> %vector4, <1 x i8> %vector4, <16 x i32> zeroinitializer
  store <16 x i8> %14, ptr %3, align 16
  %_5 = load <16 x i8>, ptr %3, align 16
  %15 = load <16 x i8>, ptr %value, align 16
  %16 = icmp eq <16 x i8> %15, %_5
  %17 = sext <16 x i1> %16 to <16 x i8>
  store <16 x i8> %17, ptr %2, align 16
  %trues = load <16 x i8>, ptr %2, align 16
  %18 = or <16 x i8> %falses, %trues
  store <16 x i8> %18, ptr %1, align 16
  %valid = load <16 x i8>, ptr %1, align 16
  %19 = trunc <16 x i8> %valid to <16 x i1>
  %20 = call i1 @llvm.vector.reduce.and.v16i1(<16 x i1> %19)
  %21 = zext i1 %20 to i8
  store i8 %21, ptr %0, align 1
  %22 = load i8, ptr %0, align 1
  %_0 = trunc i8 %22 to i1
  ret i1 %_0
}

; core::core_simd::masks::mask_impl::Mask<T,_>::to_bitmask_integer
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core9core_simd5masks9mask_impl17Mask$LT$T$C$_$GT$18to_bitmask_integer17h79bbf7cb4f173dfdE"(ptr align 16 %self) unnamed_addr #0 {
start:
  %0 = alloca [1 x i8], align 1
  %1 = alloca [8 x i8], align 8
  %2 = alloca [16 x i8], align 16
  %3 = alloca [1 x i8], align 1
  %4 = alloca [2 x i8], align 2
  %5 = alloca [16 x i8], align 16
  %6 = alloca [16 x i8], align 16
  %7 = alloca [1 x i8], align 1
  %8 = alloca [4 x i8], align 4
  %9 = alloca [32 x i8], align 32
  %10 = alloca [16 x i8], align 16
  %11 = alloca [1 x i8], align 1
  %12 = alloca [64 x i8], align 64
  %13 = alloca [16 x i8], align 16
  %14 = alloca [1 x i8], align 1
  %array7 = alloca [1 x i8], align 1
  %array6 = alloca [1 x i8], align 1
  %array5 = alloca [1 x i8], align 1
  %array4 = alloca [1 x i8], align 1
  %array3 = alloca [1 x i8], align 1
  %array2 = alloca [1 x i8], align 1
  %array1 = alloca [1 x i8], align 1
  %array = alloca [1 x i8], align 1
  %bitmask = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  br label %bb3

bb3:                                              ; preds = %bb2
  %self14 = load <16 x i8>, ptr %self, align 16
  %15 = getelementptr inbounds [1 x i8], ptr %array2, i64 0, i64 0
  store i8 0, ptr %15, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %array3, ptr align 1 %array2, i64 1, i1 false)
; call core::core_simd::vector::Simd<T,_>::load
  call void @"_ZN4core9core_simd6vector17Simd$LT$T$C$_$GT$4load17h6af55bf7e8d98b28E"(ptr sret([1 x i8]) align 1 %7, ptr %array3)
  %vector15 = load <1 x i8>, ptr %7, align 1
  %16 = shufflevector <1 x i8> %vector15, <1 x i8> %vector15, <16 x i32> zeroinitializer
  store <16 x i8> %16, ptr %6, align 16
  %second16 = load <16 x i8>, ptr %6, align 16
  %17 = shufflevector <16 x i8> %self14, <16 x i8> %second16, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  store <16 x i8> %17, ptr %5, align 16
  %resized17 = load <16 x i8>, ptr %5, align 16
  %18 = lshr <16 x i8> %resized17, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %19 = trunc <16 x i8> %18 to <16 x i1>
  %20 = bitcast <16 x i1> %19 to i16
  store i16 %20, ptr %4, align 2
  %bitmask18 = load i16, ptr %4, align 2
  %21 = zext i16 %bitmask18 to i64
  store i64 %21, ptr %bitmask, align 8
  br label %bb8

bb4:                                              ; No predecessors!
  br label %bb5

bb5:                                              ; preds = %bb4
  %self9 = load <16 x i8>, ptr %self, align 16
  %22 = getelementptr inbounds [1 x i8], ptr %array4, i64 0, i64 0
  store i8 0, ptr %22, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %array5, ptr align 1 %array4, i64 1, i1 false)
; call core::core_simd::vector::Simd<T,_>::load
  call void @"_ZN4core9core_simd6vector17Simd$LT$T$C$_$GT$4load17h6af55bf7e8d98b28E"(ptr sret([1 x i8]) align 1 %11, ptr %array5)
  %vector10 = load <1 x i8>, ptr %11, align 1
  %23 = shufflevector <1 x i8> %vector10, <1 x i8> %vector10, <16 x i32> zeroinitializer
  store <16 x i8> %23, ptr %10, align 16
  %second11 = load <16 x i8>, ptr %10, align 16
  %24 = shufflevector <16 x i8> %self9, <16 x i8> %second11, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  store <32 x i8> %24, ptr %9, align 32
  %resized12 = load <32 x i8>, ptr %9, align 32
  %25 = lshr <32 x i8> %resized12, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %26 = trunc <32 x i8> %25 to <32 x i1>
  %27 = bitcast <32 x i1> %26 to i32
  store i32 %27, ptr %8, align 4
  %bitmask13 = load i32, ptr %8, align 4
  %28 = zext i32 %bitmask13 to i64
  store i64 %28, ptr %bitmask, align 8
  br label %bb7

bb6:                                              ; No predecessors!
  %self8 = load <16 x i8>, ptr %self, align 16
  %29 = getelementptr inbounds [1 x i8], ptr %array6, i64 0, i64 0
  store i8 0, ptr %29, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %array7, ptr align 1 %array6, i64 1, i1 false)
; call core::core_simd::vector::Simd<T,_>::load
  call void @"_ZN4core9core_simd6vector17Simd$LT$T$C$_$GT$4load17h6af55bf7e8d98b28E"(ptr sret([1 x i8]) align 1 %14, ptr %array7)
  %vector = load <1 x i8>, ptr %14, align 1
  %30 = shufflevector <1 x i8> %vector, <1 x i8> %vector, <16 x i32> zeroinitializer
  store <16 x i8> %30, ptr %13, align 16
  %second = load <16 x i8>, ptr %13, align 16
  %31 = shufflevector <16 x i8> %self8, <16 x i8> %second, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  store <64 x i8> %31, ptr %12, align 64
  %resized = load <64 x i8>, ptr %12, align 64
  %32 = lshr <64 x i8> %resized, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %33 = trunc <64 x i8> %32 to <64 x i1>
  %34 = bitcast <64 x i1> %33 to i64
  store i64 %34, ptr %bitmask, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  br label %bb8

bb8:                                              ; preds = %bb3, %bb7
  br label %bb9

bb9:                                              ; preds = %bb1, %bb8
  %35 = load i64, ptr %bitmask, align 8
  ret i64 %35

bb1:                                              ; No predecessors!
  %self19 = load <16 x i8>, ptr %self, align 16
  %36 = getelementptr inbounds [1 x i8], ptr %array, i64 0, i64 0
  store i8 0, ptr %36, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %array1, ptr align 1 %array, i64 1, i1 false)
; call core::core_simd::vector::Simd<T,_>::load
  call void @"_ZN4core9core_simd6vector17Simd$LT$T$C$_$GT$4load17h6af55bf7e8d98b28E"(ptr sret([1 x i8]) align 1 %3, ptr %array1)
  %vector20 = load <1 x i8>, ptr %3, align 1
  %37 = shufflevector <1 x i8> %vector20, <1 x i8> %vector20, <16 x i32> zeroinitializer
  store <16 x i8> %37, ptr %2, align 16
  %second21 = load <16 x i8>, ptr %2, align 16
  %38 = shufflevector <16 x i8> %self19, <16 x i8> %second21, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  store <8 x i8> %38, ptr %1, align 8
  %resized22 = load <8 x i8>, ptr %1, align 8
  %39 = lshr <8 x i8> %resized22, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %40 = trunc <8 x i8> %39 to <8 x i1>
  %41 = bitcast <8 x i1> %40 to i8
  store i8 %41, ptr %0, align 1
  %bitmask23 = load i8, ptr %0, align 1
  %42 = zext i8 %bitmask23 to i64
  store i64 %42, ptr %bitmask, align 8
  br label %bb9
}

; core::core_simd::vector::Simd<T,_>::load
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core9core_simd6vector17Simd$LT$T$C$_$GT$4load17h3a0dbb29f1bedad3E"(ptr sret([1 x i8]) align 1 %_0, ptr %ptr) unnamed_addr #0 {
start:
  %tmp = alloca [1 x i8], align 1
  br label %bb3

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp, ptr align 1 %ptr, i64 1, i1 false)
  %self = load <1 x i8>, ptr %tmp, align 1
  store <1 x i8> %self, ptr %_0, align 1
  ret void

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::core_simd::vector::Simd<T,_>::load
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core9core_simd6vector17Simd$LT$T$C$_$GT$4load17h6af55bf7e8d98b28E"(ptr sret([1 x i8]) align 1 %_0, ptr %ptr) unnamed_addr #0 {
start:
  %tmp = alloca [1 x i8], align 1
  br label %bb3

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp, ptr align 1 %ptr, i64 1, i1 false)
  %self = load <1 x i8>, ptr %tmp, align 1
  store <1 x i8> %self, ptr %_0, align 1
  ret void

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::panicking::assert_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define void @_ZN4core9panicking13assert_failed17h3de64ea7145e7494E(i8 %kind, ptr align 8 %0, ptr align 8 %1, ptr align 8 %args, ptr align 8 %2) unnamed_addr #6 {
start:
  %right = alloca [8 x i8], align 8
  %left = alloca [8 x i8], align 8
  store ptr %0, ptr %left, align 8
  store ptr %1, ptr %right, align 8
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h1275fc7deb7ee94bE(i8 %kind, ptr align 1 %left, ptr align 8 @vtable.6, ptr align 1 %right, ptr align 8 @vtable.6, ptr align 8 %args, ptr align 8 %2) #24
  unreachable
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h0c1330c807aa00e9E"(ptr sret([24 x i8]) align 8 %_0, ptr %self.0, i8 %self.1, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::imp::Group as core::convert::From<proc_macro2::fallback::Group>>::from
  call void @"_ZN99_$LT$proc_macro2..imp..Group$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Group$GT$$GT$4from17h19e9554853a6bcd1E"(ptr sret([24 x i8]) align 8 %_0, ptr %self.0, i8 %self.1)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h2e3ce24ea6234289E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::TokenTree as core::convert::From<proc_macro2::Literal>>::from
  call void @"_ZN90_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Literal$GT$$GT$4from17h3c6186e4c97f07acE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h418cd183295db223E"(ptr sret([32 x i8]) align 8 %_0, ptr align 4 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::TokenTree as core::convert::From<proc_macro2::Punct>>::from
  call void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Punct$GT$$GT$4from17hfb89851df0e60f42E"(ptr sret([32 x i8]) align 8 %_0, ptr align 4 %self)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5334d03991d43354E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro::TokenTree as core::convert::From<proc_macro::Ident>>::from
  call void @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Ident$GT$$GT$4from17h3027ec1ee0210a9bE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5e17d8674dfb76a4E"(ptr align 4 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from
  %_0 = call i32 @"_ZN92_$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$4from17h6a6b58b5075bd4caE"(ptr align 4 %self)
  ret i32 %_0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h63b33f42ae095420E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro::TokenTree as core::convert::From<proc_macro::Literal>>::from
  call void @"_ZN88_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Literal$GT$$GT$4from17h0a50f2fb0a370326E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h67c923807b7299a2E"(ptr sret([32 x i8]) align 8 %_0, i32 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::imp::TokenStream as core::convert::From<proc_macro::TokenStream>>::from
  call void @"_ZN100_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenStream$GT$$GT$4from17h36ae4a6305ad5463E"(ptr sret([32 x i8]) align 8 %_0, i32 %self)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9feb7a8fde82fa33E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::TokenTree as core::convert::From<proc_macro2::Group>>::from
  call void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Group$GT$$GT$4from17hf87ba91a17ac4bdbE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define ptr @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha83ac5476e132838E"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::fallback::TokenStream as core::convert::From<proc_macro2::TokenTree>>::from
  %_0 = call ptr @"_ZN104_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..TokenTree$GT$$GT$4from17h44d82589bc92a35fE"(ptr align 8 %self)
  ret ptr %_0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha8c1f7c77ae42fbdE"(ptr sret([20 x i8]) align 4 %_0, i64 %0, ptr align 8 %1) unnamed_addr #0 {
start:
  %2 = alloca [8 x i8], align 8
  %3 = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 4
  store i64 %0, ptr %3, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %self, ptr align 8 %3, i64 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 4 %self, i64 8, i1 false)
  %4 = load i64, ptr %2, align 8
; call <proc_macro::TokenTree as core::convert::From<proc_macro::Punct>>::from
  call void @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Punct$GT$$GT$4from17h4f1c0ee272d09e1fE"(ptr sret([20 x i8]) align 4 %_0, i64 %4)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc1fd1decfbb423dcE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::TokenTree as core::convert::From<proc_macro2::Ident>>::from
  call void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Ident$GT$$GT$4from17h80423640899c5385E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc82bf4e36ed14217E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::imp::Literal as core::convert::From<proc_macro2::fallback::Literal>>::from
  call void @"_ZN103_$LT$proc_macro2..imp..Literal$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Literal$GT$$GT$4from17h0d20b9606dc4a815E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hdb52881121127dd3E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro::TokenTree as core::convert::From<proc_macro::Group>>::from
  call void @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Group$GT$$GT$4from17haea9619502903a60E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self)
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hece9a510c64871bbE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
; call proc_macro2::imp::<impl core::convert::From<proc_macro2::imp::TokenStream> for proc_macro::TokenStream>::from
  %_0 = call i32 @"_ZN11proc_macro23imp110_$LT$impl$u20$core..convert..From$LT$proc_macro2..imp..TokenStream$GT$$u20$for$u20$proc_macro..TokenStream$GT$4from17ha67328afd6e5b1d7E"(ptr align 8 %self)
  ret i32 %_0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hff8b3ed0091000a4E"(ptr align 8 %0) unnamed_addr #0 {
start:
; call <proc_macro2::imp::Span as core::convert::From<proc_macro2::fallback::Span>>::from
  %_0 = call i32 @"_ZN97_$LT$proc_macro2..imp..Span$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Span$GT$$GT$4from17h43dae0c8cab2de1dE"()
  ret i32 %_0
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h1331991ab679a07aE"(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %s.0, i64 %s.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_43 = alloca [20 x i8], align 4
  %_42 = alloca [20 x i8], align 4
  %end_or_len = alloca [8 x i8], align 8
  %_26 = alloca [24 x i8], align 8
  %val = alloca [20 x i8], align 4
  %_13 = alloca [16 x i8], align 8
  %iter = alloca [32 x i8], align 8
  %self1 = alloca [24 x i8], align 8
  %self = alloca [32 x i8], align 8
  %guard = alloca [16 x i8], align 8
  %vec = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17h637661444d71bd10E"(ptr sret([24 x i8]) align 8 %_26, i64 %s.1, i1 zeroext false)
  %_27 = load i64, ptr %_26, align 8
  %1 = icmp eq i64 %_27, 0
  br i1 %1, label %bb13, label %bb12

bb13:                                             ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_26, i64 8
  %res.0 = load i64, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 8
  %res.1 = load ptr, ptr %3, align 8
  store i64 %res.0, ptr %vec, align 8
  %4 = getelementptr inbounds i8, ptr %vec, i64 8
  store ptr %res.1, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %vec, i64 16
  store i64 0, ptr %5, align 8
  store ptr %vec, ptr %guard, align 8
  %6 = getelementptr inbounds i8, ptr %guard, i64 8
  store i64 0, ptr %6, align 8
  %_24 = load ptr, ptr %guard, align 8
; invoke alloc::vec::Vec<T,A>::spare_capacity_mut
  %7 = invoke { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h87b4752894be1f85E"(ptr align 8 %_24)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_26, i64 8
  %err.0 = load i64, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  %err.1 = load i64, ptr %9, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>,alloc::alloc::Global>>
  invoke void @"_ZN4core3ptr270drop_in_place$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$C$alloc..alloc..Global$GT$$GT$17h09f63b39f45a62c9E"(ptr align 8 %guard) #25
          to label %bb8 unwind label %terminate

cleanup:                                          ; preds = %bb6, %panic, %bb17, %bb13
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb10

bb1:                                              ; preds = %bb13
  %slots.0 = extractvalue { ptr, i64 } %7, 0
  %slots.1 = extractvalue { ptr, i64 } %7, 1
  br label %bb15

bb15:                                             ; preds = %bb1
  %_35 = getelementptr inbounds %"proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>", ptr %s.0, i64 %s.1
  store ptr %_35, ptr %end_or_len, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %_37 = load ptr, ptr %end_or_len, align 8
  store ptr %s.0, ptr %self1, align 8
  %14 = getelementptr inbounds i8, ptr %self1, i64 8
  store ptr %_37, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %self1, i64 16
  store i64 0, ptr %15, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %self1, i64 24, i1 false)
  %16 = getelementptr inbounds i8, ptr %self, i64 24
  store i64 %slots.1, ptr %16, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %self, i64 32, i1 false)
  br label %bb2

bb14:                                             ; No predecessors!
  unreachable

bb2:                                              ; preds = %bb7, %bb16
  %17 = getelementptr inbounds i8, ptr %iter, i64 24
  %_40 = load i64, ptr %17, align 8
  %18 = icmp eq i64 %_40, 0
  br i1 %18, label %bb19, label %bb17

bb19:                                             ; preds = %bb2
  br label %bb5

bb17:                                             ; preds = %bb2
  %19 = getelementptr inbounds i8, ptr %iter, i64 24
  %20 = getelementptr inbounds i8, ptr %iter, i64 24
  %21 = load i64, ptr %20, align 8
  %22 = sub i64 %21, 1
  store i64 %22, ptr %19, align 8
; invoke <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %23 = invoke { i64, ptr } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hea12623d918201ebE"(ptr align 8 %iter)
          to label %bb18 unwind label %cleanup

bb5:                                              ; preds = %bb18, %bb19
  %t = load ptr, ptr %guard, align 8
  %24 = getelementptr inbounds i8, ptr %guard, i64 8
  %t2 = load i64, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %vec, i64 16
  store i64 %s.1, ptr %25, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %vec, i64 24, i1 false)
  ret void

bb18:                                             ; preds = %bb17
  %26 = extractvalue { i64, ptr } %23, 0
  %27 = extractvalue { i64, ptr } %23, 1
  store i64 %26, ptr %_13, align 8
  %28 = getelementptr inbounds i8, ptr %_13, i64 8
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %_13, i64 8
  %30 = load ptr, ptr %29, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = icmp eq i64 %31, 0
  %_15 = select i1 %32, i64 0, i64 1
  %33 = icmp eq i64 %_15, 0
  br i1 %33, label %bb5, label %bb4

bb4:                                              ; preds = %bb18
  %i = load i64, ptr %_13, align 8
  %34 = getelementptr inbounds i8, ptr %_13, i64 8
  %b = load ptr, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %guard, i64 8
  store i64 %i, ptr %35, align 8
  %_20 = icmp ult i64 %i, %slots.1
  br i1 %_20, label %bb6, label %panic

bb6:                                              ; preds = %bb4
  %self3 = getelementptr inbounds [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>"], ptr %slots.0, i64 0, i64 %i
; invoke <proc_macro::bridge::TokenTree<TokenStream,Span,Symbol> as core::clone::Clone>::clone
  invoke void @"_ZN103_$LT$proc_macro..bridge..TokenTree$LT$TokenStream$C$Span$C$Symbol$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h884af4b86fb15d3aE"(ptr sret([20 x i8]) align 4 %val, ptr align 4 %b)
          to label %bb7 unwind label %cleanup

panic:                                            ; preds = %bb4
; invoke core::panicking::panic_bounds_check
  invoke void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %i, i64 %slots.1, ptr align 8 @alloc_05bd7b5bcfb0fb98096b4d6e6990fe41) #24
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb7:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_43, ptr align 4 %val, i64 20, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_42, ptr align 4 %_43, i64 20, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %self3, ptr align 4 %_42, i64 20, i1 false)
  br label %bb2

terminate:                                        ; preds = %bb8, %bb10
  %36 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %37 = extractvalue { ptr, i32 } %36, 0
  %38 = extractvalue { ptr, i32 } %36, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb8:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>>>
  invoke void @"_ZN4core3ptr192drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$GT$$GT$17h2a152f61a7920508E"(ptr align 8 %vec) #25
          to label %bb9 unwind label %terminate

bb9:                                              ; preds = %bb8
  %39 = load ptr, ptr %0, align 8
  %40 = getelementptr inbounds i8, ptr %0, i64 8
  %41 = load i32, ptr %40, align 8
  %42 = insertvalue { ptr, i32 } poison, ptr %39, 0
  %43 = insertvalue { ptr, i32 } %42, i32 %41, 1
  resume { ptr, i32 } %43

bb3:                                              ; No predecessors!
  unreachable
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h89ac050337030e66E"(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %s.0, i64 %s.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_43 = alloca [20 x i8], align 4
  %_42 = alloca [20 x i8], align 4
  %end_or_len = alloca [8 x i8], align 8
  %_26 = alloca [24 x i8], align 8
  %val = alloca [20 x i8], align 4
  %_13 = alloca [16 x i8], align 8
  %iter = alloca [32 x i8], align 8
  %self1 = alloca [24 x i8], align 8
  %self = alloca [32 x i8], align 8
  %guard = alloca [16 x i8], align 8
  %vec = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17hae56eb9e5b0251b1E"(ptr sret([24 x i8]) align 8 %_26, i64 %s.1, i1 zeroext false)
  %_27 = load i64, ptr %_26, align 8
  %1 = icmp eq i64 %_27, 0
  br i1 %1, label %bb13, label %bb12

bb13:                                             ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_26, i64 8
  %res.0 = load i64, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 8
  %res.1 = load ptr, ptr %3, align 8
  store i64 %res.0, ptr %vec, align 8
  %4 = getelementptr inbounds i8, ptr %vec, i64 8
  store ptr %res.1, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %vec, i64 16
  store i64 0, ptr %5, align 8
  store ptr %vec, ptr %guard, align 8
  %6 = getelementptr inbounds i8, ptr %guard, i64 8
  store i64 0, ptr %6, align 8
  %_24 = load ptr, ptr %guard, align 8
; invoke alloc::vec::Vec<T,A>::spare_capacity_mut
  %7 = invoke { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17ha781779859ac44b9E"(ptr align 8 %_24)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_26, i64 8
  %err.0 = load i64, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  %err.1 = load i64, ptr %9, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
  invoke void @"_ZN4core3ptr143drop_in_place$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17h4d621679a4bfa7e5E"(ptr align 8 %guard) #25
          to label %bb8 unwind label %terminate

cleanup:                                          ; preds = %bb6, %panic, %bb17, %bb13
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb10

bb1:                                              ; preds = %bb13
  %slots.0 = extractvalue { ptr, i64 } %7, 0
  %slots.1 = extractvalue { ptr, i64 } %7, 1
  br label %bb15

bb15:                                             ; preds = %bb1
  %_35 = getelementptr inbounds %"proc_macro::TokenTree", ptr %s.0, i64 %s.1
  store ptr %_35, ptr %end_or_len, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %_37 = load ptr, ptr %end_or_len, align 8
  store ptr %s.0, ptr %self1, align 8
  %14 = getelementptr inbounds i8, ptr %self1, i64 8
  store ptr %_37, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %self1, i64 16
  store i64 0, ptr %15, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %self1, i64 24, i1 false)
  %16 = getelementptr inbounds i8, ptr %self, i64 24
  store i64 %slots.1, ptr %16, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %self, i64 32, i1 false)
  br label %bb2

bb14:                                             ; No predecessors!
  unreachable

bb2:                                              ; preds = %bb7, %bb16
  %17 = getelementptr inbounds i8, ptr %iter, i64 24
  %_40 = load i64, ptr %17, align 8
  %18 = icmp eq i64 %_40, 0
  br i1 %18, label %bb19, label %bb17

bb19:                                             ; preds = %bb2
  br label %bb5

bb17:                                             ; preds = %bb2
  %19 = getelementptr inbounds i8, ptr %iter, i64 24
  %20 = getelementptr inbounds i8, ptr %iter, i64 24
  %21 = load i64, ptr %20, align 8
  %22 = sub i64 %21, 1
  store i64 %22, ptr %19, align 8
; invoke <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %23 = invoke { i64, ptr } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e98d17d39b40a7cE"(ptr align 8 %iter)
          to label %bb18 unwind label %cleanup

bb5:                                              ; preds = %bb18, %bb19
  %t = load ptr, ptr %guard, align 8
  %24 = getelementptr inbounds i8, ptr %guard, i64 8
  %t2 = load i64, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %vec, i64 16
  store i64 %s.1, ptr %25, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %vec, i64 24, i1 false)
  ret void

bb18:                                             ; preds = %bb17
  %26 = extractvalue { i64, ptr } %23, 0
  %27 = extractvalue { i64, ptr } %23, 1
  store i64 %26, ptr %_13, align 8
  %28 = getelementptr inbounds i8, ptr %_13, i64 8
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %_13, i64 8
  %30 = load ptr, ptr %29, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = icmp eq i64 %31, 0
  %_15 = select i1 %32, i64 0, i64 1
  %33 = icmp eq i64 %_15, 0
  br i1 %33, label %bb5, label %bb4

bb4:                                              ; preds = %bb18
  %i = load i64, ptr %_13, align 8
  %34 = getelementptr inbounds i8, ptr %_13, i64 8
  %b = load ptr, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %guard, i64 8
  store i64 %i, ptr %35, align 8
  %_20 = icmp ult i64 %i, %slots.1
  br i1 %_20, label %bb6, label %panic

bb6:                                              ; preds = %bb4
  %self3 = getelementptr inbounds [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"], ptr %slots.0, i64 0, i64 %i
; invoke <proc_macro::TokenTree as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$proc_macro..TokenTree$u20$as$u20$core..clone..Clone$GT$5clone17h6c2a611b06634dacE"(ptr sret([20 x i8]) align 4 %val, ptr align 4 %b)
          to label %bb7 unwind label %cleanup

panic:                                            ; preds = %bb4
; invoke core::panicking::panic_bounds_check
  invoke void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %i, i64 %slots.1, ptr align 8 @alloc_05bd7b5bcfb0fb98096b4d6e6990fe41) #24
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb7:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_43, ptr align 4 %val, i64 20, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_42, ptr align 4 %_43, i64 20, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %self3, ptr align 4 %_42, i64 20, i1 false)
  br label %bb2

terminate:                                        ; preds = %bb8, %bb10
  %36 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %37 = extractvalue { ptr, i32 } %36, 0
  %38 = extractvalue { ptr, i32 } %36, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb8:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::TokenTree>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..TokenTree$GT$$GT$17hc6605ed38dbad50aE"(ptr align 8 %vec) #25
          to label %bb9 unwind label %terminate

bb9:                                              ; preds = %bb8
  %39 = load ptr, ptr %0, align 8
  %40 = getelementptr inbounds i8, ptr %0, i64 8
  %41 = load i32, ptr %40, align 8
  %42 = insertvalue { ptr, i32 } poison, ptr %39, 0
  %43 = insertvalue { ptr, i32 } %42, i32 %41, 1
  resume { ptr, i32 } %43

bb3:                                              ; No predecessors!
  unreachable
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hb97d26b05ddaa347E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %s.0, i64 %s.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_43 = alloca [32 x i8], align 8
  %_42 = alloca [32 x i8], align 8
  %end_or_len = alloca [8 x i8], align 8
  %_26 = alloca [24 x i8], align 8
  %val = alloca [32 x i8], align 8
  %_13 = alloca [16 x i8], align 8
  %iter = alloca [32 x i8], align 8
  %self1 = alloca [24 x i8], align 8
  %self = alloca [32 x i8], align 8
  %guard = alloca [16 x i8], align 8
  %vec = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17he534fec90a93ba56E"(ptr sret([24 x i8]) align 8 %_26, i64 %s.1, i1 zeroext false)
  %_27 = load i64, ptr %_26, align 8
  %1 = icmp eq i64 %_27, 0
  br i1 %1, label %bb13, label %bb12

bb13:                                             ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_26, i64 8
  %res.0 = load i64, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 8
  %res.1 = load ptr, ptr %3, align 8
  store i64 %res.0, ptr %vec, align 8
  %4 = getelementptr inbounds i8, ptr %vec, i64 8
  store ptr %res.1, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %vec, i64 16
  store i64 0, ptr %5, align 8
  store ptr %vec, ptr %guard, align 8
  %6 = getelementptr inbounds i8, ptr %guard, i64 8
  store i64 0, ptr %6, align 8
  %_24 = load ptr, ptr %guard, align 8
; invoke alloc::vec::Vec<T,A>::spare_capacity_mut
  %7 = invoke { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h33ecf184e9625106E"(ptr align 8 %_24)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_26, i64 8
  %err.0 = load i64, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  %err.1 = load i64, ptr %9, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro2::TokenTree,alloc::alloc::Global>>
  invoke void @"_ZN4core3ptr144drop_in_place$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$proc_macro2..TokenTree$C$alloc..alloc..Global$GT$$GT$17hf001dceed83a2775E"(ptr align 8 %guard) #25
          to label %bb8 unwind label %terminate

cleanup:                                          ; preds = %bb6, %panic, %bb17, %bb13
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb10

bb1:                                              ; preds = %bb13
  %slots.0 = extractvalue { ptr, i64 } %7, 0
  %slots.1 = extractvalue { ptr, i64 } %7, 1
  br label %bb15

bb15:                                             ; preds = %bb1
  %_35 = getelementptr inbounds %TokenTree, ptr %s.0, i64 %s.1
  store ptr %_35, ptr %end_or_len, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %_37 = load ptr, ptr %end_or_len, align 8
  store ptr %s.0, ptr %self1, align 8
  %14 = getelementptr inbounds i8, ptr %self1, i64 8
  store ptr %_37, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %self1, i64 16
  store i64 0, ptr %15, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %self1, i64 24, i1 false)
  %16 = getelementptr inbounds i8, ptr %self, i64 24
  store i64 %slots.1, ptr %16, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %self, i64 32, i1 false)
  br label %bb2

bb14:                                             ; No predecessors!
  unreachable

bb2:                                              ; preds = %bb7, %bb16
  %17 = getelementptr inbounds i8, ptr %iter, i64 24
  %_40 = load i64, ptr %17, align 8
  %18 = icmp eq i64 %_40, 0
  br i1 %18, label %bb19, label %bb17

bb19:                                             ; preds = %bb2
  br label %bb5

bb17:                                             ; preds = %bb2
  %19 = getelementptr inbounds i8, ptr %iter, i64 24
  %20 = getelementptr inbounds i8, ptr %iter, i64 24
  %21 = load i64, ptr %20, align 8
  %22 = sub i64 %21, 1
  store i64 %22, ptr %19, align 8
; invoke <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %23 = invoke { i64, ptr } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfe6a258013085ac9E"(ptr align 8 %iter)
          to label %bb18 unwind label %cleanup

bb5:                                              ; preds = %bb18, %bb19
  %t = load ptr, ptr %guard, align 8
  %24 = getelementptr inbounds i8, ptr %guard, i64 8
  %t2 = load i64, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %vec, i64 16
  store i64 %s.1, ptr %25, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %vec, i64 24, i1 false)
  ret void

bb18:                                             ; preds = %bb17
  %26 = extractvalue { i64, ptr } %23, 0
  %27 = extractvalue { i64, ptr } %23, 1
  store i64 %26, ptr %_13, align 8
  %28 = getelementptr inbounds i8, ptr %_13, i64 8
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %_13, i64 8
  %30 = load ptr, ptr %29, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = icmp eq i64 %31, 0
  %_15 = select i1 %32, i64 0, i64 1
  %33 = icmp eq i64 %_15, 0
  br i1 %33, label %bb5, label %bb4

bb4:                                              ; preds = %bb18
  %i = load i64, ptr %_13, align 8
  %34 = getelementptr inbounds i8, ptr %_13, i64 8
  %b = load ptr, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %guard, i64 8
  store i64 %i, ptr %35, align 8
  %_20 = icmp ult i64 %i, %slots.1
  br i1 %_20, label %bb6, label %panic

bb6:                                              ; preds = %bb4
  %self3 = getelementptr inbounds [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"], ptr %slots.0, i64 0, i64 %i
; invoke <proc_macro2::TokenTree as core::clone::Clone>::clone
  invoke void @"_ZN61_$LT$proc_macro2..TokenTree$u20$as$u20$core..clone..Clone$GT$5clone17hfb8e1aa7dcc2e81fE"(ptr sret([32 x i8]) align 8 %val, ptr align 8 %b)
          to label %bb7 unwind label %cleanup

panic:                                            ; preds = %bb4
; invoke core::panicking::panic_bounds_check
  invoke void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %i, i64 %slots.1, ptr align 8 @alloc_05bd7b5bcfb0fb98096b4d6e6990fe41) #24
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb7:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_43, ptr align 8 %val, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_42, ptr align 8 %_43, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self3, ptr align 8 %_42, i64 32, i1 false)
  br label %bb2

terminate:                                        ; preds = %bb8, %bb10
  %36 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %37 = extractvalue { ptr, i32 } %36, 0
  %38 = extractvalue { ptr, i32 } %36, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb8:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  invoke void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17h110007b9863c5fe0E"(ptr align 8 %vec) #25
          to label %bb9 unwind label %terminate

bb9:                                              ; preds = %bb8
  %39 = load ptr, ptr %0, align 8
  %40 = getelementptr inbounds i8, ptr %0, i64 8
  %41 = load i32, ptr %40, align 8
  %42 = insertvalue { ptr, i32 } poison, ptr %39, 0
  %43 = insertvalue { ptr, i32 } %42, i32 %41, 1
  resume { ptr, i32 } %43

bb3:                                              ; No predecessors!
  unreachable
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hd7a43e3d4155bfffE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_12 = alloca [24 x i8], align 8
  %v = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17h7a9fee94d5cce3e5E"(ptr sret([24 x i8]) align 8 %_12, i64 %s.1, i1 zeroext false)
  %_13 = load i64, ptr %_12, align 8
  %0 = icmp eq i64 %_13, 0
  br i1 %0, label %bb4, label %bb3

bb4:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_12, i64 8
  %res.0 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %res.1 = load ptr, ptr %2, align 8
  store i64 %res.0, ptr %v, align 8
  %3 = getelementptr inbounds i8, ptr %v, i64 8
  store ptr %res.1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %v, i64 16
  store i64 0, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %v, i64 8
  %self = load ptr, ptr %5, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_12, i64 8
  %err.0 = load i64, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %err.1 = load i64, ptr %7, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb7:                                              ; preds = %bb4
  %8 = mul i64 %s.1, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %self, ptr align 1 %s.0, i64 %8, i1 false)
  %9 = getelementptr inbounds i8, ptr %v, i64 16
  store i64 %s.1, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %v, i64 24, i1 false)
  ret void

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <char as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h74c684e1f2d4a6eaE"(i32 %self, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_6 = alloca [4 x i8], align 1
  call void @llvm.memset.p0.i64(ptr align 1 %_6, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %0 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17he28c9db22ecb6556E(i32 %self, ptr align 1 %_6, i64 4)
  %v.0 = extractvalue { ptr, i64 } %0, 0
  %v.1 = extractvalue { ptr, i64 } %0, 1
; call core::slice::<impl [T]>::starts_with
  %_0 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17hcc632291aa3e4ad3E"(ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %v.0, i64 %v.1)
  ret i1 %_0
}

; <char as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h955858081be0acfdE"(ptr sret([48 x i8]) align 8 %_0, i32 %self, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_12 = alloca [4 x i8], align 1
  %_5 = alloca [2 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  call void @llvm.memset.p0.i64(ptr align 1 %utf8_encoded, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %0 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17he28c9db22ecb6556E(i32 %self, ptr align 1 %utf8_encoded, i64 4)
  %v.0 = extractvalue { ptr, i64 } %0, 0
  %v.1 = extractvalue { ptr, i64 } %0, 1
  %_18 = icmp ugt i64 %v.1, 255
  br i1 %_18, label %bb3, label %bb4

bb4:                                              ; preds = %start
  %_19 = trunc i64 %v.1 to i8
  %1 = getelementptr inbounds i8, ptr %_5, i64 1
  store i8 %_19, ptr %1, align 1
  store i8 0, ptr %_5, align 1
  br label %bb5

bb3:                                              ; preds = %start
  %2 = load i8, ptr @6, align 1
  %3 = trunc i8 %2 to i1
  %4 = load i8, ptr getelementptr inbounds (i8, ptr @6, i64 1), align 1
  %5 = zext i1 %3 to i8
  store i8 %5, ptr %_5, align 1
  %6 = getelementptr inbounds i8, ptr %_5, i64 1
  store i8 %4, ptr %6, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %7 = load i8, ptr %_5, align 1
  %8 = trunc i8 %7 to i1
  %9 = getelementptr inbounds i8, ptr %_5, i64 1
  %10 = load i8, ptr %9, align 1
; call core::result::Result<T,E>::expect
  %utf8_size = call i8 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hb753597c9ee33e55E"(i1 zeroext %8, i8 %10, ptr align 1 @alloc_611ea47e56fe111765d49cc77e8ab451, i64 32, ptr align 8 @alloc_9255bf5d4789a2e4cea7e993364e5ae0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_12, ptr align 1 %utf8_encoded, i64 4, i1 false)
  store ptr %haystack.0, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %haystack.1, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 0, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %_0, i64 24
  store i64 %haystack.1, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 36
  store i32 %self, ptr %14, align 4
  %15 = getelementptr inbounds i8, ptr %_0, i64 40
  store i8 %utf8_size, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 32
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 1 %_12, i64 4, i1 false)
  ret void
}

; <char as core::str::pattern::Pattern>::is_contained_in
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17h9520a2c4c2d49963E"(i32 %self, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %buffer = alloca [4 x i8], align 1
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %_3 = icmp ult i32 %self, 128
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  call void @llvm.memset.p0.i64(ptr align 1 %buffer, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %0 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17he28c9db22ecb6556E(i32 %self, ptr align 1 %buffer, i64 4)
  %v.0 = extractvalue { ptr, i64 } %0, 0
  %v.1 = extractvalue { ptr, i64 } %0, 1
; call <&str as core::str::pattern::Pattern>::is_contained_in
  %1 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17h445c42f691698307E"(ptr align 1 %v.0, i64 %v.1, ptr align 1 %haystack.0, i64 %haystack.1)
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %3 = trunc i32 %self to i8
  store i8 %3, ptr %_7, align 1
; call <u8 as core::slice::cmp::SliceContains>::slice_contains
  %4 = call zeroext i1 @"_ZN54_$LT$u8$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17he843056c83ccb5b9E"(ptr align 1 %_7, ptr align 1 %haystack.0, i64 %haystack.1)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb2
  %6 = load i8, ptr %_0, align 1
  %7 = trunc i8 %6 to i1
  ret i1 %7
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h08e80c436a0dffc0E"(ptr align 1 %self, i32 %c) unnamed_addr #0 {
start:
; call proc_macro2::fallback::Literal::string::{{closure}}
  %_0 = call zeroext i1 @"_ZN11proc_macro28fallback7Literal6string28_$u7b$$u7b$closure$u7d$$u7d$17he677ca0c5ec71f2aE"(ptr align 1 %self, i32 %c)
  ret i1 %_0
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hc8c20d8ede1f1de9E"(ptr align 1 %self, i32 %c) unnamed_addr #0 {
start:
; call <proc_macro2::fallback::Literal as core::str::traits::FromStr>::from_str::{{closure}}
  %_0 = call zeroext i1 @"_ZN77_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17h82f622141c215ee9E"(ptr align 1 %self, i32 %c)
  ret i1 %_0
}

; <core::fmt::Error as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hba58b6c9d9815192E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
; call core::fmt::Formatter::write_str
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 @alloc_99ac8a81a24cac863217ce4a5cbfabea, i64 5)
  ret i1 %_0
}

; <u8 as core::slice::cmp::SliceContains>::slice_contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN54_$LT$u8$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17he843056c83ccb5b9E"(ptr align 1 %self, ptr align 1 %x.0, i64 %x.1) unnamed_addr #0 {
start:
  %_4 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %x = load i8, ptr %self, align 1
  %_6 = icmp ult i64 %x.1, 16
  br i1 %_6, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call core::slice::memchr::memchr_aligned
  %0 = call { i64, i64 } @_ZN4core5slice6memchr14memchr_aligned17h8f099e60ba6928faE(i8 %x, ptr align 1 %x.0, i64 %x.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  store i64 %1, ptr %_4, align 8
  %3 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %2, ptr %3, align 8
  br label %bb1

bb2:                                              ; preds = %start
; call core::slice::memchr::memchr_naive
  %4 = call { i64, i64 } @_ZN4core5slice6memchr12memchr_naive17h6a356d7a0cc16d09E(i8 %x, ptr align 1 %x.0, i64 %x.1)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  store i64 %5, ptr %_4, align 8
  %7 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %6, ptr %7, align 8
  br label %bb1

bb1:                                              ; preds = %bb2, %bb4
  %_8 = load i64, ptr %_4, align 8
  %8 = icmp eq i64 %_8, 1
  br i1 %8, label %bb7, label %bb6

bb7:                                              ; preds = %bb1
  store i8 1, ptr %_0, align 1
  br label %bb5

bb6:                                              ; preds = %bb1
  store i8 0, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %9 = load i8, ptr %_0, align 1
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb8:                                              ; No predecessors!
  unreachable
}

; <&str as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hcd7c0c452dd18550E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::starts_with
  %_0 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17hcc632291aa3e4ad3E"(ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; <&str as core::str::pattern::Pattern>::is_contained_in
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17h445c42f691698307E"(ptr align 1 %0, i64 %1, ptr align 1 %2, i64 %3) unnamed_addr #0 {
start:
  %other = alloca [16 x i8], align 8
  %self1 = alloca [16 x i8], align 8
  %_19 = alloca [104 x i8], align 8
  %_17 = alloca [24 x i8], align 8
  %_13 = alloca [1 x i8], align 1
  %_8 = alloca [8 x i8], align 8
  %_6 = alloca [8 x i8], align 8
  %_4 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %haystack = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store ptr %0, ptr %self, align 8
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %4, align 8
  store ptr %2, ptr %haystack, align 8
  %5 = getelementptr inbounds i8, ptr %haystack, i64 8
  store i64 %3, ptr %5, align 8
  %_22.0 = load ptr, ptr %self, align 8
  %6 = getelementptr inbounds i8, ptr %self, i64 8
  %_22.1 = load i64, ptr %6, align 8
  %7 = icmp eq i64 %_22.1, 0
  br i1 %7, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb16

bb2:                                              ; preds = %start
  store i64 %_22.1, ptr %_6, align 8
  %self.0 = load ptr, ptr %haystack, align 8
  %8 = getelementptr inbounds i8, ptr %haystack, i64 8
  %self.1 = load i64, ptr %8, align 8
  store i64 %self.1, ptr %_8, align 8
  %9 = load i64, ptr %_8, align 8
  %10 = icmp ugt i64 %_22.1, %9
  %11 = zext i1 %10 to i8
  %12 = icmp ult i64 %_22.1, %9
  %13 = zext i1 %12 to i8
  %14 = sub nsw i8 %11, %13
  store i8 %14, ptr %_4, align 1
  %_9 = load i8, ptr %_4, align 1
  %15 = icmp eq i8 %_9, -1
  br i1 %15, label %bb4, label %bb3

bb16:                                             ; preds = %bb14, %bb15, %bb1
  %16 = load i8, ptr %_0, align 1
  %17 = trunc i8 %16 to i1
  ret i1 %17

bb4:                                              ; preds = %bb2
  %18 = icmp eq i64 %_22.1, 1
  br i1 %18, label %bb5, label %bb7

bb3:                                              ; preds = %bb2
  store ptr %_22.0, ptr %self1, align 8
  %19 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %_22.1, ptr %19, align 8
  store ptr %self.0, ptr %other, align 8
  %20 = getelementptr inbounds i8, ptr %other, i64 8
  store i64 %self.1, ptr %20, align 8
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %21 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h21bdc8f6df394f4dE"(ptr align 1 %_22.0, i64 %_22.1, ptr align 1 %self.0, i64 %self.1)
  %22 = zext i1 %21 to i8
  store i8 %22, ptr %_0, align 1
  br label %bb14

bb5:                                              ; preds = %bb4
  %_11 = icmp ult i64 0, %_22.1
  br i1 %_11, label %bb6, label %panic

bb7:                                              ; preds = %bb4
  %_12 = icmp ule i64 %_22.1, 32
  br i1 %_12, label %bb8, label %bb12

bb6:                                              ; preds = %bb5
  %x = getelementptr inbounds [0 x i8], ptr %_22.0, i64 0, i64 0
; call <u8 as core::slice::cmp::SliceContains>::slice_contains
  %23 = call zeroext i1 @"_ZN54_$LT$u8$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17he843056c83ccb5b9E"(ptr align 1 %x, ptr align 1 %self.0, i64 %self.1)
  %24 = zext i1 %23 to i8
  store i8 %24, ptr %_0, align 1
  br label %bb15

panic:                                            ; preds = %bb5
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 0, i64 %_22.1, ptr align 8 @alloc_b20c6211b16a2df3c39015542c0ebf00) #24
  unreachable

bb15:                                             ; preds = %bb10, %bb6
  br label %bb16

bb12:                                             ; preds = %bb11, %bb7
  %25 = load ptr, ptr %haystack, align 8
  %26 = getelementptr inbounds i8, ptr %haystack, i64 8
  %27 = load i64, ptr %26, align 8
  %28 = load ptr, ptr %self, align 8
  %29 = getelementptr inbounds i8, ptr %self, i64 8
  %30 = load i64, ptr %29, align 8
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17h1bcc71c72b862628E(ptr sret([104 x i8]) align 8 %_19, ptr align 1 %25, i64 %27, ptr align 1 %28, i64 %30)
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hfd98c0071dae8cb6E"(ptr sret([24 x i8]) align 8 %_17, ptr align 8 %_19)
  %_28 = load i64, ptr %_17, align 8
  %31 = icmp eq i64 %_28, 1
  br i1 %31, label %bb22, label %bb21

bb8:                                              ; preds = %bb7
  %32 = load ptr, ptr %self, align 8
  %33 = getelementptr inbounds i8, ptr %self, i64 8
  %34 = load i64, ptr %33, align 8
  %35 = load ptr, ptr %haystack, align 8
  %36 = getelementptr inbounds i8, ptr %haystack, i64 8
  %37 = load i64, ptr %36, align 8
; call core::str::pattern::simd_contains
  %38 = call i8 @_ZN4core3str7pattern13simd_contains17h308e6c7f42915001E(ptr align 1 %32, i64 %34, ptr align 1 %35, i64 %37)
  store i8 %38, ptr %_13, align 1
  %39 = load i8, ptr %_13, align 1
  %40 = icmp eq i8 %39, 2
  %_14 = select i1 %40, i64 0, i64 1
  %41 = icmp eq i64 %_14, 1
  br i1 %41, label %bb10, label %bb11

bb10:                                             ; preds = %bb8
  %42 = load i8, ptr %_13, align 1
  %result = trunc i8 %42 to i1
  %43 = zext i1 %result to i8
  store i8 %43, ptr %_0, align 1
  br label %bb15

bb11:                                             ; preds = %bb8
  br label %bb12

bb22:                                             ; preds = %bb12
  store i8 1, ptr %_0, align 1
  br label %bb20

bb21:                                             ; preds = %bb12
  store i8 0, ptr %_0, align 1
  br label %bb20

bb20:                                             ; preds = %bb21, %bb22
  br label %bb14

bb14:                                             ; preds = %bb3, %bb20
  br label %bb16

bb23:                                             ; No predecessors!
  unreachable
}

; <alloc::string::String as core::cmp::Ord>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN56_$LT$alloc..string..String$u20$as$u20$core..cmp..Ord$GT$3cmp17h86523b335d2487e6E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T,A> as core::cmp::Ord>::cmp
  %_0 = call i8 @"_ZN63_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..cmp..Ord$GT$3cmp17hdee25baee70d48d3E"(ptr align 8 %self, ptr align 8 %other)
  ret i8 %_0
}

; <proc_macro::Group as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN56_$LT$proc_macro..Group$u20$as$u20$core..clone..Clone$GT$5clone17h888f071d943d6697E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 {
start:
  %_2 = alloca [20 x i8], align 4
; call <proc_macro::bridge::Group<TokenStream,Span> as core::clone::Clone>::clone
  call void @"_ZN90_$LT$proc_macro..bridge..Group$LT$TokenStream$C$Span$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h5e51b36949f2dffaE"(ptr sret([20 x i8]) align 4 %_2, ptr align 4 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_2, i64 20, i1 false)
  ret void
}

; <proc_macro::Ident as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN56_$LT$proc_macro..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h317ab23f64c72464E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 {
start:
  %_2 = alloca [12 x i8], align 4
; call <proc_macro::bridge::Ident<Span,Symbol> as core::clone::Clone>::clone
  call void @"_ZN85_$LT$proc_macro..bridge..Ident$LT$Span$C$Symbol$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h22fe6daddc499655E"(ptr sret([12 x i8]) align 4 %_2, ptr align 4 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_2, i64 12, i1 false)
  ret void
}

; <proc_macro::LexError as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN57_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17hf65267aabaef1d1bE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
; call core::fmt::Formatter::write_str
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 @alloc_ce18dc9b9ca144fde65711b7622c392e, i64 8)
  ret i1 %_0
}

; <std::path::PathBuf as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN57_$LT$std..path..PathBuf$u20$as$u20$core..clone..Clone$GT$5clone17h51303c6f3f249c33E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_6 = alloca [24 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %_2 = alloca [24 x i8], align 8
; call <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
  call void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6ee34b6eb925282fE"(ptr sret([24 x i8]) align 8 %_6, ptr align 8 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %_6, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %_4, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void
}

; <alloc::string::String as core::fmt::Write>::write_char
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h33a5675a7808594dE"(ptr align 8 %self, i32 %c) unnamed_addr #0 {
start:
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %self, i32 %c)
  ret i1 false
}

; <alloc::string::String as core::fmt::Write>::write_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17hc91a144ace0c4462E"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h8105aaa12c6d9782E"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1)
  ret i1 false
}

; <proc_macro::Literal as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN58_$LT$proc_macro..Literal$u20$as$u20$core..clone..Clone$GT$5clone17he7ec8c701a5764f5E"(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 {
start:
  %_2 = alloca [16 x i8], align 4
; call <proc_macro::bridge::Literal<Span,Symbol> as core::clone::Clone>::clone
  call void @"_ZN87_$LT$proc_macro..bridge..Literal$LT$Span$C$Symbol$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h215841835d79a344E"(ptr sret([16 x i8]) align 4 %_2, ptr align 4 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_2, i64 16, i1 false)
  ret void
}

; <alloc::alloc::Global as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h58f81dd4a5b1a90fE"(ptr align 1 %self) unnamed_addr #0 {
start:
  ret void
}

; alloc::rc::RcInnerPtr::inc_strong
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc2rc10RcInnerPtr10inc_strong17hf735de51aa04939eE(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca [1 x i8], align 1
; call alloc::rc::RcInnerPtr::strong
  %strong = call i64 @_ZN5alloc2rc10RcInnerPtr6strong17h440107331feb8c36E(ptr align 8 %self)
  %cond = icmp ne i64 %strong, 0
  br label %bb7

bb7:                                              ; preds = %start
  %strong1 = add i64 %strong, 1
  %result = load i64, ptr %self, align 8
  store i64 %strong1, ptr %self, align 8
  %_7 = icmp eq i64 %strong1, 0
  %1 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %0, align 1
  %3 = load i8, ptr %0, align 1
  %_6 = trunc i8 %3 to i1
  br i1 %_6, label %bb4, label %bb5

bb6:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb7
  ret void

bb4:                                              ; preds = %bb7
  call void @llvm.trap()
  unreachable
}

; alloc::rc::RcInnerPtr::weak
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN5alloc2rc10RcInnerPtr4weak17ha2c1a8c7fa54f8bbE(ptr align 8 %self) unnamed_addr #0 {
start:
  %_0.i = getelementptr inbounds i8, ptr %self, i64 8
  %_0 = load i64, ptr %_0.i, align 8
  ret i64 %_0
}

; alloc::rc::RcInnerPtr::strong
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN5alloc2rc10RcInnerPtr6strong17h440107331feb8c36E(ptr align 8 %self) unnamed_addr #0 {
start:
  %_0 = load i64, ptr %self, align 8
  ret i64 %_0
}

; alloc::rc::Rc<T>::new
; Function Attrs: nonlazybind uwtable
define ptr @"_ZN5alloc2rc11Rc$LT$T$GT$3new17h598805faa5a989d3E"(ptr align 8 %value) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %b = alloca [8 x i8], align 8
  %_4 = alloca [40 x i8], align 8
  store i64 1, ptr %_4, align 8
  %1 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 1, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_4, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %value, i64 24, i1 false)
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke ptr @_ZN5alloc5alloc15exchange_malloc17hab613a1605b0295cE(i64 40, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h867fc1ec53a26a23E.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
; invoke core::ptr::drop_in_place<alloc::rc::RcBox<alloc::vec::Vec<proc_macro2::TokenTree>>>
  invoke void @"_ZN4core3ptr90drop_in_place$LT$alloc..rc..RcBox$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$$GT$17hb672f69c94fcf1ebE"(ptr align 8 %_4) #25
          to label %bb3.i unwind label %terminate.i

terminate.i:                                      ; preds = %cleanup.i
  %7 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb3.i:                                            ; preds = %cleanup.i
  %10 = load ptr, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14

"_ZN5alloc5boxed12Box$LT$T$GT$3new17h867fc1ec53a26a23E.exit": ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4.i, ptr align 8 %_4, i64 40, i1 false)
  store ptr %_4.i, ptr %b, align 8
  %_11 = load ptr, ptr %b, align 8
  %src = getelementptr inbounds i8, ptr %b, i64 8
  ret ptr %_11
}

; alloc::rc::Rc<T,A>::get_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$7get_mut17h272869e2ec8738dfE"(ptr align 8 %this) unnamed_addr #0 {
start:
  %_0 = alloca [8 x i8], align 8
; call alloc::rc::Rc<T,A>::is_unique
  %_2 = call zeroext i1 @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$9is_unique17hadd6abd37c620e0fE"(ptr align 8 %this)
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %start
  %self = load ptr, ptr %this, align 8
  %_4 = getelementptr inbounds i8, ptr %self, i64 16
  store ptr %_4, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %0 = load ptr, ptr %_0, align 8
  ret ptr %0
}

; alloc::rc::Rc<T,A>::is_unique
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$9is_unique17hadd6abd37c620e0fE"(ptr align 8 %this) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %self = load ptr, ptr %this, align 8
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %_12 = getelementptr inbounds i8, ptr %self, i64 8
  %_4 = load i64, ptr %_12, align 8
  %_2 = sub i64 %_4, 1
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %self3 = load ptr, ptr %this, align 8
  %_3 = load i64, ptr %self3, align 8
  %1 = icmp eq i64 %_3, 1
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb3

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; alloc::fmt::format
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %args) unnamed_addr #0 {
start:
  %_2 = alloca [16 x i8], align 8
  %_6.0 = load ptr, ptr %args, align 8
  %0 = getelementptr inbounds i8, ptr %args, i64 8
  %_6.1 = load i64, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %args, i64 16
  %_7.0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %_7.1 = load i64, ptr %2, align 8
  %3 = icmp eq i64 %_6.1, 0
  br i1 %3, label %bb4, label %bb5

bb4:                                              ; preds = %start
  %4 = icmp eq i64 %_7.1, 0
  br i1 %4, label %bb7, label %bb3

bb5:                                              ; preds = %start
  %5 = icmp eq i64 %_6.1, 1
  br i1 %5, label %bb6, label %bb3

bb7:                                              ; preds = %bb4
  store ptr inttoptr (i64 1 to ptr), ptr %_2, align 8
  %6 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 0, ptr %6, align 8
  br label %bb2

bb3:                                              ; preds = %bb6, %bb5, %bb4
  %7 = load ptr, ptr @0, align 8
  %8 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %7, ptr %_2, align 8
  %9 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %8, ptr %9, align 8
  br label %bb2

bb2:                                              ; preds = %bb3, %bb8, %bb7
  %10 = load ptr, ptr %_2, align 8
  %11 = getelementptr inbounds i8, ptr %_2, i64 8
  %12 = load i64, ptr %11, align 8
; call core::option::Option<T>::map_or_else
  call void @"_ZN4core6option15Option$LT$T$GT$11map_or_else17h7069af26f3352e31E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %10, i64 %12, ptr align 8 %args)
  ret void

bb6:                                              ; preds = %bb5
  %13 = icmp eq i64 %_7.1, 0
  br i1 %13, label %bb8, label %bb3

bb8:                                              ; preds = %bb6
  %s = getelementptr inbounds [0 x { ptr, i64 }], ptr %_6.0, i64 0, i64 0
  %14 = getelementptr inbounds [0 x { ptr, i64 }], ptr %_6.0, i64 0, i64 0
  %_13.0 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  %_13.1 = load i64, ptr %15, align 8
  store ptr %_13.0, ptr %_2, align 8
  %16 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %_13.1, ptr %16, align 8
  br label %bb2
}

; alloc::fmt::format::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3fmt6format28_$u7b$$u7b$closure$u7d$$u7d$17hf7179c704a36a626E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_1) unnamed_addr #0 {
start:
  %_2 = alloca [48 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %_1, i64 48, i1 false)
; call alloc::fmt::format::format_inner
  call void @_ZN5alloc3fmt6format12format_inner17he16abc9639aee25aE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h87532753356c6506E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %bytes = alloca [24 x i8], align 8
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hd7a43e3d4155bfffE"(ptr sret([24 x i8]) align 8 %bytes, ptr align 1 %self.0, i64 %self.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %bytes, i64 24, i1 false)
  ret void
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hd7c321b71716520bE"(ptr sret([24 x i8]) align 8 %_0, i64 %capacity) unnamed_addr #0 {
start:
  %_3 = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17he534fec90a93ba56E"(ptr sret([24 x i8]) align 8 %_3, i64 %capacity, i1 zeroext false)
  %_4 = load i64, ptr %_3, align 8
  %0 = icmp eq i64 %_4, 0
  br i1 %0, label %bb4, label %bb3

bb4:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_3, i64 8
  %res.0 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %res.1 = load ptr, ptr %2, align 8
  store i64 %res.0, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %res.1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 0, ptr %4, align 8
  ret void

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_3, i64 8
  %err.0 = load i64, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  %err.1 = load i64, ptr %6, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h6a727caf0f688dcaE"(ptr sret([24 x i8]) align 8 %_0) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 0, ptr %1, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17ha21ae56465ceff6aE"(ptr sret([24 x i8]) align 8 %_0) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 0, ptr %1, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hde14f6262c6e492bE"(ptr sret([24 x i8]) align 8 %_0) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 4 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 0, ptr %1, align 8
  ret void
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h7d02c11bc0a87c88E"(ptr align 8 %self, ptr %other.0, i64 %other.1) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hcd1992e0f9a46245E"(ptr align 8 %self, i64 %other.1)
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %1, align 8
  %dst = getelementptr inbounds i8, ptr %self1, i64 %len
  br label %bb4

bb4:                                              ; preds = %start
  %2 = mul i64 %other.1, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %dst, ptr align 1 %other.0, i64 %2, i1 false)
  %3 = getelementptr inbounds i8, ptr %self, i64 16
  %4 = getelementptr inbounds i8, ptr %self, i64 16
  %5 = load i64, ptr %4, align 8
  %6 = add i64 %5, %other.1
  store i64 %6, ptr %3, align 8
  ret void

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable
}

; alloc::vec::Vec<T,A>::extend_desugared
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17h391e97e509ba4441E"(ptr align 8 %self, ptr align 8 %iterator) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [8 x i8], align 8
  %1 = alloca [16 x i8], align 8
  %src = alloca [32 x i8], align 8
  %_11 = alloca [24 x i8], align 8
  %_9 = alloca [8 x i8], align 8
  %element = alloca [32 x i8], align 8
  %_3 = alloca [32 x i8], align 8
  br label %bb1

bb1:                                              ; preds = %bb8, %start
; invoke <proc_macro2::rcvec::RcVecIntoIter<T> as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN101_$LT$proc_macro2..rcvec..RcVecIntoIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h141ed75263b6a7c8E"(ptr sret([32 x i8]) align 8 %_3, ptr align 8 %iterator)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %bb14, %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>
  invoke void @"_ZN4core3ptr84drop_in_place$LT$proc_macro2..rcvec..RcVecIntoIter$LT$proc_macro2..TokenTree$GT$$GT$17ha4650a712ed3a52bE"(ptr align 8 %iterator) #25
          to label %bb13 unwind label %terminate

cleanup:                                          ; preds = %bb9, %bb1
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %1, align 8
  %5 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
  %6 = load i64, ptr %_3, align 8
  %7 = icmp eq i64 %6, -9223372036854775803
  %_5 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_5, 1
  br i1 %8, label %bb3, label %bb9

bb3:                                              ; preds = %bb2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %element, ptr align 8 %_3, i64 32, i1 false)
  %9 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %9, align 8
  br label %bb16

bb9:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro2::TokenTree>>
  invoke void @"_ZN4core3ptr71drop_in_place$LT$core..option..Option$LT$proc_macro2..TokenTree$GT$$GT$17h875682ad77382b8dE"(ptr align 8 %_3)
          to label %bb10 unwind label %cleanup

bb16:                                             ; preds = %bb3
  %10 = load i64, ptr %self, align 8
  store i64 %10, ptr %_9, align 8
  br label %bb17

bb17:                                             ; preds = %bb16
  %11 = load i64, ptr %_9, align 8
  %_8 = icmp eq i64 %len, %11
  br i1 %_8, label %bb4, label %bb7

bb15:                                             ; No predecessors!
  unreachable

bb7:                                              ; preds = %bb17
  br label %bb8

bb4:                                              ; preds = %bb17
; invoke <proc_macro2::rcvec::RcVecIntoIter<T> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN101_$LT$proc_macro2..rcvec..RcVecIntoIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h196b8adef2a95d1bE"(ptr sret([24 x i8]) align 8 %_11, ptr align 8 %iterator)
          to label %bb5 unwind label %cleanup1

bb8:                                              ; preds = %bb6, %bb7
  %12 = getelementptr inbounds i8, ptr %self, i64 8
  %self2 = load ptr, ptr %12, align 8
  %dst = getelementptr inbounds %TokenTree, ptr %self2, i64 %len
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %element, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 32, i1 false)
  %new_len = add i64 %len, 1
  %13 = getelementptr inbounds i8, ptr %self, i64 16
  store i64 %new_len, ptr %13, align 8
  br label %bb1

bb14:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %element) #25
          to label %bb12 unwind label %terminate

cleanup1:                                         ; preds = %bb5, %bb4
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
  store ptr %15, ptr %1, align 8
  %17 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %16, ptr %17, align 8
  br label %bb14

bb5:                                              ; preds = %bb4
  %lower = load i64, ptr %_11, align 8
  %18 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %18, ptr %0, align 8
  %_14 = load i64, ptr %0, align 8
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h2b7a68db1aff4cd2E"(ptr align 8 %self, i64 %_14)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
  br label %bb8

terminate:                                        ; preds = %bb12, %bb14
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb10:                                             ; preds = %bb9
; call core::ptr::drop_in_place<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr84drop_in_place$LT$proc_macro2..rcvec..RcVecIntoIter$LT$proc_macro2..TokenTree$GT$$GT$17ha4650a712ed3a52bE"(ptr align 8 %iterator)
  ret void

bb19:                                             ; No predecessors!
  unreachable

bb13:                                             ; preds = %bb12
  %22 = load ptr, ptr %1, align 8
  %23 = getelementptr inbounds i8, ptr %1, i64 8
  %24 = load i32, ptr %23, align 8
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h8105aaa12c6d9782E"(ptr align 8 %self, ptr align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
  %end_or_len = alloca [8 x i8], align 8
  br label %bb3

bb3:                                              ; preds = %start
  %_9 = getelementptr inbounds i8, ptr %other.0, i64 %other.1
  store ptr %_9, ptr %end_or_len, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %_11 = load ptr, ptr %end_or_len, align 8
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h324e01ee7dec53f2E"(ptr align 8 %self, ptr %other.0, ptr %_11)
  ret void

bb2:                                              ; No predecessors!
  unreachable
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h33ecf184e9625106E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_7 = alloca [8 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %count = load i64, ptr %1, align 8
  %_3 = getelementptr inbounds %TokenTree, ptr %self1, i64 %count
  br label %bb2

bb2:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8
  store i64 %2, ptr %_7, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = getelementptr inbounds i8, ptr %self, i64 16
  %_9 = load i64, ptr %3, align 8
  %4 = load i64, ptr %_7, align 8
  %len = sub i64 %4, %_9
  br label %bb6

bb1:                                              ; No predecessors!
  unreachable

bb6:                                              ; preds = %bb3
  %5 = insertvalue { ptr, i64 } poison, ptr %_3, 0
  %6 = insertvalue { ptr, i64 } %5, i64 %len, 1
  ret { ptr, i64 } %6

bb4:                                              ; No predecessors!
  unreachable

bb5:                                              ; No predecessors!
  unreachable
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h87b4752894be1f85E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_7 = alloca [8 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %count = load i64, ptr %1, align 8
  %_3 = getelementptr inbounds %"proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>", ptr %self1, i64 %count
  br label %bb2

bb2:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8
  store i64 %2, ptr %_7, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = getelementptr inbounds i8, ptr %self, i64 16
  %_9 = load i64, ptr %3, align 8
  %4 = load i64, ptr %_7, align 8
  %len = sub i64 %4, %_9
  br label %bb6

bb1:                                              ; No predecessors!
  unreachable

bb6:                                              ; preds = %bb3
  %5 = insertvalue { ptr, i64 } poison, ptr %_3, 0
  %6 = insertvalue { ptr, i64 } %5, i64 %len, 1
  ret { ptr, i64 } %6

bb4:                                              ; No predecessors!
  unreachable

bb5:                                              ; No predecessors!
  unreachable
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17ha781779859ac44b9E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_7 = alloca [8 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %count = load i64, ptr %1, align 8
  %_3 = getelementptr inbounds %"proc_macro::TokenTree", ptr %self1, i64 %count
  br label %bb2

bb2:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8
  store i64 %2, ptr %_7, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = getelementptr inbounds i8, ptr %self, i64 16
  %_9 = load i64, ptr %3, align 8
  %4 = load i64, ptr %_7, align 8
  %len = sub i64 %4, %_9
  br label %bb6

bb1:                                              ; No predecessors!
  unreachable

bb6:                                              ; preds = %bb3
  %5 = insertvalue { ptr, i64 } poison, ptr %_3, 0
  %6 = insertvalue { ptr, i64 } %5, i64 %len, 1
  ret { ptr, i64 } %6

bb4:                                              ; No predecessors!
  unreachable

bb5:                                              ; No predecessors!
  unreachable
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h302935c7d159b349E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %_0 = load i64, ptr %0, align 8
  ret i64 %_0
}

; alloc::vec::Vec<T,A>::pop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h7759f1d466d0ab69E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_6 = alloca [32 x i8], align 8
  %_5 = alloca [8 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %_2 = load i64, ptr %0, align 8
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i64 -9223372036854775803, ptr %_0, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %self, i64 16
  %3 = getelementptr inbounds i8, ptr %self, i64 16
  %4 = load i64, ptr %3, align 8
  %5 = sub i64 %4, 1
  store i64 %5, ptr %2, align 8
  %6 = getelementptr inbounds i8, ptr %self, i64 16
  %_4 = load i64, ptr %6, align 8
  br label %bb5

bb3:                                              ; preds = %bb8, %bb1
  ret void

bb5:                                              ; preds = %bb2
  %7 = load i64, ptr %self, align 8
  store i64 %7, ptr %_5, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %8 = load i64, ptr %_5, align 8
  %cond = icmp ult i64 %_4, %8
  br label %bb8

bb4:                                              ; No predecessors!
  unreachable

bb8:                                              ; preds = %bb6
  %9 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %self, i64 16
  %count = load i64, ptr %10, align 8
  %src = getelementptr inbounds %TokenTree, ptr %self1, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %src, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 32, i1 false)
  br label %bb3

bb7:                                              ; No predecessors!
  unreachable
}

; alloc::vec::Vec<T,A>::pop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17hfeaeda443483fac2E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_6 = alloca [32 x i8], align 8
  %_5 = alloca [8 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %_2 = load i64, ptr %0, align 8
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 -9223372036854775808, ptr %2, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 16
  %4 = getelementptr inbounds i8, ptr %self, i64 16
  %5 = load i64, ptr %4, align 8
  %6 = sub i64 %5, 1
  store i64 %6, ptr %3, align 8
  %7 = getelementptr inbounds i8, ptr %self, i64 16
  %_4 = load i64, ptr %7, align 8
  br label %bb5

bb3:                                              ; preds = %bb8, %bb1
  ret void

bb5:                                              ; preds = %bb2
  %8 = load i64, ptr %self, align 8
  store i64 %8, ptr %_5, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %9 = load i64, ptr %_5, align 8
  %cond = icmp ult i64 %_4, %9
  br label %bb8

bb4:                                              ; No predecessors!
  unreachable

bb8:                                              ; preds = %bb6
  %10 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %self, i64 16
  %count = load i64, ptr %11, align 8
  %src = getelementptr inbounds { i8, [7 x i8], %"fallback::TokenStreamBuilder" }, ptr %self1, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %src, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 32, i1 false)
  br label %bb3

bb7:                                              ; No predecessors!
  unreachable
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h9ba2c9e9aed394edE"(ptr align 8 %self, i8 %value) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_5 = alloca [8 x i8], align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb8

bb8:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8
  store i64 %2, ptr %_5, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %3 = load i64, ptr %_5, align 8
  %_4 = icmp eq i64 %len, %3
  br i1 %_4, label %bb1, label %bb3

bb7:                                              ; No predecessors!
  unreachable

bb3:                                              ; preds = %bb9
  br label %bb4

bb1:                                              ; preds = %bb9
; invoke alloc::raw_vec::RawVec<T,A>::grow_one
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17hd11f329b245fe39eE"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %bb2, %bb3
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %4, align 8
  %end = getelementptr inbounds i8, ptr %self1, i64 %len
  store i8 %value, ptr %end, align 1
  %5 = getelementptr inbounds i8, ptr %self, i64 16
  %6 = add i64 %len, 1
  store i64 %6, ptr %5, align 8
  ret void

bb6:                                              ; preds = %cleanup
  %7 = load ptr, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = insertvalue { ptr, i32 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i32 } %10, i32 %9, 1
  resume { ptr, i32 } %11

cleanup:                                          ; preds = %bb1
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %0, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  br label %bb4
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hb7602e9311fbd5e7E"(ptr align 8 %self, ptr align 8 %value) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %src = alloca [32 x i8], align 8
  %_5 = alloca [8 x i8], align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb8

bb8:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8
  store i64 %2, ptr %_5, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %3 = load i64, ptr %_5, align 8
  %_4 = icmp eq i64 %len, %3
  br i1 %_4, label %bb1, label %bb3

bb7:                                              ; No predecessors!
  unreachable

bb3:                                              ; preds = %bb9
  br label %bb4

bb1:                                              ; preds = %bb9
; invoke alloc::raw_vec::RawVec<T,A>::grow_one
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17h2acd6a9b81786c50E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %bb2, %bb3
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %4, align 8
  %end = getelementptr inbounds %TokenTree, ptr %self1, i64 %len
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %value, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %end, ptr align 8 %src, i64 32, i1 false)
  %5 = getelementptr inbounds i8, ptr %self, i64 16
  %6 = add i64 %len, 1
  store i64 %6, ptr %5, align 8
  ret void

bb6:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %value) #25
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %bb1
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  br label %bb4

terminate:                                        ; preds = %bb6
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb5:                                              ; preds = %bb6
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load i32, ptr %15, align 8
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf78caf75a0e06745E"(ptr align 8 %self, ptr align 8 %value) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %src = alloca [32 x i8], align 8
  %_5 = alloca [8 x i8], align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb8

bb8:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8
  store i64 %2, ptr %_5, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %3 = load i64, ptr %_5, align 8
  %_4 = icmp eq i64 %len, %3
  br i1 %_4, label %bb1, label %bb3

bb7:                                              ; No predecessors!
  unreachable

bb3:                                              ; preds = %bb9
  br label %bb4

bb1:                                              ; preds = %bb9
; invoke alloc::raw_vec::RawVec<T,A>::grow_one
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17ha9771a1eb3619de7E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %bb2, %bb3
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %4, align 8
  %end = getelementptr inbounds { i8, [7 x i8], %"fallback::TokenStreamBuilder" }, ptr %self1, i64 %len
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %value, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %end, ptr align 8 %src, i64 32, i1 false)
  %5 = getelementptr inbounds i8, ptr %self, i64 16
  %6 = add i64 %len, 1
  store i64 %6, ptr %5, align 8
  ret void

bb6:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$GT$17h3ef45e39eb45e706E"(ptr align 8 %value) #25
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %bb1
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  br label %bb4

terminate:                                        ; preds = %bb6
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb5:                                              ; preds = %bb6
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load i32, ptr %15, align 8
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18
}

; alloc::vec::Vec<T,A>::drain
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17hde7394ee7b80785dE"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %end_or_len = alloca [8 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %0, align 8
; call core::slice::index::range
  %1 = call { i64, i64 } @_ZN4core5slice5index5range17hd93dcf9b0ccbdef7E(i64 %len, ptr align 8 @alloc_c6ad71a07698cb5254c9e16a44bea55e)
  %_6.0 = extractvalue { i64, i64 } %1, 0
  %_6.1 = extractvalue { i64, i64 } %1, 1
  %2 = getelementptr inbounds i8, ptr %self, i64 16
  store i64 %_6.0, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %3, align 8
  %data = getelementptr inbounds %"proc_macro::TokenTree", ptr %self1, i64 %_6.0
  %len2 = sub i64 %_6.1, %_6.0
  br label %bb4

bb4:                                              ; preds = %start
  %_11 = sub i64 %len, %_6.1
  br label %bb6

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable

bb6:                                              ; preds = %bb4
  %_28 = getelementptr inbounds %"proc_macro::TokenTree", ptr %data, i64 %len2
  store ptr %_28, ptr %end_or_len, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %_30 = load ptr, ptr %end_or_len, align 8
  %4 = getelementptr inbounds i8, ptr %_0, i64 24
  store i64 %_6.1, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 32
  store i64 %_11, ptr %5, align 8
  store ptr %data, ptr %_0, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_30, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 16
  store ptr %self, ptr %7, align 8
  ret void

bb5:                                              ; No predecessors!
  unreachable
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h2b7a68db1aff4cd2E"(ptr align 8 %self, i64 %additional) unnamed_addr #1 {
start:
  %self1 = alloca [8 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %0, align 8
  br label %bb4

bb4:                                              ; preds = %start
  %1 = load i64, ptr %self, align 8
  store i64 %1, ptr %self1, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = load i64, ptr %self1, align 8
  %_7 = sub i64 %2, %len
  %_5 = icmp ugt i64 %additional, %_7
  br i1 %_5, label %bb1, label %bb2

bb3:                                              ; No predecessors!
  unreachable

bb2:                                              ; preds = %bb1, %bb5
  ret void

bb1:                                              ; preds = %bb5
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h8307b55a8d4f1bd8E"(ptr align 8 %self, i64 %len, i64 %additional)
  br label %bb2
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hcd1992e0f9a46245E"(ptr align 8 %self, i64 %additional) unnamed_addr #1 {
start:
  %self1 = alloca [8 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %0, align 8
  br label %bb4

bb4:                                              ; preds = %start
  %1 = load i64, ptr %self, align 8
  store i64 %1, ptr %self1, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = load i64, ptr %self1, align 8
  %_7 = sub i64 %2, %len
  %_5 = icmp ugt i64 %additional, %_7
  br i1 %_5, label %bb1, label %bb2

bb3:                                              ; No predecessors!
  unreachable

bb2:                                              ; preds = %bb1, %bb5
  ret void

bb1:                                              ; preds = %bb5
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h74df42b84ce6a8d8E"(ptr align 8 %self, i64 %len, i64 %additional)
  br label %bb2
}

; alloc::vec::Vec<T,A>::is_empty
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h0f7fcdc62d550cb3E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %_2 = load i64, ptr %0, align 8
  %_0 = icmp eq i64 %_2, 0
  ret i1 %_0
}

; alloc::vec::Vec<T,A>::is_empty
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17hc431871faeffbbceE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %_2 = load i64, ptr %0, align 8
  %_0 = icmp eq i64 %_2, 0
  ret i1 %_0
}

; alloc::vec::into_iter::IntoIter<T,A>::as_slice
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$8as_slice17ha935fb47c0a88188E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
; call core::iter::traits::exact_size::ExactSizeIterator::len
  %len = call i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17h6bd2106c5e1a168eE(ptr align 8 %self)
  br label %bb4

bb4:                                              ; preds = %start
  %1 = insertvalue { ptr, i64 } poison, ptr %self1, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %len, 1
  ret { ptr, i64 } %2

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable
}

; alloc::vec::into_iter::IntoIter<T,A>::as_slice
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$8as_slice17hed2fc1f5a2b1c506E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
; call core::iter::traits::exact_size::ExactSizeIterator::len
  %len = call i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hb42f7ec0ac13234aE(ptr align 8 %self)
  br label %bb4

bb4:                                              ; preds = %start
  %1 = insertvalue { ptr, i64 } poison, ptr %self1, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %len, 1
  ret { ptr, i64 } %2

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal ptr @_ZN5alloc5alloc15exchange_malloc17hab613a1605b0295cE(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %_4 = alloca [16 x i8], align 8
; call alloc::alloc::Global::alloc_impl
  %0 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h033b7054288e0040E(ptr align 1 inttoptr (i64 1 to ptr), i64 %align, i64 %size, i1 zeroext false)
  %1 = extractvalue { ptr, i64 } %0, 0
  %2 = extractvalue { ptr, i64 } %0, 1
  store ptr %1, ptr %_4, align 8
  %3 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load ptr, ptr %_4, align 8
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_5 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_5, 0
  br i1 %7, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %ptr.0 = load ptr, ptr %_4, align 8
  %8 = getelementptr inbounds i8, ptr %_4, i64 8
  %ptr.1 = load i64, ptr %8, align 8
  ret ptr %ptr.0

bb2:                                              ; preds = %start
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h668ad8a7a2fd77cbE(i64 %align, i64 %size) #24
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal ptr @_ZN5alloc5alloc5alloc17hc28a070e67ff0bd3E(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %2 = alloca [1 x i8], align 1
  %_11 = alloca [8 x i8], align 8
  %layout = alloca [16 x i8], align 8
  store i64 %0, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %3, align 8
  br label %bb5

bb5:                                              ; preds = %start
  %4 = load volatile i8, ptr @__rust_no_alloc_shim_is_unstable, align 1
  store i8 %4, ptr %2, align 1
  %_2 = load i8, ptr %2, align 1
  %5 = getelementptr inbounds i8, ptr %layout, i64 8
  %_3 = load i64, ptr %5, align 8
  %self = load i64, ptr %layout, align 8
  store i64 %self, ptr %_11, align 8
  %_12 = load i64, ptr %_11, align 8
  %_13 = icmp uge i64 %_12, 1
  %_14 = icmp ule i64 %_12, -9223372036854775808
  %_15 = and i1 %_13, %_14
  %_0 = call ptr @__rust_alloc(i64 %_3, i64 %_12) #23
  ret ptr %_0

bb3:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  unreachable
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h033b7054288e0040E(ptr align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %_29 = alloca [8 x i8], align 8
  %self3 = alloca [8 x i8], align 8
  %self2 = alloca [8 x i8], align 8
  %_11 = alloca [8 x i8], align 8
  %layout1 = alloca [16 x i8], align 8
  %raw_ptr = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %layout = alloca [16 x i8], align 8
  store i64 %0, ptr %layout, align 8
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %layout, i64 8
  %size = load i64, ptr %3, align 8
  %4 = icmp eq i64 %size, 0
  br i1 %4, label %bb2, label %bb1

bb2:                                              ; preds = %start
; call core::alloc::layout::Layout::dangling
  %data = call ptr @_ZN4core5alloc6layout6Layout8dangling17h423ad447534b270dE(ptr align 8 %layout)
  br label %bb10

bb1:                                              ; preds = %start
  br i1 %zeroed, label %bb4, label %bb5

bb10:                                             ; preds = %bb2
  store ptr %data, ptr %_0, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 0, ptr %5, align 8
  br label %bb7

bb8:                                              ; No predecessors!
  unreachable

bb9:                                              ; No predecessors!
  unreachable

bb7:                                              ; preds = %bb18, %bb12, %bb10
  %6 = load ptr, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  %8 = load i64, ptr %7, align 8
  %9 = insertvalue { ptr, i64 } poison, ptr %6, 0
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1
  ret { ptr, i64 } %10

bb5:                                              ; preds = %bb1
  %11 = load i64, ptr %layout, align 8
  %12 = getelementptr inbounds i8, ptr %layout, i64 8
  %13 = load i64, ptr %12, align 8
; call alloc::alloc::alloc
  %14 = call ptr @_ZN5alloc5alloc5alloc17hc28a070e67ff0bd3E(i64 %11, i64 %13)
  store ptr %14, ptr %raw_ptr, align 8
  br label %bb6

bb4:                                              ; preds = %bb1
  %15 = load i64, ptr %layout, align 8
  %16 = getelementptr inbounds i8, ptr %layout, i64 8
  %17 = load i64, ptr %16, align 8
  store i64 %15, ptr %layout1, align 8
  %18 = getelementptr inbounds i8, ptr %layout1, i64 8
  store i64 %17, ptr %18, align 8
  %self4 = load i64, ptr %layout, align 8
  store i64 %self4, ptr %_29, align 8
  %_30 = load i64, ptr %_29, align 8
  %_31 = icmp uge i64 %_30, 1
  %_32 = icmp ule i64 %_30, -9223372036854775808
  %_33 = and i1 %_31, %_32
  %19 = call ptr @__rust_alloc_zeroed(i64 %size, i64 %_30) #23
  store ptr %19, ptr %raw_ptr, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %ptr = load ptr, ptr %raw_ptr, align 8
  %_35 = ptrtoint ptr %ptr to i64
  %20 = icmp eq i64 %_35, 0
  br i1 %20, label %bb12, label %bb13

bb12:                                             ; preds = %bb6
  store ptr null, ptr %self3, align 8
  store ptr null, ptr %self2, align 8
  %21 = load ptr, ptr @0, align 8
  %22 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %21, ptr %_0, align 8
  %23 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %22, ptr %23, align 8
  br label %bb7

bb13:                                             ; preds = %bb6
  br label %bb15

bb15:                                             ; preds = %bb13
  store ptr %ptr, ptr %self3, align 8
  %v = load ptr, ptr %self3, align 8
  store ptr %v, ptr %self2, align 8
  %v5 = load ptr, ptr %self2, align 8
  store ptr %v5, ptr %_11, align 8
  %ptr6 = load ptr, ptr %_11, align 8
  br label %bb18

bb14:                                             ; No predecessors!
  unreachable

bb18:                                             ; preds = %bb15
  store ptr %ptr6, ptr %_0, align 8
  %24 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %size, ptr %24, align 8
  br label %bb7

bb16:                                             ; No predecessors!
  unreachable

bb17:                                             ; No predecessors!
  unreachable
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @_ZN5alloc5alloc6Global9grow_impl17hce9838fb297a5436E(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %_72 = alloca [8 x i8], align 8
  %data12 = alloca [8 x i8], align 8
  %ptr11 = alloca [16 x i8], align 8
  %_63 = alloca [8 x i8], align 8
  %_62 = alloca [8 x i8], align 8
  %ptr10 = alloca [8 x i8], align 8
  %self9 = alloca [8 x i8], align 8
  %self8 = alloca [8 x i8], align 8
  %self7 = alloca [8 x i8], align 8
  %_56 = alloca [8 x i8], align 8
  %_49 = alloca [8 x i8], align 8
  %_43 = alloca [8 x i8], align 8
  %self6 = alloca [16 x i8], align 8
  %_37 = alloca [16 x i8], align 8
  %len = alloca [8 x i8], align 8
  %data = alloca [8 x i8], align 8
  %ptr5 = alloca [8 x i8], align 8
  %self4 = alloca [8 x i8], align 8
  %self3 = alloca [8 x i8], align 8
  %_25 = alloca [8 x i8], align 8
  %new_size = alloca [8 x i8], align 8
  %layout = alloca [16 x i8], align 8
  %self2 = alloca [8 x i8], align 8
  %ptr1 = alloca [8 x i8], align 8
  %raw_ptr = alloca [8 x i8], align 8
  %old_size = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %new_layout = alloca [16 x i8], align 8
  %old_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %old_layout, align 8
  %4 = getelementptr inbounds i8, ptr %old_layout, i64 8
  store i64 %1, ptr %4, align 8
  store i64 %2, ptr %new_layout, align 8
  %5 = getelementptr inbounds i8, ptr %new_layout, i64 8
  store i64 %3, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %7 = load i64, ptr %6, align 8
  store i64 %7, ptr %old_size, align 8
  %8 = load i64, ptr %old_size, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %10 = load i64, ptr %new_layout, align 8
  %11 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %12 = load i64, ptr %11, align 8
; call alloc::alloc::Global::alloc_impl
  %13 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h033b7054288e0040E(ptr align 1 %self, i64 %10, i64 %12, i1 zeroext %zeroed)
  %14 = extractvalue { ptr, i64 } %13, 0
  %15 = extractvalue { ptr, i64 } %13, 1
  store ptr %14, ptr %_0, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %15, ptr %16, align 8
  br label %bb10

bb2:                                              ; preds = %start
  %self13 = load i64, ptr %old_layout, align 8
  store i64 %self13, ptr %_43, align 8
  %_44 = load i64, ptr %_43, align 8
  %_45 = icmp uge i64 %_44, 1
  %_46 = icmp ule i64 %_44, -9223372036854775808
  %_47 = and i1 %_45, %_46
  %self14 = load i64, ptr %new_layout, align 8
  store i64 %self14, ptr %_49, align 8
  %_50 = load i64, ptr %_49, align 8
  %_51 = icmp uge i64 %_50, 1
  %_52 = icmp ule i64 %_50, -9223372036854775808
  %_53 = and i1 %_51, %_52
  %_11 = icmp eq i64 %_44, %_50
  br i1 %_11, label %bb3, label %bb4

bb10:                                             ; preds = %bb24, %bb14, %bb25, %bb29, %bb1
  %17 = load ptr, ptr %_0, align 8
  %18 = getelementptr inbounds i8, ptr %_0, i64 8
  %19 = load i64, ptr %18, align 8
  %20 = insertvalue { ptr, i64 } poison, ptr %17, 0
  %21 = insertvalue { ptr, i64 } %20, i64 %19, 1
  ret { ptr, i64 } %21

bb4:                                              ; preds = %bb2
  %22 = load i64, ptr %new_layout, align 8
  %23 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %24 = load i64, ptr %23, align 8
; call alloc::alloc::Global::alloc_impl
  %25 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h033b7054288e0040E(ptr align 1 %self, i64 %22, i64 %24, i1 zeroext %zeroed)
  %26 = extractvalue { ptr, i64 } %25, 0
  %27 = extractvalue { ptr, i64 } %25, 1
  store ptr %26, ptr %self6, align 8
  %28 = getelementptr inbounds i8, ptr %self6, i64 8
  store i64 %27, ptr %28, align 8
  %29 = load ptr, ptr %self6, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = icmp eq i64 %30, 0
  %_76 = select i1 %31, i64 1, i64 0
  %32 = icmp eq i64 %_76, 0
  br i1 %32, label %bb26, label %bb25

bb3:                                              ; preds = %bb2
  %33 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %new_size15 = load i64, ptr %33, align 8
  %34 = load i64, ptr %old_size, align 8
  %cond = icmp uge i64 %new_size15, %34
  br label %bb12

bb26:                                             ; preds = %bb4
  %v.0 = load ptr, ptr %self6, align 8
  %35 = getelementptr inbounds i8, ptr %self6, i64 8
  %v.1 = load i64, ptr %35, align 8
  store ptr %v.0, ptr %_37, align 8
  %36 = getelementptr inbounds i8, ptr %_37, i64 8
  store i64 %v.1, ptr %36, align 8
  %new_ptr.0 = load ptr, ptr %_37, align 8
  %37 = getelementptr inbounds i8, ptr %_37, i64 8
  %new_ptr.1 = load i64, ptr %37, align 8
  br label %bb29

bb25:                                             ; preds = %bb4
  %38 = load ptr, ptr @0, align 8
  %39 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %38, ptr %_0, align 8
  %40 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %39, ptr %40, align 8
  br label %bb10

bb29:                                             ; preds = %bb26
  %41 = load i64, ptr %old_size, align 8
  %42 = mul i64 %41, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %new_ptr.0, ptr align 1 %ptr, i64 %42, i1 false)
  %43 = load i64, ptr %old_layout, align 8
  %44 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %45 = load i64, ptr %44, align 8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hfd172b44560b47ebE"(ptr align 1 %self, ptr %ptr, i64 %43, i64 %45)
  store ptr %new_ptr.0, ptr %_0, align 8
  %46 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %new_ptr.1, ptr %46, align 8
  br label %bb10

bb27:                                             ; No predecessors!
  unreachable

bb28:                                             ; No predecessors!
  unreachable

bb5:                                              ; No predecessors!
  unreachable

bb12:                                             ; preds = %bb3
  store ptr %ptr, ptr %self2, align 8
  store ptr %ptr, ptr %_56, align 8
  %47 = load ptr, ptr %_56, align 8
  store ptr %47, ptr %ptr1, align 8
  %48 = load i64, ptr %old_layout, align 8
  %49 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %50 = load i64, ptr %49, align 8
  store i64 %48, ptr %layout, align 8
  %51 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %50, ptr %51, align 8
  store i64 %new_size15, ptr %new_size, align 8
  store ptr %layout, ptr %self7, align 8
  store ptr %layout, ptr %self8, align 8
  store i64 %self13, ptr %self9, align 8
  %52 = load ptr, ptr %ptr1, align 8
  %53 = load i64, ptr %old_size, align 8
  %54 = call ptr @__rust_realloc(ptr %52, i64 %53, i64 %_44, i64 %new_size15) #23
  store ptr %54, ptr %raw_ptr, align 8
  %55 = load ptr, ptr %raw_ptr, align 8
  store ptr %55, ptr %ptr5, align 8
  %56 = load ptr, ptr %raw_ptr, align 8
  store ptr %56, ptr %ptr10, align 8
  %57 = load ptr, ptr %raw_ptr, align 8
  store ptr %57, ptr %_63, align 8
  %58 = load ptr, ptr %_63, align 8
  %59 = ptrtoint ptr %58 to i64
  store i64 %59, ptr %_62, align 8
  %60 = load i64, ptr %_62, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %bb14, label %bb15

bb14:                                             ; preds = %bb12
  store ptr null, ptr %self4, align 8
  store ptr null, ptr %self3, align 8
  %62 = load ptr, ptr @0, align 8
  %63 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %62, ptr %_0, align 8
  %64 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %63, ptr %64, align 8
  br label %bb10

bb15:                                             ; preds = %bb12
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %_65 = load ptr, ptr %raw_ptr, align 8
  store ptr %_65, ptr %self4, align 8
  %v = load ptr, ptr %self4, align 8
  store ptr %v, ptr %self3, align 8
  %v16 = load ptr, ptr %self3, align 8
  store ptr %v16, ptr %_25, align 8
  %ptr17 = load ptr, ptr %_25, align 8
  br i1 %zeroed, label %bb6, label %bb7

bb11:                                             ; No predecessors!
  unreachable

bb31:                                             ; No predecessors!
  unreachable

bb32:                                             ; No predecessors!
  unreachable

bb33:                                             ; No predecessors!
  unreachable

bb16:                                             ; No predecessors!
  %65 = load ptr, ptr %_63, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17h8dd7c7c5843aae0eE"(ptr %65) #23
  br label %bb17

bb7:                                              ; preds = %bb21, %bb17
  store ptr %ptr17, ptr %data, align 8
  store i64 %new_size15, ptr %len, align 8
  store ptr %ptr17, ptr %_72, align 8
  %66 = load ptr, ptr %_72, align 8
  store ptr %66, ptr %data12, align 8
  %67 = load ptr, ptr %data12, align 8
  %68 = load i64, ptr %len, align 8
  store ptr %67, ptr %ptr11, align 8
  %69 = getelementptr inbounds i8, ptr %ptr11, i64 8
  store i64 %68, ptr %69, align 8
  br label %bb24

bb6:                                              ; preds = %bb17
  %self18 = load ptr, ptr %raw_ptr, align 8
  %70 = load ptr, ptr %raw_ptr, align 8
  %71 = load i64, ptr %old_size, align 8
  %self19 = getelementptr inbounds i8, ptr %70, i64 %71
  %72 = load i64, ptr %old_size, align 8
  %count = sub i64 %new_size15, %72
  br label %bb21

bb21:                                             ; preds = %bb6
  %73 = mul i64 1, %count
  call void @llvm.memset.p0.i64(ptr align 1 %self19, i8 0, i64 %73, i1 false)
  br label %bb7

bb24:                                             ; preds = %bb22, %bb7
  %_75.0 = load ptr, ptr %ptr11, align 8
  %74 = getelementptr inbounds i8, ptr %ptr11, i64 8
  %_75.1 = load i64, ptr %74, align 8
  store ptr %_75.0, ptr %_0, align 8
  %75 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_75.1, ptr %75, align 8
  br label %bb10

bb19:                                             ; No predecessors!
; call core::intrinsics::write_bytes::precondition_check
  call void @_ZN4core10intrinsics11write_bytes18precondition_check17h377ecd87b38956f1E(ptr %self19, i64 1) #23
  %76 = mul i64 1, %count
  call void @llvm.memset.p0.i64(ptr align 1 %self19, i8 0, i64 %76, i1 false)
  store ptr %ptr17, ptr %data, align 8
  store i64 %new_size15, ptr %len, align 8
  store ptr %ptr17, ptr %_72, align 8
  %77 = load ptr, ptr %_72, align 8
  store ptr %77, ptr %data12, align 8
  %78 = load ptr, ptr %data12, align 8
  %79 = load i64, ptr %len, align 8
  store ptr %78, ptr %ptr11, align 8
  %80 = getelementptr inbounds i8, ptr %ptr11, i64 8
  store i64 %79, ptr %80, align 8
  br label %bb22

bb22:                                             ; preds = %bb19
  %_74 = load ptr, ptr %ptr11, align 8
  %81 = getelementptr inbounds i8, ptr %ptr11, i64 8
  %82 = load i64, ptr %81, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17h8dd7c7c5843aae0eE"(ptr %_74) #23
  br label %bb24
}

; alloc::string::String::with_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String13with_capacity17h18a93b3a2107362bE(ptr sret([24 x i8]) align 8 %_0, i64 %capacity) unnamed_addr #0 {
start:
  %_4 = alloca [24 x i8], align 8
  %_2 = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17h7a9fee94d5cce3e5E"(ptr sret([24 x i8]) align 8 %_4, i64 %capacity, i1 zeroext false)
  %_5 = load i64, ptr %_4, align 8
  %0 = icmp eq i64 %_5, 0
  br i1 %0, label %bb4, label %bb3

bb4:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_4, i64 8
  %res.0 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %res.1 = load ptr, ptr %2, align 8
  store i64 %res.0, ptr %_2, align 8
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  store ptr %res.1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 16
  store i64 0, ptr %4, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_4, i64 8
  %err.0 = load i64, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  %err.1 = load i64, ptr %6, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; alloc::string::String::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String3new17h806c4593511c67ffE(ptr sret([24 x i8]) align 8 %_0) unnamed_addr #0 {
start:
  %_1 = alloca [24 x i8], align 8
  store i64 0, ptr %_1, align 8
  %0 = getelementptr inbounds i8, ptr %_1, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %_1, i64 16
  store i64 0, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_1, i64 24, i1 false)
  ret void
}

; alloc::string::String::push
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %self, i32 %ch) unnamed_addr #0 {
start:
  %_10 = alloca [4 x i8], align 1
  %_12 = icmp ult i32 %ch, 128
  br i1 %_12, label %bb4, label %bb5

bb5:                                              ; preds = %start
  %_13 = icmp ult i32 %ch, 2048
  br i1 %_13, label %bb6, label %bb7

bb4:                                              ; preds = %start
  %_4 = trunc i32 %ch to i8
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h9ba2c9e9aed394edE"(ptr align 8 %self, i8 %_4)
  br label %bb3

bb7:                                              ; preds = %bb5
  %_14 = icmp ult i32 %ch, 65536
  br i1 %_14, label %bb8, label %bb9

bb6:                                              ; preds = %bb5
  br label %bb11

bb9:                                              ; preds = %bb7
  br label %bb10

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  br label %bb11

bb11:                                             ; preds = %bb6, %bb10
  call void @llvm.memset.p0.i64(ptr align 1 %_10, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %0 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17he28c9db22ecb6556E(i32 %ch, ptr align 1 %_10, i64 4)
  %v.0 = extractvalue { ptr, i64 } %0, 0
  %v.1 = extractvalue { ptr, i64 } %0, 1
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h8105aaa12c6d9782E"(ptr align 8 %self, ptr align 1 %v.0, i64 %v.1)
  br label %bb3

bb3:                                              ; preds = %bb4, %bb11
  ret void
}

; alloc::string::String::insert
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String6insert17h833b9285d1a8943eE(ptr align 8 %self, i64 %idx, i32 %ch) unnamed_addr #0 {
start:
  %bits = alloca [4 x i8], align 1
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb7

bb7:                                              ; preds = %start
; call core::str::<impl str>::is_char_boundary
  %_4 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h213c77745b6a4bb9E"(ptr align 1 %self1, i64 %len, i64 %idx)
  br i1 %_4, label %bb2, label %bb3

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable

bb3:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdc606204151d5569E(ptr align 1 @alloc_fd658439c397d335ee01abc3a4ed5fd5, i64 44, ptr align 8 @alloc_8e3a85c7678f157e80cbc88bda1bf520) #24
  unreachable

bb2:                                              ; preds = %bb7
  call void @llvm.memset.p0.i64(ptr align 1 %bits, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %2 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17he28c9db22ecb6556E(i32 %ch, ptr align 1 %bits, i64 4)
  %v.0 = extractvalue { ptr, i64 } %2, 0
  %v.1 = extractvalue { ptr, i64 } %2, 1
; call alloc::string::String::insert_bytes
  call void @_ZN5alloc6string6String12insert_bytes17h72da711b4d18faf2E(ptr align 8 %self, i64 %idx, ptr align 1 %v.0, i64 %v.1)
  ret void
}

; alloc::string::String::remove
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN5alloc6string6String6remove17h561e24ab6cddbd9aE(ptr align 8 %self, i64 %idx) unnamed_addr #0 {
start:
  %_13 = alloca [8 x i8], align 8
  %_11 = alloca [48 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [4 x i8], align 4
; call <alloc::string::String as core::ops::index::Index<I>>::index
  %0 = call { ptr, i64 } @"_ZN74_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hfe0172ca423d2b12E"(ptr align 8 %self, i64 %idx, ptr align 8 @alloc_5f986b98c64f9d104e42c1f77cb49e68)
  %self.0 = extractvalue { ptr, i64 } %0, 0
  %self.1 = extractvalue { ptr, i64 } %0, 1
  %_32 = getelementptr inbounds i8, ptr %self.0, i64 %self.1
  store ptr %self.0, ptr %_5, align 8
  %1 = getelementptr inbounds i8, ptr %_5, i64 8
  store ptr %_32, ptr %1, align 8
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %2 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %_5)
  store i32 %2, ptr %_3, align 4
  %3 = load i32, ptr %_3, align 4
  %4 = icmp eq i32 %3, 1114112
  %_9 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_9, 0
  br i1 %5, label %bb4, label %bb5

bb4:                                              ; preds = %start
  store ptr @alloc_ac5f081713123e742296374c690108be, ptr %_11, align 8
  %6 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 1, ptr %6, align 8
  %7 = load ptr, ptr @0, align 8
  %8 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %9 = getelementptr inbounds i8, ptr %_11, i64 32
  store ptr %7, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 %8, ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %_11, i64 16
  store ptr inttoptr (i64 8 to ptr), ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 0, ptr %12, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_11, ptr align 8 @alloc_0480b8d0720691b885b9bda486974d1f) #24
  unreachable

bb5:                                              ; preds = %start
  %ch = load i32, ptr %_3, align 4
  %_39 = icmp ult i32 %ch, 128
  br i1 %_39, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %_40 = icmp ult i32 %ch, 2048
  br i1 %_40, label %bb8, label %bb9

bb6:                                              ; preds = %bb5
  store i64 1, ptr %_13, align 8
  br label %bb14

bb9:                                              ; preds = %bb7
  %_41 = icmp ult i32 %ch, 65536
  br i1 %_41, label %bb10, label %bb11

bb8:                                              ; preds = %bb7
  store i64 2, ptr %_13, align 8
  br label %bb13

bb11:                                             ; preds = %bb9
  store i64 4, ptr %_13, align 8
  br label %bb12

bb10:                                             ; preds = %bb9
  store i64 3, ptr %_13, align 8
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb13:                                             ; preds = %bb8, %bb12
  br label %bb14

bb14:                                             ; preds = %bb6, %bb13
  %13 = load i64, ptr %_13, align 8
  %next = add i64 %idx, %13
  %14 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %15, align 8
  %src = getelementptr inbounds i8, ptr %self1, i64 %next
  %16 = getelementptr inbounds i8, ptr %self, i64 8
  %self2 = load ptr, ptr %16, align 8
  %dst = getelementptr inbounds i8, ptr %self2, i64 %idx
  %count = sub i64 %len, %next
  br label %bb18

bb18:                                             ; preds = %bb14
  %17 = mul i64 1, %count
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %dst, ptr align 1 %src, i64 %17, i1 false)
  %_25 = sub i64 %next, %idx
  %new_len = sub i64 %len, %_25
  %18 = getelementptr inbounds i8, ptr %self, i64 16
  store i64 %new_len, ptr %18, align 8
  ret i32 %ch

bb16:                                             ; No predecessors!
  unreachable

bb17:                                             ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable
}

; alloc::string::String::push_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String8push_str17hf1793f91e1cb3f57E(ptr align 8 %self, ptr align 1 %string.0, i64 %string.1) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h8105aaa12c6d9782E"(ptr align 8 %self, ptr align 1 %string.0, i64 %string.1)
  ret void
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define void @_ZN5alloc7raw_vec11finish_grow17h90a86e3a6652af6aE(ptr sret([24 x i8]) align 8 %_0, i64 %0, i64 %1, ptr align 8 %current_memory, ptr align 1 %alloc) unnamed_addr #7 {
start:
  %self3 = alloca [16 x i8], align 8
  %_47 = alloca [8 x i8], align 8
  %_41 = alloca [8 x i8], align 8
  %_34 = alloca [16 x i8], align 8
  %self2 = alloca [16 x i8], align 8
  %old_layout = alloca [16 x i8], align 8
  %memory = alloca [16 x i8], align 8
  %residual = alloca [16 x i8], align 8
  %self = alloca [24 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %new_layout1 = alloca [16 x i8], align 8
  %new_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %new_layout, align 8
  %2 = getelementptr inbounds i8, ptr %new_layout, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load i64, ptr %new_layout, align 8
  %4 = icmp eq i64 %3, 0
  %_30 = select i1 %4, i64 1, i64 0
  %5 = icmp eq i64 %_30, 0
  br i1 %5, label %bb9, label %bb8

bb9:                                              ; preds = %start
  %t.0 = load i64, ptr %new_layout, align 8
  %6 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %t.1 = load i64, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %t.0, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  store i64 %t.1, ptr %8, align 8
  store i64 0, ptr %self, align 8
  %9 = getelementptr inbounds i8, ptr %self, i64 8
  %v.0 = load i64, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  %v.1 = load i64, ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %v.0, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %v.1, ptr %12, align 8
  store i64 0, ptr %_5, align 8
  %13 = getelementptr inbounds i8, ptr %_5, i64 8
  %val.0 = load i64, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  %val.1 = load i64, ptr %14, align 8
  store i64 %val.0, ptr %new_layout1, align 8
  %15 = getelementptr inbounds i8, ptr %new_layout1, i64 8
  store i64 %val.1, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %current_memory, i64 8
  %17 = load i64, ptr %16, align 8
  %18 = icmp eq i64 %17, 0
  %_14 = select i1 %18, i64 0, i64 1
  %19 = icmp eq i64 %_14, 1
  br i1 %19, label %bb3, label %bb2

bb8:                                              ; preds = %start
  %20 = load i64, ptr @0, align 8
  %21 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %22 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %20, ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 8
  store i64 %21, ptr %23, align 8
  store i64 1, ptr %self, align 8
  %24 = getelementptr inbounds i8, ptr %self, i64 8
  %e.0 = load i64, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 8
  %e.1 = load i64, ptr %25, align 8
  store i64 %e.0, ptr %_34, align 8
  %26 = getelementptr inbounds i8, ptr %_34, i64 8
  store i64 %e.1, ptr %26, align 8
  %27 = load i64, ptr %_34, align 8
  %28 = getelementptr inbounds i8, ptr %_34, i64 8
  %29 = load i64, ptr %28, align 8
  %30 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %27, ptr %30, align 8
  %31 = getelementptr inbounds i8, ptr %30, i64 8
  store i64 %29, ptr %31, align 8
  store i64 1, ptr %_5, align 8
  %32 = getelementptr inbounds i8, ptr %_5, i64 8
  %33 = load i64, ptr %32, align 8
  %34 = getelementptr inbounds i8, ptr %32, i64 8
  %35 = load i64, ptr %34, align 8
  store i64 %33, ptr %residual, align 8
  %36 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %35, ptr %36, align 8
  %e.07 = load i64, ptr %residual, align 8
  %37 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.18 = load i64, ptr %37, align 8
  %38 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.07, ptr %38, align 8
  %39 = getelementptr inbounds i8, ptr %38, i64 8
  store i64 %e.18, ptr %39, align 8
  store i64 1, ptr %_0, align 8
  br label %bb7

bb3:                                              ; preds = %bb9
  %ptr = load ptr, ptr %current_memory, align 8
  %40 = getelementptr inbounds i8, ptr %current_memory, i64 8
  %41 = load i64, ptr %40, align 8
  %42 = getelementptr inbounds i8, ptr %40, i64 8
  %43 = load i64, ptr %42, align 8
  store i64 %41, ptr %old_layout, align 8
  %44 = getelementptr inbounds i8, ptr %old_layout, i64 8
  store i64 %43, ptr %44, align 8
  %self4 = load i64, ptr %old_layout, align 8
  store i64 %self4, ptr %_41, align 8
  %_42 = load i64, ptr %_41, align 8
  %_43 = icmp uge i64 %_42, 1
  %_44 = icmp ule i64 %_42, -9223372036854775808
  %_45 = and i1 %_43, %_44
  store i64 %val.0, ptr %_47, align 8
  %_48 = load i64, ptr %_47, align 8
  %_49 = icmp uge i64 %_48, 1
  %_50 = icmp ule i64 %_48, -9223372036854775808
  %_51 = and i1 %_49, %_50
  %cond = icmp eq i64 %_42, %_48
  br label %bb11

bb2:                                              ; preds = %bb9
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %45 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h2edd5149888e1fccE"(ptr align 1 %alloc, i64 %val.0, i64 %val.1)
  %46 = extractvalue { ptr, i64 } %45, 0
  %47 = extractvalue { ptr, i64 } %45, 1
  store ptr %46, ptr %memory, align 8
  %48 = getelementptr inbounds i8, ptr %memory, i64 8
  store i64 %47, ptr %48, align 8
  br label %bb6

bb11:                                             ; preds = %bb3
  %49 = load i64, ptr %old_layout, align 8
  %50 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %51 = load i64, ptr %50, align 8
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %52 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17he95d90fa20d9233bE"(ptr align 1 %alloc, ptr %ptr, i64 %49, i64 %51, i64 %val.0, i64 %val.1)
  %53 = extractvalue { ptr, i64 } %52, 0
  %54 = extractvalue { ptr, i64 } %52, 1
  store ptr %53, ptr %memory, align 8
  %55 = getelementptr inbounds i8, ptr %memory, i64 8
  store i64 %54, ptr %55, align 8
  br label %bb6

bb10:                                             ; No predecessors!
  unreachable

bb6:                                              ; preds = %bb2, %bb11
  %56 = load ptr, ptr %memory, align 8
  %57 = getelementptr inbounds i8, ptr %memory, i64 8
  %58 = load i64, ptr %57, align 8
  store ptr %56, ptr %self2, align 8
  %59 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %58, ptr %59, align 8
  %60 = load ptr, ptr %self2, align 8
  %61 = ptrtoint ptr %60 to i64
  %62 = icmp eq i64 %61, 0
  %_54 = select i1 %62, i64 1, i64 0
  %63 = icmp eq i64 %_54, 0
  br i1 %63, label %bb14, label %bb13

bb14:                                             ; preds = %bb6
  %t.05 = load ptr, ptr %self2, align 8
  %64 = getelementptr inbounds i8, ptr %self2, i64 8
  %t.16 = load i64, ptr %64, align 8
  %65 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %t.05, ptr %65, align 8
  %66 = getelementptr inbounds i8, ptr %65, i64 8
  store i64 %t.16, ptr %66, align 8
  store i64 0, ptr %_0, align 8
  br label %bb12

bb13:                                             ; preds = %bb6
  store i64 %val.0, ptr %self3, align 8
  %67 = getelementptr inbounds i8, ptr %self3, i64 8
  store i64 %val.1, ptr %67, align 8
  %_56.0 = load i64, ptr %self3, align 8
  %68 = getelementptr inbounds i8, ptr %self3, i64 8
  %_56.1 = load i64, ptr %68, align 8
  %69 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_56.0, ptr %69, align 8
  %70 = getelementptr inbounds i8, ptr %69, i64 8
  store i64 %_56.1, ptr %70, align 8
  store i64 1, ptr %_0, align 8
  br label %bb12

bb12:                                             ; preds = %bb13, %bb14
  br label %bb7

bb7:                                              ; preds = %bb8, %bb12
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h1a6f628f70a15335E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_9 = alloca [24 x i8], align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  br label %bb3

bb4:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 0, ptr %1, align 8
  br label %bb5

bb7:                                              ; preds = %bb4
  %size = mul nuw i64 20, %rhs
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %2, align 8
  store ptr %self1, ptr %_9, align 8
  %3 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 4, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %size, ptr %4, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb5

bb6:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb3, %bb7
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h25c9e16a99bfc00fE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_9 = alloca [24 x i8], align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  br label %bb3

bb4:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 0, ptr %1, align 8
  br label %bb5

bb7:                                              ; preds = %bb4
  %size = mul nuw i64 32, %rhs
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %2, align 8
  store ptr %self1, ptr %_9, align 8
  %3 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 8, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %size, ptr %4, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb5

bb6:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb3, %bb7
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h4418d2016bb2815bE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_9 = alloca [24 x i8], align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  br label %bb3

bb4:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 0, ptr %1, align 8
  br label %bb5

bb7:                                              ; preds = %bb4
  %size = mul nuw i64 20, %rhs
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %2, align 8
  store ptr %self1, ptr %_9, align 8
  %3 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 4, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %size, ptr %4, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb5

bb6:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb3, %bb7
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h8d03a985465df414E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_9 = alloca [24 x i8], align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  br label %bb3

bb4:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 0, ptr %1, align 8
  br label %bb5

bb7:                                              ; preds = %bb4
  %size = mul nuw i64 1, %rhs
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %2, align 8
  store ptr %self1, ptr %_9, align 8
  %3 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %size, ptr %4, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb5

bb6:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb3, %bb7
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hfd7d8842c4c4acecE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_9 = alloca [24 x i8], align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  br label %bb3

bb4:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 0, ptr %1, align 8
  br label %bb5

bb7:                                              ; preds = %bb4
  %size = mul nuw i64 32, %rhs
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %2, align 8
  store ptr %self1, ptr %_9, align 8
  %3 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 8, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %size, ptr %4, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb5

bb6:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb3, %bb7
  ret void
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h287933d37e570369E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca [1 x i8], align 1
  %_42 = alloca [16 x i8], align 8
  %_32 = alloca [16 x i8], align 8
  %residual4 = alloca [16 x i8], align 8
  %_17 = alloca [24 x i8], align 8
  %self3 = alloca [24 x i8], align 8
  %_15 = alloca [24 x i8], align 8
  %residual = alloca [16 x i8], align 8
  %self2 = alloca [16 x i8], align 8
  %self1 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %additional)
  %_25.0 = extractvalue { i64, i1 } %1, 0
  %_25.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1
  %_22 = trunc i8 %4 to i1
  br i1 %_22, label %bb9, label %bb10

bb10:                                             ; preds = %bb2
  %5 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_25.0, ptr %5, align 8
  store i64 1, ptr %self2, align 8
  %6 = getelementptr inbounds i8, ptr %self2, i64 8
  %v = load i64, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %v, ptr %7, align 8
  store i64 -9223372036854775807, ptr %self1, align 8
  %8 = getelementptr inbounds i8, ptr %self1, i64 8
  %v5 = load i64, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %v5, ptr %9, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  %required_cap = load i64, ptr %10, align 8
  %_12 = load i64, ptr %self, align 8
  %v1 = mul i64 %_12, 2
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h68594a3dd1a7ccabE(i64 %v1, i64 %required_cap)
; call core::cmp::max_by
  %cap6 = call i64 @_ZN4core3cmp6max_by17h68594a3dd1a7ccabE(i64 8, i64 %cap)
; call core::alloc::layout::Layout::array::inner
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17hb5a11287fca44129E(i64 1, i64 1, i64 %cap6)
  %new_layout.0 = extractvalue { i64, i64 } %11, 0
  %new_layout.1 = extractvalue { i64, i64 } %11, 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h8d03a985465df414E"(ptr sret([24 x i8]) align 8 %_17, ptr align 8 %self)
  %_19 = getelementptr inbounds i8, ptr %self, i64 16
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h90a86e3a6652af6aE(ptr sret([24 x i8]) align 8 %self3, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_17, ptr align 1 %_19)
  %_39 = load i64, ptr %self3, align 8
  %12 = icmp eq i64 %_39, 0
  br i1 %12, label %bb15, label %bb14

bb9:                                              ; preds = %bb2
  %13 = load i64, ptr @0, align 8
  %14 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %13, ptr %self2, align 8
  %15 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %14, ptr %15, align 8
  %16 = load i64, ptr @0, align 8
  %17 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %16, ptr %self1, align 8
  %18 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %17, ptr %18, align 8
  %e.09 = load i64, ptr %self1, align 8
  %19 = getelementptr inbounds i8, ptr %self1, i64 8
  %e.110 = load i64, ptr %19, align 8
  store i64 %e.09, ptr %_32, align 8
  %20 = getelementptr inbounds i8, ptr %_32, i64 8
  store i64 %e.110, ptr %20, align 8
  %21 = load i64, ptr %_32, align 8
  %22 = getelementptr inbounds i8, ptr %_32, i64 8
  %23 = load i64, ptr %22, align 8
  store i64 %21, ptr %_5, align 8
  %24 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %23, ptr %24, align 8
  %25 = load i64, ptr %_5, align 8
  %26 = getelementptr inbounds i8, ptr %_5, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %residual, align 8
  %28 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %27, ptr %28, align 8
  %e.011 = load i64, ptr %residual, align 8
  %29 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.112 = load i64, ptr %29, align 8
  store i64 %e.011, ptr %_0, align 8
  %30 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.112, ptr %30, align 8
  br label %bb6

bb15:                                             ; preds = %bb10
  %31 = getelementptr inbounds i8, ptr %self3, i64 8
  %v.0 = load ptr, ptr %31, align 8
  %32 = getelementptr inbounds i8, ptr %31, i64 8
  %v.1 = load i64, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %_15, i64 8
  store ptr %v.0, ptr %33, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 8
  store i64 %v.1, ptr %34, align 8
  store i64 0, ptr %_15, align 8
  %35 = getelementptr inbounds i8, ptr %_15, i64 8
  %ptr.0 = load ptr, ptr %35, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 8
  %ptr.1 = load i64, ptr %36, align 8
  %37 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %ptr.0, ptr %37, align 8
  store i64 %cap6, ptr %self, align 8
  %38 = load i64, ptr @7, align 8
  %39 = load i64, ptr getelementptr inbounds (i8, ptr @7, i64 8), align 8
  store i64 %38, ptr %_0, align 8
  %40 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %39, ptr %40, align 8
  br label %bb7

bb14:                                             ; preds = %bb10
  %41 = getelementptr inbounds i8, ptr %self3, i64 8
  %e.0 = load i64, ptr %41, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 8
  %e.1 = load i64, ptr %42, align 8
  store i64 %e.0, ptr %_42, align 8
  %43 = getelementptr inbounds i8, ptr %_42, i64 8
  store i64 %e.1, ptr %43, align 8
  %44 = load i64, ptr %_42, align 8
  %45 = getelementptr inbounds i8, ptr %_42, i64 8
  %46 = load i64, ptr %45, align 8
  %47 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %44, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i64 %46, ptr %48, align 8
  store i64 1, ptr %_15, align 8
  %49 = getelementptr inbounds i8, ptr %_15, i64 8
  %50 = load i64, ptr %49, align 8
  %51 = getelementptr inbounds i8, ptr %49, i64 8
  %52 = load i64, ptr %51, align 8
  store i64 %50, ptr %residual4, align 8
  %53 = getelementptr inbounds i8, ptr %residual4, i64 8
  store i64 %52, ptr %53, align 8
  %e.07 = load i64, ptr %residual4, align 8
  %54 = getelementptr inbounds i8, ptr %residual4, i64 8
  %e.18 = load i64, ptr %54, align 8
  store i64 %e.07, ptr %_0, align 8
  %55 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.18, ptr %55, align 8
  br label %bb6

bb7:                                              ; preds = %bb6, %bb15
  %56 = load i64, ptr %_0, align 8
  %57 = getelementptr inbounds i8, ptr %_0, i64 8
  %58 = load i64, ptr %57, align 8
  %59 = insertvalue { i64, i64 } poison, i64 %56, 0
  %60 = insertvalue { i64, i64 } %59, i64 %58, 1
  ret { i64, i64 } %60

bb6:                                              ; preds = %bb9, %bb14
  br label %bb7

bb3:                                              ; No predecessors!
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h57ac099a63754a88E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca [1 x i8], align 1
  %_42 = alloca [16 x i8], align 8
  %_32 = alloca [16 x i8], align 8
  %residual4 = alloca [16 x i8], align 8
  %_17 = alloca [24 x i8], align 8
  %self3 = alloca [24 x i8], align 8
  %_15 = alloca [24 x i8], align 8
  %residual = alloca [16 x i8], align 8
  %self2 = alloca [16 x i8], align 8
  %self1 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %additional)
  %_25.0 = extractvalue { i64, i1 } %1, 0
  %_25.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1
  %_22 = trunc i8 %4 to i1
  br i1 %_22, label %bb9, label %bb10

bb10:                                             ; preds = %bb2
  %5 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_25.0, ptr %5, align 8
  store i64 1, ptr %self2, align 8
  %6 = getelementptr inbounds i8, ptr %self2, i64 8
  %v = load i64, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %v, ptr %7, align 8
  store i64 -9223372036854775807, ptr %self1, align 8
  %8 = getelementptr inbounds i8, ptr %self1, i64 8
  %v5 = load i64, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %v5, ptr %9, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  %required_cap = load i64, ptr %10, align 8
  %_12 = load i64, ptr %self, align 8
  %v1 = mul i64 %_12, 2
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h68594a3dd1a7ccabE(i64 %v1, i64 %required_cap)
; call core::cmp::max_by
  %cap6 = call i64 @_ZN4core3cmp6max_by17h68594a3dd1a7ccabE(i64 4, i64 %cap)
; call core::alloc::layout::Layout::array::inner
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17hb5a11287fca44129E(i64 32, i64 8, i64 %cap6)
  %new_layout.0 = extractvalue { i64, i64 } %11, 0
  %new_layout.1 = extractvalue { i64, i64 } %11, 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h25c9e16a99bfc00fE"(ptr sret([24 x i8]) align 8 %_17, ptr align 8 %self)
  %_19 = getelementptr inbounds i8, ptr %self, i64 16
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h90a86e3a6652af6aE(ptr sret([24 x i8]) align 8 %self3, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_17, ptr align 1 %_19)
  %_39 = load i64, ptr %self3, align 8
  %12 = icmp eq i64 %_39, 0
  br i1 %12, label %bb15, label %bb14

bb9:                                              ; preds = %bb2
  %13 = load i64, ptr @0, align 8
  %14 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %13, ptr %self2, align 8
  %15 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %14, ptr %15, align 8
  %16 = load i64, ptr @0, align 8
  %17 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %16, ptr %self1, align 8
  %18 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %17, ptr %18, align 8
  %e.09 = load i64, ptr %self1, align 8
  %19 = getelementptr inbounds i8, ptr %self1, i64 8
  %e.110 = load i64, ptr %19, align 8
  store i64 %e.09, ptr %_32, align 8
  %20 = getelementptr inbounds i8, ptr %_32, i64 8
  store i64 %e.110, ptr %20, align 8
  %21 = load i64, ptr %_32, align 8
  %22 = getelementptr inbounds i8, ptr %_32, i64 8
  %23 = load i64, ptr %22, align 8
  store i64 %21, ptr %_5, align 8
  %24 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %23, ptr %24, align 8
  %25 = load i64, ptr %_5, align 8
  %26 = getelementptr inbounds i8, ptr %_5, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %residual, align 8
  %28 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %27, ptr %28, align 8
  %e.011 = load i64, ptr %residual, align 8
  %29 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.112 = load i64, ptr %29, align 8
  store i64 %e.011, ptr %_0, align 8
  %30 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.112, ptr %30, align 8
  br label %bb6

bb15:                                             ; preds = %bb10
  %31 = getelementptr inbounds i8, ptr %self3, i64 8
  %v.0 = load ptr, ptr %31, align 8
  %32 = getelementptr inbounds i8, ptr %31, i64 8
  %v.1 = load i64, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %_15, i64 8
  store ptr %v.0, ptr %33, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 8
  store i64 %v.1, ptr %34, align 8
  store i64 0, ptr %_15, align 8
  %35 = getelementptr inbounds i8, ptr %_15, i64 8
  %ptr.0 = load ptr, ptr %35, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 8
  %ptr.1 = load i64, ptr %36, align 8
  %37 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %ptr.0, ptr %37, align 8
  store i64 %cap6, ptr %self, align 8
  %38 = load i64, ptr @7, align 8
  %39 = load i64, ptr getelementptr inbounds (i8, ptr @7, i64 8), align 8
  store i64 %38, ptr %_0, align 8
  %40 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %39, ptr %40, align 8
  br label %bb7

bb14:                                             ; preds = %bb10
  %41 = getelementptr inbounds i8, ptr %self3, i64 8
  %e.0 = load i64, ptr %41, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 8
  %e.1 = load i64, ptr %42, align 8
  store i64 %e.0, ptr %_42, align 8
  %43 = getelementptr inbounds i8, ptr %_42, i64 8
  store i64 %e.1, ptr %43, align 8
  %44 = load i64, ptr %_42, align 8
  %45 = getelementptr inbounds i8, ptr %_42, i64 8
  %46 = load i64, ptr %45, align 8
  %47 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %44, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i64 %46, ptr %48, align 8
  store i64 1, ptr %_15, align 8
  %49 = getelementptr inbounds i8, ptr %_15, i64 8
  %50 = load i64, ptr %49, align 8
  %51 = getelementptr inbounds i8, ptr %49, i64 8
  %52 = load i64, ptr %51, align 8
  store i64 %50, ptr %residual4, align 8
  %53 = getelementptr inbounds i8, ptr %residual4, i64 8
  store i64 %52, ptr %53, align 8
  %e.07 = load i64, ptr %residual4, align 8
  %54 = getelementptr inbounds i8, ptr %residual4, i64 8
  %e.18 = load i64, ptr %54, align 8
  store i64 %e.07, ptr %_0, align 8
  %55 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.18, ptr %55, align 8
  br label %bb6

bb7:                                              ; preds = %bb6, %bb15
  %56 = load i64, ptr %_0, align 8
  %57 = getelementptr inbounds i8, ptr %_0, i64 8
  %58 = load i64, ptr %57, align 8
  %59 = insertvalue { i64, i64 } poison, i64 %56, 0
  %60 = insertvalue { i64, i64 } %59, i64 %58, 1
  ret { i64, i64 } %60

bb6:                                              ; preds = %bb9, %bb14
  br label %bb7

bb3:                                              ; No predecessors!
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hf1509a7c35e783feE"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca [1 x i8], align 1
  %_42 = alloca [16 x i8], align 8
  %_32 = alloca [16 x i8], align 8
  %residual4 = alloca [16 x i8], align 8
  %_17 = alloca [24 x i8], align 8
  %self3 = alloca [24 x i8], align 8
  %_15 = alloca [24 x i8], align 8
  %residual = alloca [16 x i8], align 8
  %self2 = alloca [16 x i8], align 8
  %self1 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %additional)
  %_25.0 = extractvalue { i64, i1 } %1, 0
  %_25.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1
  %_22 = trunc i8 %4 to i1
  br i1 %_22, label %bb9, label %bb10

bb10:                                             ; preds = %bb2
  %5 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_25.0, ptr %5, align 8
  store i64 1, ptr %self2, align 8
  %6 = getelementptr inbounds i8, ptr %self2, i64 8
  %v = load i64, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %v, ptr %7, align 8
  store i64 -9223372036854775807, ptr %self1, align 8
  %8 = getelementptr inbounds i8, ptr %self1, i64 8
  %v5 = load i64, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %v5, ptr %9, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  %required_cap = load i64, ptr %10, align 8
  %_12 = load i64, ptr %self, align 8
  %v1 = mul i64 %_12, 2
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h68594a3dd1a7ccabE(i64 %v1, i64 %required_cap)
; call core::cmp::max_by
  %cap6 = call i64 @_ZN4core3cmp6max_by17h68594a3dd1a7ccabE(i64 4, i64 %cap)
; call core::alloc::layout::Layout::array::inner
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17hb5a11287fca44129E(i64 32, i64 8, i64 %cap6)
  %new_layout.0 = extractvalue { i64, i64 } %11, 0
  %new_layout.1 = extractvalue { i64, i64 } %11, 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hfd7d8842c4c4acecE"(ptr sret([24 x i8]) align 8 %_17, ptr align 8 %self)
  %_19 = getelementptr inbounds i8, ptr %self, i64 16
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h90a86e3a6652af6aE(ptr sret([24 x i8]) align 8 %self3, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_17, ptr align 1 %_19)
  %_39 = load i64, ptr %self3, align 8
  %12 = icmp eq i64 %_39, 0
  br i1 %12, label %bb15, label %bb14

bb9:                                              ; preds = %bb2
  %13 = load i64, ptr @0, align 8
  %14 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %13, ptr %self2, align 8
  %15 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %14, ptr %15, align 8
  %16 = load i64, ptr @0, align 8
  %17 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store i64 %16, ptr %self1, align 8
  %18 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %17, ptr %18, align 8
  %e.09 = load i64, ptr %self1, align 8
  %19 = getelementptr inbounds i8, ptr %self1, i64 8
  %e.110 = load i64, ptr %19, align 8
  store i64 %e.09, ptr %_32, align 8
  %20 = getelementptr inbounds i8, ptr %_32, i64 8
  store i64 %e.110, ptr %20, align 8
  %21 = load i64, ptr %_32, align 8
  %22 = getelementptr inbounds i8, ptr %_32, i64 8
  %23 = load i64, ptr %22, align 8
  store i64 %21, ptr %_5, align 8
  %24 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %23, ptr %24, align 8
  %25 = load i64, ptr %_5, align 8
  %26 = getelementptr inbounds i8, ptr %_5, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %residual, align 8
  %28 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %27, ptr %28, align 8
  %e.011 = load i64, ptr %residual, align 8
  %29 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.112 = load i64, ptr %29, align 8
  store i64 %e.011, ptr %_0, align 8
  %30 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.112, ptr %30, align 8
  br label %bb6

bb15:                                             ; preds = %bb10
  %31 = getelementptr inbounds i8, ptr %self3, i64 8
  %v.0 = load ptr, ptr %31, align 8
  %32 = getelementptr inbounds i8, ptr %31, i64 8
  %v.1 = load i64, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %_15, i64 8
  store ptr %v.0, ptr %33, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 8
  store i64 %v.1, ptr %34, align 8
  store i64 0, ptr %_15, align 8
  %35 = getelementptr inbounds i8, ptr %_15, i64 8
  %ptr.0 = load ptr, ptr %35, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 8
  %ptr.1 = load i64, ptr %36, align 8
  %37 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %ptr.0, ptr %37, align 8
  store i64 %cap6, ptr %self, align 8
  %38 = load i64, ptr @7, align 8
  %39 = load i64, ptr getelementptr inbounds (i8, ptr @7, i64 8), align 8
  store i64 %38, ptr %_0, align 8
  %40 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %39, ptr %40, align 8
  br label %bb7

bb14:                                             ; preds = %bb10
  %41 = getelementptr inbounds i8, ptr %self3, i64 8
  %e.0 = load i64, ptr %41, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 8
  %e.1 = load i64, ptr %42, align 8
  store i64 %e.0, ptr %_42, align 8
  %43 = getelementptr inbounds i8, ptr %_42, i64 8
  store i64 %e.1, ptr %43, align 8
  %44 = load i64, ptr %_42, align 8
  %45 = getelementptr inbounds i8, ptr %_42, i64 8
  %46 = load i64, ptr %45, align 8
  %47 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %44, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i64 %46, ptr %48, align 8
  store i64 1, ptr %_15, align 8
  %49 = getelementptr inbounds i8, ptr %_15, i64 8
  %50 = load i64, ptr %49, align 8
  %51 = getelementptr inbounds i8, ptr %49, i64 8
  %52 = load i64, ptr %51, align 8
  store i64 %50, ptr %residual4, align 8
  %53 = getelementptr inbounds i8, ptr %residual4, i64 8
  store i64 %52, ptr %53, align 8
  %e.07 = load i64, ptr %residual4, align 8
  %54 = getelementptr inbounds i8, ptr %residual4, i64 8
  %e.18 = load i64, ptr %54, align 8
  store i64 %e.07, ptr %_0, align 8
  %55 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.18, ptr %55, align 8
  br label %bb6

bb7:                                              ; preds = %bb6, %bb15
  %56 = load i64, ptr %_0, align 8
  %57 = getelementptr inbounds i8, ptr %_0, i64 8
  %58 = load i64, ptr %57, align 8
  %59 = insertvalue { i64, i64 } poison, i64 %56, 0
  %60 = insertvalue { i64, i64 } %59, i64 %58, 1
  ret { i64, i64 } %60

bb6:                                              ; preds = %bb9, %bb14
  br label %bb7

bb3:                                              ; No predecessors!
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::try_allocate_in
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17h637661444d71bd10E"(ptr sret([24 x i8]) align 8 %_0, i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_26 = alloca [1 x i8], align 1
  %self = alloca [16 x i8], align 8
  %result = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %layout = alloca [16 x i8], align 8
  %alloc = alloca [0 x i8], align 1
  %init = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %init, align 1
  store i8 1, ptr %_26, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = icmp eq i64 %capacity, 0
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, ptr %_26, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %4 = invoke { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h1174931f8405195cE"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array::inner
  %5 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17hb5a11287fca44129E(i64 20, i64 4, i64 %capacity)
          to label %bb21 unwind label %cleanup

bb20:                                             ; preds = %cleanup
  %6 = load i8, ptr %_26, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb19, label %bb18

cleanup:                                          ; preds = %bb2, %bb8, %bb9, %bb4
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb20

bb21:                                             ; preds = %bb4
  %12 = extractvalue { i64, i64 } %5, 0
  %13 = extractvalue { i64, i64 } %5, 1
  store i64 %12, ptr %_8, align 8
  %14 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %13, ptr %14, align 8
  %15 = load i64, ptr %_8, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  %17 = icmp eq i64 %_9, 0
  br i1 %17, label %bb7, label %bb6

bb7:                                              ; preds = %bb21
  %layout.0 = load i64, ptr %_8, align 8
  %18 = getelementptr inbounds i8, ptr %_8, i64 8
  %layout.1 = load i64, ptr %18, align 8
  store i64 %layout.0, ptr %layout, align 8
  %19 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %layout.1, ptr %19, align 8
  %20 = load i8, ptr %init, align 1
  %21 = trunc i8 %20 to i1
  %_14 = zext i1 %21 to i64
  %22 = icmp eq i64 %_14, 0
  br i1 %22, label %bb9, label %bb8

bb6:                                              ; preds = %bb21
  %23 = load i64, ptr @0, align 8
  %24 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %25 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %23, ptr %25, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store i64 %24, ptr %26, align 8
  store i64 1, ptr %_0, align 8
  br label %bb16

bb9:                                              ; preds = %bb7
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %27 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h2edd5149888e1fccE"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb10 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %28 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hc3e3b64c70bf6327E"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb11 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %29 = extractvalue { ptr, i64 } %27, 0
  %30 = extractvalue { ptr, i64 } %27, 1
  store ptr %29, ptr %result, align 8
  %31 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %30, ptr %31, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %32 = load ptr, ptr %result, align 8
  %33 = ptrtoint ptr %32 to i64
  %34 = icmp eq i64 %33, 0
  %_17 = select i1 %34, i64 1, i64 0
  %35 = icmp eq i64 %_17, 0
  br i1 %35, label %bb14, label %bb13

bb11:                                             ; preds = %bb8
  %36 = extractvalue { ptr, i64 } %28, 0
  %37 = extractvalue { ptr, i64 } %28, 1
  store ptr %36, ptr %result, align 8
  %38 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %37, ptr %38, align 8
  br label %bb12

bb14:                                             ; preds = %bb12
  %ptr.0 = load ptr, ptr %result, align 8
  %39 = getelementptr inbounds i8, ptr %result, i64 8
  %ptr.1 = load i64, ptr %39, align 8
  %40 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %capacity, ptr %40, align 8
  %41 = getelementptr inbounds i8, ptr %40, i64 8
  store ptr %ptr.0, ptr %41, align 8
  store i64 0, ptr %_0, align 8
  br label %bb15

bb13:                                             ; preds = %bb12
  store i64 %layout.0, ptr %self, align 8
  %42 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %layout.1, ptr %42, align 8
  %_19.0 = load i64, ptr %self, align 8
  %43 = getelementptr inbounds i8, ptr %self, i64 8
  %_19.1 = load i64, ptr %43, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_19.0, ptr %44, align 8
  %45 = getelementptr inbounds i8, ptr %44, i64 8
  store i64 %_19.1, ptr %45, align 8
  store i64 1, ptr %_0, align 8
  br label %bb16

bb15:                                             ; preds = %bb3, %bb14
  br label %bb17

bb16:                                             ; preds = %bb6, %bb13
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  ret void

bb5:                                              ; No predecessors!
  unreachable

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i64, ptr } %4, 0
  %_5.1 = extractvalue { i64, ptr } %4, 1
  %46 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_5.0, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr %_5.1, ptr %47, align 8
  store i64 0, ptr %_0, align 8
  br label %bb15

bb18:                                             ; preds = %bb19, %bb20
  %48 = load ptr, ptr %1, align 8
  %49 = getelementptr inbounds i8, ptr %1, i64 8
  %50 = load i32, ptr %49, align 8
  %51 = insertvalue { ptr, i32 } poison, ptr %48, 0
  %52 = insertvalue { ptr, i32 } %51, i32 %50, 1
  resume { ptr, i32 } %52

bb19:                                             ; preds = %bb20
  br label %bb18
}

; alloc::raw_vec::RawVec<T,A>::try_allocate_in
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17h7a9fee94d5cce3e5E"(ptr sret([24 x i8]) align 8 %_0, i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_26 = alloca [1 x i8], align 1
  %self = alloca [16 x i8], align 8
  %result = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %layout = alloca [16 x i8], align 8
  %alloc = alloca [0 x i8], align 1
  %init = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %init, align 1
  store i8 1, ptr %_26, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = icmp eq i64 %capacity, 0
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, ptr %_26, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %4 = invoke { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h79328d4b3663bb39E"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array::inner
  %5 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17hb5a11287fca44129E(i64 1, i64 1, i64 %capacity)
          to label %bb21 unwind label %cleanup

bb20:                                             ; preds = %cleanup
  %6 = load i8, ptr %_26, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb19, label %bb18

cleanup:                                          ; preds = %bb2, %bb8, %bb9, %bb4
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb20

bb21:                                             ; preds = %bb4
  %12 = extractvalue { i64, i64 } %5, 0
  %13 = extractvalue { i64, i64 } %5, 1
  store i64 %12, ptr %_8, align 8
  %14 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %13, ptr %14, align 8
  %15 = load i64, ptr %_8, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  %17 = icmp eq i64 %_9, 0
  br i1 %17, label %bb7, label %bb6

bb7:                                              ; preds = %bb21
  %layout.0 = load i64, ptr %_8, align 8
  %18 = getelementptr inbounds i8, ptr %_8, i64 8
  %layout.1 = load i64, ptr %18, align 8
  store i64 %layout.0, ptr %layout, align 8
  %19 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %layout.1, ptr %19, align 8
  %20 = load i8, ptr %init, align 1
  %21 = trunc i8 %20 to i1
  %_14 = zext i1 %21 to i64
  %22 = icmp eq i64 %_14, 0
  br i1 %22, label %bb9, label %bb8

bb6:                                              ; preds = %bb21
  %23 = load i64, ptr @0, align 8
  %24 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %25 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %23, ptr %25, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store i64 %24, ptr %26, align 8
  store i64 1, ptr %_0, align 8
  br label %bb16

bb9:                                              ; preds = %bb7
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %27 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h2edd5149888e1fccE"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb10 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %28 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hc3e3b64c70bf6327E"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb11 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %29 = extractvalue { ptr, i64 } %27, 0
  %30 = extractvalue { ptr, i64 } %27, 1
  store ptr %29, ptr %result, align 8
  %31 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %30, ptr %31, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %32 = load ptr, ptr %result, align 8
  %33 = ptrtoint ptr %32 to i64
  %34 = icmp eq i64 %33, 0
  %_17 = select i1 %34, i64 1, i64 0
  %35 = icmp eq i64 %_17, 0
  br i1 %35, label %bb14, label %bb13

bb11:                                             ; preds = %bb8
  %36 = extractvalue { ptr, i64 } %28, 0
  %37 = extractvalue { ptr, i64 } %28, 1
  store ptr %36, ptr %result, align 8
  %38 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %37, ptr %38, align 8
  br label %bb12

bb14:                                             ; preds = %bb12
  %ptr.0 = load ptr, ptr %result, align 8
  %39 = getelementptr inbounds i8, ptr %result, i64 8
  %ptr.1 = load i64, ptr %39, align 8
  %40 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %capacity, ptr %40, align 8
  %41 = getelementptr inbounds i8, ptr %40, i64 8
  store ptr %ptr.0, ptr %41, align 8
  store i64 0, ptr %_0, align 8
  br label %bb15

bb13:                                             ; preds = %bb12
  store i64 %layout.0, ptr %self, align 8
  %42 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %layout.1, ptr %42, align 8
  %_19.0 = load i64, ptr %self, align 8
  %43 = getelementptr inbounds i8, ptr %self, i64 8
  %_19.1 = load i64, ptr %43, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_19.0, ptr %44, align 8
  %45 = getelementptr inbounds i8, ptr %44, i64 8
  store i64 %_19.1, ptr %45, align 8
  store i64 1, ptr %_0, align 8
  br label %bb16

bb15:                                             ; preds = %bb3, %bb14
  br label %bb17

bb16:                                             ; preds = %bb6, %bb13
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  ret void

bb5:                                              ; No predecessors!
  unreachable

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i64, ptr } %4, 0
  %_5.1 = extractvalue { i64, ptr } %4, 1
  %46 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_5.0, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr %_5.1, ptr %47, align 8
  store i64 0, ptr %_0, align 8
  br label %bb15

bb18:                                             ; preds = %bb19, %bb20
  %48 = load ptr, ptr %1, align 8
  %49 = getelementptr inbounds i8, ptr %1, i64 8
  %50 = load i32, ptr %49, align 8
  %51 = insertvalue { ptr, i32 } poison, ptr %48, 0
  %52 = insertvalue { ptr, i32 } %51, i32 %50, 1
  resume { ptr, i32 } %52

bb19:                                             ; preds = %bb20
  br label %bb18
}

; alloc::raw_vec::RawVec<T,A>::try_allocate_in
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17hae56eb9e5b0251b1E"(ptr sret([24 x i8]) align 8 %_0, i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_26 = alloca [1 x i8], align 1
  %self = alloca [16 x i8], align 8
  %result = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %layout = alloca [16 x i8], align 8
  %alloc = alloca [0 x i8], align 1
  %init = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %init, align 1
  store i8 1, ptr %_26, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = icmp eq i64 %capacity, 0
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, ptr %_26, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %4 = invoke { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17hd7aaa6238189bc11E"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array::inner
  %5 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17hb5a11287fca44129E(i64 20, i64 4, i64 %capacity)
          to label %bb21 unwind label %cleanup

bb20:                                             ; preds = %cleanup
  %6 = load i8, ptr %_26, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb19, label %bb18

cleanup:                                          ; preds = %bb2, %bb8, %bb9, %bb4
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb20

bb21:                                             ; preds = %bb4
  %12 = extractvalue { i64, i64 } %5, 0
  %13 = extractvalue { i64, i64 } %5, 1
  store i64 %12, ptr %_8, align 8
  %14 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %13, ptr %14, align 8
  %15 = load i64, ptr %_8, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  %17 = icmp eq i64 %_9, 0
  br i1 %17, label %bb7, label %bb6

bb7:                                              ; preds = %bb21
  %layout.0 = load i64, ptr %_8, align 8
  %18 = getelementptr inbounds i8, ptr %_8, i64 8
  %layout.1 = load i64, ptr %18, align 8
  store i64 %layout.0, ptr %layout, align 8
  %19 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %layout.1, ptr %19, align 8
  %20 = load i8, ptr %init, align 1
  %21 = trunc i8 %20 to i1
  %_14 = zext i1 %21 to i64
  %22 = icmp eq i64 %_14, 0
  br i1 %22, label %bb9, label %bb8

bb6:                                              ; preds = %bb21
  %23 = load i64, ptr @0, align 8
  %24 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %25 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %23, ptr %25, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store i64 %24, ptr %26, align 8
  store i64 1, ptr %_0, align 8
  br label %bb16

bb9:                                              ; preds = %bb7
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %27 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h2edd5149888e1fccE"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb10 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %28 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hc3e3b64c70bf6327E"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb11 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %29 = extractvalue { ptr, i64 } %27, 0
  %30 = extractvalue { ptr, i64 } %27, 1
  store ptr %29, ptr %result, align 8
  %31 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %30, ptr %31, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %32 = load ptr, ptr %result, align 8
  %33 = ptrtoint ptr %32 to i64
  %34 = icmp eq i64 %33, 0
  %_17 = select i1 %34, i64 1, i64 0
  %35 = icmp eq i64 %_17, 0
  br i1 %35, label %bb14, label %bb13

bb11:                                             ; preds = %bb8
  %36 = extractvalue { ptr, i64 } %28, 0
  %37 = extractvalue { ptr, i64 } %28, 1
  store ptr %36, ptr %result, align 8
  %38 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %37, ptr %38, align 8
  br label %bb12

bb14:                                             ; preds = %bb12
  %ptr.0 = load ptr, ptr %result, align 8
  %39 = getelementptr inbounds i8, ptr %result, i64 8
  %ptr.1 = load i64, ptr %39, align 8
  %40 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %capacity, ptr %40, align 8
  %41 = getelementptr inbounds i8, ptr %40, i64 8
  store ptr %ptr.0, ptr %41, align 8
  store i64 0, ptr %_0, align 8
  br label %bb15

bb13:                                             ; preds = %bb12
  store i64 %layout.0, ptr %self, align 8
  %42 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %layout.1, ptr %42, align 8
  %_19.0 = load i64, ptr %self, align 8
  %43 = getelementptr inbounds i8, ptr %self, i64 8
  %_19.1 = load i64, ptr %43, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_19.0, ptr %44, align 8
  %45 = getelementptr inbounds i8, ptr %44, i64 8
  store i64 %_19.1, ptr %45, align 8
  store i64 1, ptr %_0, align 8
  br label %bb16

bb15:                                             ; preds = %bb3, %bb14
  br label %bb17

bb16:                                             ; preds = %bb6, %bb13
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  ret void

bb5:                                              ; No predecessors!
  unreachable

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i64, ptr } %4, 0
  %_5.1 = extractvalue { i64, ptr } %4, 1
  %46 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_5.0, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr %_5.1, ptr %47, align 8
  store i64 0, ptr %_0, align 8
  br label %bb15

bb18:                                             ; preds = %bb19, %bb20
  %48 = load ptr, ptr %1, align 8
  %49 = getelementptr inbounds i8, ptr %1, i64 8
  %50 = load i32, ptr %49, align 8
  %51 = insertvalue { ptr, i32 } poison, ptr %48, 0
  %52 = insertvalue { ptr, i32 } %51, i32 %50, 1
  resume { ptr, i32 } %52

bb19:                                             ; preds = %bb20
  br label %bb18
}

; alloc::raw_vec::RawVec<T,A>::try_allocate_in
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15try_allocate_in17he534fec90a93ba56E"(ptr sret([24 x i8]) align 8 %_0, i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_26 = alloca [1 x i8], align 1
  %self = alloca [16 x i8], align 8
  %result = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %layout = alloca [16 x i8], align 8
  %alloc = alloca [0 x i8], align 1
  %init = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %init, align 1
  store i8 1, ptr %_26, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = icmp eq i64 %capacity, 0
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, ptr %_26, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %4 = invoke { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h4ef468ff16228c63E"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array::inner
  %5 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17hb5a11287fca44129E(i64 32, i64 8, i64 %capacity)
          to label %bb21 unwind label %cleanup

bb20:                                             ; preds = %cleanup
  %6 = load i8, ptr %_26, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb19, label %bb18

cleanup:                                          ; preds = %bb2, %bb8, %bb9, %bb4
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb20

bb21:                                             ; preds = %bb4
  %12 = extractvalue { i64, i64 } %5, 0
  %13 = extractvalue { i64, i64 } %5, 1
  store i64 %12, ptr %_8, align 8
  %14 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %13, ptr %14, align 8
  %15 = load i64, ptr %_8, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  %17 = icmp eq i64 %_9, 0
  br i1 %17, label %bb7, label %bb6

bb7:                                              ; preds = %bb21
  %layout.0 = load i64, ptr %_8, align 8
  %18 = getelementptr inbounds i8, ptr %_8, i64 8
  %layout.1 = load i64, ptr %18, align 8
  store i64 %layout.0, ptr %layout, align 8
  %19 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %layout.1, ptr %19, align 8
  %20 = load i8, ptr %init, align 1
  %21 = trunc i8 %20 to i1
  %_14 = zext i1 %21 to i64
  %22 = icmp eq i64 %_14, 0
  br i1 %22, label %bb9, label %bb8

bb6:                                              ; preds = %bb21
  %23 = load i64, ptr @0, align 8
  %24 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  %25 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %23, ptr %25, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store i64 %24, ptr %26, align 8
  store i64 1, ptr %_0, align 8
  br label %bb16

bb9:                                              ; preds = %bb7
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %27 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h2edd5149888e1fccE"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb10 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %28 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hc3e3b64c70bf6327E"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb11 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %29 = extractvalue { ptr, i64 } %27, 0
  %30 = extractvalue { ptr, i64 } %27, 1
  store ptr %29, ptr %result, align 8
  %31 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %30, ptr %31, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %32 = load ptr, ptr %result, align 8
  %33 = ptrtoint ptr %32 to i64
  %34 = icmp eq i64 %33, 0
  %_17 = select i1 %34, i64 1, i64 0
  %35 = icmp eq i64 %_17, 0
  br i1 %35, label %bb14, label %bb13

bb11:                                             ; preds = %bb8
  %36 = extractvalue { ptr, i64 } %28, 0
  %37 = extractvalue { ptr, i64 } %28, 1
  store ptr %36, ptr %result, align 8
  %38 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %37, ptr %38, align 8
  br label %bb12

bb14:                                             ; preds = %bb12
  %ptr.0 = load ptr, ptr %result, align 8
  %39 = getelementptr inbounds i8, ptr %result, i64 8
  %ptr.1 = load i64, ptr %39, align 8
  %40 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %capacity, ptr %40, align 8
  %41 = getelementptr inbounds i8, ptr %40, i64 8
  store ptr %ptr.0, ptr %41, align 8
  store i64 0, ptr %_0, align 8
  br label %bb15

bb13:                                             ; preds = %bb12
  store i64 %layout.0, ptr %self, align 8
  %42 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %layout.1, ptr %42, align 8
  %_19.0 = load i64, ptr %self, align 8
  %43 = getelementptr inbounds i8, ptr %self, i64 8
  %_19.1 = load i64, ptr %43, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_19.0, ptr %44, align 8
  %45 = getelementptr inbounds i8, ptr %44, i64 8
  store i64 %_19.1, ptr %45, align 8
  store i64 1, ptr %_0, align 8
  br label %bb16

bb15:                                             ; preds = %bb3, %bb14
  br label %bb17

bb16:                                             ; preds = %bb6, %bb13
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  ret void

bb5:                                              ; No predecessors!
  unreachable

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i64, ptr } %4, 0
  %_5.1 = extractvalue { i64, ptr } %4, 1
  %46 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_5.0, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr %_5.1, ptr %47, align 8
  store i64 0, ptr %_0, align 8
  br label %bb15

bb18:                                             ; preds = %bb19, %bb20
  %48 = load ptr, ptr %1, align 8
  %49 = getelementptr inbounds i8, ptr %1, i64 8
  %50 = load i32, ptr %49, align 8
  %51 = insertvalue { ptr, i32 } poison, ptr %48, 0
  %52 = insertvalue { ptr, i32 } %51, i32 %50, 1
  resume { ptr, i32 } %52

bb19:                                             ; preds = %bb20
  br label %bb18
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h1174931f8405195cE"() unnamed_addr #1 {
start:
  br label %bb3

bb3:                                              ; preds = %start
  ret { i64, ptr } { i64 0, ptr getelementptr (i8, ptr null, i64 4) }

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h4ef468ff16228c63E"() unnamed_addr #1 {
start:
  br label %bb3

bb3:                                              ; preds = %start
  ret { i64, ptr } { i64 0, ptr getelementptr (i8, ptr null, i64 8) }

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h79328d4b3663bb39E"() unnamed_addr #1 {
start:
  br label %bb3

bb3:                                              ; preds = %start
  ret { i64, ptr } { i64 0, ptr getelementptr (i8, ptr null, i64 1) }

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17hd7aaa6238189bc11E"() unnamed_addr #1 {
start:
  br label %bb3

bb3:                                              ; preds = %start
  ret { i64, ptr } { i64 0, ptr getelementptr (i8, ptr null, i64 4) }

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h74df42b84ce6a8d8E"(ptr align 8 %slf, i64 %len, i64 %additional) unnamed_addr #2 {
start:
  %_4 = alloca [16 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h287933d37e570369E"(ptr align 8 %slf, i64 %len, i64 %additional)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  store i64 %1, ptr %_4, align 8
  %3 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load i64, ptr %_4, align 8
  %5 = icmp eq i64 %4, -9223372036854775807
  %_5 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_5, 1
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %err.0 = load i64, ptr %_4, align 8
  %7 = getelementptr inbounds i8, ptr %_4, i64 8
  %err.1 = load i64, ptr %7, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb3:                                              ; preds = %start
  ret void

bb4:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h8307b55a8d4f1bd8E"(ptr align 8 %slf, i64 %len, i64 %additional) unnamed_addr #2 {
start:
  %_4 = alloca [16 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h57ac099a63754a88E"(ptr align 8 %slf, i64 %len, i64 %additional)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  store i64 %1, ptr %_4, align 8
  %3 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load i64, ptr %_4, align 8
  %5 = icmp eq i64 %4, -9223372036854775807
  %_5 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_5, 1
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %err.0 = load i64, ptr %_4, align 8
  %7 = getelementptr inbounds i8, ptr %_4, i64 8
  %err.1 = load i64, ptr %7, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb3:                                              ; preds = %start
  ret void

bb4:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_one
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17h2acd6a9b81786c50E"(ptr align 8 %self) unnamed_addr #7 {
start:
  %_2 = alloca [16 x i8], align 8
  %_3 = load i64, ptr %self, align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h57ac099a63754a88E"(ptr align 8 %self, i64 %_3, i64 1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  store i64 %1, ptr %_2, align 8
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load i64, ptr %_2, align 8
  %5 = icmp eq i64 %4, -9223372036854775807
  %_4 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_4, 1
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %err.0 = load i64, ptr %_2, align 8
  %7 = getelementptr inbounds i8, ptr %_2, i64 8
  %err.1 = load i64, ptr %7, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb3:                                              ; preds = %start
  ret void

bb4:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_one
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17ha9771a1eb3619de7E"(ptr align 8 %self) unnamed_addr #7 {
start:
  %_2 = alloca [16 x i8], align 8
  %_3 = load i64, ptr %self, align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hf1509a7c35e783feE"(ptr align 8 %self, i64 %_3, i64 1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  store i64 %1, ptr %_2, align 8
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load i64, ptr %_2, align 8
  %5 = icmp eq i64 %4, -9223372036854775807
  %_4 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_4, 1
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %err.0 = load i64, ptr %_2, align 8
  %7 = getelementptr inbounds i8, ptr %_2, i64 8
  %err.1 = load i64, ptr %7, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb3:                                              ; preds = %start
  ret void

bb4:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_one
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17hd11f329b245fe39eE"(ptr align 8 %self) unnamed_addr #7 {
start:
  %_2 = alloca [16 x i8], align 8
  %_3 = load i64, ptr %self, align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h287933d37e570369E"(ptr align 8 %self, i64 %_3, i64 1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  store i64 %1, ptr %_2, align 8
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load i64, ptr %_2, align 8
  %5 = icmp eq i64 %4, -9223372036854775807
  %_4 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_4, 1
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %err.0 = load i64, ptr %_2, align 8
  %7 = getelementptr inbounds i8, ptr %_2, i64 8
  %err.1 = load i64, ptr %7, align 8
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64 %err.0, i64 %err.1) #24
  unreachable

bb3:                                              ; preds = %start
  ret void

bb4:                                              ; No predecessors!
  unreachable
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hf8173ff46e1b3b19E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb4

bb4:                                              ; preds = %start
; call <str as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h49e1caa39cb6eebbE"(ptr align 1 %self1, i64 %len, ptr align 8 %f)
  ret i1 %_0

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable
}

; <proc_macro::TokenTree as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN60_$LT$proc_macro..TokenTree$u20$as$u20$core..clone..Clone$GT$5clone17h6c2a611b06634dacE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 {
start:
  %_21 = alloca [8 x i8], align 4
  %_19 = alloca [12 x i8], align 4
  %_17 = alloca [20 x i8], align 4
  %_15 = alloca [16 x i8], align 4
  %_13 = alloca [16 x i8], align 4
  %_10 = alloca [8 x i8], align 4
  %_7 = alloca [12 x i8], align 4
  %_4 = alloca [20 x i8], align 4
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %1 = load i8, ptr %0, align 4
  %2 = sub i8 %1, 4
  %3 = zext i8 %2 to i64
  %4 = icmp ule i8 %2, 2
  %5 = add i64 %3, 1
  %_2 = select i1 %4, i64 %5, i64 0
  switch i64 %_2, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call <proc_macro::bridge::Group<TokenStream,Span> as core::clone::Clone>::clone
  call void @"_ZN90_$LT$proc_macro..bridge..Group$LT$TokenStream$C$Span$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h5e51b36949f2dffaE"(ptr sret([20 x i8]) align 4 %_17, ptr align 4 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_4, ptr align 4 %_17, i64 20, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_4, i64 20, i1 false)
  br label %bb6

bb4:                                              ; preds = %start
; call <proc_macro::bridge::Ident<Span,Symbol> as core::clone::Clone>::clone
  call void @"_ZN85_$LT$proc_macro..bridge..Ident$LT$Span$C$Symbol$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h22fe6daddc499655E"(ptr sret([12 x i8]) align 4 %_19, ptr align 4 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_7, ptr align 4 %_19, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_7, i64 12, i1 false)
  %6 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 4, ptr %6, align 4
  br label %bb6

bb5:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 4
  %7 = getelementptr inbounds i8, ptr %self, i64 4
  %_23 = load i8, ptr %7, align 4
  %self2 = getelementptr inbounds i8, ptr %self, i64 5
  %8 = getelementptr inbounds i8, ptr %self, i64 5
  %9 = load i8, ptr %8, align 1
  %_25 = trunc i8 %9 to i1
  %_27 = load i32, ptr %self, align 4
  %10 = getelementptr inbounds i8, ptr %_21, i64 4
  store i8 %_23, ptr %10, align 4
  %11 = getelementptr inbounds i8, ptr %_21, i64 5
  %12 = zext i1 %_25 to i8
  store i8 %12, ptr %11, align 1
  store i32 %_27, ptr %_21, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_10, ptr align 4 %_21, i64 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_10, i64 8, i1 false)
  %13 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 5, ptr %13, align 4
  br label %bb6

bb2:                                              ; preds = %start
; call <proc_macro::bridge::Literal<Span,Symbol> as core::clone::Clone>::clone
  call void @"_ZN87_$LT$proc_macro..bridge..Literal$LT$Span$C$Symbol$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h215841835d79a344E"(ptr sret([16 x i8]) align 4 %_15, ptr align 4 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_13, ptr align 4 %_15, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_13, i64 16, i1 false)
  %14 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 6, ptr %14, align 4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5, %bb4, %bb3
  ret void
}

; <alloc::string::String as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN62_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$GT$2eq17hcec39d9a00334d4aE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %0 = call { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h3e42ca9b794b56aeE"(ptr align 8 %self, ptr align 8 @alloc_9cb9ac9b9212467e1a10fc7ba4491431)
  %self.0 = extractvalue { ptr, i64 } %0, 0
  %self.1 = extractvalue { ptr, i64 } %0, 1
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %1 = call { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h3e42ca9b794b56aeE"(ptr align 8 %other, ptr align 8 @alloc_9cb9ac9b9212467e1a10fc7ba4491431)
  %other.0 = extractvalue { ptr, i64 } %1, 0
  %other.1 = extractvalue { ptr, i64 } %1, 1
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %_0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h21bdc8f6df394f4dE"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %other.0, i64 %other.1)
  ret i1 %_0
}

; <proc_macro::TokenStream as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN62_$LT$proc_macro..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h34fbb075a7e103f9E"(ptr align 4 %self) unnamed_addr #0 {
start:
  %_2 = alloca [4 x i8], align 4
  %0 = load i32, ptr %self, align 4
  %1 = icmp eq i32 %0, 0
  %_4 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_4, 0
  br i1 %2, label %bb3, label %bb4

bb3:                                              ; preds = %start
  store i32 0, ptr %_2, align 4
  br label %bb1

bb4:                                              ; preds = %start
; call <proc_macro::bridge::client::TokenStream as core::clone::Clone>::clone
  %_6 = call i32 @"_ZN78_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17ha5f1af690cbf0369E"(ptr align 4 %self)
  store i32 %_6, ptr %_2, align 4
  br label %bb1

bb1:                                              ; preds = %bb4, %bb3
  %_0 = load i32, ptr %_2, align 4
  ret i32 %_0

bb2:                                              ; No predecessors!
  unreachable
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h055fb81a3e7851dfE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2d50bd37dcf2ea9dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h39740dc0d03ac9cbE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %self, i64 12, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4c823eebfc404252E"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 40, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5589a3e80b0bdf87E"(ptr align 8 %self) unnamed_addr #0 {
start:
  ret ptr %self
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h69e0b88c277af0e1E"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 40, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6ce789ca085f0ebeE"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8ed2d2fde5118aadE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h95bed4497eb8b67fE"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hfd172b44560b47ebE"(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_13 = alloca [8 x i8], align 8
  %layout1 = alloca [16 x i8], align 8
  %layout = alloca [16 x i8], align 8
  store i64 %0, ptr %layout, align 8
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %layout, i64 8
  %_4 = load i64, ptr %3, align 8
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb2, label %bb1

bb2:                                              ; preds = %bb1, %start
  ret void

bb1:                                              ; preds = %start
  %5 = load i64, ptr %layout, align 8
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8
  store i64 %5, ptr %layout1, align 8
  %8 = getelementptr inbounds i8, ptr %layout1, i64 8
  store i64 %7, ptr %8, align 8
  %self2 = load i64, ptr %layout, align 8
  store i64 %self2, ptr %_13, align 8
  %_14 = load i64, ptr %_13, align 8
  %_15 = icmp uge i64 %_14, 1
  %_16 = icmp ule i64 %_14, -9223372036854775808
  %_17 = and i1 %_15, %_16
  call void @__rust_dealloc(ptr %ptr, i64 %_4, i64 %_14) #23
  br label %bb2
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hc3e3b64c70bf6327E"(ptr align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h033b7054288e0040E(ptr align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17he95d90fa20d9233bE"(ptr align 1 %self, ptr %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::grow_impl
  %0 = call { ptr, i64 } @_ZN5alloc5alloc6Global9grow_impl17hce9838fb297a5436E(ptr align 1 %self, ptr %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h2edd5149888e1fccE"(ptr align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h033b7054288e0040E(ptr align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <alloc::vec::Vec<T,A> as core::cmp::Ord>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN63_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..cmp..Ord$GT$3cmp17hdee25baee70d48d3E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
  %self3 = alloca [8 x i8], align 8
  %self2 = alloca [8 x i8], align 8
  %len = alloca [8 x i8], align 8
  %data = alloca [8 x i8], align 8
  %self1 = alloca [16 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self4 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len5 = load i64, ptr %1, align 8
  br label %bb3

bb3:                                              ; preds = %start
  store ptr %self4, ptr %self1, align 8
  %2 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %len5, ptr %2, align 8
  %3 = load ptr, ptr %self1, align 8
  %4 = getelementptr inbounds i8, ptr %self1, i64 8
  %5 = load i64, ptr %4, align 8
  store ptr %3, ptr %_3, align 8
  %6 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %5, ptr %6, align 8
  store ptr %other, ptr %self2, align 8
  %7 = getelementptr inbounds i8, ptr %other, i64 8
  %8 = load ptr, ptr %7, align 8
  store ptr %8, ptr %self3, align 8
  %9 = load ptr, ptr %self3, align 8
  store ptr %9, ptr %data, align 8
  %10 = getelementptr inbounds i8, ptr %other, i64 16
  %11 = load i64, ptr %10, align 8
  store i64 %11, ptr %len, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb3
  %other.0 = load ptr, ptr %data, align 8
  %other.1 = load i64, ptr %len, align 8
  %12 = load ptr, ptr %_3, align 8
  %13 = getelementptr inbounds i8, ptr %_3, i64 8
  %14 = load i64, ptr %13, align 8
; call <u8 as core::slice::cmp::SliceOrd>::compare
  %_0 = call i8 @"_ZN49_$LT$u8$u20$as$u20$core..slice..cmp..SliceOrd$GT$7compare17h77325c80cc2e1489E"(ptr align 1 %12, i64 %14, ptr align 1 %other.0, i64 %other.1)
  ret i8 %_0

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  %_20 = load ptr, ptr %data, align 8
  %15 = load i64, ptr %len, align 8
; call core::slice::raw::from_raw_parts::precondition_check
  call void @_ZN4core5slice3raw14from_raw_parts18precondition_check17hc8bfc4acc9aff47fE(ptr %_20, i64 1, i64 1, i64 %15) #23
  br label %bb6
}

; <alloc::rc::Rc<T,A> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define ptr @"_ZN65_$LT$alloc..rc..Rc$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h2f42c7dafdece414E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = load ptr, ptr %self, align 8
; call alloc::rc::RcInnerPtr::inc_strong
  call void @_ZN5alloc2rc10RcInnerPtr10inc_strong17hf735de51aa04939eE(ptr align 8 %self1)
  %ptr = load ptr, ptr %self, align 8
  %_6 = getelementptr inbounds i8, ptr %self, i64 8
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h58f81dd4a5b1a90fE"(ptr align 1 %_6)
  ret ptr %ptr
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc82a32b733878c7eE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb3

bb3:                                              ; preds = %start
  %2 = insertvalue { ptr, i64 } poison, ptr %self1, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %len, 1
  ret { ptr, i64 } %3

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <core::option::Option<T> as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h371c877135043a4eE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %__self_0 = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %_3 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb3, label %bb2

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 @alloc_37d2e53432a03a1f90b3e7253015eaf9, i64 4)
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb5

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %3, ptr %__self_0, align 8
; call core::fmt::Formatter::debug_tuple_field1_finish
  %4 = call zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17hda02114f9a9fecb7E(ptr align 8 %f, ptr align 1 @alloc_9535bf4c204f3eb9b19ec2c83e446e52, i64 4, ptr align 1 %__self_0, ptr align 8 @vtable.7)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  %6 = load i8, ptr %_0, align 1
  %7 = trunc i8 %6 to i1
  ret i1 %7

bb1:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6ee34b6eb925282fE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_3 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h58f81dd4a5b1a90fE"(ptr align 1 %_3)
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb4

bb4:                                              ; preds = %start
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hd7a43e3d4155bfffE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self1, i64 %len)
  ret void

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hc0d1d5f844b58c6eE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_3 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h58f81dd4a5b1a90fE"(ptr align 1 %_3)
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb4

bb4:                                              ; preds = %start
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h89ac050337030e66E"(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %self1, i64 %len)
  ret void

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hc40c890fc9f43236E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_3 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h58f81dd4a5b1a90fE"(ptr align 1 %_3)
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb4

bb4:                                              ; preds = %start
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hb97d26b05ddaa347E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self1, i64 %len)
  ret void

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::Vec<T> as core::default::Default>::default
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h6ba4ecfb7c114fdaE"(ptr sret([24 x i8]) align 8 %_0) unnamed_addr #1 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 0, ptr %1, align 8
  ret void
}

; <alloc::rc::Rc<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..rc..Rc$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h41174feae40984f0E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = alloca [8 x i8], align 8
  %1 = alloca [8 x i8], align 8
  %self1 = load ptr, ptr %self, align 8
; call alloc::rc::RcInnerPtr::strong
  %_20 = call i64 @_ZN5alloc2rc10RcInnerPtr6strong17h440107331feb8c36E(ptr align 8 %self1)
  %val = sub i64 %_20, 1
  %result = load i64, ptr %self1, align 8
  store i64 %val, ptr %self1, align 8
  %self2 = load ptr, ptr %self, align 8
  %_3 = load i64, ptr %self2, align 8
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb1, label %bb7

bb1:                                              ; preds = %start
  %self3 = load ptr, ptr %self, align 8
  %_5 = getelementptr inbounds i8, ptr %self3, i64 16
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17h110007b9863c5fe0E"(ptr align 8 %_5)
  %self4 = load ptr, ptr %self, align 8
  %self5 = getelementptr inbounds i8, ptr %self4, i64 8
; call alloc::rc::RcInnerPtr::weak
  %_42 = call i64 @_ZN5alloc2rc10RcInnerPtr4weak17ha2c1a8c7fa54f8bbE(ptr align 8 %self4)
  %val6 = sub i64 %_42, 1
  %self7 = getelementptr inbounds i8, ptr %self4, i64 8
  %_46 = getelementptr inbounds i8, ptr %self4, i64 8
  %result8 = load i64, ptr %_46, align 8
  store i64 %val6, ptr %_46, align 8
  %self9 = load ptr, ptr %self, align 8
  %self10 = getelementptr inbounds i8, ptr %self9, i64 8
  %self11 = getelementptr inbounds i8, ptr %self9, i64 8
  %_54 = getelementptr inbounds i8, ptr %self9, i64 8
  %_7 = load i64, ptr %_54, align 8
  %3 = icmp eq i64 %_7, 0
  br i1 %3, label %bb3, label %bb5

bb7:                                              ; preds = %start
  br label %bb8

bb3:                                              ; preds = %bb1
  %_9 = getelementptr inbounds i8, ptr %self, i64 8
  %self12 = load ptr, ptr %self, align 8
  %self13 = load ptr, ptr %self, align 8
  store i64 40, ptr %1, align 8
  %size = load i64, ptr %1, align 8
  store i64 8, ptr %0, align 8
  %align = load i64, ptr %0, align 8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hfd172b44560b47ebE"(ptr align 1 %_9, ptr %self12, i64 %align, i64 %size)
  br label %bb6

bb5:                                              ; preds = %bb1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h275ad38174f08544E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
; call core::ptr::drop_in_place<[proc_macro2::TokenTree]>
  call void @"_ZN4core3ptr53drop_in_place$LT$$u5b$proc_macro2..TokenTree$u5d$$GT$17h307a84eeb83678a1E"(ptr align 8 %self1, i64 %len)
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2bf50abed4c4b156E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
; call core::ptr::drop_in_place<[proc_macro::TokenTree]>
  call void @"_ZN4core3ptr52drop_in_place$LT$$u5b$proc_macro..TokenTree$u5d$$GT$17hf6f0e2258747ab88E"(ptr align 4 %self1, i64 %len)
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h64e27fe981929a3dE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
; call core::ptr::drop_in_place<[(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)]>
  call void @"_ZN4core3ptr105drop_in_place$LT$$u5b$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$u5d$$GT$17h00130a9844cf67c6E"(ptr align 8 %self1, i64 %len)
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb17ae3895e9b4ee1E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he9f6d9adf9f8788aE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
; call core::ptr::drop_in_place<[proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>]>
  call void @"_ZN4core3ptr179drop_in_place$LT$$u5b$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$u5d$$GT$17h51455dae7f2997e5E"(ptr align 4 %self1, i64 %len)
  ret void
}

; <core::num::error::TryFromIntError as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN70_$LT$core..num..error..TryFromIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17hb209b3ef4d6fa770E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_6 = alloca [8 x i8], align 8
  store ptr %self, ptr %_6, align 8
; call core::fmt::Formatter::debug_tuple_field1_finish
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17hda02114f9a9fecb7E(ptr align 8 %f, ptr align 1 @alloc_5cb263f26a5d50117adfcc5c7225745e, i64 15, ptr align 1 %_6, ptr align 8 @vtable.8)
  ret i1 %_0
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc3754a84f2ec0b85E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %_5 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_5, 0
  br i1 %0, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %_4 = load i64, ptr %other, align 8
  %1 = icmp eq i64 %_4, 0
  br i1 %1, label %bb4, label %bb8

bb2:                                              ; preds = %start
  %_3 = load i64, ptr %other, align 8
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb7, label %bb5

bb4:                                              ; preds = %bb3
  store i8 1, ptr %_0, align 1
  br label %bb9

bb8:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1
  br label %bb9

bb9:                                              ; preds = %bb5, %bb7, %bb8, %bb4
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1
  br label %bb9

bb5:                                              ; preds = %bb2
  %l = getelementptr inbounds i8, ptr %self, i64 8
  %r = getelementptr inbounds i8, ptr %other, i64 8
  %_8 = getelementptr inbounds i8, ptr %self, i64 8
  %_9 = getelementptr inbounds i8, ptr %other, i64 8
; call core::cmp::impls::<impl core::cmp::PartialEq for usize>::eq
  %5 = call zeroext i1 @"_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17hb38bc76ae998cc78E"(ptr align 8 %_8, ptr align 8 %_9)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb9

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro::bridge::client::Span as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN71_$LT$proc_macro..bridge..client..Span$u20$as$u20$core..clone..Clone$GT$5clone17hd04af057693e265fE"(ptr align 4 %self) unnamed_addr #0 {
start:
  %_0 = load i32, ptr %self, align 4
  ret i32 %_0
}

; <&mut I as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd0211b259709241aE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = load ptr, ptr %self, align 8
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %0 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %_2)
  %_0.0 = extractvalue { i64, i32 } %0, 0
  %_0.1 = extractvalue { i64, i32 } %0, 1
  %1 = insertvalue { i64, i32 } poison, i64 %_0.0, 0
  %2 = insertvalue { i64, i32 } %1, i32 %_0.1, 1
  ret { i64, i32 } %2
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1e05ff940898b300E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca [8 x i8], align 8
  %1 = alloca [8 x i8], align 8
  %layout = alloca [16 x i8], align 8
  %ptr.0 = load ptr, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %ptr.1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %ptr.1, i64 8
  %4 = load i64, ptr %3, align 8, !invariant.load !3
  %5 = getelementptr inbounds i8, ptr %ptr.1, i64 16
  %6 = load i64, ptr %5, align 8, !invariant.load !3
  store i64 %4, ptr %1, align 8
  %size = load i64, ptr %1, align 8
  %7 = getelementptr inbounds i8, ptr %ptr.1, i64 8
  %8 = load i64, ptr %7, align 8, !invariant.load !3
  %9 = getelementptr inbounds i8, ptr %ptr.1, i64 16
  %10 = load i64, ptr %9, align 8, !invariant.load !3
  store i64 %10, ptr %0, align 8
  %align = load i64, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %11, align 8
  store i64 %align, ptr %layout, align 8
  %12 = icmp eq i64 %size, 0
  br i1 %12, label %bb3, label %bb1

bb3:                                              ; preds = %bb1, %start
  ret void

bb1:                                              ; preds = %start
  %_5 = getelementptr inbounds i8, ptr %self, i64 16
  %13 = load i64, ptr %layout, align 8
  %14 = getelementptr inbounds i8, ptr %layout, i64 8
  %15 = load i64, ptr %14, align 8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hfd172b44560b47ebE"(ptr align 1 %_5, ptr %ptr.0, i64 %13, i64 %15)
  br label %bb3
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h40475ae280827267E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb3

bb3:                                              ; preds = %start
  %2 = insertvalue { ptr, i64 } poison, ptr %self1, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %len, 1
  ret { ptr, i64 } %3

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd94446eb726c9fa4E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %1, align 8
  br label %bb3

bb3:                                              ; preds = %start
  %2 = insertvalue { ptr, i64 } poison, ptr %self1, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %len, 1
  ret { ptr, i64 } %3

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h21bdc8f6df394f4dE"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
  %0 = alloca [4 x i8], align 4
  %1 = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %_3 = icmp ne i64 %self.1, %other.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %2 = mul nsw i64 %self.1, 1
  store i64 %2, ptr %1, align 8
  %size = load i64, ptr %1, align 8
  %3 = call i32 @memcmp(ptr %self.0, ptr %other.0, i64 %size)
  store i32 %3, ptr %0, align 4
  %_7 = load i32, ptr %0, align 4
  %4 = icmp eq i32 %_7, 0
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb2
  %6 = load i8, ptr %_0, align 1
  %7 = trunc i8 %6 to i1
  ret i1 %7
}

; <core::marker::PhantomData<T> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN73_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h0bdb317e7de3df88E"(ptr align 1 %self) unnamed_addr #1 {
start:
  ret void
}

; <proc_macro::bridge::symbol::Symbol as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN73_$LT$proc_macro..bridge..symbol..Symbol$u20$as$u20$core..clone..Clone$GT$5clone17h6f77a3f5b4273606E"(ptr align 4 %self) unnamed_addr #0 {
start:
  %_0 = load i32, ptr %self, align 4
  ret i32 %_0
}

; <proc_macro::token_stream::IntoIter as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN73_$LT$proc_macro..token_stream..IntoIter$u20$as$u20$core..clone..Clone$GT$5clone17h138d1cb9219c5dbdE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca [32 x i8], align 8
; call <alloc::vec::into_iter::IntoIter<T,A> as core::clone::Clone>::clone
  call void @"_ZN83_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hdf8916a00fadc02cE"(ptr sret([32 x i8]) align 8 %_2, ptr align 8 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 32, i1 false)
  ret void
}

; <alloc::string::String as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN74_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hfe0172ca423d2b12E"(ptr align 8 %self, i64 %index, ptr align 8 %0) unnamed_addr #0 {
start:
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %2, align 8
  br label %bb4

bb4:                                              ; preds = %start
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %3 = call { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17hadbd0124669421b1E"(i64 %index, ptr align 1 %self1, i64 %len, ptr align 8 %0)
  %_0.0 = extractvalue { ptr, i64 } %3, 0
  %_0.1 = extractvalue { ptr, i64 } %3, 1
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1
  ret { ptr, i64 } %5

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable
}

; <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17hf7e58a847a67d178E"(ptr align 8 %self, ptr align 8 %args) unnamed_addr #0 {
start:
  %0 = alloca [48 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
; call core::fmt::Arguments::as_statically_known_str
  %1 = call { ptr, i64 } @_ZN4core3fmt9Arguments23as_statically_known_str17h870be75be737bb80E(ptr align 8 %args)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %_3, align 8
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %_3, align 8
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_5, 1
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %s.0 = load ptr, ptr %_3, align 8
  %9 = getelementptr inbounds i8, ptr %_3, i64 8
  %s.1 = load i64, ptr %9, align 8
; call <alloc::string::String as core::fmt::Write>::write_str
  %10 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17hc91a144ace0c4462E"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1)
  %11 = zext i1 %10 to i8
  store i8 %11, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %args, i64 48, i1 false)
; call core::fmt::write
  %12 = call zeroext i1 @_ZN4core3fmt5write17h2b71bd12250911d0E(ptr align 1 %self, ptr align 8 @vtable.0, ptr align 8 %0)
  %13 = zext i1 %12 to i8
  store i8 %13, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb2
  %14 = load i8, ptr %_0, align 1
  %15 = trunc i8 %14 to i1
  ret i1 %15

bb6:                                              ; No predecessors!
  unreachable
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h695c442508bf523fE"(i32 %0) unnamed_addr #0 {
start:
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
  %1 = load i32, ptr %self, align 4
  %2 = icmp eq i32 %1, 0
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i32, ptr %self, align 4
  store i32 %v, ptr %_0, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %4 = load i32, ptr %_0, align 4
  ret i32 %4

bb1:                                              ; No predecessors!
  unreachable
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha0ef33573179b5cdE"(ptr align 8 %0) unnamed_addr #0 {
start:
  %_0 = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 8
  store ptr %0, ptr %self, align 8
  %1 = load ptr, ptr %self, align 8
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 8
  store ptr %v, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %5 = load ptr, ptr %_0, align 8
  ret ptr %5

bb1:                                              ; No predecessors!
  unreachable
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd5698a072fb0e60bE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 {
start:
  %v = alloca [20 x i8], align 4
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %1 = load i8, ptr %0, align 4
  %2 = icmp eq i8 %1, 7
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 7, ptr %4, align 4
  br label %bb4

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %v, ptr align 4 %self, i64 20, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %v, i64 20, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he5015fdbcd061296E"(i1 zeroext %0) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
  %2 = load i8, ptr %self, align 1
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb4

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %5 = load i8, ptr %_0, align 1
  %6 = trunc i8 %5 to i1
  ret i1 %6

bb1:                                              ; No predecessors!
  unreachable
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0f7ceae530493837E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h25c9e16a99bfc00fE"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds i8, ptr %_2, i64 8
  %1 = load i64, ptr %0, align 8
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %layout.0 = load i64, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hfd172b44560b47ebE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void

bb5:                                              ; No predecessors!
  unreachable
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h568fb5da6e4ebda8E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hfd7d8842c4c4acecE"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds i8, ptr %_2, i64 8
  %1 = load i64, ptr %0, align 8
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %layout.0 = load i64, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hfd172b44560b47ebE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void

bb5:                                              ; No predecessors!
  unreachable
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h580ee621a14e4e41E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h4418d2016bb2815bE"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds i8, ptr %_2, i64 8
  %1 = load i64, ptr %0, align 8
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %layout.0 = load i64, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hfd172b44560b47ebE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void

bb5:                                              ; No predecessors!
  unreachable
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6a36eb4d40c40930E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h8d03a985465df414E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds i8, ptr %_2, i64 8
  %1 = load i64, ptr %0, align 8
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %layout.0 = load i64, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hfd172b44560b47ebE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void

bb5:                                              ; No predecessors!
  unreachable
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbcbd65e0e1627debE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h1a6f628f70a15335E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds i8, ptr %_2, i64 8
  %1 = load i64, ptr %0, align 8
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %layout.0 = load i64, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hfd172b44560b47ebE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void

bb5:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8a8eb599258f7b34E"(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %len.i = alloca [8 x i8], align 8
  %0 = alloca [16 x i8], align 8
  %end_or_len = alloca [8 x i8], align 8
  %_guard = alloca [8 x i8], align 8
  %vec = alloca [8 x i8], align 8
  %drop_len = alloca [8 x i8], align 8
  %iter = alloca [16 x i8], align 8
  br label %bb15

bb15:                                             ; preds = %start
  store ptr inttoptr (i64 4 to ptr), ptr %end_or_len, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %_40 = load ptr, ptr %end_or_len, align 8
  %1 = load ptr, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %3 = load ptr, ptr %2, align 8
  store ptr %1, ptr %iter, align 8
  %4 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %3, ptr %4, align 8
  store ptr inttoptr (i64 4 to ptr), ptr %self, align 8
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %_40, ptr %5, align 8
  br label %bb18

bb14:                                             ; No predecessors!
  unreachable

bb18:                                             ; preds = %bb16
  %self1 = getelementptr inbounds i8, ptr %iter, i64 8
  %end = load ptr, ptr %self1, align 8
  %subtracted = load ptr, ptr %iter, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %6 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hff0ae4bb7b0f94e3E"(ptr %end, ptr %subtracted)
  store i64 %6, ptr %drop_len, align 8
  br label %bb19

bb19:                                             ; preds = %bb18
  %7 = getelementptr inbounds i8, ptr %self, i64 16
  %8 = load ptr, ptr %7, align 8
  store ptr %8, ptr %vec, align 8
  br label %bb3

bb17:                                             ; No predecessors!
  unreachable

bb3:                                              ; preds = %bb19
  store ptr %self, ptr %_guard, align 8
  %_19 = load i64, ptr %drop_len, align 8
  %9 = icmp eq i64 %_19, 0
  br i1 %9, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
  call void @"_ZN4core3ptr168drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17h032deeb255e3ec64E"(ptr align 8 %_guard)
  br label %bb10

bb5:                                              ; preds = %bb3
  %self1.i = load ptr, ptr %iter, align 8
  %self2.i = getelementptr inbounds i8, ptr %iter, i64 8
  %end.i = load ptr, ptr %self2.i, align 8
; invoke core::ptr::const_ptr::<impl *const T>::sub_ptr
  %10 = invoke i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hff0ae4bb7b0f94e3E"(ptr %end.i, ptr %self1.i)
          to label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h08bf8bc0d5394a47E.exit" unwind label %cleanup

"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h08bf8bc0d5394a47E.exit": ; preds = %bb5
  store i64 %10, ptr %len.i, align 8
  %_18.1.i = load i64, ptr %len.i, align 8
  %11 = insertvalue { ptr, i64 } poison, ptr %self1.i, 0
  %12 = insertvalue { ptr, i64 } %11, i64 %_18.1.i, 1
  br label %bb21

bb10:                                             ; preds = %bb4
  br label %bb11

bb12:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
  invoke void @"_ZN4core3ptr168drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17h032deeb255e3ec64E"(ptr align 8 %_guard) #25
          to label %bb13 unwind label %terminate

cleanup:                                          ; preds = %bb5, %bb6, %bb21
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %0, align 8
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb12

bb21:                                             ; preds = %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h08bf8bc0d5394a47E.exit"
  %self.0 = extractvalue { ptr, i64 } %12, 0
  %self.1 = extractvalue { ptr, i64 } %12, 1
  %self2 = load ptr, ptr %vec, align 8
  %17 = getelementptr inbounds i8, ptr %self2, i64 8
  %self3 = load ptr, ptr %17, align 8
; invoke core::ptr::const_ptr::<impl *const T>::sub_ptr
  %drop_offset = invoke i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hff0ae4bb7b0f94e3E"(ptr %self.0, ptr %self3)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb21
  %data = getelementptr inbounds %"proc_macro::TokenTree", ptr %self3, i64 %drop_offset
  %len = load i64, ptr %drop_len, align 8
; invoke core::ptr::drop_in_place<[proc_macro::TokenTree]>
  invoke void @"_ZN4core3ptr52drop_in_place$LT$$u5b$proc_macro..TokenTree$u5d$$GT$17hf6f0e2258747ab88E"(ptr align 4 %data, i64 %len)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
  call void @"_ZN4core3ptr168drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17h032deeb255e3ec64E"(ptr align 8 %_guard)
  br label %bb11

bb11:                                             ; preds = %bb10, %bb7
  ret void

terminate:                                        ; preds = %bb12
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb13:                                             ; preds = %bb12
  %21 = load ptr, ptr %0, align 8
  %22 = getelementptr inbounds i8, ptr %0, i64 8
  %23 = load i32, ptr %22, align 8
  %24 = insertvalue { ptr, i32 } poison, ptr %21, 0
  %25 = insertvalue { ptr, i32 } %24, i32 %23, 1
  resume { ptr, i32 } %25

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h015b223d419ca8ffE"(i32 %0) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
  %1 = load i32, ptr %self, align 4
  %2 = icmp eq i32 %1, 1114112
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %v = load i32, ptr %self, align 4
  store i32 %v, ptr %_0, align 4
  br label %bb4

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %4 = load i32, ptr %_0, align 4
  ret i32 %4

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h041f30f35f5c46e8E"(i1 zeroext %0) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
  %2 = load i8, ptr %self, align 1
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb3, label %bb2

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_0, align 1
  %6 = trunc i8 %5 to i1
  ret i1 %6

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h09e4f02dfbf98bd4E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [1 x i8], align 1
  %v = alloca [32 x i8], align 8
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775807
  %_2 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %self, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %v, i64 32, i1 false)
  br label %bb4

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i8, ptr %3, align 8
  %e = trunc i8 %4 to i1
  %5 = zext i1 %e to i8
  store i8 %5, ptr %_5, align 1
  %6 = load i8, ptr %_5, align 1
  %7 = trunc i8 %6 to i1
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  %9 = zext i1 %7 to i8
  store i8 %9, ptr %8, align 8
  store i64 -9223372036854775807, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4c83adf9d37dcf7cE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %v = alloca [32 x i8], align 8
  %0 = load ptr, ptr %self, align 8
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %self, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %v, i64 32, i1 false)
  br label %bb4

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4e10ff22194b8cbeE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %v = alloca [24 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %1 = load i32, ptr %0, align 8
  %2 = icmp eq i32 %1, 1114112
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %v, i64 24, i1 false)
  br label %bb4

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_0, i64 16
  store i32 1114112, ptr %4, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5872f7ff539b3c2fE"(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %v = alloca [16 x i8], align 4
  %0 = getelementptr inbounds i8, ptr %self, i64 12
  %1 = load i8, ptr %0, align 4
  %2 = icmp eq i8 %1, 11
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %v, ptr align 4 %self, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %v, i64 16, i1 false)
  br label %bb4

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_0, i64 12
  store i8 11, ptr %4, align 4
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h628c92602e87ff69E"(i64 %0) unnamed_addr #0 {
start:
  %_5 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %1 = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 4
  store i64 %0, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %self, ptr align 8 %1, i64 8, i1 false)
  %2 = load i8, ptr %self, align 4
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i64 4
  %v = load i32, ptr %5, align 4
  %6 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %v, ptr %6, align 4
  store i8 0, ptr %_0, align 4
  br label %bb4

bb2:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i64 1
  %8 = load i8, ptr %7, align 1
  %e = trunc i8 %8 to i1
  %9 = zext i1 %e to i8
  store i8 %9, ptr %_5, align 1
  %10 = load i8, ptr %_5, align 1
  %11 = trunc i8 %10 to i1
  %12 = getelementptr inbounds i8, ptr %_0, i64 1
  %13 = zext i1 %11 to i8
  store i8 %13, ptr %12, align 1
  store i8 1, ptr %_0, align 4
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %14 = load i64, ptr %_0, align 4
  ret i64 %14

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h705c8c01ecb0d450E"(ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store ptr %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load ptr, ptr %self, align 8
  %4 = ptrtoint ptr %3 to i64
  %5 = icmp eq i64 %4, 0
  %_2 = select i1 %5, i64 1, i64 0
  %6 = icmp eq i64 %_2, 0
  br i1 %6, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %v.0 = load ptr, ptr %self, align 8
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %v.1 = load i64, ptr %7, align 8
  store ptr %v.0, ptr %_0, align 8
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %v.1, ptr %8, align 8
  br label %bb4

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %9 = load ptr, ptr %_0, align 8
  %10 = getelementptr inbounds i8, ptr %_0, i64 8
  %11 = load i64, ptr %10, align 8
  %12 = insertvalue { ptr, i64 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i64 } %12, i64 %11, 1
  ret { ptr, i64 } %13

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h71c693d884f98194E"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %v = alloca [40 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 32
  %1 = load i8, ptr %0, align 8
  %2 = icmp eq i8 %1, 2
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %self, i64 40, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %v, i64 40, i1 false)
  br label %bb4

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_0, i64 32
  store i8 2, ptr %4, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c7ece78f93c9a1dE"(i64 %0, i32 %1) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i32 %1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i32, ptr %3, align 8
  %5 = icmp eq i32 %4, 1114112
  %_2 = select i1 %5, i64 1, i64 0
  %6 = icmp eq i64 %_2, 0
  br i1 %6, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %v.0 = load i64, ptr %self, align 8
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %v.1 = load i32, ptr %7, align 8
  store i64 %v.0, ptr %_0, align 8
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 %v.1, ptr %8, align 8
  br label %bb4

bb2:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 1114112, ptr %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %10 = load i64, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { i64, i32 } poison, i64 %10, 0
  %14 = insertvalue { i64, i32 } %13, i32 %12, 1
  ret { i64, i32 } %14

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7f74ee1fed6dd937E"(ptr %0) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 8
  store ptr %0, ptr %self, align 8
  %1 = load ptr, ptr %self, align 8
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_2 = select i1 %3, i64 1, i64 0
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 8
  store ptr %v, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %5 = load ptr, ptr %_0, align 8
  ret ptr %5

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8245d3de22bab203E"(ptr sret([48 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %v = alloca [48 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %1 = load i64, ptr %0, align 8
  %2 = icmp eq i64 %1, -9223372036854775807
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %self, i64 48, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %v, i64 48, i1 false)
  br label %bb4

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 -9223372036854775807, ptr %4, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hce08ccdab6c0774aE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %v = alloca [24 x i8], align 8
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %v, i64 24, i1 false)
  br label %bb4

bb2:                                              ; preds = %start
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf02fe4c8cac895bE"(i1 zeroext %0) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
  %2 = load i8, ptr %self, align 1
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb3, label %bb2

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_0, align 1
  %6 = trunc i8 %5 to i1
  ret i1 %6

bb1:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdc37b0e4d7cb413dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %_2 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %v.0 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %v.1 = load i8, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %v.0, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i8 %v.1, ptr %4, align 8
  store i64 0, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %start
  store i64 1, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hfd98c0071dae8cb6E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_3 = alloca [24 x i8], align 8
  %_2 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb3, label %bb2

bb3:                                              ; preds = %bb5, %start
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17hc9bb1b256332e52aE"(ptr sret([24 x i8]) align 8 %_3, ptr align 8 %self)
  %_4 = load i64, ptr %_3, align 8
  switch i64 %_4, label %bb1 [
    i64 0, label %bb6
    i64 1, label %bb5
    i64 2, label %bb7
  ]

bb2:                                              ; preds = %start
  %searcher = getelementptr inbounds i8, ptr %self, i64 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %2 = getelementptr inbounds i8, ptr %1, i64 48
  %_10 = load i64, ptr %2, align 8
  %is_long = icmp eq i64 %_10, -1
  br i1 %is_long, label %bb8, label %bb10

bb1:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  %3 = getelementptr inbounds i8, ptr %_3, i64 8
  %a = load i64, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %_3, i64 16
  %b = load i64, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %a, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %b, ptr %6, align 8
  store i64 1, ptr %_0, align 8
  br label %bb13

bb5:                                              ; preds = %bb3
  br label %bb3

bb7:                                              ; preds = %bb3
  store i64 0, ptr %_0, align 8
  br label %bb13

bb13:                                             ; preds = %bb7, %bb6
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  ret void

bb10:                                             ; preds = %bb2
  %_14 = getelementptr inbounds i8, ptr %self, i64 8
  %7 = getelementptr inbounds i8, ptr %self, i64 72
  %self.0 = load ptr, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  %self.1 = load i64, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %self, i64 88
  %self.01 = load ptr, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  %self.12 = load i64, ptr %10, align 8
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17hc7e43cb2739db90dE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_14, ptr align 1 %self.0, i64 %self.1, ptr align 1 %self.01, i64 %self.12, i1 zeroext false)
  br label %bb12

bb8:                                              ; preds = %bb2
  %_11 = getelementptr inbounds i8, ptr %self, i64 8
  %11 = getelementptr inbounds i8, ptr %self, i64 72
  %self.03 = load ptr, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  %self.14 = load i64, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %self, i64 88
  %self.05 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  %self.16 = load i64, ptr %14, align 8
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17hc7e43cb2739db90dE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_11, ptr align 1 %self.03, i64 %self.14, ptr align 1 %self.05, i64 %self.16, i1 zeroext true)
  br label %bb12

bb12:                                             ; preds = %bb8, %bb10
  br label %bb14
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17hc9bb1b256332e52aE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_43 = alloca [16 x i8], align 8
  %b = alloca [8 x i8], align 8
  %otherwise = alloca [24 x i8], align 8
  %_15 = alloca [8 x i8], align 8
  %_10 = alloca [16 x i8], align 8
  %_8 = alloca [4 x i8], align 4
  %_2 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %searcher = getelementptr inbounds i8, ptr %self, i64 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %2 = getelementptr inbounds i8, ptr %1, i64 18
  %3 = load i8, ptr %2, align 2
  %_4 = trunc i8 %3 to i1
  br i1 %_4, label %bb4, label %bb5

bb2:                                              ; preds = %start
  %searcher1 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  %5 = getelementptr inbounds i8, ptr %4, i64 32
  %_19 = load i64, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %self, i64 72
  %self.02 = load ptr, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %self.13 = load i64, ptr %7, align 8
  %_18 = icmp eq i64 %_19, %self.13
  br i1 %_18, label %bb12, label %bb13

bb5:                                              ; preds = %bb3
  %8 = getelementptr inbounds i8, ptr %self, i64 8
  %9 = getelementptr inbounds i8, ptr %8, i64 16
  %10 = load i8, ptr %9, align 8
  %is_match = trunc i8 %10 to i1
  %11 = getelementptr inbounds i8, ptr %self, i64 8
  %12 = getelementptr inbounds i8, ptr %11, i64 16
  %13 = load i8, ptr %12, align 8
  %_6 = trunc i8 %13 to i1
  %14 = getelementptr inbounds i8, ptr %self, i64 8
  %15 = getelementptr inbounds i8, ptr %14, i64 16
  %16 = xor i1 %_6, true
  %17 = zext i1 %16 to i8
  store i8 %17, ptr %15, align 8
  %18 = getelementptr inbounds i8, ptr %self, i64 8
  %pos = load i64, ptr %18, align 8
  %19 = getelementptr inbounds i8, ptr %self, i64 72
  %self.0 = load ptr, ptr %19, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 8
  %self.1 = load i64, ptr %20, align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %21 = call { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h4988ca18d308d125E"(i64 %pos, ptr align 1 %self.0, i64 %self.1)
  %22 = extractvalue { ptr, i64 } %21, 0
  %23 = extractvalue { ptr, i64 } %21, 1
  store ptr %22, ptr %_43, align 8
  %24 = getelementptr inbounds i8, ptr %_43, i64 8
  store i64 %23, ptr %24, align 8
  %25 = load ptr, ptr %_43, align 8
  %26 = ptrtoint ptr %25 to i64
  %27 = icmp eq i64 %26, 0
  %_44 = select i1 %27, i64 0, i64 1
  %28 = icmp eq i64 %_44, 0
  br i1 %28, label %bb24, label %bb25

bb4:                                              ; preds = %bb3
  store i64 2, ptr %_0, align 8
  br label %bb22

bb24:                                             ; preds = %bb5
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h7213e65c8ef344e8E(ptr align 1 %self.0, i64 %self.1, i64 %pos, i64 %self.1, ptr align 8 @alloc_a918088129574efbf4eb4c3e02dd5937) #24
  unreachable

bb25:                                             ; preds = %bb5
  %s.0 = load ptr, ptr %_43, align 8
  %29 = getelementptr inbounds i8, ptr %_43, i64 8
  %s.1 = load i64, ptr %29, align 8
  %_53 = getelementptr inbounds i8, ptr %s.0, i64 %s.1
  store ptr %s.0, ptr %_10, align 8
  %30 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr %_53, ptr %30, align 8
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %31 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %_10)
  store i32 %31, ptr %_8, align 4
  br i1 %is_match, label %bb8, label %bb9

bb9:                                              ; preds = %bb25
  %32 = load i32, ptr %_8, align 4
  %33 = icmp eq i32 %32, 1114112
  %_13 = select i1 %33, i64 0, i64 1
  %34 = icmp eq i64 %_13, 0
  br i1 %34, label %bb10, label %bb7

bb8:                                              ; preds = %bb25
  %35 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %pos, ptr %35, align 8
  %36 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %pos, ptr %36, align 8
  store i64 0, ptr %_0, align 8
  br label %bb11

bb10:                                             ; preds = %bb9
  %37 = getelementptr inbounds i8, ptr %self, i64 8
  %38 = getelementptr inbounds i8, ptr %37, i64 18
  store i8 1, ptr %38, align 2
  store i64 2, ptr %_0, align 8
  br label %bb11

bb7:                                              ; preds = %bb9
  %ch = load i32, ptr %_8, align 4
  %_58 = icmp ult i32 %ch, 128
  br i1 %_58, label %bb26, label %bb27

bb11:                                             ; preds = %bb8, %bb34, %bb10
  br label %bb22

bb27:                                             ; preds = %bb7
  %_59 = icmp ult i32 %ch, 2048
  br i1 %_59, label %bb28, label %bb29

bb26:                                             ; preds = %bb7
  store i64 1, ptr %_15, align 8
  br label %bb34

bb29:                                             ; preds = %bb27
  %_60 = icmp ult i32 %ch, 65536
  br i1 %_60, label %bb30, label %bb31

bb28:                                             ; preds = %bb27
  store i64 2, ptr %_15, align 8
  br label %bb33

bb31:                                             ; preds = %bb29
  store i64 4, ptr %_15, align 8
  br label %bb32

bb30:                                             ; preds = %bb29
  store i64 3, ptr %_15, align 8
  br label %bb32

bb32:                                             ; preds = %bb30, %bb31
  br label %bb33

bb33:                                             ; preds = %bb28, %bb32
  br label %bb34

bb34:                                             ; preds = %bb26, %bb33
  %39 = getelementptr inbounds i8, ptr %self, i64 8
  %40 = getelementptr inbounds i8, ptr %self, i64 8
  %41 = load i64, ptr %40, align 8
  %42 = load i64, ptr %_15, align 8
  %43 = add i64 %41, %42
  store i64 %43, ptr %39, align 8
  %44 = getelementptr inbounds i8, ptr %self, i64 8
  %_16 = load i64, ptr %44, align 8
  %45 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %pos, ptr %45, align 8
  %46 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %_16, ptr %46, align 8
  store i64 1, ptr %_0, align 8
  br label %bb11

bb22:                                             ; preds = %bb12, %bb21, %bb4, %bb11
  ret void

bb13:                                             ; preds = %bb2
  %47 = getelementptr inbounds i8, ptr %self, i64 8
  %48 = getelementptr inbounds i8, ptr %47, i64 48
  %_22 = load i64, ptr %48, align 8
  %is_long = icmp eq i64 %_22, -1
  %_24 = getelementptr inbounds i8, ptr %self, i64 8
  %49 = getelementptr inbounds i8, ptr %self, i64 72
  %self.04 = load ptr, ptr %49, align 8
  %50 = getelementptr inbounds i8, ptr %49, i64 8
  %self.15 = load i64, ptr %50, align 8
  %51 = getelementptr inbounds i8, ptr %self, i64 88
  %self.06 = load ptr, ptr %51, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 8
  %self.17 = load i64, ptr %52, align 8
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h10fe1895c4771606E(ptr sret([24 x i8]) align 8 %otherwise, ptr align 8 %_24, ptr align 1 %self.04, i64 %self.15, ptr align 1 %self.06, i64 %self.17, i1 zeroext %is_long)
  %_27 = load i64, ptr %otherwise, align 8
  %53 = icmp eq i64 %_27, 1
  br i1 %53, label %bb16, label %bb15

bb12:                                             ; preds = %bb2
  store i64 2, ptr %_0, align 8
  br label %bb22

bb16:                                             ; preds = %bb13
  %54 = getelementptr inbounds i8, ptr %otherwise, i64 8
  %a = load i64, ptr %54, align 8
  %55 = getelementptr inbounds i8, ptr %otherwise, i64 16
  %56 = load i64, ptr %55, align 8
  store i64 %56, ptr %b, align 8
  br label %bb17

bb15:                                             ; preds = %bb13
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %otherwise, i64 24, i1 false)
  br label %bb21

bb17:                                             ; preds = %bb20, %bb16
  %57 = getelementptr inbounds i8, ptr %self, i64 72
  %_40.0 = load ptr, ptr %57, align 8
  %58 = getelementptr inbounds i8, ptr %57, i64 8
  %_40.1 = load i64, ptr %58, align 8
  %_31 = load i64, ptr %b, align 8
; call core::str::<impl str>::is_char_boundary
  %_30 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h213c77745b6a4bb9E"(ptr align 1 %_40.0, i64 %_40.1, i64 %_31)
  br i1 %_30, label %bb19, label %bb20

bb20:                                             ; preds = %bb17
  %59 = load i64, ptr %b, align 8
  %60 = add i64 %59, 1
  store i64 %60, ptr %b, align 8
  br label %bb17

bb19:                                             ; preds = %bb17
  %v1 = load i64, ptr %b, align 8
  %61 = getelementptr inbounds i8, ptr %self, i64 8
  %62 = getelementptr inbounds i8, ptr %61, i64 32
  %v2 = load i64, ptr %62, align 8
; call core::cmp::max_by
  %_32 = call i64 @_ZN4core3cmp6max_by17h68594a3dd1a7ccabE(i64 %v1, i64 %v2)
  %63 = getelementptr inbounds i8, ptr %self, i64 8
  %64 = getelementptr inbounds i8, ptr %63, i64 32
  store i64 %_32, ptr %64, align 8
  %_35 = load i64, ptr %b, align 8
  %65 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %a, ptr %65, align 8
  %66 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %_35, ptr %66, align 8
  store i64 1, ptr %_0, align 8
  br label %bb21

bb21:                                             ; preds = %bb15, %bb19
  br label %bb22

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro::bridge::DelimSpan<Span> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN80_$LT$proc_macro..bridge..DelimSpan$LT$Span$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h3d6af61f7739118cE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
; call <proc_macro::bridge::client::Span as core::clone::Clone>::clone
  %_2 = call i32 @"_ZN71_$LT$proc_macro..bridge..client..Span$u20$as$u20$core..clone..Clone$GT$5clone17hd04af057693e265fE"(ptr align 4 %self)
  %_5 = getelementptr inbounds i8, ptr %self, i64 4
; invoke <proc_macro::bridge::client::Span as core::clone::Clone>::clone
  %_4 = invoke i32 @"_ZN71_$LT$proc_macro..bridge..client..Span$u20$as$u20$core..clone..Clone$GT$5clone17hd04af057693e265fE"(ptr align 4 %_5)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %bb4, %cleanup
  %1 = load ptr, ptr %0, align 8
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load i32, ptr %2, align 8
  %4 = insertvalue { ptr, i32 } poison, ptr %1, 0
  %5 = insertvalue { ptr, i32 } %4, i32 %3, 1
  resume { ptr, i32 } %5

cleanup:                                          ; preds = %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb5

bb2:                                              ; preds = %start
  %_7 = getelementptr inbounds i8, ptr %self, i64 8
; invoke <proc_macro::bridge::client::Span as core::clone::Clone>::clone
  %_6 = invoke i32 @"_ZN71_$LT$proc_macro..bridge..client..Span$u20$as$u20$core..clone..Clone$GT$5clone17hd04af057693e265fE"(ptr align 4 %_7)
          to label %bb3 unwind label %cleanup1

bb4:                                              ; preds = %cleanup1
  br label %bb5

cleanup1:                                         ; preds = %bb2
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  store i32 %_2, ptr %_0, align 4
  %14 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_4, ptr %14, align 4
  %15 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 %_6, ptr %15, align 4
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h3e42ca9b794b56aeE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 16
  %len = load i64, ptr %2, align 8
  br label %bb3

bb3:                                              ; preds = %start
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { ptr, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h385e1d22b597fc97E"(ptr align 1 %self1, i64 %len, ptr align 8 %0)
  %_0.0 = extractvalue { ptr, i64 } %3, 0
  %_0.1 = extractvalue { ptr, i64 } %3, 1
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1
  ret { ptr, i64 } %5

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::all
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17h8b4ca75b91697884E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [1 x i8], align 1
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h283306c8600f9c1eE(ptr align 8 %self)
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %_5, align 1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9845fa6704d4410dE"(ptr align 1 %_5, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1)
  ret i1 %_0
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i1, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h960866a992cd8c3eE"(ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i1, i8 } @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h99a198ac9de50c60E"(ptr align 8 %self)
  %_0.0 = extractvalue { i1, i8 } %0, 0
  %_0.1 = extractvalue { i1, i8 } %0, 1
  %1 = insertvalue { i1, i8 } poison, i1 %_0.0, 0
  %2 = insertvalue { i1, i8 } %1, i8 %_0.1, 1
  ret { i1, i8 } %2
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = alloca [8 x i8], align 4
  %_0 = alloca [4 x i8], align 4
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h198a1085531c01a8E(ptr align 8 %self)
  %1 = extractvalue { i32, i32 } %0, 0
  %2 = extractvalue { i32, i32 } %0, 1
  store i32 %1, ptr %self1, align 4
  %3 = getelementptr inbounds i8, ptr %self1, i64 4
  store i32 %2, ptr %3, align 4
  %4 = load i32, ptr %self1, align 4
  %_4 = zext i32 %4 to i64
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb4, label %bb5

bb4:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4
  br label %bb2

bb5:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self1, i64 4
  %x = load i32, ptr %6, align 4
  br label %bb7

bb2:                                              ; preds = %bb7, %bb4
  %7 = load i32, ptr %_0, align 4
  ret i32 %7

bb7:                                              ; preds = %bb5
  store i32 %x, ptr %_0, align 4
  br label %bb2

bb6:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h6fef58955358fcbbE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_33 = alloca [16 x i8], align 8
  %slice = alloca [16 x i8], align 8
  %_24 = alloca [16 x i8], align 8
  %_14 = alloca [16 x i8], align 8
  %self1 = alloca [16 x i8], align 8
  %_2 = alloca [16 x i8], align 8
  br label %bb1

bb1:                                              ; preds = %bb10, %start
  %self.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self.1 = load i64, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %_6 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 24
  %_7 = load i64, ptr %2, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %3 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h8282366d9378ce03E"(i64 %_6, i64 %_7, ptr align 1 %self.0, i64 %self.1)
  %4 = extractvalue { ptr, i64 } %3, 0
  %5 = extractvalue { ptr, i64 } %3, 1
  store ptr %4, ptr %self1, align 8
  %6 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %5, ptr %6, align 8
  %7 = load ptr, ptr %self1, align 8
  %8 = ptrtoint ptr %7 to i64
  %9 = icmp eq i64 %8, 0
  %_43 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_43, 0
  br i1 %10, label %bb15, label %bb16

bb15:                                             ; preds = %bb1
  store i64 0, ptr %_0, align 8
  br label %bb13

bb16:                                             ; preds = %bb1
  %v.0 = load ptr, ptr %self1, align 8
  %11 = getelementptr inbounds i8, ptr %self1, i64 8
  %v.1 = load i64, ptr %11, align 8
  store ptr %v.0, ptr %_2, align 8
  %12 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %v.1, ptr %12, align 8
  %bytes.0 = load ptr, ptr %_2, align 8
  %13 = getelementptr inbounds i8, ptr %_2, i64 8
  %bytes.1 = load i64, ptr %13, align 8
  %_11 = getelementptr inbounds i8, ptr %self, i64 32
  %14 = getelementptr inbounds i8, ptr %self, i64 40
  %self2 = load i8, ptr %14, align 8
  %_13 = zext i8 %self2 to i64
  %index = sub i64 %_13, 1
  br label %bb19

bb13:                                             ; preds = %bb12, %bb15
  ret void

bb19:                                             ; preds = %bb16
  %_51 = icmp ult i64 %index, 4
  %_46 = getelementptr inbounds i8, ptr %_11, i64 %index
  %last_byte = load i8, ptr %_46, align 1
  %_54 = icmp ult i64 %bytes.1, 16
  br i1 %_54, label %bb21, label %bb23

bb17:                                             ; No predecessors!
  unreachable

bb18:                                             ; No predecessors!
  unreachable

bb23:                                             ; preds = %bb19
; call core::slice::memchr::memchr_aligned
  %15 = call { i64, i64 } @_ZN4core5slice6memchr14memchr_aligned17h8f099e60ba6928faE(i8 %last_byte, ptr align 1 %bytes.0, i64 %bytes.1)
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  store i64 %16, ptr %_14, align 8
  %18 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %17, ptr %18, align 8
  br label %bb20

bb21:                                             ; preds = %bb19
; call core::slice::memchr::memchr_naive
  %19 = call { i64, i64 } @_ZN4core5slice6memchr12memchr_naive17h6a356d7a0cc16d09E(i8 %last_byte, ptr align 1 %bytes.0, i64 %bytes.1)
  %20 = extractvalue { i64, i64 } %19, 0
  %21 = extractvalue { i64, i64 } %19, 1
  store i64 %20, ptr %_14, align 8
  %22 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %21, ptr %22, align 8
  br label %bb20

bb20:                                             ; preds = %bb21, %bb23
  %_15 = load i64, ptr %_14, align 8
  %23 = icmp eq i64 %_15, 1
  br i1 %23, label %bb3, label %bb11

bb3:                                              ; preds = %bb20
  %24 = getelementptr inbounds i8, ptr %_14, i64 8
  %index3 = load i64, ptr %24, align 8
  %_17 = add i64 %index3, 1
  %25 = getelementptr inbounds i8, ptr %self, i64 16
  %26 = getelementptr inbounds i8, ptr %self, i64 16
  %27 = load i64, ptr %26, align 8
  %28 = add i64 %27, %_17
  store i64 %28, ptr %25, align 8
  %29 = getelementptr inbounds i8, ptr %self, i64 16
  %_19 = load i64, ptr %29, align 8
  %30 = getelementptr inbounds i8, ptr %self, i64 40
  %self4 = load i8, ptr %30, align 8
  %_20 = zext i8 %self4 to i64
  %_18 = icmp uge i64 %_19, %_20
  br i1 %_18, label %bb4, label %bb9

bb11:                                             ; preds = %bb20
  %31 = getelementptr inbounds i8, ptr %self, i64 24
  %_40 = load i64, ptr %31, align 8
  %32 = getelementptr inbounds i8, ptr %self, i64 16
  store i64 %_40, ptr %32, align 8
  store i64 0, ptr %_0, align 8
  br label %bb12

bb9:                                              ; preds = %bb3
  br label %bb10

bb4:                                              ; preds = %bb3
  %33 = getelementptr inbounds i8, ptr %self, i64 16
  %_22 = load i64, ptr %33, align 8
  %34 = getelementptr inbounds i8, ptr %self, i64 40
  %self5 = load i8, ptr %34, align 8
  %_23 = zext i8 %self5 to i64
  %found_char = sub i64 %_22, %_23
  %self.06 = load ptr, ptr %self, align 8
  %35 = getelementptr inbounds i8, ptr %self, i64 8
  %self.17 = load i64, ptr %35, align 8
  %36 = getelementptr inbounds i8, ptr %self, i64 16
  %_27 = load i64, ptr %36, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %37 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h8282366d9378ce03E"(i64 %found_char, i64 %_27, ptr align 1 %self.06, i64 %self.17)
  %38 = extractvalue { ptr, i64 } %37, 0
  %39 = extractvalue { ptr, i64 } %37, 1
  store ptr %38, ptr %_24, align 8
  %40 = getelementptr inbounds i8, ptr %_24, i64 8
  store i64 %39, ptr %40, align 8
  %41 = load ptr, ptr %_24, align 8
  %42 = ptrtoint ptr %41 to i64
  %43 = icmp eq i64 %42, 0
  %_28 = select i1 %43, i64 0, i64 1
  %44 = icmp eq i64 %_28, 1
  br i1 %44, label %bb5, label %bb8

bb10:                                             ; preds = %bb8, %bb9
  br label %bb1

bb5:                                              ; preds = %bb4
  %45 = load ptr, ptr %_24, align 8
  %46 = getelementptr inbounds i8, ptr %_24, i64 8
  %47 = load i64, ptr %46, align 8
  store ptr %45, ptr %slice, align 8
  %48 = getelementptr inbounds i8, ptr %slice, i64 8
  store i64 %47, ptr %48, align 8
  %self8 = getelementptr inbounds i8, ptr %self, i64 32
  %49 = getelementptr inbounds i8, ptr %self, i64 40
  %self9 = load i8, ptr %49, align 8
  %_37 = zext i8 %self9 to i64
  %_7.i = icmp ugt i64 %_37, 4
  br i1 %_7.i, label %bb3.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit"

bb3.i:                                            ; preds = %bb5
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h0342d27fee357d65E(i64 %_37, i64 4, ptr align 8 @alloc_4606dfc766e23d9646c00ebc31b83b5c) #24
  unreachable

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit": ; preds = %bb5
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %50 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8a45788462871a0E"(i64 0, i64 %_37, ptr %self8, i64 4)
  %_11.0.i = extractvalue { ptr, i64 } %50, 0
  %_11.1.i = extractvalue { ptr, i64 } %50, 1
  %other.0 = extractvalue { ptr, i64 } %50, 0
  %other.1 = extractvalue { ptr, i64 } %50, 1
  store ptr %other.0, ptr %_33, align 8
  %51 = getelementptr inbounds i8, ptr %_33, i64 8
  store i64 %other.1, ptr %51, align 8
  %52 = load ptr, ptr %slice, align 8
  %53 = getelementptr inbounds i8, ptr %slice, i64 8
  %54 = load i64, ptr %53, align 8
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %_30 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h21bdc8f6df394f4dE"(ptr align 1 %52, i64 %54, ptr align 1 %other.0, i64 %other.1)
  br i1 %_30, label %bb6, label %bb7

bb8:                                              ; preds = %bb7, %bb4
  br label %bb10

bb7:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit"
  br label %bb8

bb6:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit"
  %55 = getelementptr inbounds i8, ptr %self, i64 16
  %_39 = load i64, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %found_char, ptr %56, align 8
  %57 = getelementptr inbounds i8, ptr %56, i64 8
  store i64 %_39, ptr %57, align 8
  store i64 1, ptr %_0, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb6
  br label %bb13

bb2:                                              ; No predecessors!
  unreachable
}

; <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9cf21a454fcf1c17E"(ptr align 4 %self) unnamed_addr #0 {
start:
  %_9 = alloca [10 x i8], align 1
  %_8 = alloca [12 x i8], align 1
  %_7 = alloca [12 x i8], align 4
  %self1 = alloca [2 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %0 = load i8, ptr %self, align 4
  %1 = icmp eq i8 %0, -128
  %_2 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
; call core::escape::EscapeIterInner<_>::next
  %3 = call { i1, i8 } @"_ZN4core6escape24EscapeIterInner$LT$_$GT$4next17hb630fa9178636829E"(ptr align 1 %self)
  %4 = extractvalue { i1, i8 } %3, 0
  %5 = extractvalue { i1, i8 } %3, 1
  %6 = zext i1 %4 to i8
  store i8 %6, ptr %self1, align 1
  %7 = getelementptr inbounds i8, ptr %self1, i64 1
  store i8 %5, ptr %7, align 1
  %8 = load i8, ptr %self1, align 1
  %9 = trunc i8 %8 to i1
  %_10 = zext i1 %9 to i64
  %10 = icmp eq i64 %_10, 0
  br i1 %10, label %bb7, label %bb8

bb2:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %self, i64 4
  %chr = load i32, ptr %11, align 4
  call void @llvm.memset.p0.i64(ptr align 1 %_9, i8 0, i64 10, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_8, ptr align 1 %_9, i64 10, i1 false)
  %12 = getelementptr inbounds i8, ptr %_8, i64 10
  store i8 0, ptr %12, align 1
  %13 = getelementptr inbounds i8, ptr %12, i64 1
  store i8 0, ptr %13, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_7, ptr align 1 %_8, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %self, ptr align 4 %_7, i64 12, i1 false)
  store i32 %chr, ptr %_0, align 4
  br label %bb5

bb7:                                              ; preds = %bb3
  store i32 1114112, ptr %_0, align 4
  br label %bb6

bb8:                                              ; preds = %bb3
  %14 = getelementptr inbounds i8, ptr %self1, i64 1
  %x = load i8, ptr %14, align 1
; call core::ops::function::FnOnce::call_once
  %_12 = call i32 @_ZN4core3ops8function6FnOnce9call_once17h94700498d62385e9E(i8 %x)
  store i32 %_12, ptr %_0, align 4
  br label %bb6

bb6:                                              ; preds = %bb8, %bb7
  br label %bb5

bb5:                                              ; preds = %bb2, %bb6
  %15 = load i32, ptr %_0, align 4
  ret i32 %15

bb1:                                              ; No predecessors!
  unreachable
}

; <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he6a0349b2650f6c1E"(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %self) unnamed_addr #0 {
start:
  %_4 = alloca [16 x i8], align 8
  %n = alloca [8 x i8], align 8
  %0 = load i8, ptr %self, align 4
  %1 = icmp eq i8 %0, -128
  %_6 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_6, 0
  br i1 %2, label %bb4, label %bb3

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 10
  %4 = getelementptr inbounds i8, ptr %3, i64 1
  %_10 = load i8, ptr %4, align 1
  %5 = getelementptr inbounds i8, ptr %self, i64 10
  %_11 = load i8, ptr %5, align 2
  %small = sub i8 %_10, %_11
  %6 = zext i8 %small to i64
  store i64 %6, ptr %n, align 8
  br label %bb1

bb3:                                              ; preds = %start
  store i64 1, ptr %n, align 8
  br label %bb1

bb1:                                              ; preds = %bb3, %bb4
  %_3 = load i64, ptr %n, align 8
  %_5 = load i64, ptr %n, align 8
  %7 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %_5, ptr %7, align 8
  store i64 1, ptr %_4, align 8
  store i64 %_3, ptr %_0, align 8
  %8 = load i64, ptr %_4, align 8
  %9 = getelementptr inbounds i8, ptr %_4, i64 8
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %8, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  ret void

bb2:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN83_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hdf8916a00fadc02cE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call alloc::vec::into_iter::IntoIter<T,A>::as_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$8as_slice17ha935fb47c0a88188E"(ptr align 8 %self)
  %self.0 = extractvalue { ptr, i64 } %0, 0
  %self.1 = extractvalue { ptr, i64 } %0, 1
  %self1 = getelementptr inbounds i8, ptr %self, i64 32
  %_5 = getelementptr inbounds i8, ptr %self, i64 32
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h58f81dd4a5b1a90fE"(ptr align 1 %_5)
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h1331991ab679a07aE"(ptr sret([24 x i8]) align 8 %_2, ptr align 4 %self.0, i64 %self.1)
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h654650e4455c4966E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN83_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17he492ec24ce0a7fbdE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call alloc::vec::into_iter::IntoIter<T,A>::as_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$8as_slice17hed2fc1f5a2b1c506E"(ptr align 8 %self)
  %self.0 = extractvalue { ptr, i64 } %0, 0
  %self.1 = extractvalue { ptr, i64 } %0, 1
  %self1 = getelementptr inbounds i8, ptr %self, i64 32
  %_5 = getelementptr inbounds i8, ptr %self, i64 32
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h58f81dd4a5b1a90fE"(ptr align 1 %_5)
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hb97d26b05ddaa347E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self.0, i64 %self.1)
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9334bd47181e8352E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h215b02c910a4e290E"(ptr sret([32 x i8]) align 8 %_0) unnamed_addr #0 {
start:
  store i64 -9223372036854775803, ptr %_0, align 8
  ret void
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h9442c2db80782225E"() unnamed_addr #0 {
start:
  %_0 = alloca [8 x i8], align 8
  store ptr null, ptr %_0, align 8
  %0 = load ptr, ptr %_0, align 8
  ret ptr %0
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17haf11494c7fa22b63E"() unnamed_addr #0 {
start:
  %_0 = alloca [8 x i8], align 4
  store i32 0, ptr %_0, align 4
  %0 = load i32, ptr %_0, align 4
  %1 = getelementptr inbounds i8, ptr %_0, i64 4
  %2 = load i32, ptr %1, align 4
  %3 = insertvalue { i32, i32 } poison, i32 %0, 0
  %4 = insertvalue { i32, i32 } %3, i32 %2, 1
  ret { i32, i32 } %4
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hb01ea9a561902202E"() unnamed_addr #0 {
start:
  ret i1 false
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h3e180846c835f52cE"(ptr sret([24 x i8]) align 8 %_0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %a, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %0, i64 8
  store i64 %b, ptr %1, align 8
  store i64 1, ptr %_0, align 8
  ret void
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h512240583d5d6e51E"(ptr sret([24 x i8]) align 8 %_0, i64 %_a, i64 %_b) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  ret void
}

; <proc_macro::bridge::Ident<Span,Symbol> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN85_$LT$proc_macro..bridge..Ident$LT$Span$C$Symbol$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h22fe6daddc499655E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
; call <proc_macro::bridge::symbol::Symbol as core::clone::Clone>::clone
  %_2 = call i32 @"_ZN73_$LT$proc_macro..bridge..symbol..Symbol$u20$as$u20$core..clone..Clone$GT$5clone17h6f77a3f5b4273606E"(ptr align 4 %self)
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %2 = load i8, ptr %1, align 4
  %_4 = trunc i8 %2 to i1
  %_7 = getelementptr inbounds i8, ptr %self, i64 4
; invoke <proc_macro::bridge::client::Span as core::clone::Clone>::clone
  %_6 = invoke i32 @"_ZN71_$LT$proc_macro..bridge..client..Span$u20$as$u20$core..clone..Clone$GT$5clone17hd04af057693e265fE"(ptr align 4 %_7)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %3 = load ptr, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load i32, ptr %4, align 8
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb3

bb2:                                              ; preds = %start
  store i32 %_2, ptr %_0, align 4
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  %13 = zext i1 %_4 to i8
  store i8 %13, ptr %12, align 4
  %14 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_6, ptr %14, align 4
  ret void
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5f25a4e3a922637aE"(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %self1 = alloca [8 x i8], align 8
  %guard = alloca [8 x i8], align 8
  store ptr %self, ptr %guard, align 8
  %_6 = load ptr, ptr %guard, align 8
  store ptr %_6, ptr %self1, align 8
  %1 = getelementptr inbounds i8, ptr %_6, i64 8
  %self2 = load ptr, ptr %1, align 8
; invoke core::iter::traits::exact_size::ExactSizeIterator::len
  %len = invoke i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17h6bd2106c5e1a168eE(ptr align 8 %_6)
          to label %bb5 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>,alloc::alloc::Global>>
  invoke void @"_ZN4core3ptr302drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$C$alloc..alloc..Global$GT$$GT$17hfa1c34fbde24c473E"(ptr align 8 %guard) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb5, %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb3

bb5:                                              ; preds = %start
; invoke core::ptr::drop_in_place<[proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>]>
  invoke void @"_ZN4core3ptr179drop_in_place$LT$$u5b$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$u5d$$GT$17h51455dae7f2997e5E"(ptr align 4 %self2, i64 %len)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %bb5
; call core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::Span,proc_macro::bridge::symbol::Symbol>,alloc::alloc::Global>>
  call void @"_ZN4core3ptr302drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..bridge..TokenTree$LT$proc_macro..bridge..client..TokenStream$C$proc_macro..bridge..client..Span$C$proc_macro..bridge..symbol..Symbol$GT$$C$alloc..alloc..Global$GT$$GT$17hfa1c34fbde24c473E"(ptr align 8 %guard)
  ret void

terminate:                                        ; preds = %bb3
  %6 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %9 = load ptr, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load i32, ptr %10, align 8
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfc495b657b66aa09E"(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %self1 = alloca [8 x i8], align 8
  %guard = alloca [8 x i8], align 8
  store ptr %self, ptr %guard, align 8
  %_6 = load ptr, ptr %guard, align 8
  store ptr %_6, ptr %self1, align 8
  %1 = getelementptr inbounds i8, ptr %_6, i64 8
  %self2 = load ptr, ptr %1, align 8
; invoke core::iter::traits::exact_size::ExactSizeIterator::len
  %len = invoke i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hb42f7ec0ac13234aE(ptr align 8 %_6)
          to label %bb5 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro2::TokenTree,alloc::alloc::Global>>
  invoke void @"_ZN4core3ptr176drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro2..TokenTree$C$alloc..alloc..Global$GT$$GT$17hc77b24eff7f38041E"(ptr align 8 %guard) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb5, %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb3

bb5:                                              ; preds = %start
; invoke core::ptr::drop_in_place<[proc_macro2::TokenTree]>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$$u5b$proc_macro2..TokenTree$u5d$$GT$17h307a84eeb83678a1E"(ptr align 8 %self2, i64 %len)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %bb5
; call core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro2::TokenTree,alloc::alloc::Global>>
  call void @"_ZN4core3ptr176drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro2..TokenTree$C$alloc..alloc..Global$GT$$GT$17hc77b24eff7f38041E"(ptr align 8 %guard)
  ret void

terminate:                                        ; preds = %bb3
  %6 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %9 = load ptr, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load i32, ptr %10, align 8
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13
}

; <core::ops::range::RangeFull as core::ops::range::RangeBounds<T>>::start_bound
; Function Attrs: nonlazybind uwtable
define { i64, ptr } @"_ZN86_$LT$core..ops..range..RangeFull$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h63dd4470f9f006cbE"(ptr align 1 %self) unnamed_addr #1 {
start:
  %_0 = alloca [16 x i8], align 8
  store i64 2, ptr %_0, align 8
  %0 = load i64, ptr %_0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  %2 = load ptr, ptr %1, align 8
  %3 = insertvalue { i64, ptr } poison, i64 %0, 0
  %4 = insertvalue { i64, ptr } %3, ptr %2, 1
  ret { i64, ptr } %4
}

; <core::ops::range::RangeFull as core::ops::range::RangeBounds<T>>::end_bound
; Function Attrs: nonlazybind uwtable
define { i64, ptr } @"_ZN86_$LT$core..ops..range..RangeFull$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17h4f2bdc7dde16f106E"(ptr align 1 %self) unnamed_addr #1 {
start:
  %_0 = alloca [16 x i8], align 8
  store i64 2, ptr %_0, align 8
  %0 = load i64, ptr %_0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  %2 = load ptr, ptr %1, align 8
  %3 = insertvalue { i64, ptr } poison, i64 %0, 0
  %4 = insertvalue { i64, ptr } %3, ptr %2, 1
  ret { i64, ptr } %4
}

; <proc_macro::TokenTree as core::convert::From<proc_macro::Group>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Group$GT$$GT$4from17haea9619502903a60E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %g) unnamed_addr #1 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %g, i64 20, i1 false)
  ret void
}

; <proc_macro::TokenTree as core::convert::From<proc_macro::Ident>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Ident$GT$$GT$4from17h3027ec1ee0210a9bE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %g) unnamed_addr #1 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %g, i64 12, i1 false)
  %0 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 4, ptr %0, align 4
  ret void
}

; <proc_macro::TokenTree as core::convert::From<proc_macro::Punct>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Punct$GT$$GT$4from17h4f1c0ee272d09e1fE"(ptr sret([20 x i8]) align 4 %_0, i64 %0) unnamed_addr #1 {
start:
  %1 = alloca [8 x i8], align 8
  %g = alloca [8 x i8], align 4
  store i64 %0, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %g, ptr align 8 %1, i64 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %g, i64 8, i1 false)
  %2 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 5, ptr %2, align 4
  ret void
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_4 = alloca [4 x i8], align 4
  %_0 = alloca [16 x i8], align 8
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %end = load ptr, ptr %self1, align 8
  %subtracted = load ptr, ptr %self, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %pre_len = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %end, ptr %subtracted)
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %0 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %self)
  store i32 %0, ptr %_4, align 4
  %1 = load i32, ptr %_4, align 4
  %2 = icmp eq i32 %1, 1114112
  %_6 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_6, 0
  br i1 %3, label %bb4, label %bb3

bb4:                                              ; preds = %start
  %4 = load i64, ptr @8, align 8
  %5 = load i32, ptr getelementptr inbounds (i8, ptr @8, i64 8), align 8
  store i64 %4, ptr %_0, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb5

bb3:                                              ; preds = %start
  %ch = load i32, ptr %_4, align 4
  %7 = getelementptr inbounds i8, ptr %self, i64 16
  %index = load i64, ptr %7, align 8
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %end3 = load ptr, ptr %self2, align 8
  %subtracted4 = load ptr, ptr %self, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %len = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %end3, ptr %subtracted4)
  %_11 = sub i64 %pre_len, %len
  %8 = getelementptr inbounds i8, ptr %self, i64 16
  %9 = getelementptr inbounds i8, ptr %self, i64 16
  %10 = load i64, ptr %9, align 8
  %11 = add i64 %10, %_11
  store i64 %11, ptr %8, align 8
  store i64 %index, ptr %_0, align 8
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 %ch, ptr %12, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %13 = load i64, ptr %_0, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 8
  %15 = load i32, ptr %14, align 8
  %16 = insertvalue { i64, i32 } poison, i64 %13, 0
  %17 = insertvalue { i64, i32 } %16, i32 %15, 1
  ret { i64, i32 } %17

bb2:                                              ; No predecessors!
  unreachable
}

; <proc_macro::bridge::Literal<Span,Symbol> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN87_$LT$proc_macro..bridge..Literal$LT$Span$C$Symbol$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h215841835d79a344E"(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_6 = alloca [4 x i8], align 4
  %self1 = getelementptr inbounds i8, ptr %self, i64 12
  %1 = getelementptr inbounds i8, ptr %self, i64 12
  %_2.0 = load i8, ptr %1, align 4
  %2 = getelementptr inbounds i8, ptr %1, i64 1
  %_2.1 = load i8, ptr %2, align 1
; call <proc_macro::bridge::symbol::Symbol as core::clone::Clone>::clone
  %_4 = call i32 @"_ZN73_$LT$proc_macro..bridge..symbol..Symbol$u20$as$u20$core..clone..Clone$GT$5clone17h6f77a3f5b4273606E"(ptr align 4 %self)
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i32, ptr %3, align 4
  %5 = icmp eq i32 %4, 0
  %_10 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_10, 0
  br i1 %6, label %bb8, label %bb9

bb8:                                              ; preds = %start
  store i32 0, ptr %_6, align 4
  br label %bb6

bb9:                                              ; preds = %start
  %x = getelementptr inbounds i8, ptr %self, i64 8
  %_13 = getelementptr inbounds i8, ptr %self, i64 8
; invoke <proc_macro::bridge::symbol::Symbol as core::clone::Clone>::clone
  %_12 = invoke i32 @"_ZN73_$LT$proc_macro..bridge..symbol..Symbol$u20$as$u20$core..clone..Clone$GT$5clone17h6f77a3f5b4273606E"(ptr align 4 %_13)
          to label %bb10 unwind label %cleanup

bb6:                                              ; preds = %bb10, %bb8
  %_9 = getelementptr inbounds i8, ptr %self, i64 4
; invoke <proc_macro::bridge::client::Span as core::clone::Clone>::clone
  %_8 = invoke i32 @"_ZN71_$LT$proc_macro..bridge..client..Span$u20$as$u20$core..clone..Clone$GT$5clone17hd04af057693e265fE"(ptr align 4 %_9)
          to label %bb2 unwind label %cleanup3

bb4:                                              ; preds = %bb3, %cleanup
  %7 = load ptr, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = insertvalue { ptr, i32 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i32 } %10, i32 %9, 1
  resume { ptr, i32 } %11

cleanup:                                          ; preds = %bb9
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %0, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb4

bb10:                                             ; preds = %bb9
  store i32 %_12, ptr %_6, align 4
  br label %bb6

bb3:                                              ; preds = %cleanup3
  br label %bb4

cleanup3:                                         ; preds = %bb6
  %16 = landingpad { ptr, i32 }
          cleanup
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = extractvalue { ptr, i32 } %16, 1
  store ptr %17, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %18, ptr %19, align 8
  br label %bb3

bb2:                                              ; preds = %bb6
  %20 = getelementptr inbounds i8, ptr %_0, i64 12
  store i8 %_2.0, ptr %20, align 4
  %21 = getelementptr inbounds i8, ptr %20, i64 1
  store i8 %_2.1, ptr %21, align 1
  store i32 %_4, ptr %_0, align 4
  %22 = load i32, ptr %_6, align 4
  %23 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_8, ptr %24, align 4
  ret void

bb7:                                              ; No predecessors!
  unreachable
}

; <proc_macro::TokenTree as core::convert::From<proc_macro::Literal>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN88_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Literal$GT$$GT$4from17h0a50f2fb0a370326E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %g) unnamed_addr #1 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %g, i64 16, i1 false)
  %0 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 6, ptr %0, align 4
  ret void
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h95267607f6e2a5c1E"(ptr align 8 %self, ptr align 4 %iter) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_11 = alloca [1 x i8], align 1
  %_9 = alloca [12 x i8], align 4
  %_5 = alloca [24 x i8], align 8
  %iterator = alloca [12 x i8], align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h39740dc0d03ac9cbE"(ptr sret([12 x i8]) align 4 %iterator, ptr align 4 %iter)
  store i8 1, ptr %_11, align 1
; invoke <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he6a0349b2650f6c1E"(ptr sret([24 x i8]) align 8 %_5, ptr align 4 %iterator)
          to label %bb2 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %1 = load i8, ptr %_11, align 1
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %bb7, %bb2, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb6

bb2:                                              ; preds = %start
  %lower_bound = load i64, ptr %_5, align 8
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hcd1992e0f9a46245E"(ptr align 8 %self, i64 %lower_bound)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_11, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_9, ptr align 4 %iterator, i64 12, i1 false)
; invoke core::iter::traits::iterator::Iterator::for_each
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each17h630033c2d7d8bc0fE(ptr align 4 %_9, ptr align 8 %self)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb7
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %7 = load ptr, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = insertvalue { ptr, i32 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i32 } %10, i32 %9, 1
  resume { ptr, i32 } %11

bb5:                                              ; preds = %bb6
  br label %bb4
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17ha23fb3a8845fd57dE"(ptr align 8 %_1, i32 %c) unnamed_addr #0 {
start:
  %_3 = load ptr, ptr %_1, align 8
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %_3, i32 %c)
  ret void
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h676d50916aa403cbE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_0 = alloca [16 x i8], align 8
  %_4 = getelementptr inbounds i8, ptr %self, i64 8
  %_3.i = load i64, ptr %self, align 8
  %_4.i = load i64, ptr %_4, align 8
  %_0.i = icmp ult i64 %_3.i, %_4.i
  br i1 %_0.i, label %bb2, label %bb4

bb4:                                              ; preds = %start
  store i64 0, ptr %_0, align 8
  br label %bb5

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_6 = load i64, ptr %0, align 8
; call <usize as core::iter::range::Step>::backward_unchecked
  %_5 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h79cf839added308bE"(i64 %_6, i64 1)
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %_5, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %_7 = load i64, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_7, ptr %3, align 8
  store i64 1, ptr %_0, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %4 = load i64, ptr %_0, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load i64, ptr %5, align 8
  %7 = insertvalue { i64, i64 } poison, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h06fe4151f1dcea5eE"() unnamed_addr #0 {
start:
  ret i1 true
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17haa3234222c2b51ebE"(ptr sret([24 x i8]) align 8 %_0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %a, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %b, ptr %1, align 8
  store i64 0, ptr %_0, align 8
  ret void
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h272e14c96eaab67aE"(ptr sret([24 x i8]) align 8 %_0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %a, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %b, ptr %1, align 8
  store i64 1, ptr %_0, align 8
  ret void
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h654650e4455c4966E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %cap = alloca [8 x i8], align 8
  %end = alloca [8 x i8], align 8
  %me = alloca [24 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %me, ptr align 8 %self, i64 24, i1 false)
  %src = getelementptr inbounds i8, ptr %me, i64 16
  %0 = getelementptr inbounds i8, ptr %me, i64 8
  %buf = load ptr, ptr %0, align 8
  br label %bb2

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %me, i64 16
  %count = load i64, ptr %1, align 8
  %_18 = getelementptr inbounds %"proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>", ptr %buf, i64 %count
  store ptr %_18, ptr %end, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb6

bb1:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  unreachable

bb6:                                              ; preds = %bb3
  %2 = load i64, ptr %me, align 8
  store i64 %2, ptr %cap, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %_25 = load i64, ptr %cap, align 8
  %_26 = load ptr, ptr %end, align 8
  store ptr %buf, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %_25, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %buf, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 24
  store ptr %_26, ptr %5, align 8
  ret void

bb5:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9334bd47181e8352E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %cap = alloca [8 x i8], align 8
  %end = alloca [8 x i8], align 8
  %me = alloca [24 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %me, ptr align 8 %self, i64 24, i1 false)
  %src = getelementptr inbounds i8, ptr %me, i64 16
  %0 = getelementptr inbounds i8, ptr %me, i64 8
  %buf = load ptr, ptr %0, align 8
  br label %bb2

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %me, i64 16
  %count = load i64, ptr %1, align 8
  %_18 = getelementptr inbounds %TokenTree, ptr %buf, i64 %count
  store ptr %_18, ptr %end, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb6

bb1:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  unreachable

bb6:                                              ; preds = %bb3
  %2 = load i64, ptr %me, align 8
  store i64 %2, ptr %cap, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %_25 = load i64, ptr %cap, align 8
  %_26 = load ptr, ptr %end, align 8
  store ptr %buf, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %_25, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %buf, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 24
  store ptr %_26, ptr %5, align 8
  ret void

bb5:                                              ; No predecessors!
  unreachable
}

; <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9845fa6704d4410dE"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 {
start:
  %__arg1_02 = alloca [8 x i8], align 8
  %__self_01 = alloca [8 x i8], align 8
  %__arg1_0 = alloca [8 x i8], align 8
  %__self_0 = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %0 = load i8, ptr %self, align 1
  %1 = trunc i8 %0 to i1
  %__self_discr = zext i1 %1 to i64
  %2 = load i8, ptr %other, align 1
  %3 = trunc i8 %2 to i1
  %__arg1_discr = zext i1 %3 to i64
  %_5 = icmp eq i64 %__self_discr, %__arg1_discr
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb5

bb1:                                              ; preds = %start
  %4 = load i8, ptr %self, align 1
  %5 = trunc i8 %4 to i1
  %_8 = zext i1 %5 to i64
  %6 = icmp eq i64 %_8, 0
  br i1 %6, label %bb3, label %bb4

bb5:                                              ; preds = %bb4, %bb3, %bb2
  %7 = load i8, ptr %_0, align 1
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb3:                                              ; preds = %bb1
  %9 = load i8, ptr %other, align 1
  %10 = trunc i8 %9 to i1
  %_6 = zext i1 %10 to i64
  %_18 = icmp eq i64 %_6, 0
  %11 = getelementptr inbounds i8, ptr %self, i64 1
  store ptr %11, ptr %__self_0, align 8
  %12 = getelementptr inbounds i8, ptr %other, i64 1
  store ptr %12, ptr %__arg1_0, align 8
  %13 = load ptr, ptr %__self_0, align 8
  %14 = load ptr, ptr %__arg1_0, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %15 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h1c02d3ff5df7c858E"(ptr align 1 %13, ptr align 1 %14)
  %16 = zext i1 %15 to i8
  store i8 %16, ptr %_0, align 1
  br label %bb5

bb4:                                              ; preds = %bb1
  %17 = load i8, ptr %other, align 1
  %18 = trunc i8 %17 to i1
  %_7 = zext i1 %18 to i64
  %_17 = icmp eq i64 %_7, 1
  %19 = getelementptr inbounds i8, ptr %self, i64 1
  store ptr %19, ptr %__self_01, align 8
  %20 = getelementptr inbounds i8, ptr %other, i64 1
  store ptr %20, ptr %__arg1_02, align 8
  %21 = load ptr, ptr %__self_01, align 8
  %22 = load ptr, ptr %__arg1_02, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %23 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h1c02d3ff5df7c858E"(ptr align 1 %21, ptr align 1 %22)
  %24 = zext i1 %23 to i8
  store i8 %24, ptr %_0, align 1
  br label %bb5

bb8:                                              ; No predecessors!
  unreachable
}

; <proc_macro::bridge::Group<TokenStream,Span> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN90_$LT$proc_macro..bridge..Group$LT$TokenStream$C$Span$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h5e51b36949f2dffaE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_6 = alloca [12 x i8], align 4
  %_4 = alloca [4 x i8], align 4
  %self1 = getelementptr inbounds i8, ptr %self, i64 16
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %_2 = load i8, ptr %1, align 4
  %self2 = getelementptr inbounds i8, ptr %self, i64 12
  %2 = getelementptr inbounds i8, ptr %self, i64 12
  %3 = load i32, ptr %2, align 4
  %4 = icmp eq i32 %3, 0
  %_8 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_8, 0
  br i1 %5, label %bb6, label %bb7

bb6:                                              ; preds = %start
  store i32 0, ptr %_4, align 4
  br label %bb4

bb7:                                              ; preds = %start
  %x = getelementptr inbounds i8, ptr %self, i64 12
  %_11 = getelementptr inbounds i8, ptr %self, i64 12
; call <proc_macro::bridge::client::TokenStream as core::clone::Clone>::clone
  %_10 = call i32 @"_ZN78_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17ha5f1af690cbf0369E"(ptr align 4 %_11)
  store i32 %_10, ptr %_4, align 4
  br label %bb4

bb4:                                              ; preds = %bb7, %bb6
; invoke <proc_macro::bridge::DelimSpan<Span> as core::clone::Clone>::clone
  invoke void @"_ZN80_$LT$proc_macro..bridge..DelimSpan$LT$Span$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h3d6af61f7739118cE"(ptr sret([12 x i8]) align 4 %_6, ptr align 4 %self)
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::TokenStream>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$GT$17hbed412bb2c2b3e14E"(ptr align 4 %_4) #25
          to label %bb3 unwind label %terminate

cleanup:                                          ; preds = %bb4
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb2

bb1:                                              ; preds = %bb4
  %10 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 %_2, ptr %10, align 4
  %11 = load i32, ptr %_4, align 4
  %12 = getelementptr inbounds i8, ptr %_0, i64 12
  store i32 %11, ptr %12, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_6, i64 12, i1 false)
  ret void

terminate:                                        ; preds = %bb2
  %13 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb3:                                              ; preds = %bb2
  %16 = load ptr, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  %18 = load i32, ptr %17, align 8
  %19 = insertvalue { ptr, i32 } poison, ptr %16, 0
  %20 = insertvalue { ptr, i32 } %19, i32 %18, 1
  resume { ptr, i32 } %20

bb5:                                              ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h0574fc78327255e4E"(ptr align 8 %self, i64 %idx) unnamed_addr #0 {
start:
  %self1 = load ptr, ptr %self, align 8
  %_3 = getelementptr inbounds i8, ptr %self1, i64 %idx
  ret ptr %_3
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17he6c2e7c38cf8b29cE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %f = alloca [8 x i8], align 8
  store ptr %0, ptr %f, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2c4fb589da1c082dE"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb3, %bb1
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store ptr %2, ptr %_3, align 8
  %12 = load ptr, ptr %_3, align 8
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_4 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_4, 1
  br i1 %15, label %bb3, label %bb7

bb3:                                              ; preds = %bb2
  %x = load ptr, ptr %_3, align 8
; invoke proc_macro2::parse::ident::{{closure}}
  %_6 = invoke zeroext i1 @"_ZN11proc_macro25parse5ident28_$u7b$$u7b$closure$u7d$$u7d$17h99d0b47ad45daf89E"(ptr align 8 %f, ptr align 8 %x)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1
  br label %bb8

bb4:                                              ; preds = %bb3
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  br label %bb1

bb5:                                              ; preds = %bb4
  store i8 1, ptr %_0, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %16 = load i8, ptr %_0, align 1
  %17 = trunc i8 %16 to i1
  ret i1 %17

bb11:                                             ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0db038088eee548dE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = alloca [8 x i8], align 8
  %end = alloca [8 x i8], align 8
  %_2 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self2, align 8
  store ptr %0, ptr %end, align 8
  %self3 = load ptr, ptr %self, align 8
  %_17 = load ptr, ptr %end, align 8
  %1 = icmp eq ptr %self3, %_17
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = load i8, ptr %_2, align 1
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb5

bb1:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb3
  %old.i = load ptr, ptr %self, align 8
  %self1.i = getelementptr inbounds i8, ptr %self, i64 8
  %self2.i = load ptr, ptr %self, align 8
  %_14.i = getelementptr inbounds %"proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>", ptr %self2.i, i64 1
  store ptr %_14.i, ptr %self, align 8
  store ptr %old.i, ptr %self1, align 8
  %_21 = load ptr, ptr %self1, align 8
  store ptr %_21, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %5 = load ptr, ptr %_0, align 8
  ret ptr %5
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2c4fb589da1c082dE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = alloca [8 x i8], align 8
  %end = alloca [8 x i8], align 8
  %_2 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self2, align 8
  store ptr %0, ptr %end, align 8
  %self3 = load ptr, ptr %self, align 8
  %_17 = load ptr, ptr %end, align 8
  %1 = icmp eq ptr %self3, %_17
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = load i8, ptr %_2, align 1
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb5

bb1:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb3
  %old.i = load ptr, ptr %self, align 8
  %self1.i = getelementptr inbounds i8, ptr %self, i64 8
  %self2.i = load ptr, ptr %self, align 8
  %_14.i = getelementptr inbounds { ptr, i64 }, ptr %self2.i, i64 1
  store ptr %_14.i, ptr %self, align 8
  store ptr %old.i, ptr %self1, align 8
  %_21 = load ptr, ptr %self1, align 8
  store ptr %_21, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %5 = load ptr, ptr %_0, align 8
  ret ptr %5
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5a9f91183977e1ccE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = alloca [8 x i8], align 8
  %end = alloca [8 x i8], align 8
  %_2 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self2, align 8
  store ptr %0, ptr %end, align 8
  %self3 = load ptr, ptr %self, align 8
  %_17 = load ptr, ptr %end, align 8
  %1 = icmp eq ptr %self3, %_17
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = load i8, ptr %_2, align 1
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb5

bb1:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb3
  %old.i = load ptr, ptr %self, align 8
  %self1.i = getelementptr inbounds i8, ptr %self, i64 8
  %self2.i = load ptr, ptr %self, align 8
  %_14.i = getelementptr inbounds %"proc_macro::TokenTree", ptr %self2.i, i64 1
  store ptr %_14.i, ptr %self, align 8
  store ptr %old.i, ptr %self1, align 8
  %_21 = load ptr, ptr %self1, align 8
  store ptr %_21, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %5 = load ptr, ptr %_0, align 8
  ret ptr %5
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha76358487c324f0eE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = alloca [8 x i8], align 8
  %end = alloca [8 x i8], align 8
  %_2 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self2, align 8
  store ptr %0, ptr %end, align 8
  %self3 = load ptr, ptr %self, align 8
  %_17 = load ptr, ptr %end, align 8
  %1 = icmp eq ptr %self3, %_17
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = load i8, ptr %_2, align 1
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb5

bb1:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb3
  %old.i = load ptr, ptr %self, align 8
  %self1.i = getelementptr inbounds i8, ptr %self, i64 8
  %self2.i = load ptr, ptr %self, align 8
  %_14.i = getelementptr inbounds i8, ptr %self2.i, i64 1
  store ptr %_14.i, ptr %self, align 8
  store ptr %old.i, ptr %self1, align 8
  %_21 = load ptr, ptr %self1, align 8
  store ptr %_21, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %5 = load ptr, ptr %_0, align 8
  ret ptr %5
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hee40d2f377078eafE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = alloca [8 x i8], align 8
  %end = alloca [8 x i8], align 8
  %_2 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self2, align 8
  store ptr %0, ptr %end, align 8
  %self3 = load ptr, ptr %self, align 8
  %_17 = load ptr, ptr %end, align 8
  %1 = icmp eq ptr %self3, %_17
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = load i8, ptr %_2, align 1
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb5

bb1:                                              ; No predecessors!
  unreachable

bb5:                                              ; preds = %bb3
  %old.i = load ptr, ptr %self, align 8
  %self1.i = getelementptr inbounds i8, ptr %self, i64 8
  %self2.i = load ptr, ptr %self, align 8
  %_14.i = getelementptr inbounds %TokenTree, ptr %self2.i, i64 1
  store ptr %_14.i, ptr %self, align 8
  store ptr %old.i, ptr %self1, align 8
  %_21 = load ptr, ptr %self1, align 8
  store ptr %_21, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %5 = load ptr, ptr %_0, align 8
  ret ptr %5
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hc7d284755b4d8795E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca [16 x i8], align 8
  %exact = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %end = load ptr, ptr %self1, align 8
  %subtracted = load ptr, ptr %self, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %0 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %end, ptr %subtracted)
  store i64 %0, ptr %exact, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = load i64, ptr %exact, align 8
  %_12 = load i64, ptr %exact, align 8
  %1 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %_12, ptr %1, align 8
  store i64 1, ptr %_11, align 8
  store i64 %_10, ptr %_0, align 8
  %2 = load i64, ptr %_11, align 8
  %3 = getelementptr inbounds i8, ptr %_11, i64 8
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %2, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %4, ptr %6, align 8
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hdc9025790e7a1141E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca [16 x i8], align 8
  %exact = alloca [8 x i8], align 8
  br label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %end = load ptr, ptr %self1, align 8
  %subtracted = load ptr, ptr %self, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %0 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hff0ae4bb7b0f94e3E"(ptr %end, ptr %subtracted)
  store i64 %0, ptr %exact, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = load i64, ptr %exact, align 8
  %_12 = load i64, ptr %exact, align 8
  %1 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %_12, ptr %1, align 8
  store i64 1, ptr %_11, align 8
  store i64 %_10, ptr %_0, align 8
  %2 = load i64, ptr %_11, align 8
  %3 = getelementptr inbounds i8, ptr %_11, i64 8
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %2, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %4, ptr %6, align 8
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN93_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$T$GT$$GT$6extend17hcd3b9bcbcaa68345E"(ptr align 8 %self, ptr align 8 %iter) unnamed_addr #0 {
start:
  %_3 = alloca [32 x i8], align 8
; call <proc_macro2::rcvec::RcVecBuilder<T> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN103_$LT$proc_macro2..rcvec..RcVecBuilder$LT$T$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8d036b8939e9bb5dE"(ptr sret([32 x i8]) align 8 %_3, ptr align 8 %iter)
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17hd415638a079da3e5E"(ptr align 8 %self, ptr align 8 %_3)
  ret void
}

; <core::slice::iter::Windows<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN94_$LT$core..slice..iter..Windows$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h70941507ad5d4966E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %ret = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %self1 = load i64, ptr %0, align 8
  %_11.0 = load ptr, ptr %self, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %_11.1 = load i64, ptr %1, align 8
  %_2 = icmp ugt i64 %self1, %_11.1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self.0 = load ptr, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %self.1 = load i64, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 16
  %self2 = load i64, ptr %3, align 8
  %_7.i = icmp ugt i64 %self2, %self.1
  br i1 %_7.i, label %bb3.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit"

bb3.i:                                            ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h0342d27fee357d65E(i64 %self2, i64 %self.1, ptr align 8 @alloc_48efd6df13d24dae36913b79f4a7823a) #24
  unreachable

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit": ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %4 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8a45788462871a0E"(i64 0, i64 %self2, ptr %self.0, i64 %self.1)
  %_11.0.i = extractvalue { ptr, i64 } %4, 0
  %_11.1.i = extractvalue { ptr, i64 } %4, 1
  %_7.0 = extractvalue { ptr, i64 } %4, 0
  %_7.1 = extractvalue { ptr, i64 } %4, 1
  store ptr %_7.0, ptr %ret, align 8
  %5 = getelementptr inbounds i8, ptr %ret, i64 8
  store i64 %_7.1, ptr %5, align 8
  %self.03 = load ptr, ptr %self, align 8
  %6 = getelementptr inbounds i8, ptr %self, i64 8
  %self.14 = load i64, ptr %6, align 8
  %_15 = icmp ugt i64 1, %self.14
  br i1 %_15, label %bb5, label %bb6

bb1:                                              ; preds = %start
  %7 = load ptr, ptr @0, align 8
  %8 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8
  store ptr %7, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %8, ptr %9, align 8
  br label %bb3

bb6:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit"
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %10 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8a45788462871a0E"(i64 1, i64 %self.14, ptr %self.03, i64 %self.14)
  %_19.0 = extractvalue { ptr, i64 } %10, 0
  %_19.1 = extractvalue { ptr, i64 } %10, 1
  store ptr %_19.0, ptr %self, align 8
  %11 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %_19.1, ptr %11, align 8
  %12 = load ptr, ptr %ret, align 8
  %13 = getelementptr inbounds i8, ptr %ret, i64 8
  %14 = load i64, ptr %13, align 8
  store ptr %12, ptr %_0, align 8
  %15 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb3

bb5:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc9184e3578b50590E.exit"
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17hb1af95f5e8ac2a4fE(i64 1, i64 %self.14, ptr align 8 @alloc_f9a4645200b32ea306ea6249b4c6d735) #24
  unreachable

bb3:                                              ; preds = %bb1, %bb6
  %16 = load ptr, ptr %_0, align 8
  %17 = getelementptr inbounds i8, ptr %_0, i64 8
  %18 = load i64, ptr %17, align 8
  %19 = insertvalue { ptr, i64 } poison, ptr %16, 0
  %20 = insertvalue { ptr, i64 } %19, i64 %18, 1
  ret { ptr, i64 } %20
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h75633f8158c368bdE"() unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  store i8 0, ptr %_0, align 1
  %0 = load i8, ptr %_0, align 1
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h856cb386c74e38caE"() unnamed_addr #0 {
start:
  %_0 = alloca [16 x i8], align 8
  store i64 0, ptr %_0, align 8
  %0 = load i64, ptr %_0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  %2 = load i64, ptr %1, align 8
  %3 = insertvalue { i64, i64 } poison, i64 %0, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha31f2aaf842bf30bE"(i1 zeroext %0) unnamed_addr #0 {
start:
  %_5 = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
  %2 = load i8, ptr %self, align 1
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb3, label %bb2

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_0, align 1
  %6 = trunc i8 %5 to i1
  ret i1 %6

bb1:                                              ; No predecessors!
  unreachable
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcb598b8e1c91ed97E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_5 = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
  %_2 = load i64, ptr %self, align 8
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  store i64 0, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  %b = load i64, ptr %4, align 8
  store i64 %b, ptr %_5, align 8
  %5 = load i64, ptr %_5, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %5, ptr %6, align 8
  store i64 1, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i64, ptr %_0, align 8
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  %9 = load i64, ptr %8, align 8
  %10 = insertvalue { i64, i64 } poison, i64 %7, 0
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1
  ret { i64, i64 } %11

bb1:                                              ; No predecessors!
  unreachable
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h4f1bcb253573b6d9E"(ptr sret([40 x i8]) align 8 %_0, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_4 = alloca [24 x i8], align 8
  %_12 = getelementptr inbounds i8, ptr %haystack.0, i64 %haystack.1
  %0 = getelementptr inbounds i8, ptr %_4, i64 16
  store i64 0, ptr %0, align 8
  store ptr %haystack.0, ptr %_4, align 8
  %1 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %_12, ptr %1, align 8
  store ptr %haystack.0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %haystack.1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_4, i64 24, i1 false)
  ret void
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hb296ea99339f3085E"(ptr sret([40 x i8]) align 8 %_0, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_4 = alloca [24 x i8], align 8
  %_12 = getelementptr inbounds i8, ptr %haystack.0, i64 %haystack.1
  %0 = getelementptr inbounds i8, ptr %_4, i64 16
  store i64 0, ptr %0, align 8
  store ptr %haystack.0, ptr %_4, align 8
  %1 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %_12, ptr %1, align 8
  store ptr %haystack.0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %haystack.1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_4, i64 24, i1 false)
  ret void
}

; <alloc::vec::drain::Drain<T,A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN96_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h58bd492d4d4576a1E"(ptr sret([20 x i8]) align 4 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_6 = alloca [20 x i8], align 4
  %self1 = alloca [8 x i8], align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %0 = call align 4 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5a9f91183977e1ccE"(ptr align 8 %self)
  store ptr %0, ptr %self1, align 8
  %1 = load ptr, ptr %self1, align 8
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_4 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb4, label %bb5

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_0, i64 16
  store i8 7, ptr %5, align 4
  br label %bb2

bb5:                                              ; preds = %start
  %x = load ptr, ptr %self1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_6, ptr align 4 %x, i64 20, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_6, i64 20, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb5, %bb4
  ret void

bb3:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::drain::Drain<T,A> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nonlazybind uwtable
define void @"_ZN96_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7fa34d6d892e69beE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hdc9025790e7a1141E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self)
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17hd415638a079da3e5E"(ptr align 8 %self, ptr align 8 %iter) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::extend_desugared
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17h391e97e509ba4441E"(ptr align 8 %self, ptr align 8 %iter)
  ret void
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h385e1d22b597fc97E"(ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 {
start:
  %1 = insertvalue { ptr, i64 } poison, ptr %slice.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %slice.1, 1
  ret { ptr, i64 } %2
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h0ff2cd40df5daff6E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [16 x i8], align 8
  %s = getelementptr inbounds i8, ptr %self, i64 16
  %self1 = getelementptr inbounds i8, ptr %self, i64 16
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %self2 = getelementptr inbounds i8, ptr %0, i64 8
  %end = load ptr, ptr %self2, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %subtracted = load ptr, ptr %1, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %pre_len = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %end, ptr %subtracted)
  %_6 = getelementptr inbounds i8, ptr %self, i64 16
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %2 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %_6)
  %3 = extractvalue { i64, i32 } %2, 0
  %4 = extractvalue { i64, i32 } %2, 1
  store i64 %3, ptr %_5, align 8
  %5 = getelementptr inbounds i8, ptr %_5, i64 8
  store i32 %4, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %_5, i64 8
  %7 = load i32, ptr %6, align 8
  %8 = icmp eq i32 %7, 1114112
  %_7 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb2, label %bb6

bb2:                                              ; preds = %start
  %i = load i64, ptr %_5, align 8
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  %c = load i32, ptr %10, align 8
  %self3 = getelementptr inbounds i8, ptr %self, i64 16
  %11 = getelementptr inbounds i8, ptr %self, i64 16
  %self4 = getelementptr inbounds i8, ptr %11, i64 8
  %end5 = load ptr, ptr %self4, align 8
  %12 = getelementptr inbounds i8, ptr %self, i64 16
  %subtracted6 = load ptr, ptr %12, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %len = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %end5, ptr %subtracted6)
  %char_len = sub i64 %pre_len, %len
  %_14 = getelementptr inbounds i8, ptr %self, i64 40
; call <F as core::str::pattern::MultiCharEq>::matches
  %_13 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hc8c20d8ede1f1de9E"(ptr align 1 %_14, i32 %c)
  br i1 %_13, label %bb4, label %bb5

bb6:                                              ; preds = %start
  store i64 2, ptr %_0, align 8
  br label %bb8

bb5:                                              ; preds = %bb2
  %_16 = add i64 %i, %char_len
  %13 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %i, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %_16, ptr %14, align 8
  store i64 1, ptr %_0, align 8
  br label %bb7

bb4:                                              ; preds = %bb2
  %_15 = add i64 %i, %char_len
  %15 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %i, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %_15, ptr %16, align 8
  store i64 0, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb5
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret void

bb11:                                             ; No predecessors!
  unreachable
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h7ae911c40d0b8e09E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca [16 x i8], align 8
  %s = getelementptr inbounds i8, ptr %self, i64 16
  %self1 = getelementptr inbounds i8, ptr %self, i64 16
  %0 = getelementptr inbounds i8, ptr %self, i64 16
  %self2 = getelementptr inbounds i8, ptr %0, i64 8
  %end = load ptr, ptr %self2, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 16
  %subtracted = load ptr, ptr %1, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %pre_len = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %end, ptr %subtracted)
  %_6 = getelementptr inbounds i8, ptr %self, i64 16
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %2 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %_6)
  %3 = extractvalue { i64, i32 } %2, 0
  %4 = extractvalue { i64, i32 } %2, 1
  store i64 %3, ptr %_5, align 8
  %5 = getelementptr inbounds i8, ptr %_5, i64 8
  store i32 %4, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %_5, i64 8
  %7 = load i32, ptr %6, align 8
  %8 = icmp eq i32 %7, 1114112
  %_7 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb2, label %bb6

bb2:                                              ; preds = %start
  %i = load i64, ptr %_5, align 8
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  %c = load i32, ptr %10, align 8
  %self3 = getelementptr inbounds i8, ptr %self, i64 16
  %11 = getelementptr inbounds i8, ptr %self, i64 16
  %self4 = getelementptr inbounds i8, ptr %11, i64 8
  %end5 = load ptr, ptr %self4, align 8
  %12 = getelementptr inbounds i8, ptr %self, i64 16
  %subtracted6 = load ptr, ptr %12, align 8
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %len = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h92e0798936accc83E"(ptr %end5, ptr %subtracted6)
  %char_len = sub i64 %pre_len, %len
  %_14 = getelementptr inbounds i8, ptr %self, i64 40
; call <F as core::str::pattern::MultiCharEq>::matches
  %_13 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h08e80c436a0dffc0E"(ptr align 1 %_14, i32 %c)
  br i1 %_13, label %bb4, label %bb5

bb6:                                              ; preds = %start
  store i64 2, ptr %_0, align 8
  br label %bb8

bb5:                                              ; preds = %bb2
  %_16 = add i64 %i, %char_len
  %13 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %i, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %_16, ptr %14, align 8
  store i64 1, ptr %_0, align 8
  br label %bb7

bb4:                                              ; preds = %bb2
  %_15 = add i64 %i, %char_len
  %15 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %i, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 %_15, ptr %16, align 8
  store i64 0, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb5
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret void

bb11:                                             ; No predecessors!
  unreachable
}

; proc_macro2::parse::Cursor::advance
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %self, i64 %bytes) unnamed_addr #1 {
start:
  %_5 = alloca [32 x i8], align 8
  %_6.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_6.1 = load i64, ptr %0, align 8
; call core::str::<impl str>::split_at
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$8split_at17h767ecf8aec9e77d3E"(ptr sret([32 x i8]) align 8 %_5, ptr align 1 %_6.0, i64 %_6.1, i64 %bytes)
  %_front.0 = load ptr, ptr %_5, align 8
  %1 = getelementptr inbounds i8, ptr %_5, i64 8
  %_front.1 = load i64, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %_5, i64 16
  %rest.0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 8
  %rest.1 = load i64, ptr %3, align 8
  %4 = insertvalue { ptr, i64 } poison, ptr %rest.0, 0
  %5 = insertvalue { ptr, i64 } %4, i64 %rest.1, 1
  ret { ptr, i64 } %5
}

; proc_macro2::parse::Cursor::starts_with
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_3.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_3.1 = load i64, ptr %0, align 8
; call core::str::<impl str>::starts_with
  %_0 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h33855fa118a0389aE"(ptr align 1 %_3.0, i64 %_3.1, ptr align 1 %s.0, i64 %s.1)
  ret i1 %_0
}

; proc_macro2::parse::Cursor::starts_with_char
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse6Cursor16starts_with_char17h7ad255747611f913E(ptr align 8 %self, i32 %ch) unnamed_addr #1 {
start:
  %_3.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_3.1 = load i64, ptr %0, align 8
; call core::str::<impl str>::starts_with
  %_0 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hf8dc8d170394ab8dE"(ptr align 1 %_3.0, i64 %_3.1, i32 %ch)
  ret i1 %_0
}

; proc_macro2::parse::Cursor::starts_with_fn
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse6Cursor14starts_with_fn17h78165bc9791295a3E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_3.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_3.1 = load i64, ptr %0, align 8
; call core::str::<impl str>::starts_with
  %_0 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h0f1093bad03826c1E"(ptr align 1 %_3.0, i64 %_3.1)
  ret i1 %_0
}

; proc_macro2::parse::Cursor::is_empty
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse6Cursor8is_empty17h349fcc798f7326fdE(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2.1 = load i64, ptr %0, align 8
; call core::str::<impl str>::is_empty
  %_0 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha8cf31eb77c19853E"(ptr align 1 %_2.0, i64 %_2.1)
  ret i1 %_0
}

; proc_macro2::parse::Cursor::len
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN11proc_macro25parse6Cursor3len17h1d567d65076334afE(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2.1 = load i64, ptr %0, align 8
; call core::str::<impl str>::len
  %_0 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 %_2.0, i64 %_2.1)
  ret i64 %_0
}

; proc_macro2::parse::Cursor::as_bytes
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse6Cursor8as_bytes17hda7db27592f87b16E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2.1 = load i64, ptr %0, align 8
  %1 = insertvalue { ptr, i64 } poison, ptr %_2.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_2.1, 1
  %_0.0 = extractvalue { ptr, i64 } %2, 0
  %_0.1 = extractvalue { ptr, i64 } %2, 1
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1
  ret { ptr, i64 } %4
}

; proc_macro2::parse::Cursor::bytes
; Function Attrs: nonlazybind uwtable
define internal { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2.1 = load i64, ptr %0, align 8
; call core::str::<impl str>::bytes
  %1 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h29092a163d71c0caE"(ptr align 1 %_2.0, i64 %_2.1)
  %_0.0 = extractvalue { ptr, ptr } %1, 0
  %_0.1 = extractvalue { ptr, ptr } %1, 1
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1
  ret { ptr, ptr } %3
}

; proc_macro2::parse::Cursor::chars
; Function Attrs: nonlazybind uwtable
define internal { ptr, ptr } @_ZN11proc_macro25parse6Cursor5chars17h2f7acab08357ce80E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2.1 = load i64, ptr %0, align 8
; call core::str::<impl str>::chars
  %1 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h47bd3aaa82775925E"(ptr align 1 %_2.0, i64 %_2.1)
  %_0.0 = extractvalue { ptr, ptr } %1, 0
  %_0.1 = extractvalue { ptr, ptr } %1, 1
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1
  ret { ptr, ptr } %3
}

; proc_macro2::parse::Cursor::char_indices
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse6Cursor12char_indices17h5bd9a084a58cb64fE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_2.0 = load ptr, ptr %self, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2.1 = load i64, ptr %0, align 8
; call core::str::<impl str>::char_indices
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h5373d93c13cf4f97E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %_2.0, i64 %_2.1)
  ret void
}

; proc_macro2::parse::Cursor::parse
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %self, ptr align 1 %tag.0, i64 %tag.1) unnamed_addr #1 {
start:
  %_0 = alloca [16 x i8], align 8
; call proc_macro2::parse::Cursor::starts_with
  %_3 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %self, ptr align 1 %tag.0, i64 %tag.1)
  br i1 %_3, label %bb2, label %bb5

bb5:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb6

bb2:                                              ; preds = %start
; call core::str::<impl str>::len
  %_5 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 %tag.0, i64 %tag.1)
; call proc_macro2::parse::Cursor::advance
  %0 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %self, i64 %_5)
  %_4.0 = extractvalue { ptr, i64 } %0, 0
  %_4.1 = extractvalue { ptr, i64 } %0, 1
  store ptr %_4.0, ptr %_0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_4.1, ptr %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5
  %2 = load ptr, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  %4 = load i64, ptr %3, align 8
  %5 = insertvalue { ptr, i64 } poison, ptr %2, 0
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1
  ret { ptr, i64 } %6
}

; proc_macro2::parse::skip_whitespace
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse15skip_whitespace17he54354b470198d7aE(ptr align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %self.i = alloca [4 x i8], align 4
  %_56 = alloca [16 x i8], align 8
  %_43 = alloca [32 x i8], align 8
  %_24 = alloca [32 x i8], align 8
  %byte = alloca [1 x i8], align 1
  %s = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %input.0, ptr %s, align 8
  %0 = getelementptr inbounds i8, ptr %s, i64 8
  store i64 %input.1, ptr %0, align 8
  br label %bb1

bb1:                                              ; preds = %bb38, %bb47, %bb19, %bb33, %bb15, %start
; call proc_macro2::parse::Cursor::is_empty
  %_3 = call zeroext i1 @_ZN11proc_macro25parse6Cursor8is_empty17h349fcc798f7326fdE(ptr align 8 %s)
  br i1 %_3, label %bb3, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::parse::Cursor::as_bytes
  %1 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor8as_bytes17hda7db27592f87b16E(ptr align 8 %s)
  %_6.0 = extractvalue { ptr, i64 } %1, 0
  %_6.1 = extractvalue { ptr, i64 } %1, 1
  %_10 = icmp ult i64 0, %_6.1
  br i1 %_10, label %bb6, label %panic

bb3:                                              ; preds = %bb1
  %2 = load ptr, ptr %s, align 8
  %3 = getelementptr inbounds i8, ptr %s, i64 8
  %4 = load i64, ptr %3, align 8
  store ptr %2, ptr %_0, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %4, ptr %5, align 8
  br label %bb51

bb6:                                              ; preds = %bb4
  %6 = getelementptr inbounds [0 x i8], ptr %_6.0, i64 0, i64 0
  %7 = load i8, ptr %6, align 1
  store i8 %7, ptr %byte, align 1
  %8 = load i8, ptr %byte, align 1
  %9 = icmp eq i8 %8, 47
  br i1 %9, label %bb7, label %bb34

panic:                                            ; preds = %bb4
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 0, i64 %_6.1, ptr align 8 @alloc_38786e819d09807ef6f22610c89f910b) #24
  unreachable

bb7:                                              ; preds = %bb6
; call proc_macro2::parse::Cursor::starts_with
  %_11 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %s, ptr align 1 @alloc_d5f0f24268d469e3dc9e2ef7f6510983, i64 2)
  br i1 %_11, label %bb9, label %bb17

bb34:                                             ; preds = %bb27, %bb25, %bb21, %bb6
  %10 = load i8, ptr %byte, align 1
  %11 = icmp eq i8 %10, 32
  br i1 %11, label %bb38, label %bb36

bb17:                                             ; preds = %bb13, %bb11, %bb7
; call proc_macro2::parse::Cursor::starts_with
  %_26 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %s, ptr align 1 @alloc_59a513d8c7a03aa22faf89201dcc46f3, i64 4)
  br i1 %_26, label %bb19, label %bb21

bb9:                                              ; preds = %bb7
; call proc_macro2::parse::Cursor::starts_with
  %_14 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %s, ptr align 1 @alloc_a3cbf1622e18ce8557a1059d1d50984b, i64 3)
  br i1 %_14, label %bb11, label %bb13

bb13:                                             ; preds = %bb11, %bb9
; call proc_macro2::parse::Cursor::starts_with
  %_20 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %s, ptr align 1 @alloc_3dba12bdfc02f300bac5107fa50559e2, i64 3)
  br i1 %_20, label %bb17, label %bb15

bb11:                                             ; preds = %bb9
; call proc_macro2::parse::Cursor::starts_with
  %_17 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %s, ptr align 1 @alloc_aa5d53d33a460a6f3784f1b7fa109f88, i64 4)
  br i1 %_17, label %bb13, label %bb17

bb15:                                             ; preds = %bb13
  %_25.0 = load ptr, ptr %s, align 8
  %12 = getelementptr inbounds i8, ptr %s, i64 8
  %_25.1 = load i64, ptr %12, align 8
; call proc_macro2::parse::take_until_newline_or_eof
  call void @_ZN11proc_macro25parse25take_until_newline_or_eof17h76c0d4754b5a4920E(ptr sret([32 x i8]) align 8 %_24, ptr align 1 %_25.0, i64 %_25.1)
  %cursor.0 = load ptr, ptr %_24, align 8
  %13 = getelementptr inbounds i8, ptr %_24, i64 8
  %cursor.1 = load i64, ptr %13, align 8
  store ptr %cursor.0, ptr %s, align 8
  %14 = getelementptr inbounds i8, ptr %s, i64 8
  store i64 %cursor.1, ptr %14, align 8
  br label %bb1

bb21:                                             ; preds = %bb17
; call proc_macro2::parse::Cursor::starts_with
  %_31 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %s, ptr align 1 @alloc_306b17c50e3f209e7082c0dad9084435, i64 2)
  br i1 %_31, label %bb23, label %bb34

bb19:                                             ; preds = %bb17
; call proc_macro2::parse::Cursor::advance
  %15 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %s, i64 4)
  %_29.0 = extractvalue { ptr, i64 } %15, 0
  %_29.1 = extractvalue { ptr, i64 } %15, 1
  store ptr %_29.0, ptr %s, align 8
  %16 = getelementptr inbounds i8, ptr %s, i64 8
  store i64 %_29.1, ptr %16, align 8
  br label %bb1

bb23:                                             ; preds = %bb21
; call proc_macro2::parse::Cursor::starts_with
  %_34 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %s, ptr align 1 @alloc_c63f42f072c0f65a5c00be2f1e9c3fa6, i64 3)
  br i1 %_34, label %bb25, label %bb27

bb27:                                             ; preds = %bb25, %bb23
; call proc_macro2::parse::Cursor::starts_with
  %_40 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %s, ptr align 1 @alloc_022cee65c935a399b1901330ff471e91, i64 3)
  br i1 %_40, label %bb34, label %bb29

bb25:                                             ; preds = %bb23
; call proc_macro2::parse::Cursor::starts_with
  %_37 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %s, ptr align 1 @alloc_b361d2f6d45158fecc3ea02eedd442f7, i64 4)
  br i1 %_37, label %bb27, label %bb34

bb29:                                             ; preds = %bb27
  %_44.0 = load ptr, ptr %s, align 8
  %17 = getelementptr inbounds i8, ptr %s, i64 8
  %_44.1 = load i64, ptr %17, align 8
; call proc_macro2::parse::block_comment
  call void @_ZN11proc_macro25parse13block_comment17hb113b8d1c429d07bE(ptr sret([32 x i8]) align 8 %_43, ptr align 1 %_44.0, i64 %_44.1)
  %18 = load ptr, ptr %_43, align 8
  %19 = ptrtoint ptr %18 to i64
  %20 = icmp eq i64 %19, 0
  %_45 = select i1 %20, i64 1, i64 0
  %21 = icmp eq i64 %_45, 0
  br i1 %21, label %bb33, label %bb32

bb33:                                             ; preds = %bb29
  %rest.0 = load ptr, ptr %_43, align 8
  %22 = getelementptr inbounds i8, ptr %_43, i64 8
  %rest.1 = load i64, ptr %22, align 8
  store ptr %rest.0, ptr %s, align 8
  %23 = getelementptr inbounds i8, ptr %s, i64 8
  store i64 %rest.1, ptr %23, align 8
  br label %bb1

bb32:                                             ; preds = %bb29
  %24 = load ptr, ptr %s, align 8
  %25 = getelementptr inbounds i8, ptr %s, i64 8
  %26 = load i64, ptr %25, align 8
  store ptr %24, ptr %_0, align 8
  %27 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %26, ptr %27, align 8
  br label %bb51

bb51:                                             ; preds = %bb3, %bb50, %bb32
  %28 = load ptr, ptr %_0, align 8
  %29 = getelementptr inbounds i8, ptr %_0, i64 8
  %30 = load i64, ptr %29, align 8
  %31 = insertvalue { ptr, i64 } poison, ptr %28, 0
  %32 = insertvalue { ptr, i64 } %31, i64 %30, 1
  ret { ptr, i64 } %32

bb31:                                             ; No predecessors!
  unreachable

bb38:                                             ; preds = %bb37, %bb34
; call proc_macro2::parse::Cursor::advance
  %33 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %s, i64 1)
  %_49.0 = extractvalue { ptr, i64 } %33, 0
  %_49.1 = extractvalue { ptr, i64 } %33, 1
  store ptr %_49.0, ptr %s, align 8
  %34 = getelementptr inbounds i8, ptr %s, i64 8
  store i64 %_49.1, ptr %34, align 8
  br label %bb1

bb36:                                             ; preds = %bb34
  %35 = load i8, ptr %byte, align 1
  %_47 = icmp ule i8 9, %35
  br i1 %_47, label %bb37, label %bb35

bb35:                                             ; preds = %bb37, %bb36
; call core::num::<impl u8>::is_ascii
  %_52 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$8is_ascii17h29c107146d85e639E"(ptr align 1 %byte)
  br i1 %_52, label %bb41, label %bb42

bb37:                                             ; preds = %bb36
  %36 = load i8, ptr %byte, align 1
  %_48 = icmp ule i8 %36, 13
  br i1 %_48, label %bb38, label %bb35

bb42:                                             ; preds = %bb35
; call proc_macro2::parse::Cursor::chars
  %37 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5chars17h2f7acab08357ce80E(ptr align 8 %s)
  %38 = extractvalue { ptr, ptr } %37, 0
  %39 = extractvalue { ptr, ptr } %37, 1
  store ptr %38, ptr %_56, align 8
  %40 = getelementptr inbounds i8, ptr %_56, i64 8
  store ptr %39, ptr %40, align 8
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_54 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %_56)
  store i32 %_54, ptr %self.i, align 4
  %41 = load i32, ptr %self.i, align 4
  %42 = icmp eq i32 %41, 1114112
  %_2.i = select i1 %42, i64 0, i64 1
  br i1 %42, label %bb2.i, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17hd634f59a8bedbb27E.exit"

bb2.i:                                            ; preds = %bb42
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h7a3768beeda72485E(ptr align 8 @alloc_65dcc200471b709cd1931584d11c9cd2) #24
  unreachable

"_ZN4core6option15Option$LT$T$GT$6unwrap17hd634f59a8bedbb27E.exit": ; preds = %bb42
  %val.i = load i32, ptr %self.i, align 4
; call proc_macro2::parse::is_whitespace
  %_58 = call zeroext i1 @_ZN11proc_macro25parse13is_whitespace17h61a3d4fd81df6e44E(i32 %val.i)
  br i1 %_58, label %bb47, label %bb50

bb41:                                             ; preds = %bb35
  br label %bb50

bb50:                                             ; preds = %bb41, %"_ZN4core6option15Option$LT$T$GT$6unwrap17hd634f59a8bedbb27E.exit"
  %43 = load ptr, ptr %s, align 8
  %44 = getelementptr inbounds i8, ptr %s, i64 8
  %45 = load i64, ptr %44, align 8
  store ptr %43, ptr %_0, align 8
  %46 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %45, ptr %46, align 8
  br label %bb51

bb47:                                             ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17hd634f59a8bedbb27E.exit"
; call core::char::methods::<impl char>::len_utf8
  %_61 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hbf950d9badac8aeeE"(i32 %val.i)
; call proc_macro2::parse::Cursor::advance
  %47 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %s, i64 %_61)
  %_59.0 = extractvalue { ptr, i64 } %47, 0
  %_59.1 = extractvalue { ptr, i64 } %47, 1
  store ptr %_59.0, ptr %s, align 8
  %48 = getelementptr inbounds i8, ptr %s, i64 8
  store i64 %_59.1, ptr %48, align 8
  br label %bb1
}

; proc_macro2::parse::block_comment
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse13block_comment17hb113b8d1c429d07bE(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_32 = alloca [32 x i8], align 8
  %i = alloca [8 x i8], align 8
  %depth = alloca [8 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_2 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_306b17c50e3f209e7082c0dad9084435, i64 2)
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb22

bb2:                                              ; preds = %start
  store i64 0, ptr %depth, align 8
; call proc_macro2::parse::Cursor::as_bytes
  %3 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor8as_bytes17hda7db27592f87b16E(ptr align 8 %input)
  %bytes.0 = extractvalue { ptr, i64 } %3, 0
  %bytes.1 = extractvalue { ptr, i64 } %3, 1
  store i64 0, ptr %i, align 8
  %upper = sub i64 %bytes.1, 1
  br label %bb5

bb22:                                             ; preds = %bb16, %bb21, %bb3
  ret void

bb5:                                              ; preds = %bb20, %bb2
  %_12 = load i64, ptr %i, align 8
  %_11 = icmp ult i64 %_12, %upper
  br i1 %_11, label %bb6, label %bb21

bb21:                                             ; preds = %bb5
  store ptr null, ptr %_0, align 8
  br label %bb22

bb6:                                              ; preds = %bb5
  %_14 = load i64, ptr %i, align 8
  %_16 = icmp ult i64 %_14, %bytes.1
  br i1 %_16, label %bb7, label %panic

bb7:                                              ; preds = %bb6
  %4 = getelementptr inbounds [0 x i8], ptr %bytes.0, i64 0, i64 %_14
  %_13 = load i8, ptr %4, align 1
  %5 = icmp eq i8 %_13, 47
  br i1 %5, label %bb8, label %bb11

panic:                                            ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_14, i64 %bytes.1, ptr align 8 @alloc_0a21ca4c7cbd5c0b714c64959e7a9078) #24
  unreachable

bb8:                                              ; preds = %bb7
  %_19 = load i64, ptr %i, align 8
  %_18 = add i64 %_19, 1
  %_21 = icmp ult i64 %_18, %bytes.1
  br i1 %_21, label %bb9, label %panic1

bb11:                                             ; preds = %bb9, %bb7
  %_23 = load i64, ptr %i, align 8
  %_25 = icmp ult i64 %_23, %bytes.1
  br i1 %_25, label %bb12, label %panic2

bb9:                                              ; preds = %bb8
  %6 = getelementptr inbounds [0 x i8], ptr %bytes.0, i64 0, i64 %_18
  %_17 = load i8, ptr %6, align 1
  %7 = icmp eq i8 %_17, 42
  br i1 %7, label %bb10, label %bb11

panic1:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_18, i64 %bytes.1, ptr align 8 @alloc_4766321be587d77fde4b2683a5d4a559) #24
  unreachable

bb10:                                             ; preds = %bb9
  %8 = load i64, ptr %depth, align 8
  %9 = add i64 %8, 1
  store i64 %9, ptr %depth, align 8
  %10 = load i64, ptr %i, align 8
  %11 = add i64 %10, 1
  store i64 %11, ptr %i, align 8
  br label %bb20

bb20:                                             ; preds = %bb19, %bb14, %bb12, %bb10
  %12 = load i64, ptr %i, align 8
  %13 = add i64 %12, 1
  store i64 %13, ptr %i, align 8
  br label %bb5

bb12:                                             ; preds = %bb11
  %14 = getelementptr inbounds [0 x i8], ptr %bytes.0, i64 0, i64 %_23
  %_22 = load i8, ptr %14, align 1
  %15 = icmp eq i8 %_22, 42
  br i1 %15, label %bb13, label %bb20

panic2:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_23, i64 %bytes.1, ptr align 8 @alloc_e9db3e09497f720e21128cb574315b1f) #24
  unreachable

bb13:                                             ; preds = %bb12
  %_28 = load i64, ptr %i, align 8
  %_27 = add i64 %_28, 1
  %_30 = icmp ult i64 %_27, %bytes.1
  br i1 %_30, label %bb14, label %panic3

bb14:                                             ; preds = %bb13
  %16 = getelementptr inbounds [0 x i8], ptr %bytes.0, i64 0, i64 %_27
  %_26 = load i8, ptr %16, align 1
  %17 = icmp eq i8 %_26, 47
  br i1 %17, label %bb15, label %bb20

panic3:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64 %_27, i64 %bytes.1, ptr align 8 @alloc_22633586b8bb72b663774f7f5909f4c9) #24
  unreachable

bb15:                                             ; preds = %bb14
  %18 = load i64, ptr %depth, align 8
  %19 = sub i64 %18, 1
  store i64 %19, ptr %depth, align 8
  %_31 = load i64, ptr %depth, align 8
  %20 = icmp eq i64 %_31, 0
  br i1 %20, label %bb16, label %bb19

bb16:                                             ; preds = %bb15
  %_36 = load i64, ptr %i, align 8
  %_35 = add i64 %_36, 2
; call proc_macro2::parse::Cursor::advance
  %21 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_35)
  %_33.0 = extractvalue { ptr, i64 } %21, 0
  %_33.1 = extractvalue { ptr, i64 } %21, 1
  %_41.0 = load ptr, ptr %input, align 8
  %22 = getelementptr inbounds i8, ptr %input, i64 8
  %_41.1 = load i64, ptr %22, align 8
  %_40 = load i64, ptr %i, align 8
  %_39 = add i64 %_40, 2
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %23 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h197e8d84eedb0ca8E"(ptr align 1 %_41.0, i64 %_41.1, i64 %_39, ptr align 8 @alloc_b0acb92159d58c76d83a5f25f23f8d50)
  %_37.0 = extractvalue { ptr, i64 } %23, 0
  %_37.1 = extractvalue { ptr, i64 } %23, 1
  store ptr %_33.0, ptr %_32, align 8
  %24 = getelementptr inbounds i8, ptr %_32, i64 8
  store i64 %_33.1, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %_32, i64 16
  store ptr %_37.0, ptr %25, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store i64 %_37.1, ptr %26, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_32, i64 32, i1 false)
  br label %bb22

bb19:                                             ; preds = %bb15
  %27 = load i64, ptr %i, align 8
  %28 = add i64 %27, 1
  store i64 %28, ptr %i, align 8
  br label %bb20
}

; proc_macro2::parse::is_whitespace
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse13is_whitespace17h61a3d4fd81df6e44E(i32 %ch) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
; call core::char::methods::<impl char>::is_whitespace
  %_2 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17hd93299c048642694E"(i32 %ch)
  br i1 %_2, label %bb3, label %bb2

bb2:                                              ; preds = %start
  %0 = icmp eq i32 %ch, 8206
  br i1 %0, label %bb3, label %bb4

bb3:                                              ; preds = %bb2, %start
  store i8 1, ptr %_0, align 1
  br label %bb5

bb4:                                              ; preds = %bb2
  %1 = icmp eq i32 %ch, 8207
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; proc_macro2::parse::word_break
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse10word_break17h3347bfcc4639d94bE(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_4 = alloca [16 x i8], align 8
  %_2 = alloca [4 x i8], align 4
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::chars
  %3 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5chars17h2f7acab08357ce80E(ptr align 8 %input)
  %4 = extractvalue { ptr, ptr } %3, 0
  %5 = extractvalue { ptr, ptr } %3, 1
  store ptr %4, ptr %_4, align 8
  %6 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %5, ptr %6, align 8
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %7 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %_4)
  store i32 %7, ptr %_2, align 4
  %8 = load i32, ptr %_2, align 4
  %9 = icmp eq i32 %8, 1114112
  %_6 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_6, 0
  br i1 %10, label %bb4, label %bb5

bb4:                                              ; preds = %bb5, %start
  %11 = load ptr, ptr %input, align 8
  %12 = getelementptr inbounds i8, ptr %input, i64 8
  %13 = load i64, ptr %12, align 8
  store ptr %11, ptr %_0, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %13, ptr %14, align 8
  br label %bb8

bb5:                                              ; preds = %start
  %_10 = load i32, ptr %_2, align 4
; call proc_macro2::fallback::is_ident_continue
  %_9 = call zeroext i1 @_ZN11proc_macro28fallback17is_ident_continue17hdba648bec9552964E(i32 %_10)
  br i1 %_9, label %bb7, label %bb4

bb7:                                              ; preds = %bb5
  %ch = load i32, ptr %_2, align 4
  store ptr null, ptr %_0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb4
  %15 = load ptr, ptr %_0, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  %17 = load i64, ptr %16, align 8
  %18 = insertvalue { ptr, i64 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i64 } %18, i64 %17, 1
  ret { ptr, i64 } %19

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::token_stream
; Function Attrs: nonlazybind uwtable
define internal ptr @_ZN11proc_macro25parse12token_stream17h14fcf20fb5265a18E(ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca [16 x i8], align 8
  %_93 = alloca [1 x i8], align 1
  %_92 = alloca [1 x i8], align 1
  %_91 = alloca [1 x i8], align 1
  %_90 = alloca [1 x i8], align 1
  %_89 = alloca [1 x i8], align 1
  %_88 = alloca [32 x i8], align 8
  %tt3 = alloca [32 x i8], align 8
  %_76 = alloca [48 x i8], align 8
  %_75 = alloca [48 x i8], align 8
  %tt = alloca [32 x i8], align 8
  %_71 = alloca [24 x i8], align 8
  %_70 = alloca [32 x i8], align 8
  %_67 = alloca [24 x i8], align 8
  %_64 = alloca [24 x i8], align 8
  %g = alloca [16 x i8], align 8
  %outer = alloca [24 x i8], align 8
  %open_delimiter = alloca [1 x i8], align 1
  %frame2 = alloca [32 x i8], align 8
  %_47 = alloca [32 x i8], align 8
  %frame1 = alloca [32 x i8], align 8
  %close_delimiter = alloca [1 x i8], align 1
  %_43 = alloca [1 x i8], align 1
  %_42 = alloca [1 x i8], align 1
  %_41 = alloca [1 x i8], align 1
  %_40 = alloca [1 x i8], align 1
  %_39 = alloca [24 x i8], align 8
  %_36 = alloca [24 x i8], align 8
  %frame = alloca [32 x i8], align 8
  %_30 = alloca [1 x i8], align 1
  %_29 = alloca [1 x i8], align 1
  %_28 = alloca [1 x i8], align 1
  %_24 = alloca [1 x i8], align 1
  %_22 = alloca [24 x i8], align 8
  %_17 = alloca [8 x i8], align 8
  %_13 = alloca [16 x i8], align 8
  %_11 = alloca [2 x i8], align 1
  %_6 = alloca [16 x i8], align 8
  %stack = alloca [24 x i8], align 8
  %trees = alloca [24 x i8], align 8
  %_0 = alloca [8 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %3 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %3, align 8
  store i8 0, ptr %_89, align 1
  store i8 0, ptr %_92, align 1
  store i8 0, ptr %_91, align 1
  store i8 0, ptr %_90, align 1
  store i8 0, ptr %_93, align 1
  store i8 1, ptr %_89, align 1
; call proc_macro2::fallback::TokenStreamBuilder::new
  call void @_ZN11proc_macro28fallback18TokenStreamBuilder3new17h320fbc9211e74ac6E(ptr sret([24 x i8]) align 8 %trees)
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17ha21ae56465ceff6aE"(ptr sret([24 x i8]) align 8 %stack)
          to label %bb75 unwind label %cleanup

bb74:                                             ; preds = %bb62, %cleanup
  %4 = load i8, ptr %_89, align 1
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb73, label %bb63

cleanup:                                          ; preds = %bb59, %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %2, align 8
  %9 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb74

bb75:                                             ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb56, %bb48, %bb27, %bb5, %bb75
  %_5.0 = load ptr, ptr %input, align 8
  %10 = getelementptr inbounds i8, ptr %input, i64 8
  %_5.1 = load i64, ptr %10, align 8
; invoke proc_macro2::parse::skip_whitespace
  %11 = invoke { ptr, i64 } @_ZN11proc_macro25parse15skip_whitespace17he54354b470198d7aE(ptr align 1 %_5.0, i64 %_5.1)
          to label %bb3 unwind label %cleanup4

bb62:                                             ; preds = %bb65, %bb66, %bb71, %bb72, %cleanup4
; invoke core::ptr::drop_in_place<alloc::vec::Vec<(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)>>
  invoke void @"_ZN4core3ptr118drop_in_place$LT$alloc..vec..Vec$LT$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$GT$$GT$17ha4063a01c9ecff89E"(ptr align 8 %stack) #25
          to label %bb74 unwind label %terminate

cleanup4:                                         ; preds = %bb51, %bb49, %bb36, %bb34, %bb26, %bb25, %bb24, %bb18, %bb15, %bb12, %bb10, %bb7, %bb6, %bb3, %bb2
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %2, align 8
  %15 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb62

bb3:                                              ; preds = %bb2
  %_4.0 = extractvalue { ptr, i64 } %11, 0
  %_4.1 = extractvalue { ptr, i64 } %11, 1
  store ptr %_4.0, ptr %input, align 8
  %16 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %_4.1, ptr %16, align 8
  %_7.0 = load ptr, ptr %input, align 8
  %17 = getelementptr inbounds i8, ptr %input, i64 8
  %_7.1 = load i64, ptr %17, align 8
; invoke proc_macro2::parse::doc_comment
  %18 = invoke { ptr, i64 } @_ZN11proc_macro25parse11doc_comment17h46e673dc9ec7bd8cE(ptr align 1 %_7.0, i64 %_7.1, ptr align 8 %trees)
          to label %bb4 unwind label %cleanup4

bb4:                                              ; preds = %bb3
  %19 = extractvalue { ptr, i64 } %18, 0
  %20 = extractvalue { ptr, i64 } %18, 1
  store ptr %19, ptr %_6, align 8
  %21 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %20, ptr %21, align 8
  %22 = load ptr, ptr %_6, align 8
  %23 = ptrtoint ptr %22 to i64
  %24 = icmp eq i64 %23, 0
  %_9 = select i1 %24, i64 1, i64 0
  %25 = icmp eq i64 %_9, 0
  br i1 %25, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %rest.0 = load ptr, ptr %_6, align 8
  %26 = getelementptr inbounds i8, ptr %_6, i64 8
  %rest.1 = load i64, ptr %26, align 8
  store ptr %rest.0, ptr %input, align 8
  %27 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %rest.1, ptr %27, align 8
  br label %bb2

bb6:                                              ; preds = %bb4
; invoke proc_macro2::parse::Cursor::bytes
  %28 = invoke { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %input)
          to label %bb7 unwind label %cleanup4

bb7:                                              ; preds = %bb6
  %29 = extractvalue { ptr, ptr } %28, 0
  %30 = extractvalue { ptr, ptr } %28, 1
  store ptr %29, ptr %_13, align 8
  %31 = getelementptr inbounds i8, ptr %_13, i64 8
  store ptr %30, ptr %31, align 8
; invoke <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
  %32 = invoke { i1, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h960866a992cd8c3eE"(ptr align 8 %_13)
          to label %bb8 unwind label %cleanup4

bb8:                                              ; preds = %bb7
  %33 = extractvalue { i1, i8 } %32, 0
  %34 = extractvalue { i1, i8 } %32, 1
  %35 = zext i1 %33 to i8
  store i8 %35, ptr %_11, align 1
  %36 = getelementptr inbounds i8, ptr %_11, i64 1
  store i8 %34, ptr %36, align 1
  %37 = load i8, ptr %_11, align 1
  %38 = trunc i8 %37 to i1
  %_15 = zext i1 %38 to i64
  %39 = icmp eq i64 %_15, 0
  br i1 %39, label %bb10, label %bb11

bb10:                                             ; preds = %bb8
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %40 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h40475ae280827267E"(ptr align 8 %stack)
          to label %bb12 unwind label %cleanup4

bb11:                                             ; preds = %bb8
  %41 = getelementptr inbounds i8, ptr %_11, i64 1
  %first = load i8, ptr %41, align 1
  switch i8 %first, label %bb17 [
    i8 40, label %bb18
    i8 91, label %bb21
    i8 123, label %bb22
  ]

bb12:                                             ; preds = %bb10
  %_18.0 = extractvalue { ptr, i64 } %40, 0
  %_18.1 = extractvalue { ptr, i64 } %40, 1
; invoke core::slice::<impl [T]>::last
  %42 = invoke align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17hd5497a1304935795E"(ptr align 8 %_18.0, i64 %_18.1)
          to label %bb13 unwind label %cleanup4

bb13:                                             ; preds = %bb12
  store ptr %42, ptr %_17, align 8
  %43 = load ptr, ptr %_17, align 8
  %44 = ptrtoint ptr %43 to i64
  %45 = icmp eq i64 %44, 0
  %_20 = select i1 %45, i64 0, i64 1
  %46 = icmp eq i64 %_20, 0
  br i1 %46, label %bb15, label %bb14

bb15:                                             ; preds = %bb13
  store i8 0, ptr %_89, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_22, ptr align 8 %trees, i64 24, i1 false)
; invoke proc_macro2::fallback::TokenStreamBuilder::build
  %_21 = invoke ptr @_ZN11proc_macro28fallback18TokenStreamBuilder5build17hadc455c12e1e201fE(ptr align 8 %_22)
          to label %bb16 unwind label %cleanup4

bb14:                                             ; preds = %bb13
  %_frame = load ptr, ptr %_17, align 8
  store ptr null, ptr %_0, align 8
  br label %bb59

bb16:                                             ; preds = %bb15
  store ptr %_21, ptr %_0, align 8
  br label %bb59

bb59:                                             ; preds = %bb53, %bb58, %bb14, %bb16
; invoke core::ptr::drop_in_place<alloc::vec::Vec<(proc_macro2::Delimiter,proc_macro2::fallback::TokenStreamBuilder)>>
  invoke void @"_ZN4core3ptr118drop_in_place$LT$alloc..vec..Vec$LT$$LP$proc_macro2..Delimiter$C$proc_macro2..fallback..TokenStreamBuilder$RP$$GT$$GT$17ha4063a01c9ecff89E"(ptr align 8 %stack)
          to label %bb60 unwind label %cleanup

bb17:                                             ; preds = %bb19, %bb11
  store i8 4, ptr %_24, align 1
  br label %bb23

bb18:                                             ; preds = %bb11
; invoke proc_macro2::parse::Cursor::starts_with
  %_25 = invoke zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_8a5755c7923bb7fc54a716e61bfc895f, i64 11)
          to label %bb19 unwind label %cleanup4

bb21:                                             ; preds = %bb11
  store i8 2, ptr %_29, align 1
  %47 = load i8, ptr %_29, align 1
  store i8 %47, ptr %_24, align 1
  br label %bb23

bb22:                                             ; preds = %bb11
  store i8 1, ptr %_30, align 1
  %48 = load i8, ptr %_30, align 1
  store i8 %48, ptr %_24, align 1
  br label %bb23

bb19:                                             ; preds = %bb18
  br i1 %_25, label %bb17, label %bb20

bb20:                                             ; preds = %bb19
  store i8 0, ptr %_28, align 1
  %49 = load i8, ptr %_28, align 1
  store i8 %49, ptr %_24, align 1
  br label %bb23

bb23:                                             ; preds = %bb17, %bb22, %bb21, %bb20
  %50 = load i8, ptr %_24, align 1
  %51 = icmp eq i8 %50, 4
  %_31 = select i1 %51, i64 0, i64 1
  %52 = icmp eq i64 %_31, 1
  br i1 %52, label %bb24, label %bb28

bb24:                                             ; preds = %bb23
  %open_delimiter5 = load i8, ptr %_24, align 1
; invoke proc_macro2::parse::Cursor::advance
  %53 = invoke { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 1)
          to label %bb25 unwind label %cleanup4

bb28:                                             ; preds = %bb23
  switch i8 %first, label %bb29 [
    i8 41, label %bb30
    i8 93, label %bb31
    i8 125, label %bb32
  ]

bb25:                                             ; preds = %bb24
  %_33.0 = extractvalue { ptr, i64 } %53, 0
  %_33.1 = extractvalue { ptr, i64 } %53, 1
  store ptr %_33.0, ptr %input, align 8
  %54 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %_33.1, ptr %54, align 8
  store i8 0, ptr %_89, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_36, ptr align 8 %trees, i64 24, i1 false)
  store i8 %open_delimiter5, ptr %frame, align 8
  %55 = getelementptr inbounds i8, ptr %frame, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %55, ptr align 8 %_36, i64 24, i1 false)
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf78caf75a0e06745E"(ptr align 8 %stack, ptr align 8 %frame)
          to label %bb26 unwind label %cleanup4

bb26:                                             ; preds = %bb25
; invoke proc_macro2::fallback::TokenStreamBuilder::new
  invoke void @_ZN11proc_macro28fallback18TokenStreamBuilder3new17h320fbc9211e74ac6E(ptr sret([24 x i8]) align 8 %_39)
          to label %bb27 unwind label %cleanup4

bb27:                                             ; preds = %bb26
  store i8 1, ptr %_89, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %trees, ptr align 8 %_39, i64 24, i1 false)
  br label %bb2

bb29:                                             ; preds = %bb28
  store i8 4, ptr %_40, align 1
  br label %bb33

bb30:                                             ; preds = %bb28
  store i8 0, ptr %_41, align 1
  %56 = load i8, ptr %_41, align 1
  store i8 %56, ptr %_40, align 1
  br label %bb33

bb31:                                             ; preds = %bb28
  store i8 2, ptr %_42, align 1
  %57 = load i8, ptr %_42, align 1
  store i8 %57, ptr %_40, align 1
  br label %bb33

bb32:                                             ; preds = %bb28
  store i8 1, ptr %_43, align 1
  %58 = load i8, ptr %_43, align 1
  store i8 %58, ptr %_40, align 1
  br label %bb33

bb33:                                             ; preds = %bb29, %bb32, %bb31, %bb30
  %59 = load i8, ptr %_40, align 1
  %60 = icmp eq i8 %59, 4
  %_44 = select i1 %60, i64 0, i64 1
  %61 = icmp eq i64 %_44, 1
  br i1 %61, label %bb34, label %bb49

bb34:                                             ; preds = %bb33
  %62 = load i8, ptr %_40, align 1
  store i8 %62, ptr %close_delimiter, align 1
; invoke alloc::vec::Vec<T,A>::pop
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17hfeaeda443483fac2E"(ptr sret([32 x i8]) align 8 %_47, ptr align 8 %stack)
          to label %bb35 unwind label %cleanup4

bb49:                                             ; preds = %bb33
  %_77.0 = load ptr, ptr %input, align 8
  %63 = getelementptr inbounds i8, ptr %input, i64 8
  %_77.1 = load i64, ptr %63, align 8
; invoke proc_macro2::parse::leaf_token
  invoke void @_ZN11proc_macro25parse10leaf_token17hc9b1e39515180775E(ptr sret([48 x i8]) align 8 %_76, ptr align 1 %_77.0, i64 %_77.1)
          to label %bb50 unwind label %cleanup4

bb35:                                             ; preds = %bb34
  %64 = getelementptr inbounds i8, ptr %_47, i64 8
  %65 = load i64, ptr %64, align 8
  %66 = icmp eq i64 %65, -9223372036854775808
  %_49 = select i1 %66, i64 0, i64 1
  %67 = icmp eq i64 %_49, 0
  br i1 %67, label %bb36, label %bb37

bb36:                                             ; preds = %bb35
  %_52.0 = load ptr, ptr %input, align 8
  %68 = getelementptr inbounds i8, ptr %input, i64 8
  %_52.1 = load i64, ptr %68, align 8
; invoke proc_macro2::parse::lex_error
  invoke void @_ZN11proc_macro25parse9lex_error17h81ff39ff80685cb6E(ptr align 1 %_52.0, i64 %_52.1)
          to label %bb38 unwind label %cleanup4

bb37:                                             ; preds = %bb35
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %frame2, ptr align 8 %_47, i64 32, i1 false)
  store i8 1, ptr %_93, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %frame1, ptr align 8 %frame2, i64 32, i1 false)
  %69 = load i8, ptr %frame1, align 8
  store i8 %69, ptr %open_delimiter, align 1
  store i8 0, ptr %_93, align 1
  store i8 1, ptr %_92, align 1
  %70 = getelementptr inbounds i8, ptr %frame1, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %outer, ptr align 8 %70, i64 24, i1 false)
; invoke core::cmp::PartialEq::ne
  %_55 = invoke zeroext i1 @_ZN4core3cmp9PartialEq2ne17h30bff06b33a0a6d9E(ptr align 1 %open_delimiter, ptr align 1 %close_delimiter)
          to label %bb39 unwind label %cleanup6

bb38:                                             ; preds = %bb36
  store ptr null, ptr %_0, align 8
  br label %bb58

bb58:                                             ; preds = %bb57, %bb38
  store i8 0, ptr %_93, align 1
  br label %bb59

bb70:                                             ; preds = %bb67, %bb68, %cleanup6
  %71 = load i8, ptr %_92, align 1
  %72 = trunc i8 %71 to i1
  br i1 %72, label %bb69, label %bb72

cleanup6:                                         ; preds = %bb40, %bb44, %bb43, %bb42, %bb37
  %73 = landingpad { ptr, i32 }
          cleanup
  %74 = extractvalue { ptr, i32 } %73, 0
  %75 = extractvalue { ptr, i32 } %73, 1
  store ptr %74, ptr %2, align 8
  %76 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %75, ptr %76, align 8
  br label %bb70

bb39:                                             ; preds = %bb37
  br i1 %_55, label %bb40, label %bb42

bb42:                                             ; preds = %bb39
; invoke proc_macro2::parse::Cursor::advance
  %77 = invoke { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 1)
          to label %bb43 unwind label %cleanup6

bb40:                                             ; preds = %bb39
  %_59.0 = load ptr, ptr %input, align 8
  %78 = getelementptr inbounds i8, ptr %input, i64 8
  %_59.1 = load i64, ptr %78, align 8
; invoke proc_macro2::parse::lex_error
  invoke void @_ZN11proc_macro25parse9lex_error17h81ff39ff80685cb6E(ptr align 1 %_59.0, i64 %_59.1)
          to label %bb41 unwind label %cleanup6

bb43:                                             ; preds = %bb42
  %_60.0 = extractvalue { ptr, i64 } %77, 0
  %_60.1 = extractvalue { ptr, i64 } %77, 1
  store ptr %_60.0, ptr %input, align 8
  %79 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %_60.1, ptr %79, align 8
  store i8 0, ptr %_89, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_64, ptr align 8 %trees, i64 24, i1 false)
; invoke proc_macro2::fallback::TokenStreamBuilder::build
  %_63 = invoke ptr @_ZN11proc_macro28fallback18TokenStreamBuilder5build17hadc455c12e1e201fE(ptr align 8 %_64)
          to label %bb44 unwind label %cleanup6

bb44:                                             ; preds = %bb43
  %80 = load i8, ptr %open_delimiter, align 1
; invoke proc_macro2::fallback::Group::new
  %81 = invoke { ptr, i8 } @_ZN11proc_macro28fallback5Group3new17hbabe51d3c5d7ae92E(i8 %80, ptr %_63)
          to label %bb45 unwind label %cleanup6

bb45:                                             ; preds = %bb44
  %82 = extractvalue { ptr, i8 } %81, 0
  %83 = extractvalue { ptr, i8 } %81, 1
  store ptr %82, ptr %g, align 8
  %84 = getelementptr inbounds i8, ptr %g, i64 8
  store i8 %83, ptr %84, align 8
  store i8 1, ptr %_91, align 1
; invoke proc_macro2::fallback::Group::set_span
  invoke void @_ZN11proc_macro28fallback5Group8set_span17hbff0e10f5d181640E(ptr align 8 %g)
          to label %bb46 unwind label %cleanup7

bb68:                                             ; preds = %cleanup7
  %85 = load i8, ptr %_91, align 1
  %86 = trunc i8 %85 to i1
  br i1 %86, label %bb67, label %bb70

cleanup7:                                         ; preds = %bb47, %bb46, %bb45
  %87 = landingpad { ptr, i32 }
          cleanup
  %88 = extractvalue { ptr, i32 } %87, 0
  %89 = extractvalue { ptr, i32 } %87, 1
  store ptr %88, ptr %2, align 8
  %90 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %89, ptr %90, align 8
  br label %bb68

bb46:                                             ; preds = %bb45
  store i8 0, ptr %_92, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_67, ptr align 8 %outer, i64 24, i1 false)
  store i8 1, ptr %_89, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %trees, ptr align 8 %_67, i64 24, i1 false)
  store i8 0, ptr %_91, align 1
  %_72.0 = load ptr, ptr %g, align 8
  %91 = getelementptr inbounds i8, ptr %g, i64 8
  %_72.1 = load i8, ptr %91, align 8
; invoke proc_macro2::Group::_new_fallback
  invoke void @_ZN11proc_macro25Group13_new_fallback17h7782fbdef2d1abf8E(ptr sret([24 x i8]) align 8 %_71, ptr %_72.0, i8 %_72.1)
          to label %bb47 unwind label %cleanup7

bb47:                                             ; preds = %bb46
  %92 = getelementptr inbounds i8, ptr %_70, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %92, ptr align 8 %_71, i64 24, i1 false)
  store i64 -9223372036854775807, ptr %_70, align 8
; invoke proc_macro2::fallback::TokenStreamBuilder::push_token_from_parser
  invoke void @_ZN11proc_macro28fallback18TokenStreamBuilder22push_token_from_parser17h19154639c02ff5c7E(ptr align 8 %trees, ptr align 8 %_70)
          to label %bb48 unwind label %cleanup7

bb48:                                             ; preds = %bb47
  store i8 0, ptr %_91, align 1
  store i8 0, ptr %_92, align 1
  store i8 0, ptr %_93, align 1
  br label %bb2

bb67:                                             ; preds = %bb68
; invoke core::ptr::drop_in_place<proc_macro2::fallback::Group>
  invoke void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Group$GT$17he77456d9688945f3E"(ptr align 8 %g) #25
          to label %bb70 unwind label %terminate

terminate:                                        ; preds = %bb73, %bb62, %bb65, %bb71, %bb69, %bb67
  %93 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %94 = extractvalue { ptr, i32 } %93, 0
  %95 = extractvalue { ptr, i32 } %93, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb41:                                             ; preds = %bb40
  store ptr null, ptr %_0, align 8
; invoke core::ptr::drop_in_place<proc_macro2::fallback::TokenStreamBuilder>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$proc_macro2..fallback..TokenStreamBuilder$GT$17hc947a9bf142072dcE"(ptr align 8 %outer)
          to label %bb57 unwind label %cleanup8

bb72:                                             ; preds = %bb69, %bb70, %cleanup8
  %96 = load i8, ptr %_93, align 1
  %97 = trunc i8 %96 to i1
  br i1 %97, label %bb71, label %bb62

cleanup8:                                         ; preds = %bb41
  %98 = landingpad { ptr, i32 }
          cleanup
  %99 = extractvalue { ptr, i32 } %98, 0
  %100 = extractvalue { ptr, i32 } %98, 1
  store ptr %99, ptr %2, align 8
  %101 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %100, ptr %101, align 8
  br label %bb72

bb57:                                             ; preds = %bb41
  store i8 0, ptr %_92, align 1
  br label %bb58

bb69:                                             ; preds = %bb70
; invoke core::ptr::drop_in_place<proc_macro2::fallback::TokenStreamBuilder>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$proc_macro2..fallback..TokenStreamBuilder$GT$17hc947a9bf142072dcE"(ptr align 8 %outer) #25
          to label %bb72 unwind label %terminate

bb71:                                             ; preds = %bb72
  %102 = getelementptr inbounds i8, ptr %frame1, i64 8
; invoke core::ptr::drop_in_place<proc_macro2::fallback::TokenStreamBuilder>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$proc_macro2..fallback..TokenStreamBuilder$GT$17hc947a9bf142072dcE"(ptr align 8 %102) #25
          to label %bb62 unwind label %terminate

bb50:                                             ; preds = %bb49
  %103 = getelementptr inbounds i8, ptr %_76, i64 16
  %104 = load i64, ptr %103, align 8
  %105 = icmp eq i64 %104, -9223372036854775803
  %_78 = select i1 %105, i64 1, i64 0
  %106 = icmp eq i64 %_78, 0
  br i1 %106, label %bb52, label %bb51

bb52:                                             ; preds = %bb50
  %rest.09 = load ptr, ptr %_76, align 8
  %107 = getelementptr inbounds i8, ptr %_76, i64 8
  %rest.110 = load i64, ptr %107, align 8
  %108 = getelementptr inbounds i8, ptr %_76, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tt3, ptr align 8 %108, i64 32, i1 false)
  store ptr %rest.09, ptr %_75, align 8
  %109 = getelementptr inbounds i8, ptr %_75, i64 8
  store i64 %rest.110, ptr %109, align 8
  %110 = getelementptr inbounds i8, ptr %_75, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %110, ptr align 8 %tt3, i64 32, i1 false)
  %rest.011 = load ptr, ptr %_75, align 8
  %111 = getelementptr inbounds i8, ptr %_75, i64 8
  %rest.112 = load i64, ptr %111, align 8
  store i8 1, ptr %_90, align 1
  %112 = getelementptr inbounds i8, ptr %_75, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tt, ptr align 8 %112, i64 32, i1 false)
; invoke proc_macro2::Span::_new_fallback
  %_85 = invoke i32 @_ZN11proc_macro24Span13_new_fallback17he901ad9d50a5f2cbE()
          to label %bb54 unwind label %cleanup13

bb51:                                             ; preds = %bb50
  %_82.0 = load ptr, ptr %input, align 8
  %113 = getelementptr inbounds i8, ptr %input, i64 8
  %_82.1 = load i64, ptr %113, align 8
; invoke proc_macro2::parse::lex_error
  invoke void @_ZN11proc_macro25parse9lex_error17h81ff39ff80685cb6E(ptr align 1 %_82.0, i64 %_82.1)
          to label %bb53 unwind label %cleanup4

bb66:                                             ; preds = %cleanup13
  %114 = load i8, ptr %_90, align 1
  %115 = trunc i8 %114 to i1
  br i1 %115, label %bb65, label %bb62

cleanup13:                                        ; preds = %bb55, %bb54, %bb52
  %116 = landingpad { ptr, i32 }
          cleanup
  %117 = extractvalue { ptr, i32 } %116, 0
  %118 = extractvalue { ptr, i32 } %116, 1
  store ptr %117, ptr %2, align 8
  %119 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %118, ptr %119, align 8
  br label %bb66

bb54:                                             ; preds = %bb52
; invoke proc_macro2::TokenTree::set_span
  invoke void @_ZN11proc_macro29TokenTree8set_span17hc1a2971f338cd3d9E(ptr align 8 %tt, i32 %_85)
          to label %bb55 unwind label %cleanup13

bb55:                                             ; preds = %bb54
  store i8 0, ptr %_90, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_88, ptr align 8 %tt, i64 32, i1 false)
; invoke proc_macro2::fallback::TokenStreamBuilder::push_token_from_parser
  invoke void @_ZN11proc_macro28fallback18TokenStreamBuilder22push_token_from_parser17h19154639c02ff5c7E(ptr align 8 %trees, ptr align 8 %_88)
          to label %bb56 unwind label %cleanup13

bb56:                                             ; preds = %bb55
  store ptr %rest.011, ptr %input, align 8
  %120 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %rest.112, ptr %120, align 8
  store i8 0, ptr %_90, align 1
  br label %bb2

bb65:                                             ; preds = %bb66
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %tt) #25
          to label %bb62 unwind label %terminate

bb53:                                             ; preds = %bb51
  store ptr null, ptr %_0, align 8
  br label %bb59

bb60:                                             ; preds = %bb59
  %121 = load i8, ptr %_89, align 1
  %122 = trunc i8 %121 to i1
  br i1 %122, label %bb64, label %bb61

bb61:                                             ; preds = %bb64, %bb60
  store i8 0, ptr %_89, align 1
  %123 = load ptr, ptr %_0, align 8
  ret ptr %123

bb64:                                             ; preds = %bb60
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStreamBuilder>
  call void @"_ZN4core3ptr62drop_in_place$LT$proc_macro2..fallback..TokenStreamBuilder$GT$17hc947a9bf142072dcE"(ptr align 8 %trees)
  br label %bb61

bb9:                                              ; No predecessors!
  unreachable

bb63:                                             ; preds = %bb73, %bb74
  %124 = load ptr, ptr %2, align 8
  %125 = getelementptr inbounds i8, ptr %2, i64 8
  %126 = load i32, ptr %125, align 8
  %127 = insertvalue { ptr, i32 } poison, ptr %124, 0
  %128 = insertvalue { ptr, i32 } %127, i32 %126, 1
  resume { ptr, i32 } %128

bb73:                                             ; preds = %bb74
; invoke core::ptr::drop_in_place<proc_macro2::fallback::TokenStreamBuilder>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$proc_macro2..fallback..TokenStreamBuilder$GT$17hc947a9bf142072dcE"(ptr align 8 %trees) #25
          to label %bb63 unwind label %terminate
}

; proc_macro2::parse::lex_error
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse9lex_error17h81ff39ff80685cb6E(ptr align 1 %cursor.0, i64 %cursor.1) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::parse::leaf_token
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse10leaf_token17hc9b1e39515180775E(ptr sret([48 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca [16 x i8], align 8
  %_35 = alloca [1 x i8], align 1
  %_34 = alloca [1 x i8], align 1
  %_33 = alloca [32 x i8], align 8
  %_32 = alloca [48 x i8], align 8
  %_30 = alloca [24 x i8], align 8
  %_29 = alloca [24 x i8], align 8
  %repr = alloca [24 x i8], align 8
  %_20 = alloca [32 x i8], align 8
  %_19 = alloca [48 x i8], align 8
  %i = alloca [32 x i8], align 8
  %_15 = alloca [48 x i8], align 8
  %_14 = alloca [32 x i8], align 8
  %_13 = alloca [48 x i8], align 8
  %p = alloca [12 x i8], align 4
  %_9 = alloca [32 x i8], align 8
  %_8 = alloca [24 x i8], align 8
  %_7 = alloca [32 x i8], align 8
  %_6 = alloca [48 x i8], align 8
  %l = alloca [24 x i8], align 8
  %_2 = alloca [40 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %3 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %3, align 8
  store i8 0, ptr %_35, align 1
  store i8 0, ptr %_34, align 1
  store i8 1, ptr %_35, align 1
  %4 = load ptr, ptr %input, align 8
  %5 = getelementptr inbounds i8, ptr %input, i64 8
  %6 = load i64, ptr %5, align 8
; call proc_macro2::parse::literal
  call void @_ZN11proc_macro25parse7literal17h26938e90752fb8b3E(ptr sret([40 x i8]) align 8 %_2, ptr align 1 %4, i64 %6)
  %7 = getelementptr inbounds i8, ptr %_2, i64 16
  %8 = load i64, ptr %7, align 8
  %9 = icmp eq i64 %8, -9223372036854775808
  %_3 = select i1 %9, i64 1, i64 0
  %10 = icmp eq i64 %_3, 0
  br i1 %10, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %input.0 = load ptr, ptr %_2, align 8
  %11 = getelementptr inbounds i8, ptr %_2, i64 8
  %input.1 = load i64, ptr %11, align 8
  store i8 0, ptr %_35, align 1
  %12 = getelementptr inbounds i8, ptr %_2, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %l, ptr align 8 %12, i64 24, i1 false)
; invoke proc_macro2::Literal::_new_fallback
  invoke void @_ZN11proc_macro27Literal13_new_fallback17ha788e5ec84bb7d0dE(ptr sret([24 x i8]) align 8 %_8, ptr align 8 %l)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %start
  %13 = load ptr, ptr %input, align 8
  %14 = getelementptr inbounds i8, ptr %input, i64 8
  %15 = load i64, ptr %14, align 8
; invoke proc_macro2::parse::punct
  invoke void @_ZN11proc_macro25parse5punct17h9abe11d4b9af1bbbE(ptr sret([32 x i8]) align 8 %_9, ptr align 1 %13, i64 %15)
          to label %bb5 unwind label %cleanup

bb31:                                             ; preds = %bb19, %cleanup
  %16 = getelementptr inbounds i8, ptr %_2, i64 16
  %17 = load i64, ptr %16, align 8
  %18 = icmp eq i64 %17, -9223372036854775808
  %_38 = select i1 %18, i64 1, i64 0
  %19 = icmp eq i64 %_38, 0
  br i1 %19, label %bb29, label %bb20

cleanup:                                          ; preds = %bb23, %bb7, %bb4, %bb2
  %20 = landingpad { ptr, i32 }
          cleanup
  %21 = extractvalue { ptr, i32 } %20, 0
  %22 = extractvalue { ptr, i32 } %20, 1
  store ptr %21, ptr %2, align 8
  %23 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %22, ptr %23, align 8
  br label %bb31

bb3:                                              ; preds = %bb2
  %24 = getelementptr inbounds i8, ptr %_7, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %_8, i64 24, i1 false)
  store i64 -9223372036854775804, ptr %_7, align 8
  store ptr %input.0, ptr %_6, align 8
  %25 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %input.1, ptr %25, align 8
  %26 = getelementptr inbounds i8, ptr %_6, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %_7, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 48, i1 false)
  br label %bb28

bb28:                                             ; preds = %bb21, %bb6, %bb3
  %27 = getelementptr inbounds i8, ptr %_2, i64 16
  %28 = load i64, ptr %27, align 8
  %29 = icmp eq i64 %28, -9223372036854775808
  %_37 = select i1 %29, i64 1, i64 0
  %30 = icmp eq i64 %_37, 0
  br i1 %30, label %bb26, label %bb25

bb5:                                              ; preds = %bb4
  %31 = getelementptr inbounds i8, ptr %_9, i64 16
  %32 = load i32, ptr %31, align 8
  %33 = icmp eq i32 %32, 1114112
  %_10 = select i1 %33, i64 1, i64 0
  %34 = icmp eq i64 %_10, 0
  br i1 %34, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %input.01 = load ptr, ptr %_9, align 8
  %35 = getelementptr inbounds i8, ptr %_9, i64 8
  %input.12 = load i64, ptr %35, align 8
  %36 = getelementptr inbounds i8, ptr %_9, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %p, ptr align 8 %36, i64 12, i1 false)
  %37 = getelementptr inbounds i8, ptr %_14, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 4 %p, i64 12, i1 false)
  store i64 -9223372036854775805, ptr %_14, align 8
  store ptr %input.01, ptr %_13, align 8
  %38 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %input.12, ptr %38, align 8
  %39 = getelementptr inbounds i8, ptr %_13, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %_14, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_13, i64 48, i1 false)
  br label %bb28

bb7:                                              ; preds = %bb5
  %40 = load ptr, ptr %input, align 8
  %41 = getelementptr inbounds i8, ptr %input, i64 8
  %42 = load i64, ptr %41, align 8
; invoke proc_macro2::parse::ident
  invoke void @_ZN11proc_macro25parse5ident17ha095a5c0fd36a65eE(ptr sret([48 x i8]) align 8 %_15, ptr align 1 %40, i64 %42)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  store i8 1, ptr %_34, align 1
  %43 = getelementptr inbounds i8, ptr %_15, i64 16
  %44 = load i64, ptr %43, align 8
  %45 = icmp eq i64 %44, -9223372036854775807
  %_16 = select i1 %45, i64 1, i64 0
  %46 = icmp eq i64 %_16, 0
  br i1 %46, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %input.03 = load ptr, ptr %_15, align 8
  %47 = getelementptr inbounds i8, ptr %_15, i64 8
  %input.14 = load i64, ptr %47, align 8
  store i8 0, ptr %_34, align 1
  %48 = getelementptr inbounds i8, ptr %_15, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %i, ptr align 8 %48, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_20, ptr align 8 %i, i64 32, i1 false)
  store ptr %input.03, ptr %_19, align 8
  %49 = getelementptr inbounds i8, ptr %_19, i64 8
  store i64 %input.14, ptr %49, align 8
  %50 = getelementptr inbounds i8, ptr %_19, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %50, ptr align 8 %_20, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_19, i64 48, i1 false)
  br label %bb24

bb10:                                             ; preds = %bb8
; invoke proc_macro2::parse::Cursor::starts_with
  %_21 = invoke zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_8a5755c7923bb7fc54a716e61bfc895f, i64 11)
          to label %bb11 unwind label %cleanup5

bb24:                                             ; preds = %bb17, %bb18, %bb9
  %51 = getelementptr inbounds i8, ptr %_15, i64 16
  %52 = load i64, ptr %51, align 8
  %53 = icmp eq i64 %52, -9223372036854775807
  %_36 = select i1 %53, i64 1, i64 0
  %54 = icmp eq i64 %_36, 0
  br i1 %54, label %bb22, label %bb21

bb19:                                             ; preds = %cleanup5
; invoke core::ptr::drop_in_place<core::result::Result<(proc_macro2::parse::Cursor,proc_macro2::Ident),proc_macro2::parse::Reject>>
  invoke void @"_ZN4core3ptr133drop_in_place$LT$core..result..Result$LT$$LP$proc_macro2..parse..Cursor$C$proc_macro2..Ident$RP$$C$proc_macro2..parse..Reject$GT$$GT$17h9f1109abe5f34cf6E"(ptr align 8 %_15) #25
          to label %bb31 unwind label %terminate

cleanup5:                                         ; preds = %bb16, %bb15, %bb14, %bb13, %bb12, %bb10
  %55 = landingpad { ptr, i32 }
          cleanup
  %56 = extractvalue { ptr, i32 } %55, 0
  %57 = extractvalue { ptr, i32 } %55, 1
  store ptr %56, ptr %2, align 8
  %58 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %57, ptr %58, align 8
  br label %bb19

bb11:                                             ; preds = %bb10
  br i1 %_21, label %bb12, label %bb18

bb18:                                             ; preds = %bb11
  %59 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 -9223372036854775803, ptr %59, align 8
  br label %bb24

bb12:                                             ; preds = %bb11
; invoke core::str::<impl str>::len
  %_26 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 @alloc_8a5755c7923bb7fc54a716e61bfc895f, i64 11)
          to label %bb13 unwind label %cleanup5

bb13:                                             ; preds = %bb12
; invoke proc_macro2::parse::Cursor::advance
  %60 = invoke { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_26)
          to label %bb14 unwind label %cleanup5

bb14:                                             ; preds = %bb13
  %rest.0 = extractvalue { ptr, i64 } %60, 0
  %rest.1 = extractvalue { ptr, i64 } %60, 1
; invoke alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  invoke void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h87532753356c6506E"(ptr sret([24 x i8]) align 8 %_30, ptr align 1 @alloc_8a5755c7923bb7fc54a716e61bfc895f, i64 11)
          to label %bb15 unwind label %cleanup5

bb15:                                             ; preds = %bb14
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_29, ptr align 8 %_30)
          to label %bb16 unwind label %cleanup5

bb16:                                             ; preds = %bb15
; invoke proc_macro2::Literal::_new_fallback
  invoke void @_ZN11proc_macro27Literal13_new_fallback17ha788e5ec84bb7d0dE(ptr sret([24 x i8]) align 8 %repr, ptr align 8 %_29)
          to label %bb17 unwind label %cleanup5

bb17:                                             ; preds = %bb16
  %61 = getelementptr inbounds i8, ptr %_33, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %repr, i64 24, i1 false)
  store i64 -9223372036854775804, ptr %_33, align 8
  store ptr %rest.0, ptr %_32, align 8
  %62 = getelementptr inbounds i8, ptr %_32, i64 8
  store i64 %rest.1, ptr %62, align 8
  %63 = getelementptr inbounds i8, ptr %_32, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %63, ptr align 8 %_33, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_32, i64 48, i1 false)
  br label %bb24

bb22:                                             ; preds = %bb24
  %64 = load i8, ptr %_34, align 1
  %65 = trunc i8 %64 to i1
  br i1 %65, label %bb23, label %bb21

bb21:                                             ; preds = %bb23, %bb22, %bb24
  store i8 0, ptr %_34, align 1
  br label %bb28

bb23:                                             ; preds = %bb22
  %66 = getelementptr inbounds i8, ptr %_15, i64 16
; invoke core::ptr::drop_in_place<proc_macro2::Ident>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Ident$GT$17h13f4f34f41aabf0cE"(ptr align 8 %66)
          to label %bb21 unwind label %cleanup

bb26:                                             ; preds = %bb28
  %67 = load i8, ptr %_35, align 1
  %68 = trunc i8 %67 to i1
  br i1 %68, label %bb27, label %bb25

bb25:                                             ; preds = %bb27, %bb26, %bb28
  store i8 0, ptr %_35, align 1
  ret void

bb27:                                             ; preds = %bb26
  %69 = getelementptr inbounds i8, ptr %_2, i64 16
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17h63b97baac7be2b8bE"(ptr align 8 %69)
  br label %bb25

terminate:                                        ; preds = %bb30, %bb19
  %70 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %71 = extractvalue { ptr, i32 } %70, 0
  %72 = extractvalue { ptr, i32 } %70, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb29:                                             ; preds = %bb31
  %73 = load i8, ptr %_35, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %bb30, label %bb20

bb20:                                             ; preds = %bb30, %bb29, %bb31
  %75 = load ptr, ptr %2, align 8
  %76 = getelementptr inbounds i8, ptr %2, i64 8
  %77 = load i32, ptr %76, align 8
  %78 = insertvalue { ptr, i32 } poison, ptr %75, 0
  %79 = insertvalue { ptr, i32 } %78, i32 %77, 1
  resume { ptr, i32 } %79

bb30:                                             ; preds = %bb29
  %80 = getelementptr inbounds i8, ptr %_2, i64 16
; invoke core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17h63b97baac7be2b8bE"(ptr align 8 %80) #25
          to label %bb20 unwind label %terminate

bb32:                                             ; No predecessors!
  unreachable
}

; proc_macro2::parse::ident
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse5ident17ha095a5c0fd36a65eE(ptr sret([48 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_4 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call core::slice::<impl [T]>::iter
  %3 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h45cafd79d6b203e3E"(ptr align 8 @alloc_7627a22b592e80dfa0b062f2da5f9c23, i64 10)
  %4 = extractvalue { ptr, ptr } %3, 0
  %5 = extractvalue { ptr, ptr } %3, 1
  store ptr %4, ptr %_4, align 8
  %6 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %5, ptr %6, align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
  %_2 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17he6c2e7c38cf8b29cE"(ptr align 8 %_4, ptr align 8 %input)
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %start
  %7 = load ptr, ptr %input, align 8
  %8 = getelementptr inbounds i8, ptr %input, i64 8
  %9 = load i64, ptr %8, align 8
; call proc_macro2::parse::ident_any
  call void @_ZN11proc_macro25parse9ident_any17he50c7b5137530babE(ptr sret([48 x i8]) align 8 %_0, ptr align 1 %7, i64 %9)
  br label %bb5

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 -9223372036854775807, ptr %10, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  ret void
}

; proc_macro2::parse::ident::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro25parse5ident28_$u7b$$u7b$closure$u7d$$u7d$17h99d0b47ad45daf89E"(ptr align 8 %_1, ptr align 8 %prefix) unnamed_addr #0 {
start:
  %_3 = load ptr, ptr %_1, align 8
  %_4.0 = load ptr, ptr %prefix, align 8
  %0 = getelementptr inbounds i8, ptr %prefix, i64 8
  %_4.1 = load i64, ptr %0, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_0 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %_3, ptr align 1 %_4.0, i64 %_4.1)
  ret i1 %_0
}

; proc_macro2::parse::ident_any
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse9ident_any17he50c7b5137530babE(ptr sret([48 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_27 = alloca [48 x i8], align 8
  %_25 = alloca [32 x i8], align 8
  %ident1 = alloca [32 x i8], align 8
  %_18 = alloca [48 x i8], align 8
  %_16 = alloca [32 x i8], align 8
  %ident = alloca [32 x i8], align 8
  %val = alloca [32 x i8], align 8
  %_12 = alloca [32 x i8], align 8
  %_11 = alloca [32 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::starts_with
  %raw = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_26741d7be2999f870b5ef1ed52a52387, i64 2)
  %_8 = zext i1 %raw to i64
  %_7 = shl i64 %_8, 1
; call proc_macro2::parse::Cursor::advance
  %3 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_7)
  %rest.0 = extractvalue { ptr, i64 } %3, 0
  %rest.1 = extractvalue { ptr, i64 } %3, 1
; call proc_macro2::parse::ident_not_raw
  call void @_ZN11proc_macro25parse13ident_not_raw17h79c65d96005818b0E(ptr sret([32 x i8]) align 8 %_12, ptr align 1 %rest.0, i64 %rest.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4c83adf9d37dcf7cE"(ptr sret([32 x i8]) align 8 %_11, ptr align 8 %_12)
  %4 = load ptr, ptr %_11, align 8
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_13 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_13, 0
  br i1 %7, label %bb6, label %bb7

bb6:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_11, i64 32, i1 false)
  %rest.02 = load ptr, ptr %val, align 8
  %8 = getelementptr inbounds i8, ptr %val, i64 8
  %rest.13 = load i64, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %val, i64 16
  %sym.0 = load ptr, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  %sym.1 = load i64, ptr %10, align 8
  br i1 %raw, label %bb8, label %bb9

bb7:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h18197158e76603d5E"(ptr sret([48 x i8]) align 8 %_0, ptr align 8 @alloc_3363be79f70cce6380191e87cbbe8cd4)
  br label %bb27

bb9:                                              ; preds = %bb6
; call proc_macro2::fallback::Span::call_site
  call void @_ZN11proc_macro28fallback4Span9call_site17h73db4df36731ab9bE()
; call proc_macro2::imp::Ident::new_unchecked
  call void @_ZN11proc_macro23imp5Ident13new_unchecked17h7ae3cad3f627c625E(ptr sret([32 x i8]) align 8 %_16, ptr align 1 %sym.0, i64 %sym.1)
; call proc_macro2::Ident::_new
  call void @_ZN11proc_macro25Ident4_new17h34aafdfc73320843E(ptr sret([32 x i8]) align 8 %ident, ptr align 8 %_16)
  store ptr %rest.02, ptr %_18, align 8
  %11 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %rest.13, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %_18, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %ident, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_18, i64 48, i1 false)
  br label %bb27

bb8:                                              ; preds = %bb6
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_23 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %sym.0, i64 %sym.1, ptr align 1 @alloc_27cca3636828088e60ce450d2eca2060, i64 1)
  br i1 %_23, label %bb23, label %bb14

bb27:                                             ; preds = %bb7, %bb23, %bb13, %bb9
  ret void

bb14:                                             ; preds = %bb8
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_22 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %sym.0, i64 %sym.1, ptr align 1 @alloc_105895aecd604a09ec1be120f512aa8a, i64 5)
  br i1 %_22, label %bb23, label %bb15

bb23:                                             ; preds = %bb17, %bb16, %bb15, %bb14, %bb8
  %13 = getelementptr inbounds i8, ptr %_0, i64 16
  store i64 -9223372036854775807, ptr %13, align 8
  br label %bb27

bb15:                                             ; preds = %bb14
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_21 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %sym.0, i64 %sym.1, ptr align 1 @alloc_6aeac8d59cbcbd1aee06607ad2dd6674, i64 4)
  br i1 %_21, label %bb23, label %bb16

bb16:                                             ; preds = %bb15
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_20 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %sym.0, i64 %sym.1, ptr align 1 @alloc_7e323bfe8c2b6a467b3640606c98266f, i64 4)
  br i1 %_20, label %bb23, label %bb17

bb17:                                             ; preds = %bb16
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_19 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %sym.0, i64 %sym.1, ptr align 1 @alloc_b7d12448d3c2d0861386fea51f6ebf56, i64 5)
  br i1 %_19, label %bb23, label %bb13

bb13:                                             ; preds = %bb17
; call proc_macro2::fallback::Span::call_site
  call void @_ZN11proc_macro28fallback4Span9call_site17h73db4df36731ab9bE()
; call proc_macro2::imp::Ident::new_raw_unchecked
  call void @_ZN11proc_macro23imp5Ident17new_raw_unchecked17hf82b8a2d59ad1accE(ptr sret([32 x i8]) align 8 %_25, ptr align 1 %sym.0, i64 %sym.1)
; call proc_macro2::Ident::_new
  call void @_ZN11proc_macro25Ident4_new17h34aafdfc73320843E(ptr sret([32 x i8]) align 8 %ident1, ptr align 8 %_25)
  store ptr %rest.02, ptr %_27, align 8
  %14 = getelementptr inbounds i8, ptr %_27, i64 8
  store i64 %rest.13, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %_27, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %ident1, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_27, i64 48, i1 false)
  br label %bb27

bb5:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::ident_not_raw
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse13ident_not_raw17h79c65d96005818b0E(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_22 = alloca [32 x i8], align 8
  %_16 = alloca [16 x i8], align 8
  %iter = alloca [24 x i8], align 8
  %_14 = alloca [24 x i8], align 8
  %_13 = alloca [24 x i8], align 8
  %end = alloca [8 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  %chars = alloca [24 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5bd9a084a58cb64fE(ptr sret([24 x i8]) align 8 %chars, ptr align 8 %input)
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %3 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %4 = extractvalue { i64, i32 } %3, 0
  %5 = extractvalue { i64, i32 } %3, 1
  store i64 %4, ptr %_4, align 8
  %6 = getelementptr inbounds i8, ptr %_4, i64 8
  store i32 %5, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %_4, i64 8
  %8 = load i32, ptr %7, align 8
  %9 = icmp eq i32 %8, 1114112
  %_6 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_6, 1
  br i1 %10, label %bb4, label %bb3

bb4:                                              ; preds = %start
  %ch = getelementptr inbounds i8, ptr %_4, i64 8
  %_10 = load i32, ptr %ch, align 4
; call proc_macro2::fallback::is_ident_start
  %_9 = call zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17h77210a150e83b535E(i32 %_10)
  br i1 %_9, label %bb6, label %bb3

bb3:                                              ; preds = %bb4, %start
  store ptr null, ptr %_0, align 8
  br label %bb18

bb6:                                              ; preds = %bb4
  %11 = getelementptr inbounds i8, ptr %_4, i64 8
  %ch1 = load i32, ptr %11, align 8
; call proc_macro2::parse::Cursor::len
  %12 = call i64 @_ZN11proc_macro25parse6Cursor3len17h1d567d65076334afE(ptr align 8 %input)
  store i64 %12, ptr %end, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_14, ptr align 8 %chars, i64 24, i1 false)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8ed2d2fde5118aadE"(ptr sret([24 x i8]) align 8 %_13, ptr align 8 %_14)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %_13, i64 24, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb12, %bb6
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %13 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %iter)
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  store i64 %14, ptr %_16, align 8
  %16 = getelementptr inbounds i8, ptr %_16, i64 8
  store i32 %15, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %_16, i64 8
  %18 = load i32, ptr %17, align 8
  %19 = icmp eq i32 %18, 1114112
  %_18 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_18, 0
  br i1 %20, label %bb15, label %bb12

bb15:                                             ; preds = %bb14, %bb9
  %_25 = load i64, ptr %end, align 8
; call proc_macro2::parse::Cursor::advance
  %21 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_25)
  %_23.0 = extractvalue { ptr, i64 } %21, 0
  %_23.1 = extractvalue { ptr, i64 } %21, 1
  %_29.0 = load ptr, ptr %input, align 8
  %22 = getelementptr inbounds i8, ptr %input, i64 8
  %_29.1 = load i64, ptr %22, align 8
  %_28 = load i64, ptr %end, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %23 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h197e8d84eedb0ca8E"(ptr align 1 %_29.0, i64 %_29.1, i64 %_28, ptr align 8 @alloc_b3490e9107dfd396088b943cdcdabf9e)
  %_26.0 = extractvalue { ptr, i64 } %23, 0
  %_26.1 = extractvalue { ptr, i64 } %23, 1
  store ptr %_23.0, ptr %_22, align 8
  %24 = getelementptr inbounds i8, ptr %_22, i64 8
  store i64 %_23.1, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %_22, i64 16
  store ptr %_26.0, ptr %25, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store i64 %_26.1, ptr %26, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_22, i64 32, i1 false)
  br label %bb18

bb12:                                             ; preds = %bb9
  %i = load i64, ptr %_16, align 8
  %27 = getelementptr inbounds i8, ptr %_16, i64 8
  %ch2 = load i32, ptr %27, align 8
; call proc_macro2::fallback::is_ident_continue
  %_21 = call zeroext i1 @_ZN11proc_macro28fallback17is_ident_continue17hdba648bec9552964E(i32 %ch2)
  br i1 %_21, label %bb9, label %bb14

bb14:                                             ; preds = %bb12
  store i64 %i, ptr %end, align 8
  br label %bb15

bb18:                                             ; preds = %bb3, %bb15
  ret void

bb11:                                             ; No predecessors!
  unreachable
}

; proc_macro2::parse::literal
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse7literal17h26938e90752fb8b3E(ptr sret([40 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_14 = alloca [24 x i8], align 8
  %_13 = alloca [24 x i8], align 8
  %_12 = alloca [40 x i8], align 8
  %val = alloca [16 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %rest = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load ptr, ptr %input, align 8
  %4 = getelementptr inbounds i8, ptr %input, i64 8
  %5 = load i64, ptr %4, align 8
; call proc_macro2::parse::literal_nocapture
  %6 = call { ptr, i64 } @_ZN11proc_macro25parse17literal_nocapture17h717a41101fbc6b3aE(ptr align 1 %3, i64 %5)
  %_4.0 = extractvalue { ptr, i64 } %6, 0
  %_4.1 = extractvalue { ptr, i64 } %6, 1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %7 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h705c8c01ecb0d450E"(ptr align 1 %_4.0, i64 %_4.1)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  store ptr %8, ptr %_3, align 8
  %10 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %9, ptr %10, align 8
  %11 = load ptr, ptr %_3, align 8
  %12 = ptrtoint ptr %11 to i64
  %13 = icmp eq i64 %12, 0
  %_5 = select i1 %13, i64 1, i64 0
  %14 = icmp eq i64 %_5, 0
  br i1 %14, label %bb4, label %bb5

bb4:                                              ; preds = %start
  %15 = load ptr, ptr %_3, align 8
  %16 = getelementptr inbounds i8, ptr %_3, i64 8
  %17 = load i64, ptr %16, align 8
  store ptr %15, ptr %val, align 8
  %18 = getelementptr inbounds i8, ptr %val, i64 8
  store i64 %17, ptr %18, align 8
  %19 = load ptr, ptr %val, align 8
  %20 = getelementptr inbounds i8, ptr %val, i64 8
  %21 = load i64, ptr %20, align 8
  store ptr %19, ptr %rest, align 8
  %22 = getelementptr inbounds i8, ptr %rest, i64 8
  store i64 %21, ptr %22, align 8
; call proc_macro2::parse::Cursor::len
  %_8 = call i64 @_ZN11proc_macro25parse6Cursor3len17h1d567d65076334afE(ptr align 8 %input)
; call proc_macro2::parse::Cursor::len
  %_10 = call i64 @_ZN11proc_macro25parse6Cursor3len17h1d567d65076334afE(ptr align 8 %rest)
  %end = sub i64 %_8, %_10
  %23 = load ptr, ptr %rest, align 8
  %24 = getelementptr inbounds i8, ptr %rest, i64 8
  %25 = load i64, ptr %24, align 8
  store ptr %23, ptr %val, align 8
  %26 = getelementptr inbounds i8, ptr %val, i64 8
  store i64 %25, ptr %26, align 8
  %_17.0 = load ptr, ptr %input, align 8
  %27 = getelementptr inbounds i8, ptr %input, i64 8
  %_17.1 = load i64, ptr %27, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %28 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h197e8d84eedb0ca8E"(ptr align 1 %_17.0, i64 %_17.1, i64 %end, ptr align 8 @alloc_63c62eb0461031c16375ee89d85854ac)
  %_15.0 = extractvalue { ptr, i64 } %28, 0
  %_15.1 = extractvalue { ptr, i64 } %28, 1
; call <str as alloc::string::ToString>::to_string
  call void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h3e948ad4e99fedb5E"(ptr sret([24 x i8]) align 8 %_14, ptr align 1 %_15.0, i64 %_15.1)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_13, ptr align 8 %_14)
  %29 = load ptr, ptr %val, align 8
  %30 = getelementptr inbounds i8, ptr %val, i64 8
  %31 = load i64, ptr %30, align 8
  store ptr %29, ptr %_12, align 8
  %32 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %31, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %_12, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %_13, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_12, i64 40, i1 false)
  br label %bb11

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hee58764ccc450388E"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 @alloc_649acb99022a4026e30edffc0f730b2a)
  br label %bb11

bb11:                                             ; preds = %bb5, %bb4
  ret void

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::literal_nocapture
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse17literal_nocapture17h717a41101fbc6b3aE(ptr align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %_20 = alloca [16 x i8], align 8
  %_17 = alloca [16 x i8], align 8
  %_14 = alloca [16 x i8], align 8
  %_11 = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_2 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call proc_macro2::parse::string
  %0 = call { ptr, i64 } @_ZN11proc_macro25parse6string17h150467445b434d01E(ptr align 1 %input.0, i64 %input.1)
  %1 = extractvalue { ptr, i64 } %0, 0
  %2 = extractvalue { ptr, i64 } %0, 1
  store ptr %1, ptr %_2, align 8
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load ptr, ptr %_2, align 8
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_3 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_3, 0
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %ok.0 = load ptr, ptr %_2, align 8
  %8 = getelementptr inbounds i8, ptr %_2, i64 8
  %ok.1 = load i64, ptr %8, align 8
  store ptr %ok.0, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %ok.1, ptr %9, align 8
  br label %bb22

bb3:                                              ; preds = %start
; call proc_macro2::parse::byte_string
  %10 = call { ptr, i64 } @_ZN11proc_macro25parse11byte_string17he90801451a3e02edE(ptr align 1 %input.0, i64 %input.1)
  %11 = extractvalue { ptr, i64 } %10, 0
  %12 = extractvalue { ptr, i64 } %10, 1
  store ptr %11, ptr %_5, align 8
  %13 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %12, ptr %13, align 8
  %14 = load ptr, ptr %_5, align 8
  %15 = ptrtoint ptr %14 to i64
  %16 = icmp eq i64 %15, 0
  %_6 = select i1 %16, i64 1, i64 0
  %17 = icmp eq i64 %_6, 0
  br i1 %17, label %bb5, label %bb6

bb22:                                             ; preds = %bb21, %bb20, %bb17, %bb14, %bb11, %bb8, %bb5, %bb2
  %18 = load ptr, ptr %_0, align 8
  %19 = getelementptr inbounds i8, ptr %_0, i64 8
  %20 = load i64, ptr %19, align 8
  %21 = insertvalue { ptr, i64 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i64 } %21, i64 %20, 1
  ret { ptr, i64 } %22

bb5:                                              ; preds = %bb3
  %ok.01 = load ptr, ptr %_5, align 8
  %23 = getelementptr inbounds i8, ptr %_5, i64 8
  %ok.12 = load i64, ptr %23, align 8
  store ptr %ok.01, ptr %_0, align 8
  %24 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %ok.12, ptr %24, align 8
  br label %bb22

bb6:                                              ; preds = %bb3
; call proc_macro2::parse::c_string
  %25 = call { ptr, i64 } @_ZN11proc_macro25parse8c_string17hb17f051016b4c61aE(ptr align 1 %input.0, i64 %input.1)
  %26 = extractvalue { ptr, i64 } %25, 0
  %27 = extractvalue { ptr, i64 } %25, 1
  store ptr %26, ptr %_8, align 8
  %28 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %27, ptr %28, align 8
  %29 = load ptr, ptr %_8, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = icmp eq i64 %30, 0
  %_9 = select i1 %31, i64 1, i64 0
  %32 = icmp eq i64 %_9, 0
  br i1 %32, label %bb8, label %bb9

bb8:                                              ; preds = %bb6
  %ok.03 = load ptr, ptr %_8, align 8
  %33 = getelementptr inbounds i8, ptr %_8, i64 8
  %ok.14 = load i64, ptr %33, align 8
  store ptr %ok.03, ptr %_0, align 8
  %34 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %ok.14, ptr %34, align 8
  br label %bb22

bb9:                                              ; preds = %bb6
; call proc_macro2::parse::byte
  %35 = call { ptr, i64 } @_ZN11proc_macro25parse4byte17h114136f27afe326eE(ptr align 1 %input.0, i64 %input.1)
  %36 = extractvalue { ptr, i64 } %35, 0
  %37 = extractvalue { ptr, i64 } %35, 1
  store ptr %36, ptr %_11, align 8
  %38 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %37, ptr %38, align 8
  %39 = load ptr, ptr %_11, align 8
  %40 = ptrtoint ptr %39 to i64
  %41 = icmp eq i64 %40, 0
  %_12 = select i1 %41, i64 1, i64 0
  %42 = icmp eq i64 %_12, 0
  br i1 %42, label %bb11, label %bb12

bb11:                                             ; preds = %bb9
  %ok.05 = load ptr, ptr %_11, align 8
  %43 = getelementptr inbounds i8, ptr %_11, i64 8
  %ok.16 = load i64, ptr %43, align 8
  store ptr %ok.05, ptr %_0, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %ok.16, ptr %44, align 8
  br label %bb22

bb12:                                             ; preds = %bb9
; call proc_macro2::parse::character
  %45 = call { ptr, i64 } @_ZN11proc_macro25parse9character17he201226a9769e60bE(ptr align 1 %input.0, i64 %input.1)
  %46 = extractvalue { ptr, i64 } %45, 0
  %47 = extractvalue { ptr, i64 } %45, 1
  store ptr %46, ptr %_14, align 8
  %48 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %47, ptr %48, align 8
  %49 = load ptr, ptr %_14, align 8
  %50 = ptrtoint ptr %49 to i64
  %51 = icmp eq i64 %50, 0
  %_15 = select i1 %51, i64 1, i64 0
  %52 = icmp eq i64 %_15, 0
  br i1 %52, label %bb14, label %bb15

bb14:                                             ; preds = %bb12
  %ok.07 = load ptr, ptr %_14, align 8
  %53 = getelementptr inbounds i8, ptr %_14, i64 8
  %ok.18 = load i64, ptr %53, align 8
  store ptr %ok.07, ptr %_0, align 8
  %54 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %ok.18, ptr %54, align 8
  br label %bb22

bb15:                                             ; preds = %bb12
; call proc_macro2::parse::float
  %55 = call { ptr, i64 } @_ZN11proc_macro25parse5float17hec77ceaee603ad7fE(ptr align 1 %input.0, i64 %input.1)
  %56 = extractvalue { ptr, i64 } %55, 0
  %57 = extractvalue { ptr, i64 } %55, 1
  store ptr %56, ptr %_17, align 8
  %58 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %57, ptr %58, align 8
  %59 = load ptr, ptr %_17, align 8
  %60 = ptrtoint ptr %59 to i64
  %61 = icmp eq i64 %60, 0
  %_18 = select i1 %61, i64 1, i64 0
  %62 = icmp eq i64 %_18, 0
  br i1 %62, label %bb17, label %bb18

bb17:                                             ; preds = %bb15
  %ok.09 = load ptr, ptr %_17, align 8
  %63 = getelementptr inbounds i8, ptr %_17, i64 8
  %ok.110 = load i64, ptr %63, align 8
  store ptr %ok.09, ptr %_0, align 8
  %64 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %ok.110, ptr %64, align 8
  br label %bb22

bb18:                                             ; preds = %bb15
; call proc_macro2::parse::int
  %65 = call { ptr, i64 } @_ZN11proc_macro25parse3int17h9618546ca20a292dE(ptr align 1 %input.0, i64 %input.1)
  %66 = extractvalue { ptr, i64 } %65, 0
  %67 = extractvalue { ptr, i64 } %65, 1
  store ptr %66, ptr %_20, align 8
  %68 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 %67, ptr %68, align 8
  %69 = load ptr, ptr %_20, align 8
  %70 = ptrtoint ptr %69 to i64
  %71 = icmp eq i64 %70, 0
  %_21 = select i1 %71, i64 1, i64 0
  %72 = icmp eq i64 %_21, 0
  br i1 %72, label %bb20, label %bb21

bb20:                                             ; preds = %bb18
  %ok.011 = load ptr, ptr %_20, align 8
  %73 = getelementptr inbounds i8, ptr %_20, i64 8
  %ok.112 = load i64, ptr %73, align 8
  store ptr %ok.011, ptr %_0, align 8
  %74 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %ok.112, ptr %74, align 8
  br label %bb22

bb21:                                             ; preds = %bb18
  store ptr null, ptr %_0, align 8
  br label %bb22

bb23:                                             ; No predecessors!
  unreachable
}

; proc_macro2::parse::literal_suffix
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse14literal_suffix17hc2fe4b51dd03033bE(ptr align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %_2 = alloca [32 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call proc_macro2::parse::ident_not_raw
  call void @_ZN11proc_macro25parse13ident_not_raw17h79c65d96005818b0E(ptr sret([32 x i8]) align 8 %_2, ptr align 1 %input.0, i64 %input.1)
  %0 = load ptr, ptr %_2, align 8
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_3 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb4, label %bb3

bb4:                                              ; preds = %start
  %input.01 = load ptr, ptr %_2, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %input.12 = load i64, ptr %4, align 8
  store ptr %input.01, ptr %_0, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %input.12, ptr %5, align 8
  br label %bb5

bb3:                                              ; preds = %start
  store ptr %input.0, ptr %_0, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %input.1, ptr %6, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %7 = load ptr, ptr %_0, align 8
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  %9 = load i64, ptr %8, align 8
  %10 = insertvalue { ptr, i64 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1
  ret { ptr, i64 } %11

bb2:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::string
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse6string17h150467445b434d01E(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_7 = alloca [16 x i8], align 8
  %_2 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::parse
  %3 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %input, ptr align 1 @alloc_cf46f026acc4d198a9acedc9bd1a66b2, i64 1)
  %4 = extractvalue { ptr, i64 } %3, 0
  %5 = extractvalue { ptr, i64 } %3, 1
  store ptr %4, ptr %_2, align 8
  %6 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %5, ptr %6, align 8
  %7 = load ptr, ptr %_2, align 8
  %8 = ptrtoint ptr %7 to i64
  %9 = icmp eq i64 %8, 0
  %_5 = select i1 %9, i64 1, i64 0
  %10 = icmp eq i64 %_5, 0
  br i1 %10, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %input.0 = load ptr, ptr %_2, align 8
  %11 = getelementptr inbounds i8, ptr %_2, i64 8
  %input.1 = load i64, ptr %11, align 8
; call proc_macro2::parse::cooked_string
  %12 = call { ptr, i64 } @_ZN11proc_macro25parse13cooked_string17he5a7ac29de40285eE(ptr align 1 %input.0, i64 %input.1)
  %13 = extractvalue { ptr, i64 } %12, 0
  %14 = extractvalue { ptr, i64 } %12, 1
  store ptr %13, ptr %_0, align 8
  %15 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb7

bb3:                                              ; preds = %start
; call proc_macro2::parse::Cursor::parse
  %16 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %input, ptr align 1 @alloc_c7ca2384edadb766999f3f810e9a1faa, i64 1)
  %17 = extractvalue { ptr, i64 } %16, 0
  %18 = extractvalue { ptr, i64 } %16, 1
  store ptr %17, ptr %_7, align 8
  %19 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %18, ptr %19, align 8
  %20 = load ptr, ptr %_7, align 8
  %21 = ptrtoint ptr %20 to i64
  %22 = icmp eq i64 %21, 0
  %_10 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_10, 0
  br i1 %23, label %bb5, label %bb6

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %24 = load ptr, ptr %_0, align 8
  %25 = getelementptr inbounds i8, ptr %_0, i64 8
  %26 = load i64, ptr %25, align 8
  %27 = insertvalue { ptr, i64 } poison, ptr %24, 0
  %28 = insertvalue { ptr, i64 } %27, i64 %26, 1
  ret { ptr, i64 } %28

bb5:                                              ; preds = %bb3
  %input.01 = load ptr, ptr %_7, align 8
  %29 = getelementptr inbounds i8, ptr %_7, i64 8
  %input.12 = load i64, ptr %29, align 8
; call proc_macro2::parse::raw_string
  %30 = call { ptr, i64 } @_ZN11proc_macro25parse10raw_string17h577974760d44be1aE(ptr align 1 %input.01, i64 %input.12)
  %31 = extractvalue { ptr, i64 } %30, 0
  %32 = extractvalue { ptr, i64 } %30, 1
  store ptr %31, ptr %_0, align 8
  %33 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %32, ptr %33, align 8
  br label %bb7

bb6:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb7

bb8:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::cooked_string
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse13cooked_string17he5a7ac29de40285eE(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_38 = alloca [24 x i8], align 8
  %_33 = alloca [1 x i8], align 1
  %_23 = alloca [4 x i8], align 4
  %_19 = alloca [1 x i8], align 1
  %_16 = alloca [16 x i8], align 8
  %_13 = alloca [16 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  %chars = alloca [24 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5bd9a084a58cb64fE(ptr sret([24 x i8]) align 8 %chars, ptr align 8 %input)
  br label %bb1

bb1:                                              ; preds = %bb4, %bb28, %bb22, %bb14, %bb13, %bb13, %bb13, %bb13, %bb13, %bb13, %bb13, %bb10, %start
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %3 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %4 = extractvalue { i64, i32 } %3, 0
  %5 = extractvalue { i64, i32 } %3, 1
  store i64 %4, ptr %_4, align 8
  %6 = getelementptr inbounds i8, ptr %_4, i64 8
  store i32 %5, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %_4, i64 8
  %8 = load i32, ptr %7, align 8
  %9 = icmp eq i32 %8, 1114112
  %_6 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_6, 1
  br i1 %10, label %bb3, label %bb31

bb3:                                              ; preds = %bb1
  %i = load i64, ptr %_4, align 8
  %11 = getelementptr inbounds i8, ptr %_4, i64 8
  %ch = load i32, ptr %11, align 8
  switch i32 %ch, label %bb4 [
    i32 34, label %bb5
    i32 13, label %bb8
    i32 92, label %bb11
  ]

bb31:                                             ; preds = %bb13, %bb11, %bb10, %bb8, %bb1
  store ptr null, ptr %_0, align 8
  br label %bb32

bb4:                                              ; preds = %bb3
  br label %bb1

bb5:                                              ; preds = %bb3
  %_11 = add i64 %i, 1
; call proc_macro2::parse::Cursor::advance
  %12 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_11)
  %input.0 = extractvalue { ptr, i64 } %12, 0
  %input.1 = extractvalue { ptr, i64 } %12, 1
; call proc_macro2::parse::literal_suffix
  %13 = call { ptr, i64 } @_ZN11proc_macro25parse14literal_suffix17hc2fe4b51dd03033bE(ptr align 1 %input.0, i64 %input.1)
  %_12.0 = extractvalue { ptr, i64 } %13, 0
  %_12.1 = extractvalue { ptr, i64 } %13, 1
  store ptr %_12.0, ptr %_0, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_12.1, ptr %14, align 8
  br label %bb32

bb8:                                              ; preds = %bb3
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %15 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %16 = extractvalue { i64, i32 } %15, 0
  %17 = extractvalue { i64, i32 } %15, 1
  store i64 %16, ptr %_13, align 8
  %18 = getelementptr inbounds i8, ptr %_13, i64 8
  store i32 %17, ptr %18, align 8
  %19 = getelementptr inbounds i8, ptr %_13, i64 8
  %20 = load i32, ptr %19, align 8
  %21 = icmp eq i32 %20, 1114112
  %_15 = select i1 %21, i64 0, i64 1
  %22 = icmp eq i64 %_15, 1
  br i1 %22, label %bb10, label %bb31

bb11:                                             ; preds = %bb3
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %23 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %24 = extractvalue { i64, i32 } %23, 0
  %25 = extractvalue { i64, i32 } %23, 1
  store i64 %24, ptr %_16, align 8
  %26 = getelementptr inbounds i8, ptr %_16, i64 8
  store i32 %25, ptr %26, align 8
  %27 = getelementptr inbounds i8, ptr %_16, i64 8
  %28 = load i32, ptr %27, align 8
  %29 = icmp eq i32 %28, 1114112
  %_18 = select i1 %29, i64 0, i64 1
  %30 = icmp eq i64 %_18, 1
  br i1 %30, label %bb13, label %bb31

bb32:                                             ; preds = %bb31, %bb29, %bb23, %bb18, %bb5
  %31 = load ptr, ptr %_0, align 8
  %32 = getelementptr inbounds i8, ptr %_0, i64 8
  %33 = load i64, ptr %32, align 8
  %34 = insertvalue { ptr, i64 } poison, ptr %31, 0
  %35 = insertvalue { ptr, i64 } %34, i64 %33, 1
  ret { ptr, i64 } %35

bb10:                                             ; preds = %bb8
  %36 = getelementptr inbounds i8, ptr %_13, i64 8
  %37 = load i32, ptr %36, align 8
  %38 = icmp eq i32 %37, 10
  br i1 %38, label %bb1, label %bb31

bb13:                                             ; preds = %bb11
  %39 = getelementptr inbounds i8, ptr %_16, i64 8
  %40 = load i32, ptr %39, align 8
  switch i32 %40, label %bb31 [
    i32 120, label %bb14
    i32 110, label %bb1
    i32 114, label %bb1
    i32 116, label %bb1
    i32 92, label %bb1
    i32 39, label %bb1
    i32 34, label %bb1
    i32 48, label %bb1
    i32 117, label %bb19
    i32 10, label %bb24
    i32 13, label %bb24
  ]

bb14:                                             ; preds = %bb13
; call proc_macro2::parse::backslash_x_char
  %_20 = call zeroext i1 @_ZN11proc_macro25parse16backslash_x_char17h07f0ef420768c37fE(ptr align 8 %chars)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %41 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h041f30f35f5c46e8E"(i1 zeroext %_20)
  %42 = zext i1 %41 to i8
  store i8 %42, ptr %_19, align 1
  %43 = load i8, ptr %_19, align 1
  %44 = trunc i8 %43 to i1
  %_22 = zext i1 %44 to i64
  %45 = icmp eq i64 %_22, 0
  br i1 %45, label %bb1, label %bb18

bb19:                                             ; preds = %bb13
; call proc_macro2::parse::backslash_u
  %_24 = call i32 @_ZN11proc_macro25parse11backslash_u17hd2c5922e87b64e11E(ptr align 8 %chars)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %46 = call i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h015b223d419ca8ffE"(i32 %_24)
  store i32 %46, ptr %_23, align 4
  %47 = load i32, ptr %_23, align 4
  %48 = icmp eq i32 %47, 1114112
  %_26 = select i1 %48, i64 1, i64 0
  %49 = icmp eq i64 %_26, 0
  br i1 %49, label %bb22, label %bb23

bb24:                                             ; preds = %bb13, %bb13
  %newline = load i64, ptr %_16, align 8
  %50 = getelementptr inbounds i8, ptr %_16, i64 8
  %ch1 = load i32, ptr %50, align 8
  %_32 = add i64 %newline, 1
; call proc_macro2::parse::Cursor::advance
  %51 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_32)
  %_30.0 = extractvalue { ptr, i64 } %51, 0
  %_30.1 = extractvalue { ptr, i64 } %51, 1
  store ptr %_30.0, ptr %input, align 8
  %52 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %_30.1, ptr %52, align 8
  %_36 = trunc i32 %ch1 to i8
; call proc_macro2::parse::trailing_backslash
  %_34 = call zeroext i1 @_ZN11proc_macro25parse18trailing_backslash17h79fe3e6fe177fd8bE(ptr align 8 %input, i8 %_36)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %53 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h041f30f35f5c46e8E"(i1 zeroext %_34)
  %54 = zext i1 %53 to i8
  store i8 %54, ptr %_33, align 1
  %55 = load i8, ptr %_33, align 1
  %56 = trunc i8 %55 to i1
  %_37 = zext i1 %56 to i64
  %57 = icmp eq i64 %_37, 0
  br i1 %57, label %bb28, label %bb29

bb18:                                             ; preds = %bb14
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %58 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_3cc5ff44286625411b873e05982e2b23)
  %59 = extractvalue { ptr, i64 } %58, 0
  %60 = extractvalue { ptr, i64 } %58, 1
  store ptr %59, ptr %_0, align 8
  %61 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %60, ptr %61, align 8
  br label %bb32

bb22:                                             ; preds = %bb19
  %val = load i32, ptr %_23, align 4
  br label %bb1

bb23:                                             ; preds = %bb19
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %62 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_be7670d825949a0947a3a95be7389423)
  %63 = extractvalue { ptr, i64 } %62, 0
  %64 = extractvalue { ptr, i64 } %62, 1
  store ptr %63, ptr %_0, align 8
  %65 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %64, ptr %65, align 8
  br label %bb32

bb28:                                             ; preds = %bb24
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5bd9a084a58cb64fE(ptr sret([24 x i8]) align 8 %_38, ptr align 8 %input)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %chars, ptr align 8 %_38, i64 24, i1 false)
  br label %bb1

bb29:                                             ; preds = %bb24
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %66 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_4e45ed8763bfeb285120d5df461eb763)
  %67 = extractvalue { ptr, i64 } %66, 0
  %68 = extractvalue { ptr, i64 } %66, 1
  store ptr %67, ptr %_0, align 8
  %69 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %68, ptr %69, align 8
  br label %bb32

bb17:                                             ; No predecessors!
  unreachable
}

; proc_macro2::parse::raw_string
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse10raw_string17h577974760d44be1aE(ptr align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %_26 = alloca [24 x i8], align 8
  %_11 = alloca [24 x i8], align 8
  %bytes = alloca [24 x i8], align 8
  %val = alloca [32 x i8], align 8
  %_5 = alloca [32 x i8], align 8
  %_4 = alloca [32 x i8], align 8
  %input = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call proc_macro2::parse::delimiter_of_raw_string
  call void @_ZN11proc_macro25parse23delimiter_of_raw_string17h5095b93e03e2f31aE(ptr sret([32 x i8]) align 8 %_5, ptr align 1 %input.0, i64 %input.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4c83adf9d37dcf7cE"(ptr sret([32 x i8]) align 8 %_4, ptr align 8 %_5)
  %0 = load ptr, ptr %_4, align 8
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_6 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_6, 0
  br i1 %3, label %bb4, label %bb5

bb4:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_4, i64 32, i1 false)
  %4 = load ptr, ptr %val, align 8
  %5 = getelementptr inbounds i8, ptr %val, i64 8
  %6 = load i64, ptr %5, align 8
  store ptr %4, ptr %input, align 8
  %7 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %6, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %val, i64 16
  %delimiter.0 = load ptr, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  %delimiter.1 = load i64, ptr %9, align 8
; call proc_macro2::parse::Cursor::bytes
  %10 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %input)
  %_9.0 = extractvalue { ptr, ptr } %10, 0
  %_9.1 = extractvalue { ptr, ptr } %10, 1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd91fc6968f447b8cE(ptr sret([24 x i8]) align 8 %bytes, ptr %_9.0, ptr %_9.1)
  br label %bb7

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %11 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_94b3dcb0165876ef7da94a4ad2dccabb)
  %12 = extractvalue { ptr, i64 } %11, 0
  %13 = extractvalue { ptr, i64 } %11, 1
  store ptr %12, ptr %_0, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %13, ptr %14, align 8
  br label %bb21

bb7:                                              ; preds = %bb19, %bb10, %bb9, %bb4
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_11, ptr align 8 %bytes)
  %_13 = load i64, ptr %_11, align 8
  %15 = icmp eq i64 %_13, 1
  br i1 %15, label %bb9, label %bb20

bb9:                                              ; preds = %bb7
  %16 = getelementptr inbounds i8, ptr %_11, i64 8
  %i = load i64, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %_11, i64 8
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  %byte = load i8, ptr %18, align 8
  switch i8 %byte, label %bb7 [
    i8 34, label %bb10
    i8 13, label %bb17
  ]

bb20:                                             ; preds = %bb19, %bb17, %bb7
  store ptr null, ptr %_0, align 8
  br label %bb21

bb10:                                             ; preds = %bb9
  %_29.0 = load ptr, ptr %input, align 8
  %19 = getelementptr inbounds i8, ptr %input, i64 8
  %_29.1 = load i64, ptr %19, align 8
  %_19 = add i64 %i, 1
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %20 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h6a51beaaf4f29efaE"(ptr align 1 %_29.0, i64 %_29.1, i64 %_19, ptr align 8 @alloc_22736ecf1dcc9e5b21db289516d9e477)
  %_17.0 = extractvalue { ptr, i64 } %20, 0
  %_17.1 = extractvalue { ptr, i64 } %20, 1
; call core::str::<impl str>::starts_with
  %_16 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h33855fa118a0389aE"(ptr align 1 %_17.0, i64 %_17.1, ptr align 1 %delimiter.0, i64 %delimiter.1)
  br i1 %_16, label %bb13, label %bb7

bb17:                                             ; preds = %bb9
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_26, ptr align 8 %bytes)
  %_28 = load i64, ptr %_26, align 8
  %21 = icmp eq i64 %_28, 1
  br i1 %21, label %bb19, label %bb20

bb13:                                             ; preds = %bb10
  %_23 = add i64 %i, 1
; call core::str::<impl str>::len
  %_24 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 %delimiter.0, i64 %delimiter.1)
  %_22 = add i64 %_23, %_24
; call proc_macro2::parse::Cursor::advance
  %22 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_22)
  %rest.0 = extractvalue { ptr, i64 } %22, 0
  %rest.1 = extractvalue { ptr, i64 } %22, 1
; call proc_macro2::parse::literal_suffix
  %23 = call { ptr, i64 } @_ZN11proc_macro25parse14literal_suffix17hc2fe4b51dd03033bE(ptr align 1 %rest.0, i64 %rest.1)
  %_25.0 = extractvalue { ptr, i64 } %23, 0
  %_25.1 = extractvalue { ptr, i64 } %23, 1
  store ptr %_25.0, ptr %_0, align 8
  %24 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_25.1, ptr %24, align 8
  br label %bb21

bb21:                                             ; preds = %bb5, %bb20, %bb13
  %25 = load ptr, ptr %_0, align 8
  %26 = getelementptr inbounds i8, ptr %_0, i64 8
  %27 = load i64, ptr %26, align 8
  %28 = insertvalue { ptr, i64 } poison, ptr %25, 0
  %29 = insertvalue { ptr, i64 } %28, i64 %27, 1
  ret { ptr, i64 } %29

bb19:                                             ; preds = %bb17
  %30 = getelementptr inbounds i8, ptr %_26, i64 8
  %31 = getelementptr inbounds i8, ptr %30, i64 8
  %32 = load i8, ptr %31, align 8
  %33 = icmp eq i8 %32, 10
  br i1 %33, label %bb7, label %bb20

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::byte_string
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse11byte_string17he90801451a3e02edE(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_7 = alloca [16 x i8], align 8
  %_2 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::parse
  %3 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %input, ptr align 1 @alloc_3050fe490e20e8ca0b126453c1f93f49, i64 2)
  %4 = extractvalue { ptr, i64 } %3, 0
  %5 = extractvalue { ptr, i64 } %3, 1
  store ptr %4, ptr %_2, align 8
  %6 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %5, ptr %6, align 8
  %7 = load ptr, ptr %_2, align 8
  %8 = ptrtoint ptr %7 to i64
  %9 = icmp eq i64 %8, 0
  %_5 = select i1 %9, i64 1, i64 0
  %10 = icmp eq i64 %_5, 0
  br i1 %10, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %input.0 = load ptr, ptr %_2, align 8
  %11 = getelementptr inbounds i8, ptr %_2, i64 8
  %input.1 = load i64, ptr %11, align 8
; call proc_macro2::parse::cooked_byte_string
  %12 = call { ptr, i64 } @_ZN11proc_macro25parse18cooked_byte_string17h33a9047c8b8ead7cE(ptr align 1 %input.0, i64 %input.1)
  %13 = extractvalue { ptr, i64 } %12, 0
  %14 = extractvalue { ptr, i64 } %12, 1
  store ptr %13, ptr %_0, align 8
  %15 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb7

bb3:                                              ; preds = %start
; call proc_macro2::parse::Cursor::parse
  %16 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %input, ptr align 1 @alloc_1a50d1b7986d15496f07bc02bc2fa74c, i64 2)
  %17 = extractvalue { ptr, i64 } %16, 0
  %18 = extractvalue { ptr, i64 } %16, 1
  store ptr %17, ptr %_7, align 8
  %19 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %18, ptr %19, align 8
  %20 = load ptr, ptr %_7, align 8
  %21 = ptrtoint ptr %20 to i64
  %22 = icmp eq i64 %21, 0
  %_10 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_10, 0
  br i1 %23, label %bb5, label %bb6

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %24 = load ptr, ptr %_0, align 8
  %25 = getelementptr inbounds i8, ptr %_0, i64 8
  %26 = load i64, ptr %25, align 8
  %27 = insertvalue { ptr, i64 } poison, ptr %24, 0
  %28 = insertvalue { ptr, i64 } %27, i64 %26, 1
  ret { ptr, i64 } %28

bb5:                                              ; preds = %bb3
  %input.01 = load ptr, ptr %_7, align 8
  %29 = getelementptr inbounds i8, ptr %_7, i64 8
  %input.12 = load i64, ptr %29, align 8
; call proc_macro2::parse::raw_byte_string
  %30 = call { ptr, i64 } @_ZN11proc_macro25parse15raw_byte_string17heb4f9e2e160d88b6E(ptr align 1 %input.01, i64 %input.12)
  %31 = extractvalue { ptr, i64 } %30, 0
  %32 = extractvalue { ptr, i64 } %30, 1
  store ptr %31, ptr %_0, align 8
  %33 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %32, ptr %33, align 8
  br label %bb7

bb6:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb7

bb8:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::cooked_byte_string
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse18cooked_byte_string17h33a9047c8b8ead7cE(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_33 = alloca [24 x i8], align 8
  %_29 = alloca [1 x i8], align 1
  %_20 = alloca [1 x i8], align 1
  %_17 = alloca [24 x i8], align 8
  %_14 = alloca [24 x i8], align 8
  %b = alloca [1 x i8], align 1
  %_5 = alloca [24 x i8], align 8
  %bytes = alloca [24 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::bytes
  %3 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %input)
  %_3.0 = extractvalue { ptr, ptr } %3, 0
  %_3.1 = extractvalue { ptr, ptr } %3, 1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd91fc6968f447b8cE(ptr sret([24 x i8]) align 8 %bytes, ptr %_3.0, ptr %_3.1)
  br label %bb2

bb2:                                              ; preds = %bb29, %bb23, %bb14, %bb13, %bb13, %bb13, %bb13, %bb13, %bb13, %bb13, %bb10, %start
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_5, ptr align 8 %bytes)
  %_7 = load i64, ptr %_5, align 8
  %4 = icmp eq i64 %_7, 1
  br i1 %4, label %bb4, label %bb30

bb4:                                              ; preds = %bb2
  %5 = getelementptr inbounds i8, ptr %_5, i64 8
  %offset = load i64, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %_5, i64 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %8 = load i8, ptr %7, align 8
  store i8 %8, ptr %b, align 1
  %9 = load i8, ptr %b, align 1
  switch i8 %9, label %bb27 [
    i8 34, label %bb5
    i8 13, label %bb8
    i8 92, label %bb11
  ]

bb30:                                             ; preds = %bb27, %bb13, %bb11, %bb10, %bb8, %bb2
  store ptr null, ptr %_0, align 8
  br label %bb31

bb27:                                             ; preds = %bb4
; call core::num::<impl u8>::is_ascii
  %_37 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$8is_ascii17h29c107146d85e639E"(ptr align 1 %b)
  br i1 %_37, label %bb29, label %bb30

bb5:                                              ; preds = %bb4
  %_12 = add i64 %offset, 1
; call proc_macro2::parse::Cursor::advance
  %10 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_12)
  %input.0 = extractvalue { ptr, i64 } %10, 0
  %input.1 = extractvalue { ptr, i64 } %10, 1
; call proc_macro2::parse::literal_suffix
  %11 = call { ptr, i64 } @_ZN11proc_macro25parse14literal_suffix17hc2fe4b51dd03033bE(ptr align 1 %input.0, i64 %input.1)
  %_13.0 = extractvalue { ptr, i64 } %11, 0
  %_13.1 = extractvalue { ptr, i64 } %11, 1
  store ptr %_13.0, ptr %_0, align 8
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_13.1, ptr %12, align 8
  br label %bb31

bb8:                                              ; preds = %bb4
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_14, ptr align 8 %bytes)
  %_16 = load i64, ptr %_14, align 8
  %13 = icmp eq i64 %_16, 1
  br i1 %13, label %bb10, label %bb30

bb11:                                             ; preds = %bb4
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_17, ptr align 8 %bytes)
  %_19 = load i64, ptr %_17, align 8
  %14 = icmp eq i64 %_19, 1
  br i1 %14, label %bb13, label %bb30

bb31:                                             ; preds = %bb30, %bb24, %bb18, %bb5
  %15 = load ptr, ptr %_0, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  %17 = load i64, ptr %16, align 8
  %18 = insertvalue { ptr, i64 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i64 } %18, i64 %17, 1
  ret { ptr, i64 } %19

bb10:                                             ; preds = %bb8
  %20 = getelementptr inbounds i8, ptr %_14, i64 8
  %21 = getelementptr inbounds i8, ptr %20, i64 8
  %22 = load i8, ptr %21, align 8
  %23 = icmp eq i8 %22, 10
  br i1 %23, label %bb2, label %bb30

bb13:                                             ; preds = %bb11
  %24 = getelementptr inbounds i8, ptr %_17, i64 8
  %25 = getelementptr inbounds i8, ptr %24, i64 8
  %26 = load i8, ptr %25, align 8
  switch i8 %26, label %bb30 [
    i8 120, label %bb14
    i8 110, label %bb2
    i8 114, label %bb2
    i8 116, label %bb2
    i8 92, label %bb2
    i8 48, label %bb2
    i8 39, label %bb2
    i8 34, label %bb2
    i8 10, label %bb19
    i8 13, label %bb19
  ]

bb14:                                             ; preds = %bb13
; call proc_macro2::parse::backslash_x_byte
  %_21 = call zeroext i1 @_ZN11proc_macro25parse16backslash_x_byte17h0c7cfef94313dee5E(ptr align 8 %bytes)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %27 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h041f30f35f5c46e8E"(i1 zeroext %_21)
  %28 = zext i1 %27 to i8
  store i8 %28, ptr %_20, align 1
  %29 = load i8, ptr %_20, align 1
  %30 = trunc i8 %29 to i1
  %_23 = zext i1 %30 to i64
  %31 = icmp eq i64 %_23, 0
  br i1 %31, label %bb2, label %bb18

bb19:                                             ; preds = %bb13, %bb13
  %32 = getelementptr inbounds i8, ptr %_17, i64 8
  %newline = load i64, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %_17, i64 8
  %34 = getelementptr inbounds i8, ptr %33, i64 8
  %b1 = load i8, ptr %34, align 8
  %_28 = add i64 %newline, 1
; call proc_macro2::parse::Cursor::advance
  %35 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_28)
  %_26.0 = extractvalue { ptr, i64 } %35, 0
  %_26.1 = extractvalue { ptr, i64 } %35, 1
  store ptr %_26.0, ptr %input, align 8
  %36 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %_26.1, ptr %36, align 8
; call proc_macro2::parse::trailing_backslash
  %_30 = call zeroext i1 @_ZN11proc_macro25parse18trailing_backslash17h79fe3e6fe177fd8bE(ptr align 8 %input, i8 %b1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %37 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h041f30f35f5c46e8E"(i1 zeroext %_30)
  %38 = zext i1 %37 to i8
  store i8 %38, ptr %_29, align 1
  %39 = load i8, ptr %_29, align 1
  %40 = trunc i8 %39 to i1
  %_32 = zext i1 %40 to i64
  %41 = icmp eq i64 %_32, 0
  br i1 %41, label %bb23, label %bb24

bb18:                                             ; preds = %bb14
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %42 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_252dc166ffebb279309b0099ff931bf5)
  %43 = extractvalue { ptr, i64 } %42, 0
  %44 = extractvalue { ptr, i64 } %42, 1
  store ptr %43, ptr %_0, align 8
  %45 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %44, ptr %45, align 8
  br label %bb31

bb23:                                             ; preds = %bb19
; call proc_macro2::parse::Cursor::bytes
  %46 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %input)
  %_34.0 = extractvalue { ptr, ptr } %46, 0
  %_34.1 = extractvalue { ptr, ptr } %46, 1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd91fc6968f447b8cE(ptr sret([24 x i8]) align 8 %_33, ptr %_34.0, ptr %_34.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %bytes, ptr align 8 %_33, i64 24, i1 false)
  br label %bb2

bb24:                                             ; preds = %bb19
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %47 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_73039457bd355c986a86daeb7a0e5eec)
  %48 = extractvalue { ptr, i64 } %47, 0
  %49 = extractvalue { ptr, i64 } %47, 1
  store ptr %48, ptr %_0, align 8
  %50 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %49, ptr %50, align 8
  br label %bb31

bb29:                                             ; preds = %bb27
  br label %bb2

bb17:                                             ; No predecessors!
  unreachable
}

; proc_macro2::parse::delimiter_of_raw_string
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse23delimiter_of_raw_string17h5095b93e03e2f31aE(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_13 = alloca [32 x i8], align 8
  %_7 = alloca [24 x i8], align 8
  %iter = alloca [24 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  %_2 = alloca [24 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::bytes
  %3 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %input)
  %_4.0 = extractvalue { ptr, ptr } %3, 0
  %_4.1 = extractvalue { ptr, ptr } %3, 1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd91fc6968f447b8cE(ptr sret([24 x i8]) align 8 %_3, ptr %_4.0, ptr %_4.1)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2d50bd37dcf2ea9dE"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %_3)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %_2, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb7, %start
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_7, ptr align 8 %iter)
  %_9 = load i64, ptr %_7, align 8
  %4 = icmp eq i64 %_9, 0
  br i1 %4, label %bb13, label %bb7

bb13:                                             ; preds = %bb7, %bb4
  store ptr null, ptr %_0, align 8
  br label %bb14

bb7:                                              ; preds = %bb4
  %5 = getelementptr inbounds i8, ptr %_7, i64 8
  %i = load i64, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %_7, i64 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %byte = load i8, ptr %7, align 8
  switch i8 %byte, label %bb13 [
    i8 34, label %bb8
    i8 35, label %bb4
  ]

bb8:                                              ; preds = %bb7
  %_12 = icmp ugt i64 %i, 255
  br i1 %_12, label %bb9, label %bb10

bb10:                                             ; preds = %bb8
  %_16 = add i64 %i, 1
; call proc_macro2::parse::Cursor::advance
  %8 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_16)
  %_14.0 = extractvalue { ptr, i64 } %8, 0
  %_14.1 = extractvalue { ptr, i64 } %8, 1
  %_19.0 = load ptr, ptr %input, align 8
  %9 = getelementptr inbounds i8, ptr %input, i64 8
  %_19.1 = load i64, ptr %9, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %10 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h197e8d84eedb0ca8E"(ptr align 1 %_19.0, i64 %_19.1, i64 %i, ptr align 8 @alloc_a860890a6751586d220a8d35e3539ea9)
  %_17.0 = extractvalue { ptr, i64 } %10, 0
  %_17.1 = extractvalue { ptr, i64 } %10, 1
  store ptr %_14.0, ptr %_13, align 8
  %11 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %_14.1, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %_13, i64 16
  store ptr %_17.0, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  store i64 %_17.1, ptr %13, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_13, i64 32, i1 false)
  br label %bb14

bb9:                                              ; preds = %bb8
  store ptr null, ptr %_0, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb9, %bb10
  ret void

bb6:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::raw_byte_string
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse15raw_byte_string17heb4f9e2e160d88b6E(ptr align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %other = alloca [1 x i8], align 1
  %_26 = alloca [24 x i8], align 8
  %_11 = alloca [24 x i8], align 8
  %bytes = alloca [24 x i8], align 8
  %val = alloca [32 x i8], align 8
  %_5 = alloca [32 x i8], align 8
  %_4 = alloca [32 x i8], align 8
  %input = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call proc_macro2::parse::delimiter_of_raw_string
  call void @_ZN11proc_macro25parse23delimiter_of_raw_string17h5095b93e03e2f31aE(ptr sret([32 x i8]) align 8 %_5, ptr align 1 %input.0, i64 %input.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4c83adf9d37dcf7cE"(ptr sret([32 x i8]) align 8 %_4, ptr align 8 %_5)
  %0 = load ptr, ptr %_4, align 8
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_6 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_6, 0
  br i1 %3, label %bb4, label %bb5

bb4:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_4, i64 32, i1 false)
  %4 = load ptr, ptr %val, align 8
  %5 = getelementptr inbounds i8, ptr %val, i64 8
  %6 = load i64, ptr %5, align 8
  store ptr %4, ptr %input, align 8
  %7 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %6, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %val, i64 16
  %delimiter.0 = load ptr, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  %delimiter.1 = load i64, ptr %9, align 8
; call proc_macro2::parse::Cursor::bytes
  %10 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %input)
  %_9.0 = extractvalue { ptr, ptr } %10, 0
  %_9.1 = extractvalue { ptr, ptr } %10, 1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd91fc6968f447b8cE(ptr sret([24 x i8]) align 8 %bytes, ptr %_9.0, ptr %_9.1)
  br label %bb7

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %11 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_afb8878a1e4270ac72cb46d37b483045)
  %12 = extractvalue { ptr, i64 } %11, 0
  %13 = extractvalue { ptr, i64 } %11, 1
  store ptr %12, ptr %_0, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %13, ptr %14, align 8
  br label %bb23

bb7:                                              ; preds = %bb10, %bb20, %bb4
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_11, ptr align 8 %bytes)
  %_13 = load i64, ptr %_11, align 8
  %15 = icmp eq i64 %_13, 1
  br i1 %15, label %bb9, label %bb22

bb9:                                              ; preds = %bb7
  %16 = getelementptr inbounds i8, ptr %_11, i64 8
  %i = load i64, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %_11, i64 8
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  %byte = load i8, ptr %18, align 8
  switch i8 %byte, label %bb10 [
    i8 34, label %bb11
    i8 13, label %bb18
  ]

bb22:                                             ; preds = %bb10, %bb20, %bb18, %bb7
  store ptr null, ptr %_0, align 8
  br label %bb23

bb10:                                             ; preds = %bb11, %bb9
  store i8 %byte, ptr %other, align 1
; call core::num::<impl u8>::is_ascii
  %_30 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$8is_ascii17h29c107146d85e639E"(ptr align 1 %other)
  br i1 %_30, label %bb7, label %bb22

bb11:                                             ; preds = %bb9
  %_32.0 = load ptr, ptr %input, align 8
  %19 = getelementptr inbounds i8, ptr %input, i64 8
  %_32.1 = load i64, ptr %19, align 8
  %_19 = add i64 %i, 1
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %20 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h6a51beaaf4f29efaE"(ptr align 1 %_32.0, i64 %_32.1, i64 %_19, ptr align 8 @alloc_6abe1930b762e4857a8403952ff57f69)
  %_17.0 = extractvalue { ptr, i64 } %20, 0
  %_17.1 = extractvalue { ptr, i64 } %20, 1
; call core::str::<impl str>::starts_with
  %_16 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h33855fa118a0389aE"(ptr align 1 %_17.0, i64 %_17.1, ptr align 1 %delimiter.0, i64 %delimiter.1)
  br i1 %_16, label %bb14, label %bb10

bb18:                                             ; preds = %bb9
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_26, ptr align 8 %bytes)
  %_28 = load i64, ptr %_26, align 8
  %21 = icmp eq i64 %_28, 1
  br i1 %21, label %bb20, label %bb22

bb14:                                             ; preds = %bb11
  %_23 = add i64 %i, 1
; call core::str::<impl str>::len
  %_24 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 %delimiter.0, i64 %delimiter.1)
  %_22 = add i64 %_23, %_24
; call proc_macro2::parse::Cursor::advance
  %22 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_22)
  %rest.0 = extractvalue { ptr, i64 } %22, 0
  %rest.1 = extractvalue { ptr, i64 } %22, 1
; call proc_macro2::parse::literal_suffix
  %23 = call { ptr, i64 } @_ZN11proc_macro25parse14literal_suffix17hc2fe4b51dd03033bE(ptr align 1 %rest.0, i64 %rest.1)
  %_25.0 = extractvalue { ptr, i64 } %23, 0
  %_25.1 = extractvalue { ptr, i64 } %23, 1
  store ptr %_25.0, ptr %_0, align 8
  %24 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_25.1, ptr %24, align 8
  br label %bb23

bb23:                                             ; preds = %bb5, %bb22, %bb14
  %25 = load ptr, ptr %_0, align 8
  %26 = getelementptr inbounds i8, ptr %_0, i64 8
  %27 = load i64, ptr %26, align 8
  %28 = insertvalue { ptr, i64 } poison, ptr %25, 0
  %29 = insertvalue { ptr, i64 } %28, i64 %27, 1
  ret { ptr, i64 } %29

bb20:                                             ; preds = %bb18
  %30 = getelementptr inbounds i8, ptr %_26, i64 8
  %31 = getelementptr inbounds i8, ptr %30, i64 8
  %32 = load i8, ptr %31, align 8
  %33 = icmp eq i8 %32, 10
  br i1 %33, label %bb7, label %bb22

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::c_string
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse8c_string17hb17f051016b4c61aE(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_7 = alloca [16 x i8], align 8
  %_2 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::parse
  %3 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %input, ptr align 1 @alloc_354e8ac62b06cfdd3362af42ebb90859, i64 2)
  %4 = extractvalue { ptr, i64 } %3, 0
  %5 = extractvalue { ptr, i64 } %3, 1
  store ptr %4, ptr %_2, align 8
  %6 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %5, ptr %6, align 8
  %7 = load ptr, ptr %_2, align 8
  %8 = ptrtoint ptr %7 to i64
  %9 = icmp eq i64 %8, 0
  %_5 = select i1 %9, i64 1, i64 0
  %10 = icmp eq i64 %_5, 0
  br i1 %10, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %input.0 = load ptr, ptr %_2, align 8
  %11 = getelementptr inbounds i8, ptr %_2, i64 8
  %input.1 = load i64, ptr %11, align 8
; call proc_macro2::parse::cooked_c_string
  %12 = call { ptr, i64 } @_ZN11proc_macro25parse15cooked_c_string17he5baf56cc9c673ceE(ptr align 1 %input.0, i64 %input.1)
  %13 = extractvalue { ptr, i64 } %12, 0
  %14 = extractvalue { ptr, i64 } %12, 1
  store ptr %13, ptr %_0, align 8
  %15 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb7

bb3:                                              ; preds = %start
; call proc_macro2::parse::Cursor::parse
  %16 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %input, ptr align 1 @alloc_1bae2be023d341346a677993c977de2b, i64 2)
  %17 = extractvalue { ptr, i64 } %16, 0
  %18 = extractvalue { ptr, i64 } %16, 1
  store ptr %17, ptr %_7, align 8
  %19 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %18, ptr %19, align 8
  %20 = load ptr, ptr %_7, align 8
  %21 = ptrtoint ptr %20 to i64
  %22 = icmp eq i64 %21, 0
  %_10 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_10, 0
  br i1 %23, label %bb5, label %bb6

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %24 = load ptr, ptr %_0, align 8
  %25 = getelementptr inbounds i8, ptr %_0, i64 8
  %26 = load i64, ptr %25, align 8
  %27 = insertvalue { ptr, i64 } poison, ptr %24, 0
  %28 = insertvalue { ptr, i64 } %27, i64 %26, 1
  ret { ptr, i64 } %28

bb5:                                              ; preds = %bb3
  %input.01 = load ptr, ptr %_7, align 8
  %29 = getelementptr inbounds i8, ptr %_7, i64 8
  %input.12 = load i64, ptr %29, align 8
; call proc_macro2::parse::raw_c_string
  %30 = call { ptr, i64 } @_ZN11proc_macro25parse12raw_c_string17hdf6b6c8fec86e2e2E(ptr align 1 %input.01, i64 %input.12)
  %31 = extractvalue { ptr, i64 } %30, 0
  %32 = extractvalue { ptr, i64 } %30, 1
  store ptr %31, ptr %_0, align 8
  %33 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %32, ptr %33, align 8
  br label %bb7

bb6:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb7

bb8:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::raw_c_string
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse12raw_c_string17hdf6b6c8fec86e2e2E(ptr align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %_26 = alloca [24 x i8], align 8
  %_11 = alloca [24 x i8], align 8
  %bytes = alloca [24 x i8], align 8
  %val = alloca [32 x i8], align 8
  %_5 = alloca [32 x i8], align 8
  %_4 = alloca [32 x i8], align 8
  %input = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call proc_macro2::parse::delimiter_of_raw_string
  call void @_ZN11proc_macro25parse23delimiter_of_raw_string17h5095b93e03e2f31aE(ptr sret([32 x i8]) align 8 %_5, ptr align 1 %input.0, i64 %input.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4c83adf9d37dcf7cE"(ptr sret([32 x i8]) align 8 %_4, ptr align 8 %_5)
  %0 = load ptr, ptr %_4, align 8
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_6 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_6, 0
  br i1 %3, label %bb4, label %bb5

bb4:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_4, i64 32, i1 false)
  %4 = load ptr, ptr %val, align 8
  %5 = getelementptr inbounds i8, ptr %val, i64 8
  %6 = load i64, ptr %5, align 8
  store ptr %4, ptr %input, align 8
  %7 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %6, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %val, i64 16
  %delimiter.0 = load ptr, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  %delimiter.1 = load i64, ptr %9, align 8
; call proc_macro2::parse::Cursor::bytes
  %10 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %input)
  %_9.0 = extractvalue { ptr, ptr } %10, 0
  %_9.1 = extractvalue { ptr, ptr } %10, 1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd91fc6968f447b8cE(ptr sret([24 x i8]) align 8 %bytes, ptr %_9.0, ptr %_9.1)
  br label %bb7

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %11 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_e176d1556de9327a25af1cc6586dd6a8)
  %12 = extractvalue { ptr, i64 } %11, 0
  %13 = extractvalue { ptr, i64 } %11, 1
  store ptr %12, ptr %_0, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %13, ptr %14, align 8
  br label %bb21

bb7:                                              ; preds = %bb19, %bb10, %bb9, %bb4
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_11, ptr align 8 %bytes)
  %_13 = load i64, ptr %_11, align 8
  %15 = icmp eq i64 %_13, 1
  br i1 %15, label %bb9, label %bb20

bb9:                                              ; preds = %bb7
  %16 = getelementptr inbounds i8, ptr %_11, i64 8
  %i = load i64, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %_11, i64 8
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  %byte = load i8, ptr %18, align 8
  switch i8 %byte, label %bb7 [
    i8 34, label %bb10
    i8 13, label %bb17
    i8 0, label %bb20
  ]

bb20:                                             ; preds = %bb19, %bb17, %bb9, %bb7
  store ptr null, ptr %_0, align 8
  br label %bb21

bb10:                                             ; preds = %bb9
  %_29.0 = load ptr, ptr %input, align 8
  %19 = getelementptr inbounds i8, ptr %input, i64 8
  %_29.1 = load i64, ptr %19, align 8
  %_19 = add i64 %i, 1
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %20 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h6a51beaaf4f29efaE"(ptr align 1 %_29.0, i64 %_29.1, i64 %_19, ptr align 8 @alloc_0209cf3bfeab477f7b4f4616c8749b2d)
  %_17.0 = extractvalue { ptr, i64 } %20, 0
  %_17.1 = extractvalue { ptr, i64 } %20, 1
; call core::str::<impl str>::starts_with
  %_16 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h33855fa118a0389aE"(ptr align 1 %_17.0, i64 %_17.1, ptr align 1 %delimiter.0, i64 %delimiter.1)
  br i1 %_16, label %bb13, label %bb7

bb17:                                             ; preds = %bb9
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_26, ptr align 8 %bytes)
  %_28 = load i64, ptr %_26, align 8
  %21 = icmp eq i64 %_28, 1
  br i1 %21, label %bb19, label %bb20

bb13:                                             ; preds = %bb10
  %_23 = add i64 %i, 1
; call core::str::<impl str>::len
  %_24 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 %delimiter.0, i64 %delimiter.1)
  %_22 = add i64 %_23, %_24
; call proc_macro2::parse::Cursor::advance
  %22 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_22)
  %rest.0 = extractvalue { ptr, i64 } %22, 0
  %rest.1 = extractvalue { ptr, i64 } %22, 1
; call proc_macro2::parse::literal_suffix
  %23 = call { ptr, i64 } @_ZN11proc_macro25parse14literal_suffix17hc2fe4b51dd03033bE(ptr align 1 %rest.0, i64 %rest.1)
  %_25.0 = extractvalue { ptr, i64 } %23, 0
  %_25.1 = extractvalue { ptr, i64 } %23, 1
  store ptr %_25.0, ptr %_0, align 8
  %24 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_25.1, ptr %24, align 8
  br label %bb21

bb21:                                             ; preds = %bb5, %bb20, %bb13
  %25 = load ptr, ptr %_0, align 8
  %26 = getelementptr inbounds i8, ptr %_0, i64 8
  %27 = load i64, ptr %26, align 8
  %28 = insertvalue { ptr, i64 } poison, ptr %25, 0
  %29 = insertvalue { ptr, i64 } %28, i64 %27, 1
  ret { ptr, i64 } %29

bb19:                                             ; preds = %bb17
  %30 = getelementptr inbounds i8, ptr %_26, i64 8
  %31 = getelementptr inbounds i8, ptr %30, i64 8
  %32 = load i8, ptr %31, align 8
  %33 = icmp eq i8 %32, 10
  br i1 %33, label %bb7, label %bb20

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::cooked_c_string
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse15cooked_c_string17he5baf56cc9c673ceE(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_38 = alloca [24 x i8], align 8
  %_33 = alloca [1 x i8], align 1
  %_23 = alloca [4 x i8], align 4
  %_19 = alloca [1 x i8], align 1
  %_16 = alloca [16 x i8], align 8
  %_13 = alloca [16 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  %chars = alloca [24 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5bd9a084a58cb64fE(ptr sret([24 x i8]) align 8 %chars, ptr align 8 %input)
  br label %bb1

bb1:                                              ; preds = %bb4, %bb28, %bb22, %bb14, %bb13, %bb13, %bb13, %bb13, %bb13, %bb13, %bb10, %start
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %3 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %4 = extractvalue { i64, i32 } %3, 0
  %5 = extractvalue { i64, i32 } %3, 1
  store i64 %4, ptr %_4, align 8
  %6 = getelementptr inbounds i8, ptr %_4, i64 8
  store i32 %5, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %_4, i64 8
  %8 = load i32, ptr %7, align 8
  %9 = icmp eq i32 %8, 1114112
  %_6 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_6, 1
  br i1 %10, label %bb3, label %bb31

bb3:                                              ; preds = %bb1
  %i = load i64, ptr %_4, align 8
  %11 = getelementptr inbounds i8, ptr %_4, i64 8
  %ch = load i32, ptr %11, align 8
  switch i32 %ch, label %bb4 [
    i32 34, label %bb5
    i32 13, label %bb8
    i32 92, label %bb11
    i32 0, label %bb31
  ]

bb31:                                             ; preds = %bb22, %bb13, %bb11, %bb10, %bb8, %bb3, %bb1
  store ptr null, ptr %_0, align 8
  br label %bb32

bb4:                                              ; preds = %bb3
  br label %bb1

bb5:                                              ; preds = %bb3
  %_11 = add i64 %i, 1
; call proc_macro2::parse::Cursor::advance
  %12 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_11)
  %input.0 = extractvalue { ptr, i64 } %12, 0
  %input.1 = extractvalue { ptr, i64 } %12, 1
; call proc_macro2::parse::literal_suffix
  %13 = call { ptr, i64 } @_ZN11proc_macro25parse14literal_suffix17hc2fe4b51dd03033bE(ptr align 1 %input.0, i64 %input.1)
  %_12.0 = extractvalue { ptr, i64 } %13, 0
  %_12.1 = extractvalue { ptr, i64 } %13, 1
  store ptr %_12.0, ptr %_0, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_12.1, ptr %14, align 8
  br label %bb32

bb8:                                              ; preds = %bb3
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %15 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %16 = extractvalue { i64, i32 } %15, 0
  %17 = extractvalue { i64, i32 } %15, 1
  store i64 %16, ptr %_13, align 8
  %18 = getelementptr inbounds i8, ptr %_13, i64 8
  store i32 %17, ptr %18, align 8
  %19 = getelementptr inbounds i8, ptr %_13, i64 8
  %20 = load i32, ptr %19, align 8
  %21 = icmp eq i32 %20, 1114112
  %_15 = select i1 %21, i64 0, i64 1
  %22 = icmp eq i64 %_15, 1
  br i1 %22, label %bb10, label %bb31

bb11:                                             ; preds = %bb3
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %23 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %24 = extractvalue { i64, i32 } %23, 0
  %25 = extractvalue { i64, i32 } %23, 1
  store i64 %24, ptr %_16, align 8
  %26 = getelementptr inbounds i8, ptr %_16, i64 8
  store i32 %25, ptr %26, align 8
  %27 = getelementptr inbounds i8, ptr %_16, i64 8
  %28 = load i32, ptr %27, align 8
  %29 = icmp eq i32 %28, 1114112
  %_18 = select i1 %29, i64 0, i64 1
  %30 = icmp eq i64 %_18, 1
  br i1 %30, label %bb13, label %bb31

bb32:                                             ; preds = %bb31, %bb29, %bb23, %bb18, %bb5
  %31 = load ptr, ptr %_0, align 8
  %32 = getelementptr inbounds i8, ptr %_0, i64 8
  %33 = load i64, ptr %32, align 8
  %34 = insertvalue { ptr, i64 } poison, ptr %31, 0
  %35 = insertvalue { ptr, i64 } %34, i64 %33, 1
  ret { ptr, i64 } %35

bb10:                                             ; preds = %bb8
  %36 = getelementptr inbounds i8, ptr %_13, i64 8
  %37 = load i32, ptr %36, align 8
  %38 = icmp eq i32 %37, 10
  br i1 %38, label %bb1, label %bb31

bb13:                                             ; preds = %bb11
  %39 = getelementptr inbounds i8, ptr %_16, i64 8
  %40 = load i32, ptr %39, align 8
  switch i32 %40, label %bb31 [
    i32 120, label %bb14
    i32 110, label %bb1
    i32 114, label %bb1
    i32 116, label %bb1
    i32 92, label %bb1
    i32 39, label %bb1
    i32 34, label %bb1
    i32 117, label %bb19
    i32 10, label %bb24
    i32 13, label %bb24
  ]

bb14:                                             ; preds = %bb13
; call proc_macro2::parse::backslash_x_nonzero
  %_20 = call zeroext i1 @_ZN11proc_macro25parse19backslash_x_nonzero17h14a934b9498ec76dE(ptr align 8 %chars)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %41 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h041f30f35f5c46e8E"(i1 zeroext %_20)
  %42 = zext i1 %41 to i8
  store i8 %42, ptr %_19, align 1
  %43 = load i8, ptr %_19, align 1
  %44 = trunc i8 %43 to i1
  %_22 = zext i1 %44 to i64
  %45 = icmp eq i64 %_22, 0
  br i1 %45, label %bb1, label %bb18

bb19:                                             ; preds = %bb13
; call proc_macro2::parse::backslash_u
  %_24 = call i32 @_ZN11proc_macro25parse11backslash_u17hd2c5922e87b64e11E(ptr align 8 %chars)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %46 = call i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h015b223d419ca8ffE"(i32 %_24)
  store i32 %46, ptr %_23, align 4
  %47 = load i32, ptr %_23, align 4
  %48 = icmp eq i32 %47, 1114112
  %_26 = select i1 %48, i64 1, i64 0
  %49 = icmp eq i64 %_26, 0
  br i1 %49, label %bb22, label %bb23

bb24:                                             ; preds = %bb13, %bb13
  %newline = load i64, ptr %_16, align 8
  %50 = getelementptr inbounds i8, ptr %_16, i64 8
  %ch1 = load i32, ptr %50, align 8
  %_32 = add i64 %newline, 1
; call proc_macro2::parse::Cursor::advance
  %51 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_32)
  %_30.0 = extractvalue { ptr, i64 } %51, 0
  %_30.1 = extractvalue { ptr, i64 } %51, 1
  store ptr %_30.0, ptr %input, align 8
  %52 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %_30.1, ptr %52, align 8
  %_36 = trunc i32 %ch1 to i8
; call proc_macro2::parse::trailing_backslash
  %_34 = call zeroext i1 @_ZN11proc_macro25parse18trailing_backslash17h79fe3e6fe177fd8bE(ptr align 8 %input, i8 %_36)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %53 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h041f30f35f5c46e8E"(i1 zeroext %_34)
  %54 = zext i1 %53 to i8
  store i8 %54, ptr %_33, align 1
  %55 = load i8, ptr %_33, align 1
  %56 = trunc i8 %55 to i1
  %_37 = zext i1 %56 to i64
  %57 = icmp eq i64 %_37, 0
  br i1 %57, label %bb28, label %bb29

bb18:                                             ; preds = %bb14
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %58 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_a420d794d5a28f6a30753f5133e1498a)
  %59 = extractvalue { ptr, i64 } %58, 0
  %60 = extractvalue { ptr, i64 } %58, 1
  store ptr %59, ptr %_0, align 8
  %61 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %60, ptr %61, align 8
  br label %bb32

bb22:                                             ; preds = %bb19
  %val = load i32, ptr %_23, align 4
  %62 = icmp eq i32 %val, 0
  br i1 %62, label %bb31, label %bb1

bb23:                                             ; preds = %bb19
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %63 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_3b4ad0e6b6a7508615aa41d89d5f2d13)
  %64 = extractvalue { ptr, i64 } %63, 0
  %65 = extractvalue { ptr, i64 } %63, 1
  store ptr %64, ptr %_0, align 8
  %66 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %65, ptr %66, align 8
  br label %bb32

bb28:                                             ; preds = %bb24
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5bd9a084a58cb64fE(ptr sret([24 x i8]) align 8 %_38, ptr align 8 %input)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %chars, ptr align 8 %_38, i64 24, i1 false)
  br label %bb1

bb29:                                             ; preds = %bb24
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %67 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_74f5422b8ef01d44b5949e3dce64fee7)
  %68 = extractvalue { ptr, i64 } %67, 0
  %69 = extractvalue { ptr, i64 } %67, 1
  store ptr %68, ptr %_0, align 8
  %70 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %69, ptr %70, align 8
  br label %bb32

bb17:                                             ; No predecessors!
  unreachable
}

; proc_macro2::parse::byte
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse4byte17h114136f27afe326eE(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_42 = alloca [16 x i8], align 8
  %_39 = alloca [16 x i8], align 8
  %_37 = alloca [16 x i8], align 8
  %_30 = alloca [24 x i8], align 8
  %_29 = alloca [24 x i8], align 8
  %_28 = alloca [24 x i8], align 8
  %b = alloca [2 x i8], align 1
  %_22 = alloca [1 x i8], align 1
  %_18 = alloca [24 x i8], align 8
  %_17 = alloca [2 x i8], align 1
  %_14 = alloca [24 x i8], align 8
  %_13 = alloca [2 x i8], align 1
  %ok = alloca [1 x i8], align 1
  %bytes = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %input1 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::parse
  %3 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %input, ptr align 1 @alloc_c230d367772640e7780c9805d76b7a5a, i64 2)
  %_4.0 = extractvalue { ptr, i64 } %3, 0
  %_4.1 = extractvalue { ptr, i64 } %3, 1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %4 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h705c8c01ecb0d450E"(ptr align 1 %_4.0, i64 %_4.1)
  %5 = extractvalue { ptr, i64 } %4, 0
  %6 = extractvalue { ptr, i64 } %4, 1
  store ptr %5, ptr %_3, align 8
  %7 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %6, ptr %7, align 8
  %8 = load ptr, ptr %_3, align 8
  %9 = ptrtoint ptr %8 to i64
  %10 = icmp eq i64 %9, 0
  %_7 = select i1 %10, i64 1, i64 0
  %11 = icmp eq i64 %_7, 0
  br i1 %11, label %bb4, label %bb5

bb4:                                              ; preds = %start
  %val.0 = load ptr, ptr %_3, align 8
  %12 = getelementptr inbounds i8, ptr %_3, i64 8
  %val.1 = load i64, ptr %12, align 8
  store ptr %val.0, ptr %input1, align 8
  %13 = getelementptr inbounds i8, ptr %input1, i64 8
  store i64 %val.1, ptr %13, align 8
; call proc_macro2::parse::Cursor::bytes
  %14 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %input1)
  %_10.0 = extractvalue { ptr, ptr } %14, 0
  %_10.1 = extractvalue { ptr, ptr } %14, 1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd91fc6968f447b8cE(ptr sret([24 x i8]) align 8 %bytes, ptr %_10.0, ptr %_10.1)
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_14, ptr align 8 %bytes)
; call core::option::Option<T>::map
  %15 = call { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17h77ecd3a3409cd483E"(ptr align 8 %_14)
  %16 = extractvalue { i1, i8 } %15, 0
  %17 = extractvalue { i1, i8 } %15, 1
  %18 = zext i1 %16 to i8
  store i8 %18, ptr %_13, align 1
  %19 = getelementptr inbounds i8, ptr %_13, i64 1
  store i8 %17, ptr %19, align 1
  %20 = load i8, ptr %_13, align 1
  %21 = trunc i8 %20 to i1
  %_16 = zext i1 %21 to i64
  %22 = icmp eq i64 %_16, 1
  br i1 %22, label %bb11, label %bb10

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %23 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_5eb47c7ecc4b80ad9ce95456d5bc6196)
  %24 = extractvalue { ptr, i64 } %23, 0
  %25 = extractvalue { ptr, i64 } %23, 1
  store ptr %24, ptr %_0, align 8
  %26 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %25, ptr %26, align 8
  br label %bb39

bb11:                                             ; preds = %bb4
  %27 = getelementptr inbounds i8, ptr %_13, i64 1
  %28 = load i8, ptr %27, align 1
  %29 = icmp eq i8 %28, 92
  br i1 %29, label %bb12, label %bb10

bb10:                                             ; preds = %bb11, %bb4
  %30 = load i8, ptr %_13, align 1
  %31 = trunc i8 %30 to i1
  %32 = getelementptr inbounds i8, ptr %_13, i64 1
  %33 = load i8, ptr %32, align 1
  %34 = zext i1 %31 to i8
  store i8 %34, ptr %b, align 1
  %35 = getelementptr inbounds i8, ptr %b, i64 1
  store i8 %33, ptr %35, align 1
; call core::option::Option<T>::is_some
  %36 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h569e8a89eda19de5E"(ptr align 1 %b)
  %37 = zext i1 %36 to i8
  store i8 %37, ptr %ok, align 1
  br label %bb20

bb12:                                             ; preds = %bb11
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_18, ptr align 8 %bytes)
; call core::option::Option<T>::map
  %38 = call { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17hf65f361b6762d726E"(ptr align 8 %_18)
  %39 = extractvalue { i1, i8 } %38, 0
  %40 = extractvalue { i1, i8 } %38, 1
  %41 = zext i1 %39 to i8
  store i8 %41, ptr %_17, align 1
  %42 = getelementptr inbounds i8, ptr %_17, i64 1
  store i8 %40, ptr %42, align 1
  %43 = load i8, ptr %_17, align 1
  %44 = trunc i8 %43 to i1
  %_20 = zext i1 %44 to i64
  %45 = icmp eq i64 %_20, 1
  br i1 %45, label %bb16, label %bb15

bb16:                                             ; preds = %bb12
  %46 = getelementptr inbounds i8, ptr %_17, i64 1
  %47 = load i8, ptr %46, align 1
  switch i8 %47, label %bb15 [
    i8 120, label %bb17
    i8 110, label %bb19
    i8 114, label %bb19
    i8 116, label %bb19
    i8 92, label %bb19
    i8 48, label %bb19
    i8 39, label %bb19
    i8 34, label %bb19
  ]

bb15:                                             ; preds = %bb16, %bb12
  store i8 0, ptr %ok, align 1
  br label %bb20

bb17:                                             ; preds = %bb16
; call proc_macro2::parse::backslash_x_byte
  %48 = call zeroext i1 @_ZN11proc_macro25parse16backslash_x_byte17h0c7cfef94313dee5E(ptr align 8 %bytes)
  %49 = zext i1 %48 to i8
  store i8 %49, ptr %_22, align 1
; call core::result::Result<T,E>::is_ok
  %50 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h7be2dc538074a140E"(ptr align 1 %_22)
  %51 = zext i1 %50 to i8
  store i8 %51, ptr %ok, align 1
  br label %bb20

bb19:                                             ; preds = %bb16, %bb16, %bb16, %bb16, %bb16, %bb16, %bb16
  store i8 1, ptr %ok, align 1
  br label %bb20

bb20:                                             ; preds = %bb10, %bb15, %bb19, %bb17
  %52 = load i8, ptr %ok, align 1
  %_26 = trunc i8 %52 to i1
  br i1 %_26, label %bb22, label %bb21

bb21:                                             ; preds = %bb20
  store ptr null, ptr %_0, align 8
  br label %bb39

bb22:                                             ; preds = %bb20
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_30, ptr align 8 %bytes)
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h2409134a6cf7687bE"(ptr sret([24 x i8]) align 8 %_29, ptr align 8 %_30)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdc37b0e4d7cb413dE"(ptr sret([24 x i8]) align 8 %_28, ptr align 8 %_29)
  %_32 = load i64, ptr %_28, align 8
  %53 = icmp eq i64 %_32, 0
  br i1 %53, label %bb26, label %bb27

bb39:                                             ; preds = %bb5, %bb27, %bb37, %bb36, %bb32, %bb21
  %54 = load ptr, ptr %_0, align 8
  %55 = getelementptr inbounds i8, ptr %_0, i64 8
  %56 = load i64, ptr %55, align 8
  %57 = insertvalue { ptr, i64 } poison, ptr %54, 0
  %58 = insertvalue { ptr, i64 } %57, i64 %56, 1
  ret { ptr, i64 } %58

bb26:                                             ; preds = %bb22
  %59 = getelementptr inbounds i8, ptr %_28, i64 8
  %val.02 = load i64, ptr %59, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 8
  %val.13 = load i8, ptr %60, align 8
; call proc_macro2::parse::Cursor::chars
  %61 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5chars17h2f7acab08357ce80E(ptr align 8 %input1)
  %62 = extractvalue { ptr, ptr } %61, 0
  %63 = extractvalue { ptr, ptr } %61, 1
  store ptr %62, ptr %_37, align 8
  %64 = getelementptr inbounds i8, ptr %_37, i64 8
  store ptr %63, ptr %64, align 8
; call core::str::iter::Chars::as_str
  %65 = call { ptr, i64 } @_ZN4core3str4iter5Chars6as_str17h2cc07eda4faa3691E(ptr align 8 %_37)
  %_35.0 = extractvalue { ptr, i64 } %65, 0
  %_35.1 = extractvalue { ptr, i64 } %65, 1
; call core::str::<impl str>::is_char_boundary
  %_34 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h213c77745b6a4bb9E"(ptr align 1 %_35.0, i64 %_35.1, i64 %val.02)
  br i1 %_34, label %bb31, label %bb32

bb27:                                             ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %66 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_7c03eb0430874cebd72f545029a1517e)
  %67 = extractvalue { ptr, i64 } %66, 0
  %68 = extractvalue { ptr, i64 } %66, 1
  store ptr %67, ptr %_0, align 8
  %69 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %68, ptr %69, align 8
  br label %bb39

bb32:                                             ; preds = %bb26
  store ptr null, ptr %_0, align 8
  br label %bb39

bb31:                                             ; preds = %bb26
; call proc_macro2::parse::Cursor::advance
  %70 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input1, i64 %val.02)
  %71 = extractvalue { ptr, i64 } %70, 0
  %72 = extractvalue { ptr, i64 } %70, 1
  store ptr %71, ptr %_42, align 8
  %73 = getelementptr inbounds i8, ptr %_42, i64 8
  store i64 %72, ptr %73, align 8
; call proc_macro2::parse::Cursor::parse
  %74 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %_42, ptr align 1 @alloc_8b81d5a4eae5f23ca3c590a4cd01f630, i64 1)
  %_40.0 = extractvalue { ptr, i64 } %74, 0
  %_40.1 = extractvalue { ptr, i64 } %74, 1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %75 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h705c8c01ecb0d450E"(ptr align 1 %_40.0, i64 %_40.1)
  %76 = extractvalue { ptr, i64 } %75, 0
  %77 = extractvalue { ptr, i64 } %75, 1
  store ptr %76, ptr %_39, align 8
  %78 = getelementptr inbounds i8, ptr %_39, i64 8
  store i64 %77, ptr %78, align 8
  %79 = load ptr, ptr %_39, align 8
  %80 = ptrtoint ptr %79 to i64
  %81 = icmp eq i64 %80, 0
  %_45 = select i1 %81, i64 1, i64 0
  %82 = icmp eq i64 %_45, 0
  br i1 %82, label %bb36, label %bb37

bb36:                                             ; preds = %bb31
  %input.0 = load ptr, ptr %_39, align 8
  %83 = getelementptr inbounds i8, ptr %_39, i64 8
  %input.1 = load i64, ptr %83, align 8
; call proc_macro2::parse::literal_suffix
  %84 = call { ptr, i64 } @_ZN11proc_macro25parse14literal_suffix17hc2fe4b51dd03033bE(ptr align 1 %input.0, i64 %input.1)
  %_47.0 = extractvalue { ptr, i64 } %84, 0
  %_47.1 = extractvalue { ptr, i64 } %84, 1
  store ptr %_47.0, ptr %_0, align 8
  %85 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_47.1, ptr %85, align 8
  br label %bb39

bb37:                                             ; preds = %bb31
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %86 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_d88c228165509910408aff46753347d2)
  %87 = extractvalue { ptr, i64 } %86, 0
  %88 = extractvalue { ptr, i64 } %86, 1
  store ptr %87, ptr %_0, align 8
  %89 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %88, ptr %89, align 8
  br label %bb39

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::byte::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN11proc_macro25parse4byte28_$u7b$$u7b$closure$u7d$$u7d$17hae83d82df0adc770E"(i64 %_2.0, i8 %_2.1) unnamed_addr #0 {
start:
  ret i8 %_2.1
}

; proc_macro2::parse::byte::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN11proc_macro25parse4byte28_$u7b$$u7b$closure$u7d$$u7d$17h60d38292a419d32bE"(i64 %_2.0, i8 %_2.1) unnamed_addr #0 {
start:
  ret i8 %_2.1
}

; proc_macro2::parse::character
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse9character17he201226a9769e60bE(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_39 = alloca [16 x i8], align 8
  %_36 = alloca [16 x i8], align 8
  %_30 = alloca [16 x i8], align 8
  %ch = alloca [4 x i8], align 4
  %_24 = alloca [4 x i8], align 4
  %_21 = alloca [1 x i8], align 1
  %_16 = alloca [4 x i8], align 4
  %_12 = alloca [4 x i8], align 4
  %ok = alloca [1 x i8], align 1
  %chars = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %input1 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::parse
  %3 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %input, ptr align 1 @alloc_8b81d5a4eae5f23ca3c590a4cd01f630, i64 1)
  %_4.0 = extractvalue { ptr, i64 } %3, 0
  %_4.1 = extractvalue { ptr, i64 } %3, 1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %4 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h705c8c01ecb0d450E"(ptr align 1 %_4.0, i64 %_4.1)
  %5 = extractvalue { ptr, i64 } %4, 0
  %6 = extractvalue { ptr, i64 } %4, 1
  store ptr %5, ptr %_3, align 8
  %7 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %6, ptr %7, align 8
  %8 = load ptr, ptr %_3, align 8
  %9 = ptrtoint ptr %8 to i64
  %10 = icmp eq i64 %9, 0
  %_7 = select i1 %10, i64 1, i64 0
  %11 = icmp eq i64 %_7, 0
  br i1 %11, label %bb4, label %bb5

bb4:                                              ; preds = %start
  %val.0 = load ptr, ptr %_3, align 8
  %12 = getelementptr inbounds i8, ptr %_3, i64 8
  %val.1 = load i64, ptr %12, align 8
  store ptr %val.0, ptr %input1, align 8
  %13 = getelementptr inbounds i8, ptr %input1, i64 8
  store i64 %val.1, ptr %13, align 8
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5bd9a084a58cb64fE(ptr sret([24 x i8]) align 8 %chars, ptr align 8 %input1)
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %14 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %_13.0 = extractvalue { i64, i32 } %14, 0
  %_13.1 = extractvalue { i64, i32 } %14, 1
; call core::option::Option<T>::map
  %15 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h3898e5c4679b08b5E"(i64 %_13.0, i32 %_13.1)
  store i32 %15, ptr %_12, align 4
  %16 = load i32, ptr %_12, align 4
  %17 = icmp eq i32 %16, 1114112
  %_15 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_15, 1
  br i1 %18, label %bb10, label %bb9

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %19 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_098fb19257ba5156fa70494d5b2c855d)
  %20 = extractvalue { ptr, i64 } %19, 0
  %21 = extractvalue { ptr, i64 } %19, 1
  store ptr %20, ptr %_0, align 8
  %22 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %21, ptr %22, align 8
  br label %bb35

bb10:                                             ; preds = %bb4
  %23 = load i32, ptr %_12, align 4
  %24 = icmp eq i32 %23, 92
  br i1 %24, label %bb11, label %bb9

bb9:                                              ; preds = %bb10, %bb4
  %25 = load i32, ptr %_12, align 4
  store i32 %25, ptr %ch, align 4
; call core::option::Option<T>::is_some
  %26 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h7d854fe3cc20bfe7E"(ptr align 4 %ch)
  %27 = zext i1 %26 to i8
  store i8 %27, ptr %ok, align 1
  br label %bb21

bb11:                                             ; preds = %bb10
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %28 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %_17.0 = extractvalue { i64, i32 } %28, 0
  %_17.1 = extractvalue { i64, i32 } %28, 1
; call core::option::Option<T>::map
  %29 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h41646620a4ff6ac6E"(i64 %_17.0, i32 %_17.1)
  store i32 %29, ptr %_16, align 4
  %30 = load i32, ptr %_16, align 4
  %31 = icmp eq i32 %30, 1114112
  %_19 = select i1 %31, i64 0, i64 1
  %32 = icmp eq i64 %_19, 1
  br i1 %32, label %bb15, label %bb14

bb15:                                             ; preds = %bb11
  %33 = load i32, ptr %_16, align 4
  switch i32 %33, label %bb14 [
    i32 120, label %bb16
    i32 117, label %bb18
    i32 110, label %bb20
    i32 114, label %bb20
    i32 116, label %bb20
    i32 92, label %bb20
    i32 48, label %bb20
    i32 39, label %bb20
    i32 34, label %bb20
  ]

bb14:                                             ; preds = %bb15, %bb11
  store i8 0, ptr %ok, align 1
  br label %bb21

bb16:                                             ; preds = %bb15
; call proc_macro2::parse::backslash_x_char
  %34 = call zeroext i1 @_ZN11proc_macro25parse16backslash_x_char17h07f0ef420768c37fE(ptr align 8 %chars)
  %35 = zext i1 %34 to i8
  store i8 %35, ptr %_21, align 1
; call core::result::Result<T,E>::is_ok
  %36 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h7be2dc538074a140E"(ptr align 1 %_21)
  %37 = zext i1 %36 to i8
  store i8 %37, ptr %ok, align 1
  br label %bb21

bb18:                                             ; preds = %bb15
; call proc_macro2::parse::backslash_u
  %38 = call i32 @_ZN11proc_macro25parse11backslash_u17hd2c5922e87b64e11E(ptr align 8 %chars)
  store i32 %38, ptr %_24, align 4
; call core::result::Result<T,E>::is_ok
  %39 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hdc96799374bc9093E"(ptr align 4 %_24)
  %40 = zext i1 %39 to i8
  store i8 %40, ptr %ok, align 1
  br label %bb21

bb20:                                             ; preds = %bb15, %bb15, %bb15, %bb15, %bb15, %bb15, %bb15
  store i8 1, ptr %ok, align 1
  br label %bb21

bb21:                                             ; preds = %bb9, %bb14, %bb20, %bb18, %bb16
  %41 = load i8, ptr %ok, align 1
  %_28 = trunc i8 %41 to i1
  br i1 %_28, label %bb23, label %bb22

bb22:                                             ; preds = %bb21
  store ptr null, ptr %_0, align 8
  br label %bb35

bb23:                                             ; preds = %bb21
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %42 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %_32.0 = extractvalue { i64, i32 } %42, 0
  %_32.1 = extractvalue { i64, i32 } %42, 1
; call core::option::Option<T>::ok_or
  %43 = call { i64, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17head6a7e7518d104bE"(i64 %_32.0, i32 %_32.1)
  %_31.0 = extractvalue { i64, i32 } %43, 0
  %_31.1 = extractvalue { i64, i32 } %43, 1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %44 = call { i64, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c7ece78f93c9a1dE"(i64 %_31.0, i32 %_31.1)
  %45 = extractvalue { i64, i32 } %44, 0
  %46 = extractvalue { i64, i32 } %44, 1
  store i64 %45, ptr %_30, align 8
  %47 = getelementptr inbounds i8, ptr %_30, i64 8
  store i32 %46, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %_30, i64 8
  %49 = load i32, ptr %48, align 8
  %50 = icmp eq i32 %49, 1114112
  %_34 = select i1 %50, i64 1, i64 0
  %51 = icmp eq i64 %_34, 0
  br i1 %51, label %bb27, label %bb28

bb35:                                             ; preds = %bb5, %bb28, %bb33, %bb32, %bb22
  %52 = load ptr, ptr %_0, align 8
  %53 = getelementptr inbounds i8, ptr %_0, i64 8
  %54 = load i64, ptr %53, align 8
  %55 = insertvalue { ptr, i64 } poison, ptr %52, 0
  %56 = insertvalue { ptr, i64 } %55, i64 %54, 1
  ret { ptr, i64 } %56

bb27:                                             ; preds = %bb23
  %val.02 = load i64, ptr %_30, align 8
  %57 = getelementptr inbounds i8, ptr %_30, i64 8
  %val.13 = load i32, ptr %57, align 8
; call proc_macro2::parse::Cursor::advance
  %58 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input1, i64 %val.02)
  %59 = extractvalue { ptr, i64 } %58, 0
  %60 = extractvalue { ptr, i64 } %58, 1
  store ptr %59, ptr %_39, align 8
  %61 = getelementptr inbounds i8, ptr %_39, i64 8
  store i64 %60, ptr %61, align 8
; call proc_macro2::parse::Cursor::parse
  %62 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor5parse17h3d215ac1cd5bd499E(ptr align 8 %_39, ptr align 1 @alloc_8b81d5a4eae5f23ca3c590a4cd01f630, i64 1)
  %_37.0 = extractvalue { ptr, i64 } %62, 0
  %_37.1 = extractvalue { ptr, i64 } %62, 1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %63 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h705c8c01ecb0d450E"(ptr align 1 %_37.0, i64 %_37.1)
  %64 = extractvalue { ptr, i64 } %63, 0
  %65 = extractvalue { ptr, i64 } %63, 1
  store ptr %64, ptr %_36, align 8
  %66 = getelementptr inbounds i8, ptr %_36, i64 8
  store i64 %65, ptr %66, align 8
  %67 = load ptr, ptr %_36, align 8
  %68 = ptrtoint ptr %67 to i64
  %69 = icmp eq i64 %68, 0
  %_42 = select i1 %69, i64 1, i64 0
  %70 = icmp eq i64 %_42, 0
  br i1 %70, label %bb32, label %bb33

bb28:                                             ; preds = %bb23
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %71 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_00bc14d34de57cbc36fbb60db20ab230)
  %72 = extractvalue { ptr, i64 } %71, 0
  %73 = extractvalue { ptr, i64 } %71, 1
  store ptr %72, ptr %_0, align 8
  %74 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %73, ptr %74, align 8
  br label %bb35

bb32:                                             ; preds = %bb27
  %input.0 = load ptr, ptr %_36, align 8
  %75 = getelementptr inbounds i8, ptr %_36, i64 8
  %input.1 = load i64, ptr %75, align 8
; call proc_macro2::parse::literal_suffix
  %76 = call { ptr, i64 } @_ZN11proc_macro25parse14literal_suffix17hc2fe4b51dd03033bE(ptr align 1 %input.0, i64 %input.1)
  %_44.0 = extractvalue { ptr, i64 } %76, 0
  %_44.1 = extractvalue { ptr, i64 } %76, 1
  store ptr %_44.0, ptr %_0, align 8
  %77 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_44.1, ptr %77, align 8
  br label %bb35

bb33:                                             ; preds = %bb27
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %78 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_a097579a7e3e8aad8744ae7276559d35)
  %79 = extractvalue { ptr, i64 } %78, 0
  %80 = extractvalue { ptr, i64 } %78, 1
  store ptr %79, ptr %_0, align 8
  %81 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %80, ptr %81, align 8
  br label %bb35

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::character::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN11proc_macro25parse9character28_$u7b$$u7b$closure$u7d$$u7d$17hfde333cf12f9597eE"(i64 %_2.0, i32 %_2.1) unnamed_addr #0 {
start:
  ret i32 %_2.1
}

; proc_macro2::parse::character::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN11proc_macro25parse9character28_$u7b$$u7b$closure$u7d$$u7d$17h477beb8b765bad15E"(i64 %_2.0, i32 %_2.1) unnamed_addr #0 {
start:
  ret i32 %_2.1
}

; proc_macro2::parse::backslash_x_char
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse16backslash_x_char17h07f0ef420768c37fE(ptr align 8 %chars) unnamed_addr #1 {
start:
  %_7 = alloca [16 x i8], align 8
  %_2 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %0 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %1 = extractvalue { i64, i32 } %0, 0
  %2 = extractvalue { i64, i32 } %0, 1
  store i64 %1, ptr %_2, align 8
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  store i32 %2, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 1114112
  %_3 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_3, 0
  br i1 %7, label %bb3, label %bb4

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb18

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_2, i64 8
  %ch = load i32, ptr %8, align 8
  %_5 = icmp ule i32 48, %ch
  br i1 %_5, label %bb7, label %bb5

bb18:                                             ; preds = %bb17, %bb11, %bb9, %bb5, %bb3
  %9 = load i8, ptr %_0, align 1
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb5:                                              ; preds = %bb7, %bb4
  store i8 1, ptr %_0, align 1
  br label %bb18

bb7:                                              ; preds = %bb4
  %_6 = icmp ule i32 %ch, 55
  br i1 %_6, label %bb6, label %bb5

bb6:                                              ; preds = %bb7
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %11 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %12 = extractvalue { i64, i32 } %11, 0
  %13 = extractvalue { i64, i32 } %11, 1
  store i64 %12, ptr %_7, align 8
  %14 = getelementptr inbounds i8, ptr %_7, i64 8
  store i32 %13, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %_7, i64 8
  %16 = load i32, ptr %15, align 8
  %17 = icmp eq i32 %16, 1114112
  %_8 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_8, 0
  br i1 %18, label %bb9, label %bb10

bb9:                                              ; preds = %bb6
  store i8 1, ptr %_0, align 1
  br label %bb18

bb10:                                             ; preds = %bb6
  %19 = getelementptr inbounds i8, ptr %_7, i64 8
  %ch1 = load i32, ptr %19, align 8
  %_14 = icmp ule i32 48, %ch1
  br i1 %_14, label %bb16, label %bb12

bb12:                                             ; preds = %bb16, %bb10
  %_12 = icmp ule i32 97, %ch1
  br i1 %_12, label %bb15, label %bb13

bb16:                                             ; preds = %bb10
  %_15 = icmp ule i32 %ch1, 57
  br i1 %_15, label %bb17, label %bb12

bb17:                                             ; preds = %bb14, %bb15, %bb16
  store i8 0, ptr %_0, align 1
  br label %bb18

bb13:                                             ; preds = %bb15, %bb12
  %_10 = icmp ule i32 65, %ch1
  br i1 %_10, label %bb14, label %bb11

bb15:                                             ; preds = %bb12
  %_13 = icmp ule i32 %ch1, 102
  br i1 %_13, label %bb17, label %bb13

bb11:                                             ; preds = %bb14, %bb13
  store i8 1, ptr %_0, align 1
  br label %bb18

bb14:                                             ; preds = %bb13
  %_11 = icmp ule i32 %ch1, 70
  br i1 %_11, label %bb17, label %bb11

bb2:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::backslash_x_byte
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse16backslash_x_byte17h0c7cfef94313dee5E(ptr align 8 %chars) unnamed_addr #1 {
start:
  %_11 = alloca [24 x i8], align 8
  %_2 = alloca [24 x i8], align 8
  %_0 = alloca [1 x i8], align 1
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %chars)
  %_3 = load i64, ptr %_2, align 8
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb3, label %bb4

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb22

bb4:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_2, i64 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %ch = load i8, ptr %2, align 8
  %_9 = icmp ule i8 48, %ch
  br i1 %_9, label %bb10, label %bb6

bb22:                                             ; preds = %bb21, %bb15, %bb13, %bb5, %bb3
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb6:                                              ; preds = %bb10, %bb4
  %_7 = icmp ule i8 97, %ch
  br i1 %_7, label %bb9, label %bb7

bb10:                                             ; preds = %bb4
  %_10 = icmp ule i8 %ch, 57
  br i1 %_10, label %bb11, label %bb6

bb11:                                             ; preds = %bb8, %bb9, %bb10
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_11, ptr align 8 %chars)
  %_12 = load i64, ptr %_11, align 8
  %5 = icmp eq i64 %_12, 0
  br i1 %5, label %bb13, label %bb14

bb7:                                              ; preds = %bb9, %bb6
  %_5 = icmp ule i8 65, %ch
  br i1 %_5, label %bb8, label %bb5

bb9:                                              ; preds = %bb6
  %_8 = icmp ule i8 %ch, 102
  br i1 %_8, label %bb11, label %bb7

bb5:                                              ; preds = %bb8, %bb7
  store i8 1, ptr %_0, align 1
  br label %bb22

bb8:                                              ; preds = %bb7
  %_6 = icmp ule i8 %ch, 70
  br i1 %_6, label %bb11, label %bb5

bb13:                                             ; preds = %bb11
  store i8 1, ptr %_0, align 1
  br label %bb22

bb14:                                             ; preds = %bb11
  %6 = getelementptr inbounds i8, ptr %_11, i64 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %ch1 = load i8, ptr %7, align 8
  %_18 = icmp ule i8 48, %ch1
  br i1 %_18, label %bb20, label %bb16

bb16:                                             ; preds = %bb20, %bb14
  %_16 = icmp ule i8 97, %ch1
  br i1 %_16, label %bb19, label %bb17

bb20:                                             ; preds = %bb14
  %_19 = icmp ule i8 %ch1, 57
  br i1 %_19, label %bb21, label %bb16

bb21:                                             ; preds = %bb18, %bb19, %bb20
  store i8 0, ptr %_0, align 1
  br label %bb22

bb17:                                             ; preds = %bb19, %bb16
  %_14 = icmp ule i8 65, %ch1
  br i1 %_14, label %bb18, label %bb15

bb19:                                             ; preds = %bb16
  %_17 = icmp ule i8 %ch1, 102
  br i1 %_17, label %bb21, label %bb17

bb15:                                             ; preds = %bb18, %bb17
  store i8 1, ptr %_0, align 1
  br label %bb22

bb18:                                             ; preds = %bb17
  %_15 = icmp ule i8 %ch1, 70
  br i1 %_15, label %bb21, label %bb15

bb2:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::backslash_x_nonzero
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse19backslash_x_nonzero17h14a934b9498ec76dE(ptr align 8 %chars) unnamed_addr #1 {
start:
  %_11 = alloca [16 x i8], align 8
  %_2 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %0 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %1 = extractvalue { i64, i32 } %0, 0
  %2 = extractvalue { i64, i32 } %0, 1
  store i64 %1, ptr %_2, align 8
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  store i32 %2, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 1114112
  %_3 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_3, 0
  br i1 %7, label %bb3, label %bb4

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb25

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_2, i64 8
  %first = load i32, ptr %8, align 8
  %_9 = icmp ule i32 48, %first
  br i1 %_9, label %bb10, label %bb6

bb25:                                             ; preds = %bb24, %bb23, %bb15, %bb13, %bb5, %bb3
  %9 = load i8, ptr %_0, align 1
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb6:                                              ; preds = %bb10, %bb4
  %_7 = icmp ule i32 97, %first
  br i1 %_7, label %bb9, label %bb7

bb10:                                             ; preds = %bb4
  %_10 = icmp ule i32 %first, 57
  br i1 %_10, label %bb11, label %bb6

bb11:                                             ; preds = %bb8, %bb9, %bb10
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %11 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %12 = extractvalue { i64, i32 } %11, 0
  %13 = extractvalue { i64, i32 } %11, 1
  store i64 %12, ptr %_11, align 8
  %14 = getelementptr inbounds i8, ptr %_11, i64 8
  store i32 %13, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %_11, i64 8
  %16 = load i32, ptr %15, align 8
  %17 = icmp eq i32 %16, 1114112
  %_12 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_12, 0
  br i1 %18, label %bb13, label %bb14

bb7:                                              ; preds = %bb9, %bb6
  %_5 = icmp ule i32 65, %first
  br i1 %_5, label %bb8, label %bb5

bb9:                                              ; preds = %bb6
  %_8 = icmp ule i32 %first, 102
  br i1 %_8, label %bb11, label %bb7

bb5:                                              ; preds = %bb8, %bb7
  store i8 1, ptr %_0, align 1
  br label %bb25

bb8:                                              ; preds = %bb7
  %_6 = icmp ule i32 %first, 70
  br i1 %_6, label %bb11, label %bb5

bb13:                                             ; preds = %bb11
  store i8 1, ptr %_0, align 1
  br label %bb25

bb14:                                             ; preds = %bb11
  %19 = getelementptr inbounds i8, ptr %_11, i64 8
  %second = load i32, ptr %19, align 8
  %_18 = icmp ule i32 48, %second
  br i1 %_18, label %bb20, label %bb16

bb16:                                             ; preds = %bb20, %bb14
  %_16 = icmp ule i32 97, %second
  br i1 %_16, label %bb19, label %bb17

bb20:                                             ; preds = %bb14
  %_19 = icmp ule i32 %second, 57
  br i1 %_19, label %bb21, label %bb16

bb21:                                             ; preds = %bb18, %bb19, %bb20
  %20 = icmp eq i32 %first, 48
  br i1 %20, label %bb22, label %bb24

bb17:                                             ; preds = %bb19, %bb16
  %_14 = icmp ule i32 65, %second
  br i1 %_14, label %bb18, label %bb15

bb19:                                             ; preds = %bb16
  %_17 = icmp ule i32 %second, 102
  br i1 %_17, label %bb21, label %bb17

bb15:                                             ; preds = %bb18, %bb17
  store i8 1, ptr %_0, align 1
  br label %bb25

bb18:                                             ; preds = %bb17
  %_15 = icmp ule i32 %second, 70
  br i1 %_15, label %bb21, label %bb15

bb22:                                             ; preds = %bb21
  %21 = icmp eq i32 %second, 48
  br i1 %21, label %bb23, label %bb24

bb24:                                             ; preds = %bb22, %bb21
  store i8 0, ptr %_0, align 1
  br label %bb25

bb23:                                             ; preds = %bb22
  store i8 1, ptr %_0, align 1
  br label %bb25

bb2:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::backslash_u
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro25parse11backslash_u17hd2c5922e87b64e11E(ptr align 8 %chars) unnamed_addr #1 {
start:
  %digit = alloca [1 x i8], align 1
  %_9 = alloca [16 x i8], align 8
  %iter = alloca [8 x i8], align 8
  %len = alloca [4 x i8], align 4
  %value = alloca [4 x i8], align 4
  %_2 = alloca [16 x i8], align 8
  %_0 = alloca [4 x i8], align 4
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %0 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %chars)
  %1 = extractvalue { i64, i32 } %0, 0
  %2 = extractvalue { i64, i32 } %0, 1
  store i64 %1, ptr %_2, align 8
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  store i32 %2, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 1114112
  %_3 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_3, 0
  br i1 %7, label %bb3, label %bb4

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4
  br label %bb28

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_2, i64 8
  %ch = load i32, ptr %8, align 8
  %9 = icmp eq i32 %ch, 123
  br i1 %9, label %bb6, label %bb5

bb28:                                             ; preds = %bb5, %bb27, %bb22, %bb3
  %10 = load i32, ptr %_0, align 4
  ret i32 %10

bb6:                                              ; preds = %bb4
  store i32 0, ptr %value, align 4
  store i32 0, ptr %len, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_7 = call align 8 ptr @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5589a3e80b0bdf87E"(ptr align 8 %chars)
  store ptr %_7, ptr %iter, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
  store i32 1114112, ptr %_0, align 4
  br label %bb28

bb8:                                              ; preds = %bb25, %bb20, %bb6
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %11 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd0211b259709241aE"(ptr align 8 %iter)
  %12 = extractvalue { i64, i32 } %11, 0
  %13 = extractvalue { i64, i32 } %11, 1
  store i64 %12, ptr %_9, align 8
  %14 = getelementptr inbounds i8, ptr %_9, i64 8
  store i32 %13, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %_9, i64 8
  %16 = load i32, ptr %15, align 8
  %17 = icmp eq i32 %16, 1114112
  %_11 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_11, 0
  br i1 %18, label %bb27, label %bb10

bb27:                                             ; preds = %bb24, %bb21, %bb20, %bb16, %bb8
  store i32 1114112, ptr %_0, align 4
  br label %bb28

bb10:                                             ; preds = %bb8
  %19 = getelementptr inbounds i8, ptr %_9, i64 8
  %ch1 = load i32, ptr %19, align 8
  %_18 = icmp ule i32 48, %ch1
  br i1 %_18, label %bb19, label %bb12

bb12:                                             ; preds = %bb19, %bb10
  %_16 = icmp ule i32 97, %ch1
  br i1 %_16, label %bb18, label %bb14

bb19:                                             ; preds = %bb10
  %_19 = icmp ule i32 %ch1, 57
  br i1 %_19, label %bb11, label %bb12

bb11:                                             ; preds = %bb19
  %_20 = trunc i32 %ch1 to i8
  %20 = sub i8 %_20, 48
  store i8 %20, ptr %digit, align 1
  br label %bb24

bb14:                                             ; preds = %bb18, %bb12
  %_14 = icmp ule i32 65, %ch1
  br i1 %_14, label %bb17, label %bb16

bb18:                                             ; preds = %bb12
  %_17 = icmp ule i32 %ch1, 102
  br i1 %_17, label %bb13, label %bb14

bb13:                                             ; preds = %bb18
  %_22 = trunc i32 %ch1 to i8
  %_21 = add i8 10, %_22
  %21 = sub i8 %_21, 97
  store i8 %21, ptr %digit, align 1
  br label %bb24

bb16:                                             ; preds = %bb17, %bb14
  switch i32 %ch1, label %bb27 [
    i32 95, label %bb20
    i32 125, label %bb21
  ]

bb17:                                             ; preds = %bb14
  %_15 = icmp ule i32 %ch1, 70
  br i1 %_15, label %bb15, label %bb16

bb15:                                             ; preds = %bb17
  %_24 = trunc i32 %ch1 to i8
  %_23 = add i8 10, %_24
  %22 = sub i8 %_23, 65
  store i8 %22, ptr %digit, align 1
  br label %bb24

bb20:                                             ; preds = %bb16
  %_26 = load i32, ptr %len, align 4
  %_25 = icmp sgt i32 %_26, 0
  br i1 %_25, label %bb8, label %bb27

bb21:                                             ; preds = %bb16
  %_28 = load i32, ptr %len, align 4
  %_27 = icmp sgt i32 %_28, 0
  br i1 %_27, label %bb22, label %bb27

bb22:                                             ; preds = %bb21
  %_30 = load i32, ptr %value, align 4
; call core::char::from_u32
  %_29 = call i32 @_ZN4core4char8from_u3217h1772704f89439240E(i32 %_30)
; call core::option::Option<T>::ok_or
  %23 = call i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17h72f90ef19e2267ecE"(i32 %_29)
  store i32 %23, ptr %_0, align 4
  br label %bb28

bb24:                                             ; preds = %bb11, %bb13, %bb15
  %_31 = load i32, ptr %len, align 4
  %24 = icmp eq i32 %_31, 6
  br i1 %24, label %bb27, label %bb25

bb25:                                             ; preds = %bb24
  %25 = load i32, ptr %value, align 4
  %26 = mul i32 %25, 16
  store i32 %26, ptr %value, align 4
  %_33 = load i8, ptr %digit, align 1
  %_0.i = zext i8 %_33 to i32
  %27 = load i32, ptr %value, align 4
  %28 = add i32 %27, %_0.i
  store i32 %28, ptr %value, align 4
  %29 = load i32, ptr %len, align 4
  %30 = add i32 %29, 1
  store i32 %30, ptr %len, align 4
  br label %bb8

bb2:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::trailing_backslash
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse18trailing_backslash17h79fe3e6fe177fd8bE(ptr align 8 %input, i8 %0) unnamed_addr #1 {
start:
  %_10 = alloca [24 x i8], align 8
  %_8 = alloca [24 x i8], align 8
  %whitespace = alloca [24 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %last = alloca [1 x i8], align 1
  store i8 %0, ptr %last, align 1
; call proc_macro2::parse::Cursor::bytes
  %1 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %input)
  %_4.0 = extractvalue { ptr, ptr } %1, 0
  %_4.1 = extractvalue { ptr, ptr } %1, 1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd91fc6968f447b8cE(ptr sret([24 x i8]) align 8 %whitespace, ptr %_4.0, ptr %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb12, %start
  %_6 = load i8, ptr %last, align 1
  %2 = icmp eq i8 %_6, 13
  br i1 %2, label %bb3, label %bb7

bb3:                                              ; preds = %bb2
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_8, ptr align 8 %whitespace)
; call core::option::Option<T>::map_or
  %_7 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17h1672abf021d31527E"(ptr align 8 %_8, i1 zeroext true)
  br i1 %_7, label %bb6, label %bb7

bb7:                                              ; preds = %bb3, %bb2
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3cc4f60dcb6cb46aE"(ptr sret([24 x i8]) align 8 %_10, ptr align 8 %whitespace)
  %_12 = load i64, ptr %_10, align 8
  %3 = icmp eq i64 %_12, 0
  br i1 %3, label %bb11, label %bb10

bb6:                                              ; preds = %bb3
  store i8 1, ptr %_0, align 1
  br label %bb15

bb15:                                             ; preds = %bb13, %bb11, %bb6
  %4 = load i8, ptr %_0, align 1
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb11:                                             ; preds = %bb7
  store i8 1, ptr %_0, align 1
  br label %bb15

bb10:                                             ; preds = %bb7
  %6 = getelementptr inbounds i8, ptr %_10, i64 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %8 = load i8, ptr %7, align 8
  switch i8 %8, label %bb13 [
    i8 32, label %bb12
    i8 9, label %bb12
    i8 10, label %bb12
    i8 13, label %bb12
  ]

bb13:                                             ; preds = %bb10
  %9 = getelementptr inbounds i8, ptr %_10, i64 8
  %offset = load i64, ptr %9, align 8
; call proc_macro2::parse::Cursor::advance
  %10 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %offset)
  %_15.0 = extractvalue { ptr, i64 } %10, 0
  %_15.1 = extractvalue { ptr, i64 } %10, 1
  store ptr %_15.0, ptr %input, align 8
  %11 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %_15.1, ptr %11, align 8
  store i8 0, ptr %_0, align 1
  br label %bb15

bb12:                                             ; preds = %bb10, %bb10, %bb10, %bb10
  %12 = getelementptr inbounds i8, ptr %_10, i64 8
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %b = load i8, ptr %13, align 8
  store i8 %b, ptr %last, align 1
  br label %bb2

bb9:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::trailing_backslash::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro25parse18trailing_backslash28_$u7b$$u7b$closure$u7d$$u7d$17hfd2ac76fad59c85fE"(i64 %_2.0, i8 %_2.1) unnamed_addr #0 {
start:
  %_0 = icmp ne i8 %_2.1, 10
  ret i1 %_0
}

; proc_macro2::parse::float
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse5float17hec77ceaee603ad7fE(ptr align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %val = alloca [32 x i8], align 8
  %_16 = alloca [32 x i8], align 8
  %_15 = alloca [32 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  %_7 = alloca [4 x i8], align 4
  %_3 = alloca [16 x i8], align 8
  %rest = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call proc_macro2::parse::float_digits
  %0 = call { ptr, i64 } @_ZN11proc_macro25parse12float_digits17h6147e0ada53d8063E(ptr align 1 %input.0, i64 %input.1)
  %_4.0 = extractvalue { ptr, i64 } %0, 0
  %_4.1 = extractvalue { ptr, i64 } %0, 1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %1 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h705c8c01ecb0d450E"(ptr align 1 %_4.0, i64 %_4.1)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %_3, align 8
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %_3, align 8
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 1, i64 0
  %8 = icmp eq i64 %_5, 0
  br i1 %8, label %bb4, label %bb5

bb4:                                              ; preds = %start
  %val.0 = load ptr, ptr %_3, align 8
  %9 = getelementptr inbounds i8, ptr %_3, i64 8
  %val.1 = load i64, ptr %9, align 8
  store ptr %val.0, ptr %rest, align 8
  %10 = getelementptr inbounds i8, ptr %rest, i64 8
  store i64 %val.1, ptr %10, align 8
; call proc_macro2::parse::Cursor::chars
  %11 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5chars17h2f7acab08357ce80E(ptr align 8 %rest)
  %12 = extractvalue { ptr, ptr } %11, 0
  %13 = extractvalue { ptr, ptr } %11, 1
  store ptr %12, ptr %_9, align 8
  %14 = getelementptr inbounds i8, ptr %_9, i64 8
  store ptr %13, ptr %14, align 8
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %15 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %_9)
  store i32 %15, ptr %_7, align 4
  %16 = load i32, ptr %_7, align 4
  %17 = icmp eq i32 %16, 1114112
  %_11 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_11, 1
  br i1 %18, label %bb8, label %bb15

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %19 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_38a50dd405fb7ab3bd82bab079d9a675)
  %20 = extractvalue { ptr, i64 } %19, 0
  %21 = extractvalue { ptr, i64 } %19, 1
  store ptr %20, ptr %_0, align 8
  %22 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %21, ptr %22, align 8
  br label %bb16

bb8:                                              ; preds = %bb4
  %ch = load i32, ptr %_7, align 4
; call proc_macro2::fallback::is_ident_start
  %_13 = call zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17h77210a150e83b535E(i32 %ch)
  br i1 %_13, label %bb10, label %bb15

bb15:                                             ; preds = %bb13, %bb8, %bb4
  %_20.0 = load ptr, ptr %rest, align 8
  %23 = getelementptr inbounds i8, ptr %rest, i64 8
  %_20.1 = load i64, ptr %23, align 8
; call proc_macro2::parse::word_break
  %24 = call { ptr, i64 } @_ZN11proc_macro25parse10word_break17h3347bfcc4639d94bE(ptr align 1 %_20.0, i64 %_20.1)
  %25 = extractvalue { ptr, i64 } %24, 0
  %26 = extractvalue { ptr, i64 } %24, 1
  store ptr %25, ptr %_0, align 8
  %27 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %26, ptr %27, align 8
  br label %bb16

bb10:                                             ; preds = %bb8
  %_17.0 = load ptr, ptr %rest, align 8
  %28 = getelementptr inbounds i8, ptr %rest, i64 8
  %_17.1 = load i64, ptr %28, align 8
; call proc_macro2::parse::ident_not_raw
  call void @_ZN11proc_macro25parse13ident_not_raw17h79c65d96005818b0E(ptr sret([32 x i8]) align 8 %_16, ptr align 1 %_17.0, i64 %_17.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4c83adf9d37dcf7cE"(ptr sret([32 x i8]) align 8 %_15, ptr align 8 %_16)
  %29 = load ptr, ptr %_15, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = icmp eq i64 %30, 0
  %_18 = select i1 %31, i64 1, i64 0
  %32 = icmp eq i64 %_18, 0
  br i1 %32, label %bb13, label %bb14

bb13:                                             ; preds = %bb10
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_15, i64 32, i1 false)
  %_14.0 = load ptr, ptr %val, align 8
  %33 = getelementptr inbounds i8, ptr %val, i64 8
  %_14.1 = load i64, ptr %33, align 8
  store ptr %_14.0, ptr %rest, align 8
  %34 = getelementptr inbounds i8, ptr %rest, i64 8
  store i64 %_14.1, ptr %34, align 8
  br label %bb15

bb14:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %35 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_86b064d3e56b3dcc812549f662d9f71a)
  %36 = extractvalue { ptr, i64 } %35, 0
  %37 = extractvalue { ptr, i64 } %35, 1
  store ptr %36, ptr %_0, align 8
  %38 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %37, ptr %38, align 8
  br label %bb16

bb16:                                             ; preds = %bb5, %bb15, %bb14
  %39 = load ptr, ptr %_0, align 8
  %40 = getelementptr inbounds i8, ptr %_0, i64 8
  %41 = load i64, ptr %40, align 8
  %42 = insertvalue { ptr, i64 } poison, ptr %39, 0
  %43 = insertvalue { ptr, i64 } %42, i64 %41, 1
  ret { ptr, i64 } %43

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::float_digits
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse12float_digits17h6147e0ada53d8063E(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_44 = alloca [8 x i8], align 8
  %has_exp_value = alloca [1 x i8], align 1
  %has_sign = alloca [1 x i8], align 1
  %token_before_exp = alloca [16 x i8], align 8
  %_17 = alloca [8 x i8], align 8
  %has_exp = alloca [1 x i8], align 1
  %has_dot = alloca [1 x i8], align 1
  %len = alloca [8 x i8], align 8
  %_5 = alloca [4 x i8], align 4
  %chars = alloca [24 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::chars
  %3 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5chars17h2f7acab08357ce80E(ptr align 8 %input)
  %_3.0 = extractvalue { ptr, ptr } %3, 0
  %_3.1 = extractvalue { ptr, ptr } %3, 1
; call core::iter::traits::iterator::Iterator::peekable
  call void @_ZN4core4iter6traits8iterator8Iterator8peekable17h4b479fc6134793efE(ptr sret([24 x i8]) align 8 %chars, ptr %_3.0, ptr %_3.1)
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %4 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8ffd0830f296cdf1E"(ptr align 8 %chars)
  store i32 %4, ptr %_5, align 4
  %5 = load i32, ptr %_5, align 4
  %6 = icmp eq i32 %5, 1114112
  %_7 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_7, 1
  br i1 %7, label %bb5, label %bb4

bb5:                                              ; preds = %start
  %_11 = load i32, ptr %_5, align 4
  %_10 = icmp ule i32 48, %_11
  br i1 %_10, label %bb6, label %bb4

bb4:                                              ; preds = %bb6, %bb5, %start
  store ptr null, ptr %_0, align 8
  br label %bb51

bb6:                                              ; preds = %bb5
  %_13 = load i32, ptr %_5, align 4
  %_12 = icmp ule i32 %_13, 57
  br i1 %_12, label %bb7, label %bb4

bb7:                                              ; preds = %bb6
  %ch = load i32, ptr %_5, align 4
  store i64 1, ptr %len, align 8
  store i8 0, ptr %has_dot, align 1
  store i8 0, ptr %has_exp, align 1
  br label %bb8

bb8:                                              ; preds = %bb13, %bb21, %bb7
; call core::iter::adapters::peekable::Peekable<I>::peek
  %8 = call align 4 ptr @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h7191fa38a56e33d9E"(ptr align 8 %chars)
  store ptr %8, ptr %_17, align 8
  %9 = load ptr, ptr %_17, align 8
  %10 = ptrtoint ptr %9 to i64
  %11 = icmp eq i64 %10, 0
  %_19 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_19, 1
  br i1 %12, label %bb10, label %bb24

bb10:                                             ; preds = %bb8
  %_62 = load ptr, ptr %_17, align 8
  %ch1 = load i32, ptr %_62, align 4
  %_21 = icmp ule i32 48, %ch1
  br i1 %_21, label %bb12, label %bb11

bb24:                                             ; preds = %bb22, %bb15, %bb11, %bb8
  %13 = load i8, ptr %has_dot, align 1
  %_33 = trunc i8 %13 to i1
  br i1 %_33, label %bb27, label %bb25

bb11:                                             ; preds = %bb12, %bb10
  switch i32 %ch1, label %bb24 [
    i32 95, label %bb13
    i32 46, label %bb15
    i32 101, label %bb22
    i32 69, label %bb22
  ]

bb12:                                             ; preds = %bb10
  %_22 = icmp ule i32 %ch1, 57
  br i1 %_22, label %bb13, label %bb11

bb13:                                             ; preds = %bb11, %bb12
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_23 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8ffd0830f296cdf1E"(ptr align 8 %chars)
  %14 = load i64, ptr %len, align 8
  %15 = add i64 %14, 1
  store i64 %15, ptr %len, align 8
  br label %bb8

bb15:                                             ; preds = %bb11
  %16 = load i8, ptr %has_dot, align 1
  %_25 = trunc i8 %16 to i1
  br i1 %_25, label %bb24, label %bb16

bb22:                                             ; preds = %bb11, %bb11
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_31 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8ffd0830f296cdf1E"(ptr align 8 %chars)
  %17 = load i64, ptr %len, align 8
  %18 = add i64 %17, 1
  store i64 %18, ptr %len, align 8
  store i8 1, ptr %has_exp, align 1
  br label %bb24

bb16:                                             ; preds = %bb15
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_26 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8ffd0830f296cdf1E"(ptr align 8 %chars)
; call core::iter::adapters::peekable::Peekable<I>::peek
  %_29 = call align 4 ptr @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h7191fa38a56e33d9E"(ptr align 8 %chars)
; call core::option::Option<T>::map_or
  %_28 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17h9dc9f2e4f6680401E"(ptr align 4 %_29, i1 zeroext false)
  br i1 %_28, label %bb20, label %bb21

bb21:                                             ; preds = %bb16
  %19 = load i64, ptr %len, align 8
  %20 = add i64 %19, 1
  store i64 %20, ptr %len, align 8
  store i8 1, ptr %has_dot, align 1
  br label %bb8

bb20:                                             ; preds = %bb16
  store ptr null, ptr %_0, align 8
  br label %bb51

bb51:                                             ; preds = %bb4, %bb49, %bb48, %bb41, %bb26, %bb20
  %21 = load ptr, ptr %_0, align 8
  %22 = getelementptr inbounds i8, ptr %_0, i64 8
  %23 = load i64, ptr %22, align 8
  %24 = insertvalue { ptr, i64 } poison, ptr %21, 0
  %25 = insertvalue { ptr, i64 } %24, i64 %23, 1
  ret { ptr, i64 } %25

bb25:                                             ; preds = %bb24
  %26 = load i8, ptr %has_exp, align 1
  %_34 = trunc i8 %26 to i1
  br i1 %_34, label %bb27, label %bb26

bb27:                                             ; preds = %bb25, %bb24
  %27 = load i8, ptr %has_exp, align 1
  %_35 = trunc i8 %27 to i1
  br i1 %_35, label %bb28, label %bb49

bb26:                                             ; preds = %bb25
  store ptr null, ptr %_0, align 8
  br label %bb51

bb49:                                             ; preds = %bb47, %bb27
  %_61 = load i64, ptr %len, align 8
; call proc_macro2::parse::Cursor::advance
  %28 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_61)
  %_59.0 = extractvalue { ptr, i64 } %28, 0
  %_59.1 = extractvalue { ptr, i64 } %28, 1
  store ptr %_59.0, ptr %_0, align 8
  %29 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_59.1, ptr %29, align 8
  br label %bb51

bb28:                                             ; preds = %bb27
  %30 = load i8, ptr %has_dot, align 1
  %_37 = trunc i8 %30 to i1
  br i1 %_37, label %bb29, label %bb31

bb31:                                             ; preds = %bb28
  store ptr null, ptr %token_before_exp, align 8
  br label %bb32

bb29:                                             ; preds = %bb28
  %_41 = load i64, ptr %len, align 8
  %_40 = sub i64 %_41, 1
; call proc_macro2::parse::Cursor::advance
  %31 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_40)
  %_38.0 = extractvalue { ptr, i64 } %31, 0
  %_38.1 = extractvalue { ptr, i64 } %31, 1
  store ptr %_38.0, ptr %token_before_exp, align 8
  %32 = getelementptr inbounds i8, ptr %token_before_exp, i64 8
  store i64 %_38.1, ptr %32, align 8
  br label %bb32

bb32:                                             ; preds = %bb29, %bb31
  store i8 0, ptr %has_sign, align 1
  store i8 0, ptr %has_exp_value, align 1
  br label %bb33

bb33:                                             ; preds = %bb37, %bb45, %bb42, %bb32
; call core::iter::adapters::peekable::Peekable<I>::peek
  %33 = call align 4 ptr @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h7191fa38a56e33d9E"(ptr align 8 %chars)
  store ptr %33, ptr %_44, align 8
  %34 = load ptr, ptr %_44, align 8
  %35 = ptrtoint ptr %34 to i64
  %36 = icmp eq i64 %35, 0
  %_46 = select i1 %36, i64 0, i64 1
  %37 = icmp eq i64 %_46, 1
  br i1 %37, label %bb35, label %bb47

bb35:                                             ; preds = %bb33
  %_63 = load ptr, ptr %_44, align 8
  %ch2 = load i32, ptr %_63, align 4
  switch i32 %ch2, label %bb36 [
    i32 43, label %bb39
    i32 45, label %bb39
    i32 95, label %bb45
  ]

bb47:                                             ; preds = %bb38, %bb36, %bb39, %bb33
  %38 = load i8, ptr %has_exp_value, align 1
  %_58 = trunc i8 %38 to i1
  br i1 %_58, label %bb49, label %bb48

bb36:                                             ; preds = %bb35
  %_48 = icmp ule i32 48, %ch2
  br i1 %_48, label %bb38, label %bb47

bb39:                                             ; preds = %bb35, %bb35
  %39 = load i8, ptr %has_exp_value, align 1
  %_50 = trunc i8 %39 to i1
  br i1 %_50, label %bb47, label %bb40

bb45:                                             ; preds = %bb35
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_56 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8ffd0830f296cdf1E"(ptr align 8 %chars)
  %40 = load i64, ptr %len, align 8
  %41 = add i64 %40, 1
  store i64 %41, ptr %len, align 8
  br label %bb33

bb40:                                             ; preds = %bb39
  %42 = load i8, ptr %has_sign, align 1
  %_51 = trunc i8 %42 to i1
  br i1 %_51, label %bb41, label %bb42

bb42:                                             ; preds = %bb40
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_52 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8ffd0830f296cdf1E"(ptr align 8 %chars)
  %43 = load i64, ptr %len, align 8
  %44 = add i64 %43, 1
  store i64 %44, ptr %len, align 8
  store i8 1, ptr %has_sign, align 1
  br label %bb33

bb41:                                             ; preds = %bb40
  %45 = load ptr, ptr %token_before_exp, align 8
  %46 = getelementptr inbounds i8, ptr %token_before_exp, i64 8
  %47 = load i64, ptr %46, align 8
  store ptr %45, ptr %_0, align 8
  %48 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %47, ptr %48, align 8
  br label %bb51

bb38:                                             ; preds = %bb36
  %_49 = icmp ule i32 %ch2, 57
  br i1 %_49, label %bb37, label %bb47

bb37:                                             ; preds = %bb38
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_54 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8ffd0830f296cdf1E"(ptr align 8 %chars)
  %49 = load i64, ptr %len, align 8
  %50 = add i64 %49, 1
  store i64 %50, ptr %len, align 8
  store i8 1, ptr %has_exp_value, align 1
  br label %bb33

bb48:                                             ; preds = %bb47
  %51 = load ptr, ptr %token_before_exp, align 8
  %52 = getelementptr inbounds i8, ptr %token_before_exp, i64 8
  %53 = load i64, ptr %52, align 8
  store ptr %51, ptr %_0, align 8
  %54 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %53, ptr %54, align 8
  br label %bb51

bb52:                                             ; No predecessors!
  unreachable
}

; proc_macro2::parse::float_digits::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro25parse12float_digits28_$u7b$$u7b$closure$u7d$$u7d$17he97c94eb2472df3fE"(ptr align 4 %_2) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %ch = load i32, ptr %_2, align 4
  %0 = icmp eq i32 %ch, 46
  br i1 %0, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb3

bb2:                                              ; preds = %start
; call proc_macro2::fallback::is_ident_start
  %1 = call zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17h77210a150e83b535E(i32 %ch)
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; proc_macro2::parse::int
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse3int17h9618546ca20a292dE(ptr align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %val = alloca [32 x i8], align 8
  %_16 = alloca [32 x i8], align 8
  %_15 = alloca [32 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  %_7 = alloca [4 x i8], align 4
  %_3 = alloca [16 x i8], align 8
  %rest = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
; call proc_macro2::parse::digits
  %0 = call { ptr, i64 } @_ZN11proc_macro25parse6digits17hb5ccb2ebfff15311E(ptr align 1 %input.0, i64 %input.1)
  %_4.0 = extractvalue { ptr, i64 } %0, 0
  %_4.1 = extractvalue { ptr, i64 } %0, 1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %1 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h705c8c01ecb0d450E"(ptr align 1 %_4.0, i64 %_4.1)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %_3, align 8
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %_3, align 8
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 1, i64 0
  %8 = icmp eq i64 %_5, 0
  br i1 %8, label %bb4, label %bb5

bb4:                                              ; preds = %start
  %val.0 = load ptr, ptr %_3, align 8
  %9 = getelementptr inbounds i8, ptr %_3, i64 8
  %val.1 = load i64, ptr %9, align 8
  store ptr %val.0, ptr %rest, align 8
  %10 = getelementptr inbounds i8, ptr %rest, i64 8
  store i64 %val.1, ptr %10, align 8
; call proc_macro2::parse::Cursor::chars
  %11 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5chars17h2f7acab08357ce80E(ptr align 8 %rest)
  %12 = extractvalue { ptr, ptr } %11, 0
  %13 = extractvalue { ptr, ptr } %11, 1
  store ptr %12, ptr %_9, align 8
  %14 = getelementptr inbounds i8, ptr %_9, i64 8
  store ptr %13, ptr %14, align 8
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %15 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %_9)
  store i32 %15, ptr %_7, align 4
  %16 = load i32, ptr %_7, align 4
  %17 = icmp eq i32 %16, 1114112
  %_11 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_11, 1
  br i1 %18, label %bb8, label %bb15

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %19 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_8ed9556f8baea4867f470b507c6bae9a)
  %20 = extractvalue { ptr, i64 } %19, 0
  %21 = extractvalue { ptr, i64 } %19, 1
  store ptr %20, ptr %_0, align 8
  %22 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %21, ptr %22, align 8
  br label %bb16

bb8:                                              ; preds = %bb4
  %ch = load i32, ptr %_7, align 4
; call proc_macro2::fallback::is_ident_start
  %_13 = call zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17h77210a150e83b535E(i32 %ch)
  br i1 %_13, label %bb10, label %bb15

bb15:                                             ; preds = %bb13, %bb8, %bb4
  %_20.0 = load ptr, ptr %rest, align 8
  %23 = getelementptr inbounds i8, ptr %rest, i64 8
  %_20.1 = load i64, ptr %23, align 8
; call proc_macro2::parse::word_break
  %24 = call { ptr, i64 } @_ZN11proc_macro25parse10word_break17h3347bfcc4639d94bE(ptr align 1 %_20.0, i64 %_20.1)
  %25 = extractvalue { ptr, i64 } %24, 0
  %26 = extractvalue { ptr, i64 } %24, 1
  store ptr %25, ptr %_0, align 8
  %27 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %26, ptr %27, align 8
  br label %bb16

bb10:                                             ; preds = %bb8
  %_17.0 = load ptr, ptr %rest, align 8
  %28 = getelementptr inbounds i8, ptr %rest, i64 8
  %_17.1 = load i64, ptr %28, align 8
; call proc_macro2::parse::ident_not_raw
  call void @_ZN11proc_macro25parse13ident_not_raw17h79c65d96005818b0E(ptr sret([32 x i8]) align 8 %_16, ptr align 1 %_17.0, i64 %_17.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4c83adf9d37dcf7cE"(ptr sret([32 x i8]) align 8 %_15, ptr align 8 %_16)
  %29 = load ptr, ptr %_15, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = icmp eq i64 %30, 0
  %_18 = select i1 %31, i64 1, i64 0
  %32 = icmp eq i64 %_18, 0
  br i1 %32, label %bb13, label %bb14

bb13:                                             ; preds = %bb10
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_15, i64 32, i1 false)
  %_14.0 = load ptr, ptr %val, align 8
  %33 = getelementptr inbounds i8, ptr %val, i64 8
  %_14.1 = load i64, ptr %33, align 8
  store ptr %_14.0, ptr %rest, align 8
  %34 = getelementptr inbounds i8, ptr %rest, i64 8
  store i64 %_14.1, ptr %34, align 8
  br label %bb15

bb14:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %35 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5197dbe5f7078baE"(ptr align 8 @alloc_05cb19f7030c92bea6e3aec70b430577)
  %36 = extractvalue { ptr, i64 } %35, 0
  %37 = extractvalue { ptr, i64 } %35, 1
  store ptr %36, ptr %_0, align 8
  %38 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %37, ptr %38, align 8
  br label %bb16

bb16:                                             ; preds = %bb5, %bb15, %bb14
  %39 = load ptr, ptr %_0, align 8
  %40 = getelementptr inbounds i8, ptr %_0, i64 8
  %41 = load i64, ptr %40, align 8
  %42 = insertvalue { ptr, i64 } poison, ptr %39, 0
  %43 = insertvalue { ptr, i64 } %42, i64 %41, 1
  ret { ptr, i64 } %43

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::digits
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse6digits17hb5ccb2ebfff15311E(ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_24 = alloca [2 x i8], align 1
  %iter = alloca [16 x i8], align 8
  %empty = alloca [1 x i8], align 1
  %len = alloca [8 x i8], align 8
  %base = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_3 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_83d8d36e705c58ed11bda7b90dabc655, i64 2)
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::parse::Cursor::starts_with
  %_8 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_3f5e304b2d3feb2147d7ca807297437a, i64 2)
  br i1 %_8, label %bb6, label %bb8

bb2:                                              ; preds = %start
; call proc_macro2::parse::Cursor::advance
  %3 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 2)
  %_6.0 = extractvalue { ptr, i64 } %3, 0
  %_6.1 = extractvalue { ptr, i64 } %3, 1
  store ptr %_6.0, ptr %input, align 8
  %4 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %_6.1, ptr %4, align 8
  store i64 16, ptr %base, align 8
  br label %bb13

bb8:                                              ; preds = %bb4
; call proc_macro2::parse::Cursor::starts_with
  %_13 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_27d35d5cbe30361bd1ed04847fdae817, i64 2)
  br i1 %_13, label %bb10, label %bb12

bb6:                                              ; preds = %bb4
; call proc_macro2::parse::Cursor::advance
  %5 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 2)
  %_11.0 = extractvalue { ptr, i64 } %5, 0
  %_11.1 = extractvalue { ptr, i64 } %5, 1
  store ptr %_11.0, ptr %input, align 8
  %6 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %_11.1, ptr %6, align 8
  store i64 8, ptr %base, align 8
  br label %bb13

bb12:                                             ; preds = %bb8
  store i64 10, ptr %base, align 8
  br label %bb13

bb10:                                             ; preds = %bb8
; call proc_macro2::parse::Cursor::advance
  %7 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 2)
  %_16.0 = extractvalue { ptr, i64 } %7, 0
  %_16.1 = extractvalue { ptr, i64 } %7, 1
  store ptr %_16.0, ptr %input, align 8
  %8 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %_16.1, ptr %8, align 8
  store i64 2, ptr %base, align 8
  br label %bb13

bb13:                                             ; preds = %bb2, %bb6, %bb10, %bb12
  store i64 0, ptr %len, align 8
  store i8 1, ptr %empty, align 1
; call proc_macro2::parse::Cursor::bytes
  %9 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5bytes17h0f0044f15c510e99E(ptr align 8 %input)
  %_21.0 = extractvalue { ptr, ptr } %9, 0
  %_21.1 = extractvalue { ptr, ptr } %9, 1
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %10 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6ce789ca085f0ebeE"(ptr %_21.0, ptr %_21.1)
  %_20.0 = extractvalue { ptr, ptr } %10, 0
  %_20.1 = extractvalue { ptr, ptr } %10, 1
  store ptr %_20.0, ptr %iter, align 8
  %11 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_20.1, ptr %11, align 8
  br label %bb16

bb16:                                             ; preds = %bb34, %bb33, %bb13
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
  %12 = call { i1, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h960866a992cd8c3eE"(ptr align 8 %iter)
  %13 = extractvalue { i1, i8 } %12, 0
  %14 = extractvalue { i1, i8 } %12, 1
  %15 = zext i1 %13 to i8
  store i8 %15, ptr %_24, align 1
  %16 = getelementptr inbounds i8, ptr %_24, i64 1
  store i8 %14, ptr %16, align 1
  %17 = load i8, ptr %_24, align 1
  %18 = trunc i8 %17 to i1
  %_26 = zext i1 %18 to i64
  %19 = icmp eq i64 %_26, 0
  br i1 %19, label %bb35, label %bb19

bb35:                                             ; preds = %bb22, %bb24, %bb25, %bb16
  %20 = load i8, ptr %empty, align 1
  %_50 = trunc i8 %20 to i1
  br i1 %_50, label %bb36, label %bb37

bb19:                                             ; preds = %bb16
  %21 = getelementptr inbounds i8, ptr %_24, i64 1
  %b = load i8, ptr %21, align 1
  %_32 = icmp ule i8 48, %b
  br i1 %_32, label %bb28, label %bb21

bb21:                                             ; preds = %bb28, %bb19
  %_30 = icmp ule i8 97, %b
  br i1 %_30, label %bb27, label %bb23

bb28:                                             ; preds = %bb19
  %_33 = icmp ule i8 %b, 57
  br i1 %_33, label %bb20, label %bb21

bb20:                                             ; preds = %bb28
  %_35 = sub i8 %b, 48
  %digit2 = zext i8 %_35 to i64
  %_37 = load i64, ptr %base, align 8
  %_36 = icmp uge i64 %digit2, %_37
  br i1 %_36, label %bb29, label %bb34

bb23:                                             ; preds = %bb27, %bb21
  %_28 = icmp ule i8 65, %b
  br i1 %_28, label %bb26, label %bb25

bb27:                                             ; preds = %bb21
  %_31 = icmp ule i8 %b, 102
  br i1 %_31, label %bb22, label %bb23

bb22:                                             ; preds = %bb27
  %_40 = sub i8 %b, 97
  %_39 = zext i8 %_40 to i64
  %digit1 = add i64 10, %_39
  %_42 = load i64, ptr %base, align 8
  %_41 = icmp uge i64 %digit1, %_42
  br i1 %_41, label %bb35, label %bb34

bb25:                                             ; preds = %bb26, %bb23
  %22 = icmp eq i8 %b, 95
  br i1 %22, label %bb30, label %bb35

bb26:                                             ; preds = %bb23
  %_29 = icmp ule i8 %b, 70
  br i1 %_29, label %bb24, label %bb25

bb24:                                             ; preds = %bb26
  %_45 = sub i8 %b, 65
  %_44 = zext i8 %_45 to i64
  %digit = add i64 10, %_44
  %_47 = load i64, ptr %base, align 8
  %_46 = icmp uge i64 %digit, %_47
  br i1 %_46, label %bb35, label %bb34

bb30:                                             ; preds = %bb25
  %23 = load i8, ptr %empty, align 1
  %_48 = trunc i8 %23 to i1
  br i1 %_48, label %bb31, label %bb33

bb33:                                             ; preds = %bb31, %bb30
  %24 = load i64, ptr %len, align 8
  %25 = add i64 %24, 1
  store i64 %25, ptr %len, align 8
  br label %bb16

bb31:                                             ; preds = %bb30
  %_49 = load i64, ptr %base, align 8
  %26 = icmp eq i64 %_49, 10
  br i1 %26, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  store ptr null, ptr %_0, align 8
  br label %bb39

bb39:                                             ; preds = %bb29, %bb36, %bb37, %bb32
  %27 = load ptr, ptr %_0, align 8
  %28 = getelementptr inbounds i8, ptr %_0, i64 8
  %29 = load i64, ptr %28, align 8
  %30 = insertvalue { ptr, i64 } poison, ptr %27, 0
  %31 = insertvalue { ptr, i64 } %30, i64 %29, 1
  ret { ptr, i64 } %31

bb34:                                             ; preds = %bb20, %bb22, %bb24
  %32 = load i64, ptr %len, align 8
  %33 = add i64 %32, 1
  store i64 %33, ptr %len, align 8
  store i8 0, ptr %empty, align 1
  br label %bb16

bb37:                                             ; preds = %bb35
  %_53 = load i64, ptr %len, align 8
; call proc_macro2::parse::Cursor::advance
  %34 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_53)
  %_51.0 = extractvalue { ptr, i64 } %34, 0
  %_51.1 = extractvalue { ptr, i64 } %34, 1
  store ptr %_51.0, ptr %_0, align 8
  %35 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_51.1, ptr %35, align 8
  br label %bb39

bb36:                                             ; preds = %bb35
  store ptr null, ptr %_0, align 8
  br label %bb39

bb29:                                             ; preds = %bb20
  store ptr null, ptr %_0, align 8
  br label %bb39

bb18:                                             ; No predecessors!
  unreachable
}

; proc_macro2::parse::punct
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse5punct17h9abe11d4b9af1bbbE(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %input.0, i64 %input.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_22 = alloca [12 x i8], align 4
  %_21 = alloca [32 x i8], align 8
  %_19 = alloca [24 x i8], align 8
  %kind = alloca [1 x i8], align 1
  %_17 = alloca [1 x i8], align 1
  %_16 = alloca [12 x i8], align 4
  %_15 = alloca [32 x i8], align 8
  %val1 = alloca [48 x i8], align 8
  %_12 = alloca [48 x i8], align 8
  %_11 = alloca [48 x i8], align 8
  %_10 = alloca [48 x i8], align 8
  %val = alloca [24 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %_4 = alloca [24 x i8], align 8
; call proc_macro2::parse::punct_char
  call void @_ZN11proc_macro25parse10punct_char17hb182ebc83efba42bE(ptr sret([24 x i8]) align 8 %_5, ptr align 1 %input.0, i64 %input.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4e10ff22194b8cbeE"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %_5)
  %1 = getelementptr inbounds i8, ptr %_4, i64 16
  %2 = load i32, ptr %1, align 8
  %3 = icmp eq i32 %2, 1114112
  %_6 = select i1 %3, i64 1, i64 0
  %4 = icmp eq i64 %_6, 0
  br i1 %4, label %bb4, label %bb5

bb4:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_4, i64 24, i1 false)
  %rest.0 = load ptr, ptr %val, align 8
  %5 = getelementptr inbounds i8, ptr %val, i64 8
  %rest.1 = load i64, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %val, i64 16
  %ch = load i32, ptr %6, align 8
  %7 = icmp eq i32 %ch, 39
  br i1 %7, label %bb6, label %bb7

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he85727d26166c4ebE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 @alloc_6119a4a3d8321bd55dbf2911789e2903)
  br label %bb21

bb6:                                              ; preds = %bb4
; call proc_macro2::parse::ident_any
  call void @_ZN11proc_macro25parse9ident_any17he50c7b5137530babE(ptr sret([48 x i8]) align 8 %_12, ptr align 1 %rest.0, i64 %rest.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8245d3de22bab203E"(ptr sret([48 x i8]) align 8 %_11, ptr align 8 %_12)
  %8 = getelementptr inbounds i8, ptr %_11, i64 16
  %9 = load i64, ptr %8, align 8
  %10 = icmp eq i64 %9, -9223372036854775807
  %_13 = select i1 %10, i64 1, i64 0
  %11 = icmp eq i64 %_13, 0
  br i1 %11, label %bb10, label %bb11

bb7:                                              ; preds = %bb4
; call proc_macro2::parse::punct_char
  call void @_ZN11proc_macro25parse10punct_char17hb182ebc83efba42bE(ptr sret([24 x i8]) align 8 %_19, ptr align 1 %rest.0, i64 %rest.1)
  %12 = getelementptr inbounds i8, ptr %_19, i64 16
  %13 = load i32, ptr %12, align 8
  %14 = icmp eq i32 %13, 1114112
  %_20 = select i1 %14, i64 1, i64 0
  %15 = icmp eq i64 %_20, 0
  br i1 %15, label %bb18, label %bb17

bb10:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val1, ptr align 8 %_11, i64 48, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_10, ptr align 8 %val1, i64 48, i1 false)
; invoke proc_macro2::parse::Cursor::starts_with_char
  %_8 = invoke zeroext i1 @_ZN11proc_macro25parse6Cursor16starts_with_char17h7ad255747611f913E(ptr align 8 %_10, i32 39)
          to label %bb12 unwind label %cleanup

bb11:                                             ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he85727d26166c4ebE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 @alloc_091bf414a975b687633f25f773c76a98)
  br label %bb21

bb22:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<(proc_macro2::parse::Cursor,proc_macro2::Ident)>
  invoke void @"_ZN4core3ptr76drop_in_place$LT$$LP$proc_macro2..parse..Cursor$C$proc_macro2..Ident$RP$$GT$17h55bf2ead262fc9b8E"(ptr align 8 %_10) #25
          to label %bb23 unwind label %terminate

cleanup:                                          ; preds = %bb10
  %16 = landingpad { ptr, i32 }
          cleanup
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = extractvalue { ptr, i32 } %16, 1
  store ptr %17, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %18, ptr %19, align 8
  br label %bb22

bb12:                                             ; preds = %bb10
  br i1 %_8, label %bb13, label %bb14

bb14:                                             ; preds = %bb12
; call core::ptr::drop_in_place<(proc_macro2::parse::Cursor,proc_macro2::Ident)>
  call void @"_ZN4core3ptr76drop_in_place$LT$$LP$proc_macro2..parse..Cursor$C$proc_macro2..Ident$RP$$GT$17h55bf2ead262fc9b8E"(ptr align 8 %_10)
  store i8 1, ptr %_17, align 1
  %20 = load i8, ptr %_17, align 1
  %21 = trunc i8 %20 to i1
; call proc_macro2::Punct::new
  call void @_ZN11proc_macro25Punct3new17h7971e0a4c6081f92E(ptr sret([12 x i8]) align 4 %_16, i32 39, i1 zeroext %21)
  store ptr %rest.0, ptr %_15, align 8
  %22 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %rest.1, ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %_15, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 4 %_16, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_15, i64 32, i1 false)
  br label %bb21

bb13:                                             ; preds = %bb12
; call core::ptr::drop_in_place<(proc_macro2::parse::Cursor,proc_macro2::Ident)>
  call void @"_ZN4core3ptr76drop_in_place$LT$$LP$proc_macro2..parse..Cursor$C$proc_macro2..Ident$RP$$GT$17h55bf2ead262fc9b8E"(ptr align 8 %_10)
  %24 = getelementptr inbounds i8, ptr %_0, i64 16
  store i32 1114112, ptr %24, align 8
  br label %bb21

bb21:                                             ; preds = %bb5, %bb19, %bb11, %bb13, %bb14
  ret void

terminate:                                        ; preds = %bb22
  %25 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %26 = extractvalue { ptr, i32 } %25, 0
  %27 = extractvalue { ptr, i32 } %25, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb23:                                             ; preds = %bb22
  %28 = load ptr, ptr %0, align 8
  %29 = getelementptr inbounds i8, ptr %0, i64 8
  %30 = load i32, ptr %29, align 8
  %31 = insertvalue { ptr, i32 } poison, ptr %28, 0
  %32 = insertvalue { ptr, i32 } %31, i32 %30, 1
  resume { ptr, i32 } %32

bb18:                                             ; preds = %bb7
  store i8 1, ptr %kind, align 1
  br label %bb19

bb17:                                             ; preds = %bb7
  store i8 0, ptr %kind, align 1
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %33 = load i8, ptr %kind, align 1
  %_23 = trunc i8 %33 to i1
; call proc_macro2::Punct::new
  call void @_ZN11proc_macro25Punct3new17h7971e0a4c6081f92E(ptr sret([12 x i8]) align 4 %_22, i32 %ch, i1 zeroext %_23)
  store ptr %rest.0, ptr %_21, align 8
  %34 = getelementptr inbounds i8, ptr %_21, i64 8
  store i64 %rest.1, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %_21, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %35, ptr align 4 %_22, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_21, i64 32, i1 false)
  br label %bb21

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::punct_char
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse10punct_char17hb182ebc83efba42bE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_16 = alloca [24 x i8], align 8
  %_10 = alloca [4 x i8], align 4
  %chars = alloca [16 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_2 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_d5f0f24268d469e3dc9e2ef7f6510983, i64 2)
  br i1 %_2, label %bb4, label %bb2

bb2:                                              ; preds = %start
; call proc_macro2::parse::Cursor::starts_with
  %_5 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_306b17c50e3f209e7082c0dad9084435, i64 2)
  br i1 %_5, label %bb4, label %bb5

bb4:                                              ; preds = %bb2, %start
  %3 = getelementptr inbounds i8, ptr %_0, i64 16
  store i32 1114112, ptr %3, align 8
  br label %bb16

bb5:                                              ; preds = %bb2
; call proc_macro2::parse::Cursor::chars
  %4 = call { ptr, ptr } @_ZN11proc_macro25parse6Cursor5chars17h2f7acab08357ce80E(ptr align 8 %input)
  %5 = extractvalue { ptr, ptr } %4, 0
  %6 = extractvalue { ptr, ptr } %4, 1
  store ptr %5, ptr %chars, align 8
  %7 = getelementptr inbounds i8, ptr %chars, i64 8
  store ptr %6, ptr %7, align 8
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %8 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %chars)
  store i32 %8, ptr %_10, align 4
  %9 = load i32, ptr %_10, align 4
  %10 = icmp eq i32 %9, 1114112
  %_12 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_12, 0
  br i1 %11, label %bb9, label %bb10

bb9:                                              ; preds = %bb5
  %12 = getelementptr inbounds i8, ptr %_0, i64 16
  store i32 1114112, ptr %12, align 8
  br label %bb16

bb10:                                             ; preds = %bb5
  %first = load i32, ptr %_10, align 4
; call core::str::<impl str>::contains
  %_15 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h2bbbe8fdf831cb02E"(ptr align 1 @alloc_aae81247d080136175dbd352957cb012, i64 22, i32 %first)
  br i1 %_15, label %bb12, label %bb15

bb16:                                             ; preds = %bb4, %bb12, %bb15, %bb9
  ret void

bb15:                                             ; preds = %bb10
  %13 = getelementptr inbounds i8, ptr %_0, i64 16
  store i32 1114112, ptr %13, align 8
  br label %bb16

bb12:                                             ; preds = %bb10
; call core::char::methods::<impl char>::len_utf8
  %_19 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hbf950d9badac8aeeE"(i32 %first)
; call proc_macro2::parse::Cursor::advance
  %14 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_19)
  %_17.0 = extractvalue { ptr, i64 } %14, 0
  %_17.1 = extractvalue { ptr, i64 } %14, 1
  store ptr %_17.0, ptr %_16, align 8
  %15 = getelementptr inbounds i8, ptr %_16, i64 8
  store i64 %_17.1, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %_16, i64 16
  store i32 %first, ptr %16, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_16, i64 24, i1 false)
  br label %bb16

bb8:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::doc_comment
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro25parse11doc_comment17h46e673dc9ec7bd8cE(ptr align 1 %input.0, i64 %input.1, ptr align 8 %trees) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_72 = alloca [1 x i8], align 1
  %_71 = alloca [1 x i8], align 1
  %_70 = alloca [1 x i8], align 1
  %_69 = alloca [1 x i8], align 1
  %_67 = alloca [24 x i8], align 8
  %_66 = alloca [32 x i8], align 8
  %group = alloca [24 x i8], align 8
  %_61 = alloca [24 x i8], align 8
  %_59 = alloca [1 x i8], align 1
  %_57 = alloca [24 x i8], align 8
  %_56 = alloca [32 x i8], align 8
  %_53 = alloca [12 x i8], align 4
  %_52 = alloca [32 x i8], align 8
  %_49 = alloca [32 x i8], align 8
  %_48 = alloca [32 x i8], align 8
  %bracketed = alloca [24 x i8], align 8
  %literal = alloca [24 x i8], align 8
  %_39 = alloca [1 x i8], align 1
  %equal = alloca [12 x i8], align 4
  %_36 = alloca [32 x i8], align 8
  %doc_ident = alloca [32 x i8], align 8
  %_34 = alloca [12 x i8], align 4
  %_33 = alloca [32 x i8], align 8
  %_29 = alloca [1 x i8], align 1
  %bang = alloca [12 x i8], align 4
  %_27 = alloca [12 x i8], align 4
  %_26 = alloca [32 x i8], align 8
  %_22 = alloca [1 x i8], align 1
  %pound = alloca [12 x i8], align 4
  %_12 = alloca [16 x i8], align 8
  %scan_for_bare_cr = alloca [16 x i8], align 8
  %val = alloca [40 x i8], align 8
  %_7 = alloca [40 x i8], align 8
  %_6 = alloca [40 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store i8 0, ptr %_72, align 1
  store i8 0, ptr %_71, align 1
  store i8 0, ptr %_70, align 1
  store i8 0, ptr %_69, align 1
; call proc_macro2::parse::doc_comment_contents
  call void @_ZN11proc_macro25parse20doc_comment_contents17h9057addc2e77565bE(ptr sret([40 x i8]) align 8 %_7, ptr align 1 %input.0, i64 %input.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h71c693d884f98194E"(ptr sret([40 x i8]) align 8 %_6, ptr align 8 %_7)
  %1 = getelementptr inbounds i8, ptr %_6, i64 32
  %2 = load i8, ptr %1, align 8
  %3 = icmp eq i8 %2, 2
  %_8 = select i1 %3, i64 1, i64 0
  %4 = icmp eq i64 %_8, 0
  br i1 %4, label %bb4, label %bb5

bb4:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_6, i64 40, i1 false)
  %rest.0 = load ptr, ptr %val, align 8
  %5 = getelementptr inbounds i8, ptr %val, i64 8
  %rest.1 = load i64, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %val, i64 16
  %comment.0 = load ptr, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %comment.1 = load i64, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %val, i64 16
  %9 = getelementptr inbounds i8, ptr %8, i64 16
  %10 = load i8, ptr %9, align 8
  %inner = trunc i8 %10 to i1
; call proc_macro2::Span::_new_fallback
  %span = call i32 @_ZN11proc_macro24Span13_new_fallback17he901ad9d50a5f2cbE()
  store ptr %comment.0, ptr %scan_for_bare_cr, align 8
  %11 = getelementptr inbounds i8, ptr %scan_for_bare_cr, i64 8
  store i64 %comment.1, ptr %11, align 8
  br label %bb7

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %12 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hface6ca106ab4104E"(ptr align 8 @alloc_ea1aaa9361726b6029f3d4676dce7b97)
  %13 = extractvalue { ptr, i64 } %12, 0
  %14 = extractvalue { ptr, i64 } %12, 1
  store ptr %13, ptr %_0, align 8
  %15 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb37

bb7:                                              ; preds = %bb12, %bb4
  %_13.0 = load ptr, ptr %scan_for_bare_cr, align 8
  %16 = getelementptr inbounds i8, ptr %scan_for_bare_cr, i64 8
  %_13.1 = load i64, ptr %16, align 8
; call core::str::<impl str>::find
  %17 = call { i64, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17h06ff591bf7136cc7E"(ptr align 1 %_13.0, i64 %_13.1, i32 13)
  %18 = extractvalue { i64, i64 } %17, 0
  %19 = extractvalue { i64, i64 } %17, 1
  store i64 %18, ptr %_12, align 8
  %20 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %19, ptr %20, align 8
  %_14 = load i64, ptr %_12, align 8
  %21 = icmp eq i64 %_14, 1
  br i1 %21, label %bb9, label %bb14

bb9:                                              ; preds = %bb7
  %22 = getelementptr inbounds i8, ptr %_12, i64 8
  %cr = load i64, ptr %22, align 8
  %_17.0 = load ptr, ptr %scan_for_bare_cr, align 8
  %23 = getelementptr inbounds i8, ptr %scan_for_bare_cr, i64 8
  %_17.1 = load i64, ptr %23, align 8
  %_19 = add i64 %cr, 1
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %24 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h6a51beaaf4f29efaE"(ptr align 1 %_17.0, i64 %_17.1, i64 %_19, ptr align 8 @alloc_72fe15088ac8e741fd8e5026cc5133cb)
  %rest.01 = extractvalue { ptr, i64 } %24, 0
  %rest.12 = extractvalue { ptr, i64 } %24, 1
; call core::str::<impl str>::starts_with
  %_20 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hf8dc8d170394ab8dE"(ptr align 1 %rest.01, i64 %rest.12, i32 10)
  br i1 %_20, label %bb12, label %bb13

bb14:                                             ; preds = %bb7
  store i8 0, ptr %_22, align 1
  %25 = load i8, ptr %_22, align 1
  %26 = trunc i8 %25 to i1
; call proc_macro2::Punct::new
  call void @_ZN11proc_macro25Punct3new17h7971e0a4c6081f92E(ptr sret([12 x i8]) align 4 %pound, i32 35, i1 zeroext %26)
; call proc_macro2::Punct::set_span
  call void @_ZN11proc_macro25Punct8set_span17h7328f643f9d1a1c9E(ptr align 4 %pound, i32 %span)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_27, ptr align 4 %pound, i64 12, i1 false)
  %27 = getelementptr inbounds i8, ptr %_26, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 4 %_27, i64 12, i1 false)
  store i64 -9223372036854775805, ptr %_26, align 8
; call proc_macro2::fallback::TokenStreamBuilder::push_token_from_parser
  call void @_ZN11proc_macro28fallback18TokenStreamBuilder22push_token_from_parser17h19154639c02ff5c7E(ptr align 8 %trees, ptr align 8 %_26)
  br i1 %inner, label %bb18, label %bb21

bb13:                                             ; preds = %bb9
  store ptr null, ptr %_0, align 8
  br label %bb37

bb12:                                             ; preds = %bb9
  store ptr %rest.01, ptr %scan_for_bare_cr, align 8
  %28 = getelementptr inbounds i8, ptr %scan_for_bare_cr, i64 8
  store i64 %rest.12, ptr %28, align 8
  br label %bb7

bb37:                                             ; preds = %bb5, %bb36, %bb13
  %29 = load ptr, ptr %_0, align 8
  %30 = getelementptr inbounds i8, ptr %_0, i64 8
  %31 = load i64, ptr %30, align 8
  %32 = insertvalue { ptr, i64 } poison, ptr %29, 0
  %33 = insertvalue { ptr, i64 } %32, i64 %31, 1
  ret { ptr, i64 } %33

bb21:                                             ; preds = %bb18, %bb14
; call proc_macro2::imp::Ident::new_unchecked
  call void @_ZN11proc_macro23imp5Ident13new_unchecked17h7ae3cad3f627c625E(ptr sret([32 x i8]) align 8 %_36, ptr align 1 @alloc_701ce0bb3ffd80e30a094997fe0bfddc, i64 3)
; call proc_macro2::Ident::_new
  call void @_ZN11proc_macro25Ident4_new17h34aafdfc73320843E(ptr sret([32 x i8]) align 8 %doc_ident, ptr align 8 %_36)
  store i8 1, ptr %_72, align 1
  store i8 0, ptr %_39, align 1
  %34 = load i8, ptr %_39, align 1
  %35 = trunc i8 %34 to i1
; invoke proc_macro2::Punct::new
  invoke void @_ZN11proc_macro25Punct3new17h7971e0a4c6081f92E(ptr sret([12 x i8]) align 4 %equal, i32 61, i1 zeroext %35)
          to label %bb24 unwind label %cleanup

bb18:                                             ; preds = %bb14
  store i8 0, ptr %_29, align 1
  %36 = load i8, ptr %_29, align 1
  %37 = trunc i8 %36 to i1
; call proc_macro2::Punct::new
  call void @_ZN11proc_macro25Punct3new17h7971e0a4c6081f92E(ptr sret([12 x i8]) align 4 %bang, i32 33, i1 zeroext %37)
; call proc_macro2::Punct::set_span
  call void @_ZN11proc_macro25Punct8set_span17h7328f643f9d1a1c9E(ptr align 4 %bang, i32 %span)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_34, ptr align 4 %bang, i64 12, i1 false)
  %38 = getelementptr inbounds i8, ptr %_33, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %38, ptr align 4 %_34, i64 12, i1 false)
  store i64 -9223372036854775805, ptr %_33, align 8
; call proc_macro2::fallback::TokenStreamBuilder::push_token_from_parser
  call void @_ZN11proc_macro28fallback18TokenStreamBuilder22push_token_from_parser17h19154639c02ff5c7E(ptr align 8 %trees, ptr align 8 %_33)
  br label %bb21

bb46:                                             ; preds = %bb43, %bb44, %cleanup
  %39 = load i8, ptr %_72, align 1
  %40 = trunc i8 %39 to i1
  br i1 %40, label %bb45, label %bb38

cleanup:                                          ; preds = %bb25, %bb24, %bb21
  %41 = landingpad { ptr, i32 }
          cleanup
  %42 = extractvalue { ptr, i32 } %41, 0
  %43 = extractvalue { ptr, i32 } %41, 1
  store ptr %42, ptr %0, align 8
  %44 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %43, ptr %44, align 8
  br label %bb46

bb24:                                             ; preds = %bb21
; invoke proc_macro2::Punct::set_span
  invoke void @_ZN11proc_macro25Punct8set_span17h7328f643f9d1a1c9E(ptr align 4 %equal, i32 %span)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke proc_macro2::Literal::string
  invoke void @_ZN11proc_macro27Literal6string17hd886c11b5987636fE(ptr sret([24 x i8]) align 8 %literal, ptr align 1 %comment.0, i64 %comment.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
  store i8 1, ptr %_71, align 1
; invoke proc_macro2::Literal::set_span
  invoke void @_ZN11proc_macro27Literal8set_span17hc859972bfada075bE(ptr align 8 %literal, i32 %span)
          to label %bb27 unwind label %cleanup3

bb44:                                             ; preds = %bb41, %bb42, %cleanup3
  %45 = load i8, ptr %_71, align 1
  %46 = trunc i8 %45 to i1
  br i1 %46, label %bb43, label %bb46

cleanup3:                                         ; preds = %bb27, %bb26
  %47 = landingpad { ptr, i32 }
          cleanup
  %48 = extractvalue { ptr, i32 } %47, 0
  %49 = extractvalue { ptr, i32 } %47, 1
  store ptr %48, ptr %0, align 8
  %50 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %49, ptr %50, align 8
  br label %bb44

bb27:                                             ; preds = %bb26
; invoke proc_macro2::fallback::TokenStreamBuilder::with_capacity
  invoke void @_ZN11proc_macro28fallback18TokenStreamBuilder13with_capacity17hf0e5a62afaa2f33fE(ptr sret([24 x i8]) align 8 %bracketed, i64 3)
          to label %bb28 unwind label %cleanup3

bb28:                                             ; preds = %bb27
  store i8 1, ptr %_70, align 1
  store i8 0, ptr %_72, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_49, ptr align 8 %doc_ident, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_48, ptr align 8 %_49, i64 32, i1 false)
; invoke proc_macro2::fallback::TokenStreamBuilder::push_token_from_parser
  invoke void @_ZN11proc_macro28fallback18TokenStreamBuilder22push_token_from_parser17h19154639c02ff5c7E(ptr align 8 %bracketed, ptr align 8 %_48)
          to label %bb29 unwind label %cleanup4

bb42:                                             ; preds = %bb39, %bb40, %cleanup4
  %51 = load i8, ptr %_70, align 1
  %52 = trunc i8 %51 to i1
  br i1 %52, label %bb41, label %bb44

cleanup4:                                         ; preds = %bb33, %bb32, %bb31, %bb30, %bb29, %bb28
  %53 = landingpad { ptr, i32 }
          cleanup
  %54 = extractvalue { ptr, i32 } %53, 0
  %55 = extractvalue { ptr, i32 } %53, 1
  store ptr %54, ptr %0, align 8
  %56 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %55, ptr %56, align 8
  br label %bb42

bb29:                                             ; preds = %bb28
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_53, ptr align 4 %equal, i64 12, i1 false)
  %57 = getelementptr inbounds i8, ptr %_52, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %57, ptr align 4 %_53, i64 12, i1 false)
  store i64 -9223372036854775805, ptr %_52, align 8
; invoke proc_macro2::fallback::TokenStreamBuilder::push_token_from_parser
  invoke void @_ZN11proc_macro28fallback18TokenStreamBuilder22push_token_from_parser17h19154639c02ff5c7E(ptr align 8 %bracketed, ptr align 8 %_52)
          to label %bb30 unwind label %cleanup4

bb30:                                             ; preds = %bb29
  store i8 0, ptr %_71, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_57, ptr align 8 %literal, i64 24, i1 false)
  %58 = getelementptr inbounds i8, ptr %_56, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %58, ptr align 8 %_57, i64 24, i1 false)
  store i64 -9223372036854775804, ptr %_56, align 8
; invoke proc_macro2::fallback::TokenStreamBuilder::push_token_from_parser
  invoke void @_ZN11proc_macro28fallback18TokenStreamBuilder22push_token_from_parser17h19154639c02ff5c7E(ptr align 8 %bracketed, ptr align 8 %_56)
          to label %bb31 unwind label %cleanup4

bb31:                                             ; preds = %bb30
  store i8 2, ptr %_59, align 1
  store i8 0, ptr %_70, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_61, ptr align 8 %bracketed, i64 24, i1 false)
; invoke proc_macro2::fallback::TokenStreamBuilder::build
  %_60 = invoke ptr @_ZN11proc_macro28fallback18TokenStreamBuilder5build17hadc455c12e1e201fE(ptr align 8 %_61)
          to label %bb32 unwind label %cleanup4

bb32:                                             ; preds = %bb31
  %59 = load i8, ptr %_59, align 1
; invoke proc_macro2::fallback::Group::new
  %60 = invoke { ptr, i8 } @_ZN11proc_macro28fallback5Group3new17hbabe51d3c5d7ae92E(i8 %59, ptr %_60)
          to label %bb33 unwind label %cleanup4

bb33:                                             ; preds = %bb32
  %group.0 = extractvalue { ptr, i8 } %60, 0
  %group.1 = extractvalue { ptr, i8 } %60, 1
; invoke proc_macro2::Group::_new_fallback
  invoke void @_ZN11proc_macro25Group13_new_fallback17h7782fbdef2d1abf8E(ptr sret([24 x i8]) align 8 %group, ptr %group.0, i8 %group.1)
          to label %bb34 unwind label %cleanup4

bb34:                                             ; preds = %bb33
  store i8 1, ptr %_69, align 1
; invoke proc_macro2::Group::set_span
  invoke void @_ZN11proc_macro25Group8set_span17h3ef2e5da90d43689E(ptr align 8 %group, i32 %span)
          to label %bb35 unwind label %cleanup5

bb40:                                             ; preds = %cleanup5
  %61 = load i8, ptr %_69, align 1
  %62 = trunc i8 %61 to i1
  br i1 %62, label %bb39, label %bb42

cleanup5:                                         ; preds = %bb35, %bb34
  %63 = landingpad { ptr, i32 }
          cleanup
  %64 = extractvalue { ptr, i32 } %63, 0
  %65 = extractvalue { ptr, i32 } %63, 1
  store ptr %64, ptr %0, align 8
  %66 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %65, ptr %66, align 8
  br label %bb40

bb35:                                             ; preds = %bb34
  store i8 0, ptr %_69, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_67, ptr align 8 %group, i64 24, i1 false)
  %67 = getelementptr inbounds i8, ptr %_66, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %67, ptr align 8 %_67, i64 24, i1 false)
  store i64 -9223372036854775807, ptr %_66, align 8
; invoke proc_macro2::fallback::TokenStreamBuilder::push_token_from_parser
  invoke void @_ZN11proc_macro28fallback18TokenStreamBuilder22push_token_from_parser17h19154639c02ff5c7E(ptr align 8 %trees, ptr align 8 %_66)
          to label %bb36 unwind label %cleanup5

bb36:                                             ; preds = %bb35
  store ptr %rest.0, ptr %_0, align 8
  %68 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %rest.1, ptr %68, align 8
  store i8 0, ptr %_69, align 1
  store i8 0, ptr %_70, align 1
  store i8 0, ptr %_71, align 1
  store i8 0, ptr %_72, align 1
  br label %bb37

bb39:                                             ; preds = %bb40
; invoke core::ptr::drop_in_place<proc_macro2::Group>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Group$GT$17hf3079a2bed2d5e2eE"(ptr align 8 %group) #25
          to label %bb42 unwind label %terminate

terminate:                                        ; preds = %bb45, %bb43, %bb41, %bb39
  %69 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %70 = extractvalue { ptr, i32 } %69, 0
  %71 = extractvalue { ptr, i32 } %69, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb41:                                             ; preds = %bb42
; invoke core::ptr::drop_in_place<proc_macro2::fallback::TokenStreamBuilder>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$proc_macro2..fallback..TokenStreamBuilder$GT$17hc947a9bf142072dcE"(ptr align 8 %bracketed) #25
          to label %bb44 unwind label %terminate

bb43:                                             ; preds = %bb44
; invoke core::ptr::drop_in_place<proc_macro2::Literal>
  invoke void @"_ZN4core3ptr41drop_in_place$LT$proc_macro2..Literal$GT$17h23fc1ed60d658ab3E"(ptr align 8 %literal) #25
          to label %bb46 unwind label %terminate

bb38:                                             ; preds = %bb45, %bb46
  %72 = load ptr, ptr %0, align 8
  %73 = getelementptr inbounds i8, ptr %0, i64 8
  %74 = load i32, ptr %73, align 8
  %75 = insertvalue { ptr, i32 } poison, ptr %72, 0
  %76 = insertvalue { ptr, i32 } %75, i32 %74, 1
  resume { ptr, i32 } %76

bb45:                                             ; preds = %bb46
; invoke core::ptr::drop_in_place<proc_macro2::Ident>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Ident$GT$17h13f4f34f41aabf0cE"(ptr align 8 %doc_ident) #25
          to label %bb38 unwind label %terminate

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::parse::doc_comment_contents
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse20doc_comment_contents17h9057addc2e77565bE(ptr sret([40 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_52 = alloca [24 x i8], align 8
  %_51 = alloca [40 x i8], align 8
  %val2 = alloca [32 x i8], align 8
  %_48 = alloca [32 x i8], align 8
  %_47 = alloca [32 x i8], align 8
  %_38 = alloca [24 x i8], align 8
  %_37 = alloca [40 x i8], align 8
  %_36 = alloca [32 x i8], align 8
  %input1 = alloca [16 x i8], align 8
  %_22 = alloca [24 x i8], align 8
  %_21 = alloca [40 x i8], align 8
  %val = alloca [32 x i8], align 8
  %_18 = alloca [32 x i8], align 8
  %_17 = alloca [32 x i8], align 8
  %_11 = alloca [24 x i8], align 8
  %_10 = alloca [40 x i8], align 8
  %_9 = alloca [32 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_2 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_3dba12bdfc02f300bac5107fa50559e2, i64 3)
  br i1 %_2, label %bb2, label %bb5

bb5:                                              ; preds = %start
; call proc_macro2::parse::Cursor::starts_with
  %_12 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_022cee65c935a399b1901330ff471e91, i64 3)
  br i1 %_12, label %bb7, label %bb15

bb2:                                              ; preds = %start
; call proc_macro2::parse::Cursor::advance
  %3 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 3)
  %input.011 = extractvalue { ptr, i64 } %3, 0
  %input.112 = extractvalue { ptr, i64 } %3, 1
; call proc_macro2::parse::take_until_newline_or_eof
  call void @_ZN11proc_macro25parse25take_until_newline_or_eof17h76c0d4754b5a4920E(ptr sret([32 x i8]) align 8 %_9, ptr align 1 %input.011, i64 %input.112)
  %input.013 = load ptr, ptr %_9, align 8
  %4 = getelementptr inbounds i8, ptr %_9, i64 8
  %input.114 = load i64, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_9, i64 16
  %s.015 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  %s.116 = load i64, ptr %6, align 8
  store ptr %s.015, ptr %_11, align 8
  %7 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %s.116, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %_11, i64 16
  store i8 1, ptr %8, align 8
  store ptr %input.013, ptr %_10, align 8
  %9 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %input.114, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %_10, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %_11, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_10, i64 40, i1 false)
  br label %bb36

bb15:                                             ; preds = %bb5
; call proc_macro2::parse::Cursor::starts_with
  %_27 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_a3cbf1622e18ce8557a1059d1d50984b, i64 3)
  br i1 %_27, label %bb17, label %bb23

bb7:                                              ; preds = %bb5
  %11 = load ptr, ptr %input, align 8
  %12 = getelementptr inbounds i8, ptr %input, i64 8
  %13 = load i64, ptr %12, align 8
; call proc_macro2::parse::block_comment
  call void @_ZN11proc_macro25parse13block_comment17hb113b8d1c429d07bE(ptr sret([32 x i8]) align 8 %_18, ptr align 1 %11, i64 %13)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4c83adf9d37dcf7cE"(ptr sret([32 x i8]) align 8 %_17, ptr align 8 %_18)
  %14 = load ptr, ptr %_17, align 8
  %15 = ptrtoint ptr %14 to i64
  %16 = icmp eq i64 %15, 0
  %_19 = select i1 %16, i64 1, i64 0
  %17 = icmp eq i64 %_19, 0
  br i1 %17, label %bb11, label %bb12

bb23:                                             ; preds = %bb15
; call proc_macro2::parse::Cursor::starts_with
  %_39 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %input, ptr align 1 @alloc_c63f42f072c0f65a5c00be2f1e9c3fa6, i64 3)
  br i1 %_39, label %bb25, label %bb35

bb17:                                             ; preds = %bb15
; call proc_macro2::parse::Cursor::advance
  %18 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 3)
  %19 = extractvalue { ptr, i64 } %18, 0
  %20 = extractvalue { ptr, i64 } %18, 1
  store ptr %19, ptr %input1, align 8
  %21 = getelementptr inbounds i8, ptr %input1, i64 8
  store i64 %20, ptr %21, align 8
; call proc_macro2::parse::Cursor::starts_with_char
  %_32 = call zeroext i1 @_ZN11proc_macro25parse6Cursor16starts_with_char17h7ad255747611f913E(ptr align 8 %input1, i32 47)
  br i1 %_32, label %bb20, label %bb21

bb35:                                             ; preds = %bb25, %bb23
  %22 = getelementptr inbounds i8, ptr %_0, i64 32
  store i8 2, ptr %22, align 8
  br label %bb36

bb25:                                             ; preds = %bb23
  %_57.0 = load ptr, ptr %input, align 8
  %23 = getelementptr inbounds i8, ptr %input, i64 8
  %_57.1 = load i64, ptr %23, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %24 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h6a51beaaf4f29efaE"(ptr align 1 %_57.0, i64 %_57.1, i64 3, ptr align 8 @alloc_044c8694bc252ae0e20331aba14bfa35)
  %_43.0 = extractvalue { ptr, i64 } %24, 0
  %_43.1 = extractvalue { ptr, i64 } %24, 1
; call core::str::<impl str>::starts_with
  %_42 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hf8dc8d170394ab8dE"(ptr align 1 %_43.0, i64 %_43.1, i32 42)
  br i1 %_42, label %bb35, label %bb28

bb28:                                             ; preds = %bb25
  %25 = load ptr, ptr %input, align 8
  %26 = getelementptr inbounds i8, ptr %input, i64 8
  %27 = load i64, ptr %26, align 8
; call proc_macro2::parse::block_comment
  call void @_ZN11proc_macro25parse13block_comment17hb113b8d1c429d07bE(ptr sret([32 x i8]) align 8 %_48, ptr align 1 %25, i64 %27)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4c83adf9d37dcf7cE"(ptr sret([32 x i8]) align 8 %_47, ptr align 8 %_48)
  %28 = load ptr, ptr %_47, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = icmp eq i64 %29, 0
  %_49 = select i1 %30, i64 1, i64 0
  %31 = icmp eq i64 %_49, 0
  br i1 %31, label %bb31, label %bb32

bb31:                                             ; preds = %bb28
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val2, ptr align 8 %_47, i64 32, i1 false)
  %input.0 = load ptr, ptr %val2, align 8
  %32 = getelementptr inbounds i8, ptr %val2, i64 8
  %input.1 = load i64, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %val2, i64 16
  %s.0 = load ptr, ptr %33, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 8
  %s.1 = load i64, ptr %34, align 8
; call core::str::<impl str>::len
  %_56 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 %s.0, i64 %s.1)
  %_55 = sub i64 %_56, 2
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %35 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hd9425dcc3a2cc23cE"(ptr align 1 %s.0, i64 %s.1, i64 3, i64 %_55, ptr align 8 @alloc_a9e682675f3f5d032215aa5c333f91e0)
  %_53.0 = extractvalue { ptr, i64 } %35, 0
  %_53.1 = extractvalue { ptr, i64 } %35, 1
  store ptr %_53.0, ptr %_52, align 8
  %36 = getelementptr inbounds i8, ptr %_52, i64 8
  store i64 %_53.1, ptr %36, align 8
  %37 = getelementptr inbounds i8, ptr %_52, i64 16
  store i8 0, ptr %37, align 8
  store ptr %input.0, ptr %_51, align 8
  %38 = getelementptr inbounds i8, ptr %_51, i64 8
  store i64 %input.1, ptr %38, align 8
  %39 = getelementptr inbounds i8, ptr %_51, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %_52, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_51, i64 40, i1 false)
  br label %bb36

bb32:                                             ; preds = %bb28
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h09b4ebb882e78b8dE"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 @alloc_63b191b973621cd9fc118a39795c58c7)
  br label %bb36

bb36:                                             ; preds = %bb2, %bb12, %bb11, %bb20, %bb21, %bb35, %bb32, %bb31
  ret void

bb21:                                             ; preds = %bb17
  %40 = load ptr, ptr %input1, align 8
  %41 = getelementptr inbounds i8, ptr %input1, i64 8
  %42 = load i64, ptr %41, align 8
; call proc_macro2::parse::take_until_newline_or_eof
  call void @_ZN11proc_macro25parse25take_until_newline_or_eof17h76c0d4754b5a4920E(ptr sret([32 x i8]) align 8 %_36, ptr align 1 %40, i64 %42)
  %input.03 = load ptr, ptr %_36, align 8
  %43 = getelementptr inbounds i8, ptr %_36, i64 8
  %input.14 = load i64, ptr %43, align 8
  %44 = getelementptr inbounds i8, ptr %_36, i64 16
  %s.05 = load ptr, ptr %44, align 8
  %45 = getelementptr inbounds i8, ptr %44, i64 8
  %s.16 = load i64, ptr %45, align 8
  store ptr %s.05, ptr %_38, align 8
  %46 = getelementptr inbounds i8, ptr %_38, i64 8
  store i64 %s.16, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %_38, i64 16
  store i8 0, ptr %47, align 8
  store ptr %input.03, ptr %_37, align 8
  %48 = getelementptr inbounds i8, ptr %_37, i64 8
  store i64 %input.14, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %_37, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %49, ptr align 8 %_38, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_37, i64 40, i1 false)
  br label %bb36

bb20:                                             ; preds = %bb17
  %50 = getelementptr inbounds i8, ptr %_0, i64 32
  store i8 2, ptr %50, align 8
  br label %bb36

bb11:                                             ; preds = %bb7
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_17, i64 32, i1 false)
  %input.07 = load ptr, ptr %val, align 8
  %51 = getelementptr inbounds i8, ptr %val, i64 8
  %input.18 = load i64, ptr %51, align 8
  %52 = getelementptr inbounds i8, ptr %val, i64 16
  %s.09 = load ptr, ptr %52, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 8
  %s.110 = load i64, ptr %53, align 8
; call core::str::<impl str>::len
  %_26 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 %s.09, i64 %s.110)
  %_25 = sub i64 %_26, 2
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %54 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hd9425dcc3a2cc23cE"(ptr align 1 %s.09, i64 %s.110, i64 3, i64 %_25, ptr align 8 @alloc_af991582243abe3267a6fc22d665a0fb)
  %_23.0 = extractvalue { ptr, i64 } %54, 0
  %_23.1 = extractvalue { ptr, i64 } %54, 1
  store ptr %_23.0, ptr %_22, align 8
  %55 = getelementptr inbounds i8, ptr %_22, i64 8
  store i64 %_23.1, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %_22, i64 16
  store i8 1, ptr %56, align 8
  store ptr %input.07, ptr %_21, align 8
  %57 = getelementptr inbounds i8, ptr %_21, i64 8
  store i64 %input.18, ptr %57, align 8
  %58 = getelementptr inbounds i8, ptr %_21, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %58, ptr align 8 %_22, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_21, i64 40, i1 false)
  br label %bb36

bb12:                                             ; preds = %bb7
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h09b4ebb882e78b8dE"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 @alloc_4ca3f5179382bcf41925481dcceecb81)
  br label %bb36

bb10:                                             ; No predecessors!
  unreachable
}

; proc_macro2::parse::take_until_newline_or_eof
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse25take_until_newline_or_eof17h76c0d4754b5a4920E(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_6 = alloca [16 x i8], align 8
  %iter = alloca [24 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %chars = alloca [24 x i8], align 8
  %input = alloca [16 x i8], align 8
  store ptr %0, ptr %input, align 8
  %2 = getelementptr inbounds i8, ptr %input, i64 8
  store i64 %1, ptr %2, align 8
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5bd9a084a58cb64fE(ptr sret([24 x i8]) align 8 %chars, ptr align 8 %input)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8ed2d2fde5118aadE"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %chars)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %_4, i64 24, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb12, %bb11, %start
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %3 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1ded53daacef3506E"(ptr align 8 %iter)
  %4 = extractvalue { i64, i32 } %3, 0
  %5 = extractvalue { i64, i32 } %3, 1
  store i64 %4, ptr %_6, align 8
  %6 = getelementptr inbounds i8, ptr %_6, i64 8
  store i32 %5, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %_6, i64 8
  %8 = load i32, ptr %7, align 8
  %9 = icmp eq i32 %8, 1114112
  %_8 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_8, 0
  br i1 %10, label %bb7, label %bb6

bb7:                                              ; preds = %bb3
; call proc_macro2::parse::Cursor::len
  %_26 = call i64 @_ZN11proc_macro25parse6Cursor3len17h1d567d65076334afE(ptr align 8 %input)
; call proc_macro2::parse::Cursor::advance
  %11 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_26)
  %_24.0 = extractvalue { ptr, i64 } %11, 0
  %_24.1 = extractvalue { ptr, i64 } %11, 1
  %_28.0 = load ptr, ptr %input, align 8
  %12 = getelementptr inbounds i8, ptr %input, i64 8
  %_28.1 = load i64, ptr %12, align 8
  store ptr %_24.0, ptr %_0, align 8
  %13 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_24.1, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 16
  store ptr %_28.0, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  store i64 %_28.1, ptr %15, align 8
  br label %bb20

bb6:                                              ; preds = %bb3
  %i = load i64, ptr %_6, align 8
  %16 = getelementptr inbounds i8, ptr %_6, i64 8
  %ch = load i32, ptr %16, align 8
  %17 = icmp eq i32 %ch, 10
  br i1 %17, label %bb8, label %bb11

bb20:                                             ; preds = %bb15, %bb8, %bb7
  ret void

bb8:                                              ; preds = %bb6
; call proc_macro2::parse::Cursor::advance
  %18 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %i)
  %_11.0 = extractvalue { ptr, i64 } %18, 0
  %_11.1 = extractvalue { ptr, i64 } %18, 1
  %_29.0 = load ptr, ptr %input, align 8
  %19 = getelementptr inbounds i8, ptr %input, i64 8
  %_29.1 = load i64, ptr %19, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %20 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h197e8d84eedb0ca8E"(ptr align 1 %_29.0, i64 %_29.1, i64 %i, ptr align 8 @alloc_a3d98426d9b6a64c4ffa03e9646ef4c8)
  %_13.0 = extractvalue { ptr, i64 } %20, 0
  %_13.1 = extractvalue { ptr, i64 } %20, 1
  store ptr %_11.0, ptr %_0, align 8
  %21 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_11.1, ptr %21, align 8
  %22 = getelementptr inbounds i8, ptr %_0, i64 16
  store ptr %_13.0, ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 8
  store i64 %_13.1, ptr %23, align 8
  br label %bb20

bb11:                                             ; preds = %bb6
  %24 = icmp eq i32 %ch, 13
  br i1 %24, label %bb12, label %bb3

bb12:                                             ; preds = %bb11
  %_30.0 = load ptr, ptr %input, align 8
  %25 = getelementptr inbounds i8, ptr %input, i64 8
  %_30.1 = load i64, ptr %25, align 8
  %_18 = add i64 %i, 1
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %26 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h6a51beaaf4f29efaE"(ptr align 1 %_30.0, i64 %_30.1, i64 %_18, ptr align 8 @alloc_bf2129c2660f7377cfffd08b8e87e99a)
  %_16.0 = extractvalue { ptr, i64 } %26, 0
  %_16.1 = extractvalue { ptr, i64 } %26, 1
; call core::str::<impl str>::starts_with
  %_15 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hf8dc8d170394ab8dE"(ptr align 1 %_16.0, i64 %_16.1, i32 10)
  br i1 %_15, label %bb15, label %bb3

bb15:                                             ; preds = %bb12
  %_21 = add i64 %i, 1
; call proc_macro2::parse::Cursor::advance
  %27 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %input, i64 %_21)
  %_19.0 = extractvalue { ptr, i64 } %27, 0
  %_19.1 = extractvalue { ptr, i64 } %27, 1
  %_31.0 = load ptr, ptr %input, align 8
  %28 = getelementptr inbounds i8, ptr %input, i64 8
  %_31.1 = load i64, ptr %28, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %29 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h197e8d84eedb0ca8E"(ptr align 1 %_31.0, i64 %_31.1, i64 %i, ptr align 8 @alloc_9de1d4aff78dc5aba5ddcc3a83577e09)
  %_22.0 = extractvalue { ptr, i64 } %29, 0
  %_22.1 = extractvalue { ptr, i64 } %29, 1
  store ptr %_19.0, ptr %_0, align 8
  %30 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_19.1, ptr %30, align 8
  %31 = getelementptr inbounds i8, ptr %_0, i64 16
  store ptr %_22.0, ptr %31, align 8
  %32 = getelementptr inbounds i8, ptr %31, i64 8
  store i64 %_22.1, ptr %32, align 8
  br label %bb20

bb5:                                              ; No predecessors!
  unreachable
}

; proc_macro2::rcvec::RcVec<T>::is_empty
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro25rcvec14RcVec$LT$T$GT$8is_empty17h40800e1546085b25E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %self1.i = load ptr, ptr %self, align 8
  %_0.i = getelementptr inbounds i8, ptr %self1.i, i64 16
; call alloc::vec::Vec<T,A>::is_empty
  %_0 = call zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17hc431871faeffbbceE"(ptr align 8 %_0.i)
  ret i1 %_0
}

; proc_macro2::rcvec::RcVec<T>::len
; Function Attrs: nonlazybind uwtable
define internal i64 @"_ZN11proc_macro25rcvec14RcVec$LT$T$GT$3len17hbc9a6a6af39db8caE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %self1.i = load ptr, ptr %self, align 8
  %_0.i = getelementptr inbounds i8, ptr %self1.i, i64 16
; call alloc::vec::Vec<T,A>::len
  %_0 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h302935c7d159b349E"(ptr align 8 %_0.i)
  ret i64 %_0
}

; proc_macro2::rcvec::RcVec<T>::iter
; Function Attrs: nonlazybind uwtable
define internal { ptr, ptr } @"_ZN11proc_macro25rcvec14RcVec$LT$T$GT$4iter17h5292baedbd96a46bE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %self1.i = load ptr, ptr %self, align 8
  %_0.i = getelementptr inbounds i8, ptr %self1.i, i64 16
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd94446eb726c9fa4E"(ptr align 8 %_0.i)
  %_2.0 = extractvalue { ptr, i64 } %0, 0
  %_2.1 = extractvalue { ptr, i64 } %0, 1
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h9b7e8e22378318ebE"(ptr align 8 %_2.0, i64 %_2.1)
  %_0.0 = extractvalue { ptr, ptr } %1, 0
  %_0.1 = extractvalue { ptr, ptr } %1, 1
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1
  ret { ptr, ptr } %3
}

; proc_macro2::rcvec::RcVec<T>::get_mut
; Function Attrs: nonlazybind uwtable
define internal align 8 ptr @"_ZN11proc_macro25rcvec14RcVec$LT$T$GT$7get_mut17he9ad92d0fe39f750E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 8
; call alloc::rc::Rc<T,A>::get_mut
  %_3 = call align 8 ptr @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$7get_mut17h272869e2ec8738dfE"(ptr align 8 %self)
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %0 = call align 8 ptr @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha0ef33573179b5cdE"(ptr align 8 %_3)
  store ptr %0, ptr %_2, align 8
  %1 = load ptr, ptr %_2, align 8
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_5 = select i1 %3, i64 1, i64 0
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb4, label %bb5

bb4:                                              ; preds = %start
  %inner = load ptr, ptr %_2, align 8
  store ptr %inner, ptr %_0, align 8
  br label %bb6

bb5:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %5 = call align 8 ptr @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h9442c2db80782225E"()
  store ptr %5, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %6 = load ptr, ptr %_0, align 8
  ret ptr %6

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::rcvec::RcVec<T>::make_owned
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN11proc_macro25rcvec14RcVec$LT$T$GT$10make_owned17hd34f29875bd606f3E"(ptr sret([24 x i8]) align 8 %_0, ptr %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_9 = alloca [24 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  %vec = alloca [24 x i8], align 8
  %self = alloca [8 x i8], align 8
  store ptr %0, ptr %self, align 8
; invoke alloc::rc::Rc<T,A>::get_mut
  %2 = invoke align 8 ptr @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$7get_mut17h272869e2ec8738dfE"(ptr align 8 %self)
          to label %bb1 unwind label %cleanup

bb7:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>>
  invoke void @"_ZN4core3ptr76drop_in_place$LT$proc_macro2..rcvec..RcVec$LT$proc_macro2..TokenTree$GT$$GT$17h08d580087c29f985E"(ptr align 8 %self) #25
          to label %bb8 unwind label %terminate

cleanup:                                          ; preds = %bb4, %bb2, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %1, align 8
  %6 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store ptr %2, ptr %_3, align 8
  %7 = load ptr, ptr %_3, align 8
  %8 = ptrtoint ptr %7 to i64
  %9 = icmp eq i64 %8, 0
  %_5 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_5, 1
  br i1 %10, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %owned = load ptr, ptr %_3, align 8
; invoke core::mem::take
  invoke void @_ZN4core3mem4take17h2be42f166503770cE(ptr sret([24 x i8]) align 8 %vec, ptr align 8 %owned)
          to label %bb10 unwind label %cleanup

bb3:                                              ; preds = %bb1
  %self1.i = load ptr, ptr %self, align 8
  %_0.i = getelementptr inbounds i8, ptr %self1.i, i64 16
  br label %bb4

bb10:                                             ; preds = %bb2
  br label %bb5

bb5:                                              ; preds = %bb11, %bb10
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %vec, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
; call core::ptr::drop_in_place<proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr76drop_in_place$LT$proc_macro2..rcvec..RcVec$LT$proc_macro2..TokenTree$GT$$GT$17h08d580087c29f985E"(ptr align 8 %self)
  ret void

bb4:                                              ; preds = %bb3
; invoke <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
  invoke void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hc40c890fc9f43236E"(ptr sret([24 x i8]) align 8 %vec, ptr align 8 %_0.i)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb4
  br label %bb5

bb9:                                              ; No predecessors!
  unreachable

terminate:                                        ; preds = %bb7
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb8:                                              ; preds = %bb7
  %14 = load ptr, ptr %1, align 8
  %15 = getelementptr inbounds i8, ptr %1, i64 8
  %16 = load i32, ptr %15, align 8
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18
}

; proc_macro2::rcvec::RcVecBuilder<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$3new17hf49bfc28e0d90efcE"(ptr sret([24 x i8]) align 8 %_0) unnamed_addr #1 {
start:
  %_1 = alloca [24 x i8], align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h6a727caf0f688dcaE"(ptr sret([24 x i8]) align 8 %_1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_1, i64 24, i1 false)
  ret void
}

; proc_macro2::rcvec::RcVecBuilder<T>::with_capacity
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$13with_capacity17hcaa837995c38c140E"(ptr sret([24 x i8]) align 8 %_0, i64 %cap) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hd7c321b71716520bE"(ptr sret([24 x i8]) align 8 %_2, i64 %cap)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void
}

; proc_macro2::rcvec::RcVecBuilder<T>::push
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$4push17hebb911a7be17a377E"(ptr align 8 %self, ptr align 8 %element) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hb7602e9311fbd5e7E"(ptr align 8 %self, ptr align 8 %element)
  ret void
}

; proc_macro2::rcvec::RcVecBuilder<T>::as_mut
; Function Attrs: nonlazybind uwtable
define internal align 8 ptr @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$6as_mut17h17d7ff71e040f226E"(ptr align 8 %self) unnamed_addr #1 {
start:
  ret ptr %self
}

; proc_macro2::rcvec::RcVecBuilder<T>::build
; Function Attrs: nonlazybind uwtable
define ptr @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$5build17hdf99da5355d04afaE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_3 = alloca [24 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %self, i64 24, i1 false)
; call alloc::rc::Rc<T>::new
  %_2 = call ptr @"_ZN5alloc2rc11Rc$LT$T$GT$3new17h598805faa5a989d3E"(ptr align 8 %_3)
  ret ptr %_2
}

; proc_macro2::rcvec::RcVecMut<T>::push
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN11proc_macro25rcvec17RcVecMut$LT$T$GT$4push17h825c235da738e0d3E"(ptr align 8 %self, ptr align 8 %element) unnamed_addr #1 {
start:
  %_4 = load ptr, ptr %self, align 8
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hb7602e9311fbd5e7E"(ptr align 8 %_4, ptr align 8 %element)
  ret void
}

; proc_macro2::rcvec::RcVecMut<T>::extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN11proc_macro25rcvec17RcVecMut$LT$T$GT$6extend17h82a26f9c7ae95f1dE"(ptr align 8 %self, ptr align 8 %iter) unnamed_addr #1 {
start:
  %_4 = load ptr, ptr %self, align 8
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend
  call void @"_ZN93_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$T$GT$$GT$6extend17hcd3b9bcbcaa68345E"(ptr align 8 %_4, ptr align 8 %iter)
  ret void
}

; proc_macro2::rcvec::RcVecMut<T>::pop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN11proc_macro25rcvec17RcVecMut$LT$T$GT$3pop17h49afc73c15d39bf8E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = load ptr, ptr %self, align 8
; call alloc::vec::Vec<T,A>::pop
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h7759f1d466d0ab69E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; <proc_macro2::rcvec::RcVec<T> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define ptr @"_ZN73_$LT$proc_macro2..rcvec..RcVec$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h4dddb27cff0f1987E"(ptr align 8 %self) unnamed_addr #1 {
start:
; call <alloc::rc::Rc<T,A> as core::clone::Clone>::clone
  %_2 = call ptr @"_ZN65_$LT$alloc..rc..Rc$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h2f42c7dafdece414E"(ptr align 8 %self)
  ret ptr %_2
}

; <proc_macro2::rcvec::RcVecBuilder<T> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN103_$LT$proc_macro2..rcvec..RcVecBuilder$LT$T$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8d036b8939e9bb5dE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_3 = alloca [24 x i8], align 8
  %_2 = alloca [32 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %self, i64 24, i1 false)
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9334bd47181e8352E"(ptr sret([32 x i8]) align 8 %_2, ptr align 8 %_3)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 32, i1 false)
  ret void
}

; <proc_macro2::rcvec::RcVecIntoIter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define void @"_ZN101_$LT$proc_macro2..rcvec..RcVecIntoIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h141ed75263b6a7c8E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49af5079b345aadcE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self)
  ret void
}

; <proc_macro2::rcvec::RcVecIntoIter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nonlazybind uwtable
define void @"_ZN101_$LT$proc_macro2..rcvec..RcVecIntoIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h196b8adef2a95d1bE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he0c251bcfdd6903fE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self)
  ret void
}

; proc_macro2::detection::inside_proc_macro
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE() unnamed_addr #1 {
start:
  %_3 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  store i8 0, ptr %_3, align 1
  %0 = load i8, ptr %_3, align 1
; call core::sync::atomic::AtomicUsize::load
  %_1 = call i64 @_ZN4core4sync6atomic11AtomicUsize4load17he4baa38074124831E(ptr align 8 @_ZN11proc_macro29detection5WORKS17ha239fa9223ed0a28E, i8 %0)
  switch i64 %_1, label %bb2 [
    i64 1, label %bb3
    i64 2, label %bb4
  ]

bb2:                                              ; preds = %start
; call std::sync::once::Once::call_once
  call void @_ZN3std4sync4once4Once9call_once17hf18674b432764184E(ptr align 4 @_ZN11proc_macro29detection4INIT17ha01234dd08f7075eE, ptr align 8 @alloc_213e33e81e502673945f14a8c641d8e6)
; call proc_macro2::detection::inside_proc_macro
  %1 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb6

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb6

bb4:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4, %bb3
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; proc_macro2::detection::force_fallback
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro29detection14force_fallback17hf023e6d8fb7baf03E() unnamed_addr #1 {
start:
  %_3 = alloca [1 x i8], align 1
  store i8 0, ptr %_3, align 1
  %0 = load i8, ptr %_3, align 1
; call core::sync::atomic::AtomicUsize::store
  call void @_ZN4core4sync6atomic11AtomicUsize5store17h04465bf0e60b201bE(ptr align 8 @_ZN11proc_macro29detection5WORKS17ha239fa9223ed0a28E, i64 1, i8 %0)
  ret void
}

; proc_macro2::detection::unforce_fallback
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro29detection16unforce_fallback17h30629cbe36f1642fE() unnamed_addr #1 {
start:
; call proc_macro2::detection::initialize
  call void @_ZN11proc_macro29detection10initialize17hde66b1812ee0c516E()
  ret void
}

; proc_macro2::detection::initialize
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro29detection10initialize17hde66b1812ee0c516E() unnamed_addr #1 {
start:
  %_6 = alloca [1 x i8], align 1
; call proc_macro::is_available
  %available = call zeroext i1 @_ZN10proc_macro12is_available17h6180ca11abe58a56E()
  %_5 = zext i1 %available to i64
  %_4 = add i64 %_5, 1
  store i8 0, ptr %_6, align 1
  %0 = load i8, ptr %_6, align 1
; call core::sync::atomic::AtomicUsize::store
  call void @_ZN4core4sync6atomic11AtomicUsize5store17h04465bf0e60b201bE(ptr align 8 @_ZN11proc_macro29detection5WORKS17ha239fa9223ed0a28E, i64 %_4, i8 %0)
  ret void
}

; proc_macro2::fallback::force
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro28fallback5force17h6184576ab2a5de5fE() unnamed_addr #1 {
start:
; call proc_macro2::detection::force_fallback
  call void @_ZN11proc_macro29detection14force_fallback17hf023e6d8fb7baf03E()
  ret void
}

; proc_macro2::fallback::unforce
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro28fallback7unforce17hf31bc25aab4c05e4E() unnamed_addr #1 {
start:
; call proc_macro2::detection::unforce_fallback
  call void @_ZN11proc_macro29detection16unforce_fallback17h30629cbe36f1642fE()
  ret void
}

; proc_macro2::fallback::LexError::span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback8LexError4span17ha23eb5b1d5597e7fE(ptr align 1 %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::LexError::call_site
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback8LexError9call_site17h962322173aebe4cbE() unnamed_addr #1 {
start:
; call proc_macro2::fallback::Span::call_site
  call void @_ZN11proc_macro28fallback4Span9call_site17h73db4df36731ab9bE()
  ret void
}

; proc_macro2::fallback::TokenStream::new
; Function Attrs: nonlazybind uwtable
define ptr @_ZN11proc_macro28fallback11TokenStream3new17h6c7551767d106366E() unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::rcvec::RcVecBuilder<T>::new
  call void @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$3new17hf49bfc28e0d90efcE"(ptr sret([24 x i8]) align 8 %_2)
; call proc_macro2::rcvec::RcVecBuilder<T>::build
  %_1 = call ptr @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$5build17hdf99da5355d04afaE"(ptr align 8 %_2)
  ret ptr %_1
}

; proc_macro2::fallback::TokenStream::is_empty
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback11TokenStream8is_empty17h266f4ce9f56ad0b8E(ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::rcvec::RcVec<T>::len
  %_2 = call i64 @"_ZN11proc_macro25rcvec14RcVec$LT$T$GT$3len17hbc9a6a6af39db8caE"(ptr align 8 %self)
  %_0 = icmp eq i64 %_2, 0
  ret i1 %_0
}

; proc_macro2::fallback::TokenStream::take_inner
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro28fallback11TokenStream10take_inner17h419b0646110efa57E(ptr sret([24 x i8]) align 8 %_0, ptr %self) unnamed_addr #1 {
start:
  %nodrop = alloca [8 x i8], align 8
  store ptr %self, ptr %nodrop, align 8
; call core::ptr::read
  %_3 = call ptr @_ZN4core3ptr4read17h7e4a75aa6d8bab82E(ptr %nodrop), !unsafe_inst !4
; call proc_macro2::rcvec::RcVec<T>::make_owned
  call void @"_ZN11proc_macro25rcvec14RcVec$LT$T$GT$10make_owned17hd34f29875bd606f3E"(ptr sret([24 x i8]) align 8 %_0, ptr %_3)
  ret void
}

; proc_macro2::fallback::push_token_from_proc_macro
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro28fallback26push_token_from_proc_macro17hb4f1f508af0e9ea5E(ptr align 8 %0, ptr align 8 %token) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_17 = alloca [1 x i8], align 1
  %_16 = alloca [1 x i8], align 1
  %_15 = alloca [1 x i8], align 1
  %_14 = alloca [32 x i8], align 8
  %literal = alloca [24 x i8], align 8
  %vec = alloca [8 x i8], align 8
  store ptr %0, ptr %vec, align 8
  store i8 0, ptr %_15, align 1
  store i8 0, ptr %_16, align 1
  store i8 0, ptr %_17, align 1
  store i8 1, ptr %_15, align 1
  store i8 1, ptr %_16, align 1
  store i8 1, ptr %_17, align 1
  %2 = load i64, ptr %token, align 8
  %3 = sub i64 %2, -9223372036854775807
  %4 = icmp ule i64 %3, 3
  %_5 = select i1 %4, i64 %3, i64 1
  %5 = icmp eq i64 %_5, 3
  br i1 %5, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %token, i64 8
  %7 = load i64, ptr %6, align 8
  %8 = icmp eq i64 %7, -9223372036854775808
  %_4 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_4, 1
  br i1 %9, label %bb3, label %bb1

bb1:                                              ; preds = %bb5, %bb2, %start
  store i8 0, ptr %_15, align 1
  store i8 0, ptr %_16, align 1
  store i8 0, ptr %_17, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_14, ptr align 8 %token, i64 32, i1 false)
; invoke proc_macro2::rcvec::RcVecMut<T>::push
  invoke void @"_ZN11proc_macro25rcvec17RcVecMut$LT$T$GT$4push17h825c235da738e0d3E"(ptr align 8 %vec, ptr align 8 %_14)
          to label %bb21 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %literal1 = getelementptr inbounds i8, ptr %token, i64 8
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %10 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc82a32b733878c7eE"(ptr align 8 %literal1)
          to label %bb4 unwind label %cleanup

bb19:                                             ; preds = %cleanup
  %11 = load i8, ptr %_15, align 1
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb18, label %bb8

cleanup:                                          ; preds = %bb1, %bb6, %bb4, %bb3
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %1, align 8
  %16 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb19

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { ptr, i64 } %10, 0
  %_9.1 = extractvalue { ptr, i64 } %10, 1
; invoke core::str::<impl str>::starts_with
  %_8 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hf8dc8d170394ab8dE"(ptr align 1 %_9.0, i64 %_9.1, i32 45)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  br i1 %_8, label %bb6, label %bb1

bb6:                                              ; preds = %bb5
  store i8 0, ptr %_17, align 1
  %17 = getelementptr inbounds i8, ptr %token, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %literal, ptr align 8 %17, i64 24, i1 false)
  %_12 = load ptr, ptr %vec, align 8
; invoke proc_macro2::fallback::push_token_from_proc_macro::push_negative_literal
  invoke void @_ZN11proc_macro28fallback26push_token_from_proc_macro21push_negative_literal17h06aae49229329b29E(ptr align 8 %_12, ptr align 8 %literal)
          to label %bb22 unwind label %cleanup

bb22:                                             ; preds = %bb6
  br label %bb7

bb7:                                              ; preds = %bb21, %bb22
  %18 = load i8, ptr %_15, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb12, label %bb9

bb20:                                             ; No predecessors!
  unreachable

bb21:                                             ; preds = %bb1
  br label %bb7

bb9:                                              ; preds = %bb11, %bb10, %bb7
  store i8 0, ptr %_15, align 1
  ret void

bb12:                                             ; preds = %bb7
  %20 = load i64, ptr %token, align 8
  %21 = sub i64 %20, -9223372036854775807
  %22 = icmp ule i64 %21, 3
  %_18 = select i1 %22, i64 %21, i64 1
  %23 = icmp eq i64 %_18, 3
  br i1 %23, label %bb10, label %bb11

bb10:                                             ; preds = %bb12
  store i8 0, ptr %_16, align 1
  br label %bb9

bb11:                                             ; preds = %bb12
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %token)
  br label %bb9

bb8:                                              ; preds = %bb17, %bb15, %bb14, %bb16, %bb13, %bb19
  %24 = load ptr, ptr %1, align 8
  %25 = getelementptr inbounds i8, ptr %1, i64 8
  %26 = load i32, ptr %25, align 8
  %27 = insertvalue { ptr, i32 } poison, ptr %24, 0
  %28 = insertvalue { ptr, i32 } %27, i32 %26, 1
  resume { ptr, i32 } %28

bb18:                                             ; preds = %bb19
  %29 = load i64, ptr %token, align 8
  %30 = sub i64 %29, -9223372036854775807
  %31 = icmp ule i64 %30, 3
  %_20 = select i1 %31, i64 %30, i64 1
  %32 = icmp eq i64 %_20, 3
  br i1 %32, label %bb13, label %bb17

bb13:                                             ; preds = %bb18
  %33 = load i8, ptr %_16, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %bb16, label %bb8

bb17:                                             ; preds = %bb18
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %token) #25
          to label %bb8 unwind label %terminate

bb16:                                             ; preds = %bb13
  %35 = getelementptr inbounds i8, ptr %token, i64 8
  %36 = load i64, ptr %35, align 8
  %37 = icmp eq i64 %36, -9223372036854775808
  %_19 = select i1 %37, i64 0, i64 1
  %38 = icmp eq i64 %_19, 1
  br i1 %38, label %bb14, label %bb8

bb14:                                             ; preds = %bb16
  %39 = load i8, ptr %_17, align 1
  %40 = trunc i8 %39 to i1
  br i1 %40, label %bb15, label %bb8

bb15:                                             ; preds = %bb14
  %41 = getelementptr inbounds i8, ptr %token, i64 8
; invoke core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17h63b97baac7be2b8bE"(ptr align 8 %41) #25
          to label %bb8 unwind label %terminate

terminate:                                        ; preds = %bb17, %bb15
  %42 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %43 = extractvalue { ptr, i32 } %42, 0
  %44 = extractvalue { ptr, i32 } %42, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; proc_macro2::fallback::push_token_from_proc_macro::push_negative_literal
; Function Attrs: cold nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback26push_token_from_proc_macro21push_negative_literal17h06aae49229329b29E(ptr align 8 %0, ptr align 8 %literal) unnamed_addr #2 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_19 = alloca [1 x i8], align 1
  %_18 = alloca [24 x i8], align 8
  %_17 = alloca [24 x i8], align 8
  %_16 = alloca [32 x i8], align 8
  %_13 = alloca [12 x i8], align 4
  %_12 = alloca [32 x i8], align 8
  %_6 = alloca [1 x i8], align 1
  %punct = alloca [12 x i8], align 4
  %vec = alloca [8 x i8], align 8
  store ptr %0, ptr %vec, align 8
  store i8 0, ptr %_19, align 1
  store i8 1, ptr %_19, align 1
; invoke alloc::string::String::remove
  %_3 = invoke i32 @_ZN5alloc6string6String6remove17h561e24ab6cddbd9aE(ptr align 8 %literal, i64 0)
          to label %bb1 unwind label %cleanup

bb10:                                             ; preds = %cleanup
  %2 = load i8, ptr %_19, align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb5, %bb4, %bb3, %bb2, %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %1, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb10

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1
  %8 = load i8, ptr %_6, align 1
  %9 = trunc i8 %8 to i1
; invoke proc_macro2::Punct::new
  invoke void @_ZN11proc_macro25Punct3new17h7971e0a4c6081f92E(ptr sret([12 x i8]) align 4 %punct, i32 45, i1 zeroext %9)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke proc_macro2::Span::_new_fallback
  %_9 = invoke i32 @_ZN11proc_macro24Span13_new_fallback17he901ad9d50a5f2cbE()
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke proc_macro2::Punct::set_span
  invoke void @_ZN11proc_macro25Punct8set_span17h7328f643f9d1a1c9E(ptr align 4 %punct, i32 %_9)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_13, ptr align 4 %punct, i64 12, i1 false)
  %10 = getelementptr inbounds i8, ptr %_12, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 4 %_13, i64 12, i1 false)
  store i64 -9223372036854775805, ptr %_12, align 8
; invoke proc_macro2::rcvec::RcVecMut<T>::push
  invoke void @"_ZN11proc_macro25rcvec17RcVecMut$LT$T$GT$4push17h825c235da738e0d3E"(ptr align 8 %vec, ptr align 8 %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store i8 0, ptr %_19, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_18, ptr align 8 %literal, i64 24, i1 false)
; invoke proc_macro2::Literal::_new_fallback
  invoke void @_ZN11proc_macro27Literal13_new_fallback17ha788e5ec84bb7d0dE(ptr sret([24 x i8]) align 8 %_17, ptr align 8 %_18)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %11 = getelementptr inbounds i8, ptr %_16, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %_17, i64 24, i1 false)
  store i64 -9223372036854775804, ptr %_16, align 8
; invoke proc_macro2::rcvec::RcVecMut<T>::push
  invoke void @"_ZN11proc_macro25rcvec17RcVecMut$LT$T$GT$4push17h825c235da738e0d3E"(ptr align 8 %vec, ptr align 8 %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %12 = load ptr, ptr %1, align 8
  %13 = getelementptr inbounds i8, ptr %1, i64 8
  %14 = load i32, ptr %13, align 8
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16

bb9:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17h63b97baac7be2b8bE"(ptr align 8 %literal) #25
          to label %bb8 unwind label %terminate

terminate:                                        ; preds = %bb9
  %17 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; <proc_macro2::fallback::TokenStream as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN76_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbdb88b205740a3a1E"(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_20 = alloca [1 x i8], align 1
  %_18 = alloca [24 x i8], align 8
  %group1 = alloca [24 x i8], align 8
  %group = alloca [24 x i8], align 8
  %token = alloca [32 x i8], align 8
  %_7 = alloca [32 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  %inner = alloca [8 x i8], align 8
  store i8 0, ptr %_20, align 1
; call proc_macro2::rcvec::RcVec<T>::get_mut
  %1 = call align 8 ptr @"_ZN11proc_macro25rcvec14RcVec$LT$T$GT$7get_mut17he9ad92d0fe39f750E"(ptr align 8 %self)
  store ptr %1, ptr %_3, align 8
  %2 = load ptr, ptr %_3, align 8
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_5 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_5, 0
  br i1 %5, label %bb14, label %bb3

bb14:                                             ; preds = %bb11, %start
  ret void

bb3:                                              ; preds = %start
  %inner2 = load ptr, ptr %_3, align 8
  store ptr %inner2, ptr %inner, align 8
  br label %bb4

bb4:                                              ; preds = %bb22, %bb19, %bb3
; call proc_macro2::rcvec::RcVecMut<T>::pop
  call void @"_ZN11proc_macro25rcvec17RcVecMut$LT$T$GT$3pop17h49afc73c15d39bf8E"(ptr sret([32 x i8]) align 8 %_7, ptr align 8 %inner)
  %6 = load i64, ptr %_7, align 8
  %7 = icmp eq i64 %6, -9223372036854775803
  %_9 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_9, 1
  br i1 %8, label %bb6, label %bb11

bb6:                                              ; preds = %bb4
  store i8 1, ptr %_20, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %token, ptr align 8 %_7, i64 32, i1 false)
  %9 = load i64, ptr %token, align 8
  %10 = sub i64 %9, -9223372036854775807
  %11 = icmp ule i64 %10, 3
  %_12 = select i1 %11, i64 %10, i64 1
  %12 = icmp eq i64 %_12, 0
  br i1 %12, label %bb7, label %bb13

bb11:                                             ; preds = %bb4
; call core::ptr::drop_in_place<core::option::Option<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr71drop_in_place$LT$core..option..Option$LT$proc_macro2..TokenTree$GT$$GT$17h875682ad77382b8dE"(ptr align 8 %_7)
  br label %bb14

bb7:                                              ; preds = %bb6
  store i8 0, ptr %_20, align 1
  %13 = getelementptr inbounds i8, ptr %token, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %group1, ptr align 8 %13, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %group, ptr align 8 %group1, i64 24, i1 false)
  %14 = load i32, ptr %group, align 8
  %_14 = zext i32 %14 to i64
  %15 = icmp eq i64 %_14, 0
  br i1 %15, label %bb12, label %bb8

bb13:                                             ; preds = %bb21, %bb12, %bb6
  %16 = load i64, ptr %token, align 8
  %17 = sub i64 %16, -9223372036854775807
  %18 = icmp ule i64 %17, 3
  %_24 = select i1 %18, i64 %17, i64 1
  %19 = icmp eq i64 %_24, 0
  br i1 %19, label %bb23, label %bb25

bb12:                                             ; preds = %bb7
  %20 = load i32, ptr %group, align 8
  %_23 = zext i32 %20 to i64
  %21 = icmp eq i64 %_23, 1
  br i1 %21, label %bb13, label %bb21

bb8:                                              ; preds = %bb7
  %22 = getelementptr inbounds i8, ptr %group, i64 8
  %group.0 = load ptr, ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 8
  %group.1 = load i8, ptr %23, align 8
; invoke proc_macro2::fallback::TokenStream::take_inner
  invoke void @_ZN11proc_macro28fallback11TokenStream10take_inner17h419b0646110efa57E(ptr sret([24 x i8]) align 8 %_18, ptr %group.0)
          to label %bb9 unwind label %cleanup3

bb21:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<proc_macro2::imp::Group>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17hdb32b9b469366b91E"(ptr align 8 %group)
          to label %bb13 unwind label %cleanup

bb15:                                             ; preds = %bb26, %bb27, %cleanup
  %24 = load i64, ptr %token, align 8
  %25 = sub i64 %24, -9223372036854775807
  %26 = icmp ule i64 %25, 3
  %_26 = select i1 %26, i64 %25, i64 1
  %27 = icmp eq i64 %_26, 0
  br i1 %27, label %bb16, label %bb28

cleanup:                                          ; preds = %bb18, %bb21
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = extractvalue { ptr, i32 } %28, 0
  %30 = extractvalue { ptr, i32 } %28, 1
  store ptr %29, ptr %0, align 8
  %31 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %30, ptr %31, align 8
  br label %bb15

bb27:                                             ; preds = %cleanup3
  %32 = load i32, ptr %group, align 8
  %_25 = zext i32 %32 to i64
  %33 = icmp eq i64 %_25, 1
  br i1 %33, label %bb15, label %bb26

cleanup3:                                         ; preds = %bb9, %bb8
  %34 = landingpad { ptr, i32 }
          cleanup
  %35 = extractvalue { ptr, i32 } %34, 0
  %36 = extractvalue { ptr, i32 } %34, 1
  store ptr %35, ptr %0, align 8
  %37 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %36, ptr %37, align 8
  br label %bb27

bb9:                                              ; preds = %bb8
; invoke proc_macro2::rcvec::RcVecMut<T>::extend
  invoke void @"_ZN11proc_macro25rcvec17RcVecMut$LT$T$GT$6extend17h82a26f9c7ae95f1dE"(ptr align 8 %inner, ptr align 8 %_18)
          to label %bb10 unwind label %cleanup3

bb10:                                             ; preds = %bb9
  %38 = load i32, ptr %group, align 8
  %_21 = zext i32 %38 to i64
  %39 = icmp eq i64 %_21, 1
  br i1 %39, label %bb17, label %bb18

bb17:                                             ; preds = %bb18, %bb10
  %40 = load i64, ptr %token, align 8
  %41 = sub i64 %40, -9223372036854775807
  %42 = icmp ule i64 %41, 3
  %_22 = select i1 %42, i64 %41, i64 1
  %43 = icmp eq i64 %_22, 0
  br i1 %43, label %bb19, label %bb20

bb18:                                             ; preds = %bb10
; invoke core::ptr::drop_in_place<proc_macro2::imp::Group>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17hdb32b9b469366b91E"(ptr align 8 %group)
          to label %bb17 unwind label %cleanup

bb19:                                             ; preds = %bb20, %bb17
  store i8 0, ptr %_20, align 1
  br label %bb4

bb20:                                             ; preds = %bb17
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %token)
  br label %bb19

bb26:                                             ; preds = %bb27
; invoke core::ptr::drop_in_place<proc_macro2::imp::Group>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17hdb32b9b469366b91E"(ptr align 8 %group) #25
          to label %bb15 unwind label %terminate

terminate:                                        ; preds = %bb28, %bb26
  %44 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %45 = extractvalue { ptr, i32 } %44, 0
  %46 = extractvalue { ptr, i32 } %44, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb16:                                             ; preds = %bb28, %bb15
  %47 = load ptr, ptr %0, align 8
  %48 = getelementptr inbounds i8, ptr %0, i64 8
  %49 = load i32, ptr %48, align 8
  %50 = insertvalue { ptr, i32 } poison, ptr %47, 0
  %51 = insertvalue { ptr, i32 } %50, i32 %49, 1
  resume { ptr, i32 } %51

bb28:                                             ; preds = %bb15
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %token) #25
          to label %bb16 unwind label %terminate

bb23:                                             ; preds = %bb13
  %52 = load i8, ptr %_20, align 1
  %53 = trunc i8 %52 to i1
  br i1 %53, label %bb24, label %bb22

bb25:                                             ; preds = %bb13
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %token)
  br label %bb22

bb22:                                             ; preds = %bb25, %bb24, %bb23
  store i8 0, ptr %_20, align 1
  br label %bb4

bb24:                                             ; preds = %bb23
  %54 = getelementptr inbounds i8, ptr %token, i64 8
; call core::ptr::drop_in_place<proc_macro2::Group>
  call void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Group$GT$17hf3079a2bed2d5e2eE"(ptr align 8 %54)
  br label %bb22

bb2:                                              ; No predecessors!
  unreachable
}

; proc_macro2::fallback::TokenStreamBuilder::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback18TokenStreamBuilder3new17h320fbc9211e74ac6E(ptr sret([24 x i8]) align 8 %_0) unnamed_addr #1 {
start:
  %_1 = alloca [24 x i8], align 8
; call proc_macro2::rcvec::RcVecBuilder<T>::new
  call void @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$3new17hf49bfc28e0d90efcE"(ptr sret([24 x i8]) align 8 %_1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_1, i64 24, i1 false)
  ret void
}

; proc_macro2::fallback::TokenStreamBuilder::with_capacity
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback18TokenStreamBuilder13with_capacity17hf0e5a62afaa2f33fE(ptr sret([24 x i8]) align 8 %_0, i64 %cap) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::rcvec::RcVecBuilder<T>::with_capacity
  call void @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$13with_capacity17hcaa837995c38c140E"(ptr sret([24 x i8]) align 8 %_2, i64 %cap)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void
}

; proc_macro2::fallback::TokenStreamBuilder::push_token_from_parser
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback18TokenStreamBuilder22push_token_from_parser17h19154639c02ff5c7E(ptr align 8 %self, ptr align 8 %tt) unnamed_addr #1 {
start:
; call proc_macro2::rcvec::RcVecBuilder<T>::push
  call void @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$4push17hebb911a7be17a377E"(ptr align 8 %self, ptr align 8 %tt)
  ret void
}

; proc_macro2::fallback::TokenStreamBuilder::build
; Function Attrs: nonlazybind uwtable
define internal ptr @_ZN11proc_macro28fallback18TokenStreamBuilder5build17hadc455c12e1e201fE(ptr align 8 %self) unnamed_addr #1 {
start:
  %_3 = alloca [24 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %self, i64 24, i1 false)
; call proc_macro2::rcvec::RcVecBuilder<T>::build
  %_2 = call ptr @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$5build17hdf99da5355d04afaE"(ptr align 8 %_3)
  ret ptr %_2
}

; proc_macro2::fallback::get_cursor
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN11proc_macro28fallback10get_cursor17heb63543d3a760f8dE(ptr align 1 %src.0, i64 %src.1) unnamed_addr #1 {
start:
  %0 = insertvalue { ptr, i64 } poison, ptr %src.0, 0
  %1 = insertvalue { ptr, i64 } %0, i64 %src.1, 1
  ret { ptr, i64 } %1
}

; <proc_macro2::fallback::TokenStream as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define ptr @"_ZN81_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hf484e5f91c83f533E"(ptr align 1 %src.0, i64 %src.1) unnamed_addr #1 {
start:
  %cursor = alloca [16 x i8], align 8
; call proc_macro2::fallback::get_cursor
  %0 = call { ptr, i64 } @_ZN11proc_macro28fallback10get_cursor17heb63543d3a760f8dE(ptr align 1 %src.0, i64 %src.1)
  %1 = extractvalue { ptr, i64 } %0, 0
  %2 = extractvalue { ptr, i64 } %0, 1
  store ptr %1, ptr %cursor, align 8
  %3 = getelementptr inbounds i8, ptr %cursor, i64 8
  store i64 %2, ptr %3, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_3 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17hc1f11031c415fffbE(ptr align 8 %cursor, ptr align 1 @alloc_e712762edc9ad31bc8ddf8c29ba2ab95, i64 3)
  br i1 %_3, label %bb3, label %bb6

bb6:                                              ; preds = %bb3, %start
  %_10.0 = load ptr, ptr %cursor, align 8
  %4 = getelementptr inbounds i8, ptr %cursor, i64 8
  %_10.1 = load i64, ptr %4, align 8
; call proc_macro2::parse::token_stream
  %_0 = call ptr @_ZN11proc_macro25parse12token_stream17h14fcf20fb5265a18E(ptr align 1 %_10.0, i64 %_10.1)
  ret ptr %_0

bb3:                                              ; preds = %start
; call core::str::<impl str>::len
  %_8 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 @alloc_e712762edc9ad31bc8ddf8c29ba2ab95, i64 3)
; call proc_macro2::parse::Cursor::advance
  %5 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %cursor, i64 %_8)
  %_6.0 = extractvalue { ptr, i64 } %5, 0
  %_6.1 = extractvalue { ptr, i64 } %5, 1
  store ptr %_6.0, ptr %cursor, align 8
  %6 = getelementptr inbounds i8, ptr %cursor, i64 8
  store i64 %_6.1, ptr %6, align 8
  br label %bb6
}

; <proc_macro2::fallback::LexError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$proc_macro2..fallback..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h012d70b6183c4545E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call core::fmt::Formatter::write_str
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 @alloc_86ae06c694315714eba68fd4dbf9a3e7, i64 37)
  ret i1 %_0
}

; <proc_macro2::fallback::TokenStream as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h82a2cde990a97ccaE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_27 = alloca [1 x i8], align 1
  %_20 = alloca [1 x i8], align 1
  %_19 = alloca [1 x i8], align 1
  %_17 = alloca [48 x i8], align 8
  %_15 = alloca [1 x i8], align 1
  %_9 = alloca [16 x i8], align 8
  %iter = alloca [24 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %joint = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  store i8 0, ptr %joint, align 1
; call proc_macro2::rcvec::RcVec<T>::iter
  %0 = call { ptr, ptr } @"_ZN11proc_macro25rcvec14RcVec$LT$T$GT$4iter17h5292baedbd96a46bE"(ptr align 8 %self)
  %_6.0 = extractvalue { ptr, ptr } %0, 0
  %_6.1 = extractvalue { ptr, ptr } %0, 1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hb25bb09893c6bca0E(ptr sret([24 x i8]) align 8 %_5, ptr %_6.0, ptr %_6.1)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h055fb81a3e7851dfE"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %_5)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %_4, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb22, %start
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %1 = call { i64, ptr } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfe6a258013085ac9E"(ptr align 8 %iter)
  %2 = extractvalue { i64, ptr } %1, 0
  %3 = extractvalue { i64, ptr } %1, 1
  store i64 %2, ptr %_9, align 8
  %4 = getelementptr inbounds i8, ptr %_9, i64 8
  store ptr %3, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_9, i64 8
  %6 = load ptr, ptr %5, align 8
  %7 = ptrtoint ptr %6 to i64
  %8 = icmp eq i64 %7, 0
  %_11 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_11, 0
  br i1 %9, label %bb8, label %bb7

bb8:                                              ; preds = %bb4
  store i8 0, ptr %_0, align 1
  br label %bb25

bb7:                                              ; preds = %bb4
  %i = load i64, ptr %_9, align 8
  %10 = getelementptr inbounds i8, ptr %_9, i64 8
  %tt = load ptr, ptr %10, align 8
  %11 = icmp eq i64 %i, 0
  br i1 %11, label %bb15, label %bb9

bb25:                                             ; preds = %bb24, %bb14, %bb8
  %12 = load i8, ptr %_0, align 1
  %13 = trunc i8 %12 to i1
  ret i1 %13

bb15:                                             ; preds = %bb10, %bb9, %bb7
  store i8 0, ptr %joint, align 1
  %14 = load i64, ptr %tt, align 8
  %15 = sub i64 %14, -9223372036854775807
  %16 = icmp ule i64 %15, 3
  %_21 = select i1 %16, i64 %15, i64 1
  switch i64 %_21, label %bb6 [
    i64 0, label %bb17
    i64 1, label %bb18
    i64 2, label %bb19
    i64 3, label %bb16
  ]

bb9:                                              ; preds = %bb7
  %17 = load i8, ptr %joint, align 1
  %_14 = trunc i8 %17 to i1
  br i1 %_14, label %bb15, label %bb10

bb10:                                             ; preds = %bb9
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h604c02e065326e13E(ptr sret([48 x i8]) align 8 %_17, ptr align 8 @alloc_c00fe7fcdf183128eacaa5cead3e5b1f)
; call core::fmt::Formatter::write_fmt
  %_16 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hf52dee6246e00a78E(ptr align 8 %f, ptr align 8 %_17)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %18 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf02fe4c8cac895bE"(i1 zeroext %_16)
  %19 = zext i1 %18 to i8
  store i8 %19, ptr %_15, align 1
  %20 = load i8, ptr %_15, align 1
  %21 = trunc i8 %20 to i1
  %_18 = zext i1 %21 to i64
  %22 = icmp eq i64 %_18, 0
  br i1 %22, label %bb15, label %bb14

bb14:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %23 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hff31d50f5af9a906E"(ptr align 8 @alloc_61a3ea68f6968f26b1d351a01078ff03)
  %24 = zext i1 %23 to i8
  store i8 %24, ptr %_0, align 1
  br label %bb25

bb6:                                              ; preds = %bb15
  unreachable

bb17:                                             ; preds = %bb15
  %tt1 = getelementptr inbounds i8, ptr %tt, i64 8
; call <proc_macro2::Group as core::fmt::Display>::fmt
  %25 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Group$u20$as$u20$core..fmt..Display$GT$3fmt17hbe716640c237ceb4E"(ptr align 8 %tt1, ptr align 8 %f)
  %26 = zext i1 %25 to i8
  store i8 %26, ptr %_20, align 1
  br label %bb22

bb18:                                             ; preds = %bb15
; call <proc_macro2::Ident as core::fmt::Display>::fmt
  %27 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h13ab6285103b9791E"(ptr align 8 %tt, ptr align 8 %f)
  %28 = zext i1 %27 to i8
  store i8 %28, ptr %_20, align 1
  br label %bb22

bb19:                                             ; preds = %bb15
  %tt2 = getelementptr inbounds i8, ptr %tt, i64 8
; call proc_macro2::Punct::spacing
  %29 = call zeroext i1 @_ZN11proc_macro25Punct7spacing17hbf7907f0be3b091bE(ptr align 4 %tt2)
  %30 = zext i1 %29 to i8
  store i8 %30, ptr %_27, align 1
; call <proc_macro2::Spacing as core::cmp::PartialEq>::eq
  %_25 = call zeroext i1 @"_ZN61_$LT$proc_macro2..Spacing$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9b42e225abd19eaeE"(ptr align 1 %_27, ptr align 1 @alloc_8821998f047ca62cad40e6bc4e4d87c4)
  %31 = zext i1 %_25 to i8
  store i8 %31, ptr %joint, align 1
; call <proc_macro2::Punct as core::fmt::Display>::fmt
  %32 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Punct$u20$as$u20$core..fmt..Display$GT$3fmt17hb0d2d08d2070d15eE"(ptr align 4 %tt2, ptr align 8 %f)
  %33 = zext i1 %32 to i8
  store i8 %33, ptr %_20, align 1
  br label %bb22

bb16:                                             ; preds = %bb15
  %tt3 = getelementptr inbounds i8, ptr %tt, i64 8
; call <proc_macro2::Literal as core::fmt::Display>::fmt
  %34 = call zeroext i1 @"_ZN59_$LT$proc_macro2..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hcf206e7165e5e25aE"(ptr align 8 %tt3, ptr align 8 %f)
  %35 = zext i1 %34 to i8
  store i8 %35, ptr %_20, align 1
  br label %bb22

bb22:                                             ; preds = %bb16, %bb19, %bb18, %bb17
  %36 = load i8, ptr %_20, align 1
  %37 = trunc i8 %36 to i1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %38 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf02fe4c8cac895bE"(i1 zeroext %37)
  %39 = zext i1 %38 to i8
  store i8 %39, ptr %_19, align 1
  %40 = load i8, ptr %_19, align 1
  %41 = trunc i8 %40 to i1
  %_29 = zext i1 %41 to i64
  %42 = icmp eq i64 %_29, 0
  br i1 %42, label %bb4, label %bb24

bb24:                                             ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %43 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hff31d50f5af9a906E"(ptr align 8 @alloc_ca9947dbcaedc0cf87f039977b6aa83b)
  %44 = zext i1 %43 to i8
  store i8 %44, ptr %_0, align 1
  br label %bb25
}

; <proc_macro2::fallback::TokenStream as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN71_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc5baecbeabf7391E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_9 = alloca [16 x i8], align 8
  %_3 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
; call core::fmt::Formatter::write_str
  %_4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 @alloc_5c9190818faa303809fe44f74ab2b44a, i64 12)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %0 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf02fe4c8cac895bE"(i1 zeroext %_4)
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %_3, align 1
  %2 = load i8, ptr %_3, align 1
  %3 = trunc i8 %2 to i1
  %_6 = zext i1 %3 to i64
  %4 = icmp eq i64 %_6, 0
  br i1 %4, label %bb4, label %bb5

bb4:                                              ; preds = %start
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17hce1082af628ba6fcE(ptr sret([16 x i8]) align 8 %_9, ptr align 8 %f)
; call <proc_macro2::fallback::TokenStream as core::clone::Clone>::clone
  %_10 = call ptr @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17he89244e99d7f2631E"(ptr align 8 %self)
; call core::fmt::builders::DebugList::entries
  %_7 = call align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h5e80cd2dba1bedd4E(ptr align 8 %_9, ptr %_10)
; call core::fmt::builders::DebugList::finish
  %5 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h9fea27fe6baef614E(ptr align 8 %_7)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb9

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hff31d50f5af9a906E"(ptr align 8 @alloc_5cb3a146b6615456afeeb7173bb1ecd9)
  %8 = zext i1 %7 to i8
  store i8 %8, ptr %_0, align 1
  br label %bb9

bb9:                                              ; preds = %bb5, %bb4
  %9 = load i8, ptr %_0, align 1
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb3:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::fallback::TokenStream as core::convert::From<proc_macro::TokenStream>>::from
; Function Attrs: nonlazybind uwtable
define ptr @"_ZN105_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenStream$GT$$GT$4from17hf4fa3048adfe1655E"(i32 %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %inner = alloca [4 x i8], align 4
  store i32 %0, ptr %inner, align 4
; invoke <proc_macro::TokenStream as alloc::string::ToString>::to_string
  invoke void @"_ZN67_$LT$proc_macro..TokenStream$u20$as$u20$alloc..string..ToString$GT$9to_string17h203032afc85fae79E"(ptr sret([24 x i8]) align 8 %_5, ptr align 4 %inner)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %bb7, %cleanup
; invoke core::ptr::drop_in_place<proc_macro::TokenStream>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5907fc6780300241E"(ptr align 4 %inner) #25
          to label %bb9 unwind label %terminate

cleanup:                                          ; preds = %bb4, %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %1, align 8
  %5 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb8

bb1:                                              ; preds = %start
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %6 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc82a32b733878c7eE"(ptr align 8 %_5)
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_5) #25
          to label %bb8 unwind label %terminate

cleanup1:                                         ; preds = %bb3, %bb2, %bb1
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_3.0 = extractvalue { ptr, i64 } %6, 0
  %_3.1 = extractvalue { ptr, i64 } %6, 1
; invoke core::str::<impl str>::parse
  %_2 = invoke ptr @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hd2d3103995bcf3aeE"(ptr align 1 %_3.0, i64 %_3.1)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  %_0 = invoke ptr @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h4c7175faae8c50e5E"(ptr %_2, ptr align 1 @alloc_519bbb0683fc13a80d093e972ed5ffbd, i64 34, ptr align 8 @alloc_d5c8943d731e4c12bfd4cb7b8740ed85)
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_5)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5907fc6780300241E"(ptr align 4 %inner)
  ret ptr %_0

terminate:                                        ; preds = %bb8, %bb7
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb9:                                              ; preds = %bb8
  %14 = load ptr, ptr %1, align 8
  %15 = getelementptr inbounds i8, ptr %1, i64 8
  %16 = load i32, ptr %15, align 8
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18
}

; proc_macro2::fallback::<impl core::convert::From<proc_macro2::fallback::TokenStream> for proc_macro::TokenStream>::from
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN11proc_macro28fallback115_$LT$impl$u20$core..convert..From$LT$proc_macro2..fallback..TokenStream$GT$$u20$for$u20$proc_macro..TokenStream$GT$4from17h0a83928471e6dcb8E"(ptr %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %inner = alloca [8 x i8], align 8
  store ptr %0, ptr %inner, align 8
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hf329a8bd2a7de3e7E"(ptr sret([24 x i8]) align 8 %_5, ptr align 8 %inner)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %bb7, %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h842cd8089ab57678E"(ptr align 8 %inner) #25
          to label %bb9 unwind label %terminate

cleanup:                                          ; preds = %bb4, %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %1, align 8
  %5 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb8

bb1:                                              ; preds = %start
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %6 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc82a32b733878c7eE"(ptr align 8 %_5)
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_5) #25
          to label %bb8 unwind label %terminate

cleanup1:                                         ; preds = %bb3, %bb2, %bb1
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_3.0 = extractvalue { ptr, i64 } %6, 0
  %_3.1 = extractvalue { ptr, i64 } %6, 1
; invoke core::str::<impl str>::parse
  %11 = invoke { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h4f67217496e96200E"(ptr align 1 %_3.0, i64 %_3.1)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
  %_2.0 = extractvalue { i32, i32 } %11, 0
  %_2.1 = extractvalue { i32, i32 } %11, 1
; invoke core::result::Result<T,E>::expect
  %_0 = invoke i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9c5bf26c83cf714bE"(i32 %_2.0, i32 %_2.1, ptr align 1 @alloc_5ea67045834e20cd2b2dc529f8f680b8, i64 34, ptr align 8 @alloc_7b3565daa78a7229551e6b70affed39e)
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_5)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h842cd8089ab57678E"(ptr align 8 %inner)
  ret i32 %_0

terminate:                                        ; preds = %bb8, %bb7
  %12 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb9:                                              ; preds = %bb8
  %15 = load ptr, ptr %1, align 8
  %16 = getelementptr inbounds i8, ptr %1, i64 8
  %17 = load i32, ptr %16, align 8
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19
}

; <proc_macro2::fallback::TokenStream as core::convert::From<proc_macro2::TokenTree>>::from
; Function Attrs: nonlazybind uwtable
define ptr @"_ZN104_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..TokenTree$GT$$GT$4from17h44d82589bc92a35fE"(ptr align 8 %tree) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_10 = alloca [1 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_8 = alloca [24 x i8], align 8
  %_6 = alloca [32 x i8], align 8
  %stream = alloca [24 x i8], align 8
  store i8 0, ptr %_10, align 1
  store i8 0, ptr %_9, align 1
  store i8 1, ptr %_10, align 1
; invoke proc_macro2::rcvec::RcVecBuilder<T>::new
  invoke void @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$3new17hf49bfc28e0d90efcE"(ptr sret([24 x i8]) align 8 %stream)
          to label %bb1 unwind label %cleanup

bb9:                                              ; preds = %bb6, %bb7, %cleanup
  %1 = load i8, ptr %_10, align 1
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb8, label %bb5

cleanup:                                          ; preds = %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb9

bb1:                                              ; preds = %start
  store i8 1, ptr %_9, align 1
; invoke proc_macro2::rcvec::RcVecBuilder<T>::as_mut
  %_4 = invoke align 8 ptr @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$6as_mut17h17d7ff71e040f226E"(ptr align 8 %stream)
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %cleanup1
  %7 = load i8, ptr %_9, align 1
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb6, label %bb9

cleanup1:                                         ; preds = %bb3, %bb2, %bb1
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 0, ptr %_10, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %tree, i64 32, i1 false)
; invoke proc_macro2::fallback::push_token_from_proc_macro
  invoke void @_ZN11proc_macro28fallback26push_token_from_proc_macro17hb4f1f508af0e9ea5E(ptr align 8 %_4, ptr align 8 %_6)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_9, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %stream, i64 24, i1 false)
; invoke proc_macro2::rcvec::RcVecBuilder<T>::build
  %_7 = invoke ptr @"_ZN11proc_macro25rcvec21RcVecBuilder$LT$T$GT$5build17hdf99da5355d04afaE"(ptr align 8 %_8)
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
  store i8 0, ptr %_9, align 1
  ret ptr %_7

bb6:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<proc_macro2::rcvec::RcVecBuilder<proc_macro2::TokenTree>>
  invoke void @"_ZN4core3ptr83drop_in_place$LT$proc_macro2..rcvec..RcVecBuilder$LT$proc_macro2..TokenTree$GT$$GT$17hd557b2739f90b988E"(ptr align 8 %stream) #25
          to label %bb9 unwind label %terminate

terminate:                                        ; preds = %bb8, %bb6
  %13 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb5:                                              ; preds = %bb8, %bb9
  %16 = load ptr, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  %18 = load i32, ptr %17, align 8
  %19 = insertvalue { ptr, i32 } poison, ptr %16, 0
  %20 = insertvalue { ptr, i32 } %19, i32 %18, 1
  resume { ptr, i32 } %20

bb8:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %tree) #25
          to label %bb5 unwind label %terminate
}

; <proc_macro2::fallback::TokenStream as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN96_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h44640d5281a39aadE"(ptr sret([32 x i8]) align 8 %_0, ptr %self) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::fallback::TokenStream::take_inner
  call void @_ZN11proc_macro28fallback11TokenStream10take_inner17h419b0646110efa57E(ptr sret([24 x i8]) align 8 %_2, ptr %self)
; call <proc_macro2::rcvec::RcVecBuilder<T> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN103_$LT$proc_macro2..rcvec..RcVecBuilder$LT$T$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8d036b8939e9bb5dE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::SourceFile::path
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback10SourceFile4path17hbc01bee6e0a582a1E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
; call <std::path::PathBuf as core::clone::Clone>::clone
  call void @"_ZN57_$LT$std..path..PathBuf$u20$as$u20$core..clone..Clone$GT$5clone17h51303c6f3f249c33E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self)
  ret void
}

; proc_macro2::fallback::SourceFile::is_real
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback10SourceFile7is_real17h1002ca2f1c4406b9E(ptr align 8 %self) unnamed_addr #1 {
start:
  ret i1 false
}

; <proc_macro2::fallback::SourceFile as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$proc_macro2..fallback..SourceFile$u20$as$u20$core..fmt..Debug$GT$3fmt17h28b49057bf72fe33E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_15 = alloca [1 x i8], align 1
  %_11 = alloca [24 x i8], align 8
  %_6 = alloca [16 x i8], align 8
; call core::fmt::Formatter::debug_struct
  call void @_ZN4core3fmt9Formatter12debug_struct17hfe55f8660bb7c366E(ptr sret([16 x i8]) align 8 %_6, ptr align 8 %f, ptr align 1 @alloc_115ffe2e9ed1e007567a3bbfc0abb33e, i64 10)
; call proc_macro2::fallback::SourceFile::path
  call void @_ZN11proc_macro28fallback10SourceFile4path17hbc01bee6e0a582a1E(ptr sret([24 x i8]) align 8 %_11, ptr align 8 %self)
; invoke core::fmt::builders::DebugStruct::field
  %_4 = invoke align 8 ptr @_ZN4core3fmt8builders11DebugStruct5field17ha9e91e16904b9623E(ptr align 8 %_6, ptr align 1 @alloc_1713fdbdd59e3f6dd78509f861b8bb36, i64 4, ptr align 1 %_11, ptr align 8 @vtable.9)
          to label %bb3 unwind label %cleanup

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::path::PathBuf>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h91833bae97a83f38E"(ptr align 8 %_11) #25
          to label %bb9 unwind label %terminate

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb8

bb3:                                              ; preds = %start
; invoke proc_macro2::fallback::SourceFile::is_real
  %5 = invoke zeroext i1 @_ZN11proc_macro28fallback10SourceFile7is_real17h1002ca2f1c4406b9E(ptr align 8 %self)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_15, align 1
; invoke core::fmt::builders::DebugStruct::field
  %_3 = invoke align 8 ptr @_ZN4core3fmt8builders11DebugStruct5field17ha9e91e16904b9623E(ptr align 8 %_4, ptr align 1 @alloc_68f479c2f24e9297f788ed7dd88ff18a, i64 7, ptr align 1 %_15, ptr align 8 @vtable.a)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke core::fmt::builders::DebugStruct::finish
  %_0 = invoke zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hfe9f97b163d30fe5E(ptr align 8 %_3)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; call core::ptr::drop_in_place<std::path::PathBuf>
  call void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h91833bae97a83f38E"(ptr align 8 %_11)
  ret i1 %_0

terminate:                                        ; preds = %bb8
  %7 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb9:                                              ; preds = %bb8
  %10 = load ptr, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14
}

; proc_macro2::fallback::Span::call_site
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span9call_site17h73db4df36731ab9bE() unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Span::mixed_site
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span10mixed_site17hb05289befbad3c32E() unnamed_addr #1 {
start:
; call proc_macro2::fallback::Span::call_site
  call void @_ZN11proc_macro28fallback4Span9call_site17h73db4df36731ab9bE()
  ret void
}

; proc_macro2::fallback::Span::resolved_at
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span11resolved_at17h722c2980229439afE(ptr align 1 %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Span::located_at
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span10located_at17h9d0cd9791cd955cdE(ptr align 1 %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Span::join
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback4Span4join17ha23c805d2ae1f7faE(ptr align 1 %self) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  store i8 1, ptr %_0, align 1
  %0 = load i8, ptr %_0, align 1
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; proc_macro2::fallback::Span::source_text
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span11source_text17hb93fdac35a47172dE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self) unnamed_addr #1 {
start:
  store i64 -9223372036854775808, ptr %_0, align 8
  ret void
}

; proc_macro2::fallback::Span::first_byte
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span10first_byte17h7db62a56f8903aeeE() unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Span::last_byte
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span9last_byte17hf7fc550982e237c3E() unnamed_addr #1 {
start:
  ret void
}

; <proc_macro2::fallback::Span as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN64_$LT$proc_macro2..fallback..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h03ee8393c0975a1cE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = alloca [48 x i8], align 8
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h604c02e065326e13E(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_aad67cf38ff50928db56315f0cc21b07)
; call core::fmt::Formatter::write_fmt
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hf52dee6246e00a78E(ptr align 8 %f, ptr align 8 %_3)
  ret i1 %_0
}

; proc_macro2::fallback::debug_span_field_if_nontrivial
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback30debug_span_field_if_nontrivial17h06cdd0a21a1bd672E(ptr align 8 %debug) unnamed_addr #1 {
start:
  %_2 = alloca [0 x i8], align 1
  br label %bb2

bb2:                                              ; preds = %start
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::fallback::Group::new
; Function Attrs: nonlazybind uwtable
define internal { ptr, i8 } @_ZN11proc_macro28fallback5Group3new17hbabe51d3c5d7ae92E(i8 %delimiter, ptr %stream) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  store ptr %stream, ptr %_3, align 8
; invoke proc_macro2::fallback::Span::call_site
  invoke void @_ZN11proc_macro28fallback4Span9call_site17h73db4df36731ab9bE()
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h842cd8089ab57678E"(ptr align 8 %_3) #25
          to label %bb3 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb2

bb1:                                              ; preds = %start
  %_0.0 = load ptr, ptr %_3, align 8
  %5 = insertvalue { ptr, i8 } poison, ptr %_0.0, 0
  %6 = insertvalue { ptr, i8 } %5, i8 %delimiter, 1
  ret { ptr, i8 } %6

terminate:                                        ; preds = %bb2
  %7 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb3:                                              ; preds = %bb2
  %10 = load ptr, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14
}

; proc_macro2::fallback::Group::delimiter
; Function Attrs: nonlazybind uwtable
define internal i8 @_ZN11proc_macro28fallback5Group9delimiter17had60e79fa8222949E(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_0 = load i8, ptr %0, align 8
  ret i8 %_0
}

; proc_macro2::fallback::Group::stream
; Function Attrs: nonlazybind uwtable
define internal ptr @_ZN11proc_macro28fallback5Group6stream17h64d0b738ce05fa1bE(ptr align 8 %self) unnamed_addr #1 {
start:
; call <proc_macro2::fallback::TokenStream as core::clone::Clone>::clone
  %_0 = call ptr @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17he89244e99d7f2631E"(ptr align 8 %self)
  ret ptr %_0
}

; proc_macro2::fallback::Group::span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Group4span17h464d9e016a6b8bf7E(ptr align 8 %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Group::span_open
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Group9span_open17hdda5c456db244f55E(ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::fallback::Span::first_byte
  call void @_ZN11proc_macro28fallback4Span10first_byte17h7db62a56f8903aeeE()
  ret void
}

; proc_macro2::fallback::Group::span_close
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Group10span_close17h555767d853c5439dE(ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::fallback::Span::last_byte
  call void @_ZN11proc_macro28fallback4Span9last_byte17hf7fc550982e237c3E()
  ret void
}

; proc_macro2::fallback::Group::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Group8set_span17hbff0e10f5d181640E(ptr align 8 %self) unnamed_addr #1 {
start:
  ret void
}

; <proc_macro2::fallback::Group as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Group$u20$as$u20$core..fmt..Display$GT$3fmt17h87ae89c964ee0bd5E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_22 = alloca [1 x i8], align 1
  %_18 = alloca [1 x i8], align 1
  %_10 = alloca [1 x i8], align 1
  %_7 = alloca [1 x i8], align 1
  %_5 = alloca [32 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %1 = load i8, ptr %0, align 8
  %_6 = zext i8 %1 to i64
  switch i64 %_6, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store ptr @alloc_1ff25e6ad58d770003043bae3c4113bf, ptr %_5, align 8
  %2 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %_5, i64 16
  store ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 1, ptr %4, align 8
  br label %bb6

bb4:                                              ; preds = %start
  store ptr @alloc_ba02d3c2bb83a9cd2b43a9c8021c63b5, ptr %_5, align 8
  %5 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 2, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %_5, i64 16
  store ptr @alloc_fcd552ca5ffc948e1053f652f94fed71, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 1, ptr %7, align 8
  br label %bb6

bb5:                                              ; preds = %start
  store ptr @alloc_036636151bab3754536335311c8d3ab8, ptr %_5, align 8
  %8 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 1, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %_5, i64 16
  store ptr @alloc_7a6887ef0f93938f57a4bb958cf80311, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 1, ptr %10, align 8
  br label %bb6

bb2:                                              ; preds = %start
  store ptr inttoptr (i64 1 to ptr), ptr %_5, align 8
  %11 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 0, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %_5, i64 16
  store ptr inttoptr (i64 1 to ptr), ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  store i64 0, ptr %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5, %bb4, %bb3
  %open.0 = load ptr, ptr %_5, align 8
  %14 = getelementptr inbounds i8, ptr %_5, i64 8
  %open.1 = load i64, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %_5, i64 16
  %close.0 = load ptr, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  %close.1 = load i64, ptr %16, align 8
; call core::fmt::Formatter::write_str
  %_8 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 %open.0, i64 %open.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %17 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf02fe4c8cac895bE"(i1 zeroext %_8)
  %18 = zext i1 %17 to i8
  store i8 %18, ptr %_7, align 1
  %19 = load i8, ptr %_7, align 1
  %20 = trunc i8 %19 to i1
  %_9 = zext i1 %20 to i64
  %21 = icmp eq i64 %_9, 0
  br i1 %21, label %bb9, label %bb10

bb9:                                              ; preds = %bb6
; call <proc_macro2::fallback::TokenStream as core::fmt::Display>::fmt
  %_11 = call zeroext i1 @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h82a2cde990a97ccaE"(ptr align 8 %self, ptr align 8 %f)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %22 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf02fe4c8cac895bE"(i1 zeroext %_11)
  %23 = zext i1 %22 to i8
  store i8 %23, ptr %_10, align 1
  %24 = load i8, ptr %_10, align 1
  %25 = trunc i8 %24 to i1
  %_13 = zext i1 %25 to i64
  %26 = icmp eq i64 %_13, 0
  br i1 %26, label %bb13, label %bb14

bb10:                                             ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %27 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hff31d50f5af9a906E"(ptr align 8 @alloc_cbecd9d73e681bbaf4b5a9cd138aa12a)
  %28 = zext i1 %27 to i8
  store i8 %28, ptr %_0, align 1
  br label %bb27

bb13:                                             ; preds = %bb9
  %_15 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Delimiter as core::cmp::PartialEq>::eq
  %_14 = call zeroext i1 @"_ZN63_$LT$proc_macro2..Delimiter$u20$as$u20$core..cmp..PartialEq$GT$2eq17h201eac3222e2ae70E"(ptr align 1 %_15, ptr align 1 @alloc_8821998f047ca62cad40e6bc4e4d87c4)
  br i1 %_14, label %bb16, label %bb22

bb14:                                             ; preds = %bb9
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %29 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hff31d50f5af9a906E"(ptr align 8 @alloc_9aee5f439ed8feffbc6f6580c149ef82)
  %30 = zext i1 %29 to i8
  store i8 %30, ptr %_0, align 1
  br label %bb27

bb22:                                             ; preds = %bb18, %bb16, %bb13
; call core::fmt::Formatter::write_str
  %_23 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 %close.0, i64 %close.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %31 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf02fe4c8cac895bE"(i1 zeroext %_23)
  %32 = zext i1 %31 to i8
  store i8 %32, ptr %_22, align 1
  %33 = load i8, ptr %_22, align 1
  %34 = trunc i8 %33 to i1
  %_24 = zext i1 %34 to i64
  %35 = icmp eq i64 %_24, 0
  br i1 %35, label %bb25, label %bb26

bb16:                                             ; preds = %bb13
; call proc_macro2::rcvec::RcVec<T>::is_empty
  %_16 = call zeroext i1 @"_ZN11proc_macro25rcvec14RcVec$LT$T$GT$8is_empty17h40800e1546085b25E"(ptr align 8 %self)
  br i1 %_16, label %bb22, label %bb18

bb18:                                             ; preds = %bb16
; call core::fmt::Formatter::write_str
  %_19 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 @alloc_0242e8ee118de705af76c627590b82cc, i64 1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %36 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf02fe4c8cac895bE"(i1 zeroext %_19)
  %37 = zext i1 %36 to i8
  store i8 %37, ptr %_18, align 1
  %38 = load i8, ptr %_18, align 1
  %39 = trunc i8 %38 to i1
  %_21 = zext i1 %39 to i64
  %40 = icmp eq i64 %_21, 0
  br i1 %40, label %bb22, label %bb21

bb21:                                             ; preds = %bb18
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %41 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hff31d50f5af9a906E"(ptr align 8 @alloc_7248c0ab412e0a4f56381dc419954230)
  %42 = zext i1 %41 to i8
  store i8 %42, ptr %_0, align 1
  br label %bb27

bb27:                                             ; preds = %bb10, %bb14, %bb26, %bb25, %bb21
  %43 = load i8, ptr %_0, align 1
  %44 = trunc i8 %43 to i1
  ret i1 %44

bb25:                                             ; preds = %bb22
  store i8 0, ptr %_0, align 1
  br label %bb27

bb26:                                             ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %45 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hff31d50f5af9a906E"(ptr align 8 @alloc_6dd02269b23faa37975cf09c0218f385)
  %46 = zext i1 %45 to i8
  store i8 %46, ptr %_0, align 1
  br label %bb27
}

; <proc_macro2::fallback::Group as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN65_$LT$proc_macro2..fallback..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17hbbada50e62c0dcc8E"(ptr align 8 %self, ptr align 8 %fmt) unnamed_addr #1 {
start:
  %debug = alloca [16 x i8], align 8
; call core::fmt::Formatter::debug_struct
  call void @_ZN4core3fmt9Formatter12debug_struct17hfe55f8660bb7c366E(ptr sret([16 x i8]) align 8 %debug, ptr align 8 %fmt, ptr align 1 @alloc_9da9d291a90742fa8a71e87501ed4345, i64 5)
  %_9 = getelementptr inbounds i8, ptr %self, i64 8
; call core::fmt::builders::DebugStruct::field
  %_5 = call align 8 ptr @_ZN4core3fmt8builders11DebugStruct5field17ha9e91e16904b9623E(ptr align 8 %debug, ptr align 1 @alloc_f18a9bd8117f705fa536a1dea2e1da89, i64 9, ptr align 1 %_9, ptr align 8 @vtable.b)
; call core::fmt::builders::DebugStruct::field
  %_10 = call align 8 ptr @_ZN4core3fmt8builders11DebugStruct5field17ha9e91e16904b9623E(ptr align 8 %debug, ptr align 1 @alloc_16157024dd92dd2dc2624dbf6332a09b, i64 6, ptr align 1 %self, ptr align 8 @vtable.c)
; call proc_macro2::fallback::debug_span_field_if_nontrivial
  call void @_ZN11proc_macro28fallback30debug_span_field_if_nontrivial17h06cdd0a21a1bd672E(ptr align 8 %debug)
; call core::fmt::builders::DebugStruct::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hfe9f97b163d30fe5E(ptr align 8 %debug)
  ret i1 %_0
}

; proc_macro2::fallback::Ident::new_checked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident11new_checked17h42035b187bbc3286E(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1, ptr align 8 %0) unnamed_addr #1 {
start:
; call proc_macro2::fallback::validate_ident
  call void @_ZN11proc_macro28fallback14validate_ident17h0596a41586817ba5E(ptr align 1 %string.0, i64 %string.1, ptr align 8 %0)
; call proc_macro2::fallback::Ident::new_unchecked
  call void @_ZN11proc_macro28fallback5Ident13new_unchecked17h8ece62da3f21d8dbE(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1)
  ret void
}

; proc_macro2::fallback::Ident::new_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident13new_unchecked17h8ece62da3f21d8dbE(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1) unnamed_addr #1 {
start:
  %_3 = alloca [24 x i8], align 8
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h87532753356c6506E"(ptr sret([24 x i8]) align 8 %_3, ptr align 1 %string.0, i64 %string.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 24, i1 false)
  %0 = getelementptr inbounds i8, ptr %_0, i64 24
  store i8 0, ptr %0, align 8
  ret void
}

; proc_macro2::fallback::Ident::new_raw_checked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident15new_raw_checked17h4ddf0061f7d5569bE(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1, ptr align 8 %0) unnamed_addr #1 {
start:
; call proc_macro2::fallback::validate_ident_raw
  call void @_ZN11proc_macro28fallback18validate_ident_raw17hf7f288a48a0b6602E(ptr align 1 %string.0, i64 %string.1, ptr align 8 %0)
; call proc_macro2::fallback::Ident::new_raw_unchecked
  call void @_ZN11proc_macro28fallback5Ident17new_raw_unchecked17h709bafb0663302c5E(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1)
  ret void
}

; proc_macro2::fallback::Ident::new_raw_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident17new_raw_unchecked17h709bafb0663302c5E(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1) unnamed_addr #1 {
start:
  %_3 = alloca [24 x i8], align 8
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h87532753356c6506E"(ptr sret([24 x i8]) align 8 %_3, ptr align 1 %string.0, i64 %string.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 24, i1 false)
  %0 = getelementptr inbounds i8, ptr %_0, i64 24
  store i8 1, ptr %0, align 8
  ret void
}

; proc_macro2::fallback::Ident::span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident4span17h49adbef780294a72E(ptr align 8 %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Ident::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident8set_span17hcb1ce7a2a8fb1c49E(ptr align 8 %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::is_ident_start
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17h77210a150e83b535E(i32 %c) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = icmp eq i32 %c, 95
  br i1 %0, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb3

bb2:                                              ; preds = %start
; call unicode_ident::is_xid_start
  %1 = call zeroext i1 @_ZN13unicode_ident12is_xid_start17hd8dc6335495d45deE(i32 %c)
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, ptr %_0, align 1
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; proc_macro2::fallback::is_ident_continue
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback17is_ident_continue17hdba648bec9552964E(i32 %c) unnamed_addr #1 {
start:
; call unicode_ident::is_xid_continue
  %_0 = call zeroext i1 @_ZN13unicode_ident15is_xid_continue17hef94f0b155139bd8E(i32 %c)
  ret i1 %_0
}

; proc_macro2::fallback::validate_ident
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback14validate_ident17h0596a41586817ba5E(ptr align 1 %0, i64 %1, ptr align 8 %2) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_15 = alloca [16 x i8], align 8
  %_14 = alloca [16 x i8], align 8
  %_12 = alloca [48 x i8], align 8
  %_9 = alloca [48 x i8], align 8
  %_7 = alloca [16 x i8], align 8
  %_4 = alloca [48 x i8], align 8
  %string = alloca [16 x i8], align 8
  store ptr %0, ptr %string, align 8
  %3 = getelementptr inbounds i8, ptr %string, i64 8
  store i64 %1, ptr %3, align 8
  %4 = load ptr, ptr %string, align 8
  %5 = getelementptr inbounds i8, ptr %string, i64 8
  %6 = load i64, ptr %5, align 8
; call core::str::<impl str>::is_empty
  %_2 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha8cf31eb77c19853E"(ptr align 1 %4, i64 %6)
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
  %7 = load ptr, ptr %string, align 8
  %8 = getelementptr inbounds i8, ptr %string, i64 8
  %9 = load i64, ptr %8, align 8
; call core::str::<impl str>::bytes
  %10 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h29092a163d71c0caE"(ptr align 1 %7, i64 %9)
  %11 = extractvalue { ptr, ptr } %10, 0
  %12 = extractvalue { ptr, ptr } %10, 1
  store ptr %11, ptr %_7, align 8
  %13 = getelementptr inbounds i8, ptr %_7, i64 8
  store ptr %12, ptr %13, align 8
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::all
  %_5 = call zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17h8b4ca75b91697884E"(ptr align 8 %_7)
  br i1 %_5, label %bb7, label %bb9

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h604c02e065326e13E(ptr sret([48 x i8]) align 8 %_4, ptr align 8 @alloc_061a4c4961692303b78b16583ef2f676)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_4, ptr align 8 %2) #24
  unreachable

bb9:                                              ; preds = %bb4
  %14 = load ptr, ptr %string, align 8
  %15 = getelementptr inbounds i8, ptr %string, i64 8
  %16 = load i64, ptr %15, align 8
; call proc_macro2::fallback::validate_ident::ident_ok
  %_10 = call zeroext i1 @_ZN11proc_macro28fallback14validate_ident8ident_ok17h33a262e57e77cce1E(ptr align 1 %14, i64 %16)
  br i1 %_10, label %bb11, label %bb12

bb7:                                              ; preds = %bb4
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h604c02e065326e13E(ptr sret([48 x i8]) align 8 %_9, ptr align 8 @alloc_dfb0c1e49a652d1c226faedca3b3a6d3)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_9, ptr align 8 %2) #24
  unreachable

bb12:                                             ; preds = %bb9
  store ptr %string, ptr %_3.i, align 8
  %17 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h48501bd31ab487e2E", ptr %17, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_15, ptr align 8 %_3.i, i64 16, i1 false)
  %18 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_14, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %_15, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_12, ptr align 8 @alloc_0b761235b698fc0bb61eb8c9cf2baa7f, ptr align 8 %_14)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_12, ptr align 8 %2) #24
  unreachable

bb11:                                             ; preds = %bb9
  ret void
}

; proc_macro2::fallback::validate_ident::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro28fallback14validate_ident28_$u7b$$u7b$closure$u7d$$u7d$17h71f4d074d870c443E"(ptr align 1 %_1, i8 %digit) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %_3 = icmp ule i8 48, %digit
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %0 = icmp ule i8 %digit, 57
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %_0, align 1
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; proc_macro2::fallback::validate_ident::ident_ok
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback14validate_ident8ident_ok17h33a262e57e77cce1E(ptr align 1 %string.0, i64 %string.1) unnamed_addr #1 {
start:
  %self.i = alloca [4 x i8], align 4
  %_10 = alloca [4 x i8], align 4
  %iter = alloca [16 x i8], align 8
  %chars = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
; call core::str::<impl str>::chars
  %0 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h47bd3aaa82775925E"(ptr align 1 %string.0, i64 %string.1)
  %1 = extractvalue { ptr, ptr } %0, 0
  %2 = extractvalue { ptr, ptr } %0, 1
  store ptr %1, ptr %chars, align 8
  %3 = getelementptr inbounds i8, ptr %chars, i64 8
  store ptr %2, ptr %3, align 8
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_4 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %chars)
  store i32 %_4, ptr %self.i, align 4
  %4 = load i32, ptr %self.i, align 4
  %5 = icmp eq i32 %4, 1114112
  %_2.i = select i1 %5, i64 0, i64 1
  br i1 %5, label %bb2.i, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17hd634f59a8bedbb27E.exit"

bb2.i:                                            ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h7a3768beeda72485E(ptr align 8 @alloc_3febd6f7ad5b8bb0e8de9562dfd9fada) #24
  unreachable

"_ZN4core6option15Option$LT$T$GT$6unwrap17hd634f59a8bedbb27E.exit": ; preds = %start
  %val.i = load i32, ptr %self.i, align 4
; call proc_macro2::fallback::is_ident_start
  %_6 = call zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17h77210a150e83b535E(i32 %val.i)
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17hd634f59a8bedbb27E.exit"
  store i8 0, ptr %_0, align 1
  br label %bb15

bb5:                                              ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17hd634f59a8bedbb27E.exit"
  %_8.0 = load ptr, ptr %chars, align 8
  %6 = getelementptr inbounds i8, ptr %chars, i64 8
  %_8.1 = load ptr, ptr %6, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %7 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h95bed4497eb8b67fE"(ptr %_8.0, ptr %_8.1)
  %_7.0 = extractvalue { ptr, ptr } %7, 0
  %_7.1 = extractvalue { ptr, ptr } %7, 1
  store ptr %_7.0, ptr %iter, align 8
  %8 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_7.1, ptr %8, align 8
  br label %bb8

bb15:                                             ; preds = %bb14, %bb12, %bb6
  %9 = load i8, ptr %_0, align 1
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb8:                                              ; preds = %bb11, %bb5
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %11 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %iter)
  store i32 %11, ptr %_10, align 4
  %12 = load i32, ptr %_10, align 4
  %13 = icmp eq i32 %12, 1114112
  %_12 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_12, 0
  br i1 %14, label %bb12, label %bb11

bb12:                                             ; preds = %bb8
  store i8 1, ptr %_0, align 1
  br label %bb15

bb11:                                             ; preds = %bb8
  %ch = load i32, ptr %_10, align 4
; call proc_macro2::fallback::is_ident_continue
  %_14 = call zeroext i1 @_ZN11proc_macro28fallback17is_ident_continue17hdba648bec9552964E(i32 %ch)
  br i1 %_14, label %bb8, label %bb14

bb14:                                             ; preds = %bb11
  store i8 0, ptr %_0, align 1
  br label %bb15

bb10:                                             ; No predecessors!
  unreachable
}

; proc_macro2::fallback::validate_ident_raw
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback18validate_ident_raw17hf7f288a48a0b6602E(ptr align 1 %0, i64 %1, ptr align 8 %2) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_12 = alloca [16 x i8], align 8
  %_11 = alloca [16 x i8], align 8
  %_9 = alloca [48 x i8], align 8
  %string = alloca [16 x i8], align 8
  store ptr %0, ptr %string, align 8
  %3 = getelementptr inbounds i8, ptr %string, i64 8
  store i64 %1, ptr %3, align 8
  %4 = load ptr, ptr %string, align 8
  %5 = getelementptr inbounds i8, ptr %string, i64 8
  %6 = load i64, ptr %5, align 8
; call proc_macro2::fallback::validate_ident
  call void @_ZN11proc_macro28fallback14validate_ident17h0596a41586817ba5E(ptr align 1 %4, i64 %6, ptr align 8 %2)
  %7 = load ptr, ptr %string, align 8
  %8 = getelementptr inbounds i8, ptr %string, i64 8
  %9 = load i64, ptr %8, align 8
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_7 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %7, i64 %9, ptr align 1 @alloc_27cca3636828088e60ce450d2eca2060, i64 1)
  br i1 %_7, label %bb12, label %bb3

bb3:                                              ; preds = %start
  %10 = load ptr, ptr %string, align 8
  %11 = getelementptr inbounds i8, ptr %string, i64 8
  %12 = load i64, ptr %11, align 8
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_6 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %10, i64 %12, ptr align 1 @alloc_105895aecd604a09ec1be120f512aa8a, i64 5)
  br i1 %_6, label %bb12, label %bb4

bb12:                                             ; preds = %bb6, %bb5, %bb4, %bb3, %start
  store ptr %string, ptr %_3.i, align 8
  %13 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hec7503cea7e607bfE", ptr %13, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %_3.i, i64 16, i1 false)
  %14 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_11, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %_12, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_9, ptr align 8 @alloc_354dd15a14169b2de9b9c6dfe1ba2540, ptr align 8 %_11)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_9, ptr align 8 %2) #24
  unreachable

bb4:                                              ; preds = %bb3
  %15 = load ptr, ptr %string, align 8
  %16 = getelementptr inbounds i8, ptr %string, i64 8
  %17 = load i64, ptr %16, align 8
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_5 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %15, i64 %17, ptr align 1 @alloc_6aeac8d59cbcbd1aee06607ad2dd6674, i64 4)
  br i1 %_5, label %bb12, label %bb5

bb5:                                              ; preds = %bb4
  %18 = load ptr, ptr %string, align 8
  %19 = getelementptr inbounds i8, ptr %string, i64 8
  %20 = load i64, ptr %19, align 8
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_4 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %18, i64 %20, ptr align 1 @alloc_7e323bfe8c2b6a467b3640606c98266f, i64 4)
  br i1 %_4, label %bb12, label %bb6

bb6:                                              ; preds = %bb5
  %21 = load ptr, ptr %string, align 8
  %22 = getelementptr inbounds i8, ptr %string, i64 8
  %23 = load i64, ptr %22, align 8
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_3 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb81b6064030cf92bE"(ptr align 1 %21, i64 %23, ptr align 1 @alloc_b7d12448d3c2d0861386fea51f6ebf56, i64 5)
  br i1 %_3, label %bb12, label %bb2

bb2:                                              ; preds = %bb6
  ret void
}

; <proc_macro2::fallback::Ident as core::cmp::PartialEq>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN69_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..cmp..PartialEq$GT$2eq17h47bc6993d82599f7E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
; call <alloc::string::String as core::cmp::PartialEq>::eq
  %_3 = call zeroext i1 @"_ZN62_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$GT$2eq17hcec39d9a00334d4aE"(ptr align 8 %self, ptr align 8 %other)
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i64 24
  %1 = load i8, ptr %0, align 8
  %_6 = trunc i8 %1 to i1
  %2 = getelementptr inbounds i8, ptr %other, i64 24
  %3 = load i8, ptr %2, align 8
  %_7 = trunc i8 %3 to i1
  %4 = icmp eq i1 %_6, %_7
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %6 = load i8, ptr %_0, align 1
  %7 = trunc i8 %6 to i1
  ret i1 %7
}

; <proc_macro2::fallback::Ident as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h48b8bf5759c640f8E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_4 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %0 = getelementptr inbounds i8, ptr %self, i64 24
  %1 = load i8, ptr %0, align 8
  %_3 = trunc i8 %1 to i1
  br i1 %_3, label %bb1, label %bb6

bb6:                                              ; preds = %bb1, %start
; call <alloc::string::String as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hf8173ff46e1b3b19E"(ptr align 8 %self, ptr align 8 %f)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %_0, align 1
  br label %bb7

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 @alloc_26741d7be2999f870b5ef1ed52a52387, i64 2)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %4 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf02fe4c8cac895bE"(i1 zeroext %_5)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_4, align 1
  %6 = load i8, ptr %_4, align 1
  %7 = trunc i8 %6 to i1
  %_7 = zext i1 %7 to i64
  %8 = icmp eq i64 %_7, 0
  br i1 %8, label %bb6, label %bb5

bb5:                                              ; preds = %bb1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %9 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hff31d50f5af9a906E"(ptr align 8 @alloc_2329b817f93c9dff96ec90c92a9ea716)
  %10 = zext i1 %9 to i8
  store i8 %10, ptr %_0, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %11 = load i8, ptr %_0, align 1
  %12 = trunc i8 %11 to i1
  ret i1 %12

bb4:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::fallback::Ident as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN65_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h0d00290c31550ce4E"(ptr align 8 %0, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_12 = alloca [16 x i8], align 8
  %_11 = alloca [16 x i8], align 8
  %_9 = alloca [48 x i8], align 8
  %debug = alloca [24 x i8], align 8
  %self = alloca [8 x i8], align 8
  store ptr %0, ptr %self, align 8
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h9634dda5ede991a5E(ptr sret([24 x i8]) align 8 %debug, ptr align 8 %f, ptr align 1 @alloc_2dbfdc2e58db4d4910923c307a6e38ca, i64 5)
  store ptr %self, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hffcb42745d686124E", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_11, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_12, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hdeca39192332b7e4E(ptr sret([48 x i8]) align 8 %_9, ptr align 8 @alloc_b99730e73100e73a81f4fbfe74b3821d, ptr align 8 %_11)
; call core::fmt::builders::DebugTuple::field
  %_5 = call align 8 ptr @_ZN4core3fmt8builders10DebugTuple5field17h402e09bf70aec2f8E(ptr align 8 %debug, ptr align 1 %_9, ptr align 8 @vtable.d)
; call core::fmt::builders::DebugTuple::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17ha2afba6d4a556f7cE(ptr align 8 %debug)
  ret i1 %_0
}

; proc_macro2::fallback::Literal::_new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %repr) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_2 = alloca [24 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %repr, i64 24, i1 false)
; invoke proc_macro2::fallback::Span::call_site
  invoke void @_ZN11proc_macro28fallback4Span9call_site17h73db4df36731ab9bE()
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_2) #25
          to label %bb3 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb2

bb1:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb2
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb3:                                              ; preds = %bb2
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; proc_macro2::fallback::Literal::from_str_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal18from_str_unchecked17h1d7cbfa50d38894dE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h87532753356c6506E"(ptr sret([24 x i8]) align 8 %_2, ptr align 1 %repr.0, i64 %repr.1), !unsafe_inst !4
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2), !unsafe_inst !4
  ret void, !unsafe_inst !4
}

; proc_macro2::fallback::Literal::f32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14f32_unsuffixed17hf65ecd401cc4f18cE(ptr sret([24 x i8]) align 8 %_0, float %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_11 = alloca [1 x i8], align 1
  %_10 = alloca [24 x i8], align 8
  %s = alloca [24 x i8], align 8
  %f = alloca [4 x i8], align 4
  store float %0, ptr %f, align 4
  store i8 0, ptr %_11, align 1
  store i8 1, ptr %_11, align 1
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h2632bf872344f2b0E"(ptr sret([24 x i8]) align 8 %s, ptr align 4 %f)
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %2 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc82a32b733878c7eE"(ptr align 8 %s)
          to label %bb2 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %3 = load i8, ptr %_11, align 1
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb8, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb2, %start
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %1, align 8
  %8 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb9

bb2:                                              ; preds = %start
  %_5.0 = extractvalue { ptr, i64 } %2, 0
  %_5.1 = extractvalue { ptr, i64 } %2, 1
; invoke core::str::<impl str>::contains
  %_4 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h2bbbe8fdf831cb02E"(ptr align 1 %_5.0, i64 %_5.1, i32 46)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br i1 %_4, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17hf1793f91e1cb3f57E(ptr align 8 %s, ptr align 1 @alloc_11813f653ed6a734517fe4070f367895, i64 2)
          to label %bb10 unwind label %cleanup

bb5:                                              ; preds = %bb10, %bb3
  store i8 0, ptr %_11, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_10, ptr align 8 %s, i64 24, i1 false)
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_10)
          to label %bb6 unwind label %cleanup

bb10:                                             ; preds = %bb4
  br label %bb5

bb6:                                              ; preds = %bb5
  store i8 0, ptr %_11, align 1
  ret void

bb7:                                              ; preds = %bb8, %bb9
  %9 = load ptr, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  %11 = load i32, ptr %10, align 8
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13

bb8:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %s) #25
          to label %bb7 unwind label %terminate

terminate:                                        ; preds = %bb8
  %14 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; proc_macro2::fallback::Literal::f64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14f64_unsuffixed17h87e9bcbba91b7979E(ptr sret([24 x i8]) align 8 %_0, double %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca [16 x i8], align 8
  %_11 = alloca [1 x i8], align 1
  %_10 = alloca [24 x i8], align 8
  %s = alloca [24 x i8], align 8
  %f = alloca [8 x i8], align 8
  store double %0, ptr %f, align 8
  store i8 0, ptr %_11, align 1
  store i8 1, ptr %_11, align 1
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17he589f669e6d41345E"(ptr sret([24 x i8]) align 8 %s, ptr align 8 %f)
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %2 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc82a32b733878c7eE"(ptr align 8 %s)
          to label %bb2 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %3 = load i8, ptr %_11, align 1
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb8, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb2, %start
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %1, align 8
  %8 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb9

bb2:                                              ; preds = %start
  %_5.0 = extractvalue { ptr, i64 } %2, 0
  %_5.1 = extractvalue { ptr, i64 } %2, 1
; invoke core::str::<impl str>::contains
  %_4 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h2bbbe8fdf831cb02E"(ptr align 1 %_5.0, i64 %_5.1, i32 46)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br i1 %_4, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17hf1793f91e1cb3f57E(ptr align 8 %s, ptr align 1 @alloc_11813f653ed6a734517fe4070f367895, i64 2)
          to label %bb10 unwind label %cleanup

bb5:                                              ; preds = %bb10, %bb3
  store i8 0, ptr %_11, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_10, ptr align 8 %s, i64 24, i1 false)
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_10)
          to label %bb6 unwind label %cleanup

bb10:                                             ; preds = %bb4
  br label %bb5

bb6:                                              ; preds = %bb5
  store i8 0, ptr %_11, align 1
  ret void

bb7:                                              ; preds = %bb8, %bb9
  %9 = load ptr, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  %11 = load i32, ptr %10, align 8
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13

bb8:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %s) #25
          to label %bb7 unwind label %terminate

terminate:                                        ; preds = %bb8
  %14 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; proc_macro2::fallback::Literal::string
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal6string17h29ed88ae1b5a2606E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %t.0, i64 %t.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_28 = alloca [1 x i8], align 1
  %_27 = alloca [24 x i8], align 8
  %_24 = alloca [12 x i8], align 4
  %_14 = alloca [16 x i8], align 8
  %_8 = alloca [4 x i8], align 4
  %chars = alloca [16 x i8], align 8
  %repr = alloca [24 x i8], align 8
  store i8 0, ptr %_28, align 1
; call core::str::<impl str>::len
  %_4 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h10232169a2e1a93dE"(ptr align 1 %t.0, i64 %t.1)
  %_3 = add i64 %_4, 2
  store i8 1, ptr %_28, align 1
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h18a93b3a2107362bE(ptr sret([24 x i8]) align 8 %repr, i64 %_3)
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %repr, i32 34)
          to label %bb3 unwind label %cleanup

bb22:                                             ; preds = %cleanup
  %1 = load i8, ptr %_28, align 1
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb21, label %bb20

cleanup:                                          ; preds = %bb18, %bb17, %bb16, %bb15, %bb14, %bb12, %bb8, %bb7, %bb4, %bb3, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb22

bb3:                                              ; preds = %start
; invoke core::str::<impl str>::chars
  %7 = invoke { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h47bd3aaa82775925E"(ptr align 1 %t.0, i64 %t.1)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb3
  %8 = extractvalue { ptr, ptr } %7, 0
  %9 = extractvalue { ptr, ptr } %7, 1
  store ptr %8, ptr %chars, align 8
  %10 = getelementptr inbounds i8, ptr %chars, i64 8
  store ptr %9, ptr %10, align 8
  br label %bb4

bb4:                                              ; preds = %bb27, %bb26, %bb25, %bb24
; invoke <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %11 = invoke i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h511284e191baf694E"(ptr align 8 %chars)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store i32 %11, ptr %_8, align 4
  %12 = load i32, ptr %_8, align 4
  %13 = icmp eq i32 %12, 1114112
  %_10 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_10, 1
  br i1 %14, label %bb6, label %bb17

bb6:                                              ; preds = %bb5
  %ch = load i32, ptr %_8, align 4
  %15 = icmp eq i32 %ch, 0
  br i1 %15, label %bb7, label %bb13

bb17:                                             ; preds = %bb5
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %repr, i32 34)
          to label %bb18 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke core::str::iter::Chars::as_str
  %16 = invoke { ptr, i64 } @_ZN4core3str4iter5Chars6as_str17h2cc07eda4faa3691E(ptr align 8 %chars)
          to label %bb8 unwind label %cleanup

bb13:                                             ; preds = %bb6
  %17 = icmp eq i32 %ch, 39
  br i1 %17, label %bb14, label %bb15

bb8:                                              ; preds = %bb7
  %_16.0 = extractvalue { ptr, i64 } %16, 0
  %_16.1 = extractvalue { ptr, i64 } %16, 1
; invoke core::str::<impl str>::starts_with
  %_15 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h663c5e50794458edE"(ptr align 1 %_16.0, i64 %_16.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  br i1 %_15, label %bb10, label %bb11

bb11:                                             ; preds = %bb9
  store ptr @alloc_d555b1c9aff03f19dcb511ac1ac8841e, ptr %_14, align 8
  %18 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 2, ptr %18, align 8
  br label %bb12

bb10:                                             ; preds = %bb9
  store ptr @alloc_c6c4149d289afdcaafd000f8d4a6bfb9, ptr %_14, align 8
  %19 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 4, ptr %19, align 8
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %20 = load ptr, ptr %_14, align 8
  %21 = getelementptr inbounds i8, ptr %_14, i64 8
  %22 = load i64, ptr %21, align 8
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17hf1793f91e1cb3f57E(ptr align 8 %repr, ptr align 1 %20, i64 %22)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb12
  br label %bb4

bb14:                                             ; preds = %bb13
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %repr, i32 %ch)
          to label %bb26 unwind label %cleanup

bb15:                                             ; preds = %bb13
; invoke core::char::methods::<impl char>::escape_debug
  invoke void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17heeb2590e1a2f96f4E"(ptr sret([12 x i8]) align 4 %_24, i32 %ch)
          to label %bb16 unwind label %cleanup

bb26:                                             ; preds = %bb14
  br label %bb4

bb16:                                             ; preds = %bb15
; invoke <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  invoke void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h95267607f6e2a5c1E"(ptr align 8 %repr, ptr align 4 %_24)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb16
  br label %bb4

bb18:                                             ; preds = %bb17
  store i8 0, ptr %_28, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_27, ptr align 8 %repr, i64 24, i1 false)
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_27)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
  store i8 0, ptr %_28, align 1
  ret void

bb23:                                             ; No predecessors!
  unreachable

bb20:                                             ; preds = %bb21, %bb22
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %0, i64 8
  %25 = load i32, ptr %24, align 8
  %26 = insertvalue { ptr, i32 } poison, ptr %23, 0
  %27 = insertvalue { ptr, i32 } %26, i32 %25, 1
  resume { ptr, i32 } %27

bb21:                                             ; preds = %bb22
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %repr) #25
          to label %bb20 unwind label %terminate

terminate:                                        ; preds = %bb21
  %28 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %29 = extractvalue { ptr, i32 } %28, 0
  %30 = extractvalue { ptr, i32 } %28, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; proc_macro2::fallback::Literal::string::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro28fallback7Literal6string28_$u7b$$u7b$closure$u7d$$u7d$17he677ca0c5ec71f2aE"(ptr align 1 %_1, i32 %next) unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  %_3 = icmp ule i32 48, %next
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %0 = icmp ule i32 %next, 55
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %_0, align 1
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; proc_macro2::fallback::Literal::character
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal9character17h5c5922a90a8b4a7dE(ptr sret([24 x i8]) align 8 %_0, i32 %t) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_13 = alloca [1 x i8], align 1
  %_12 = alloca [24 x i8], align 8
  %_9 = alloca [12 x i8], align 4
  %repr = alloca [24 x i8], align 8
  store i8 0, ptr %_13, align 1
  store i8 1, ptr %_13, align 1
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17h806c4593511c67ffE(ptr sret([24 x i8]) align 8 %repr)
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %repr, i32 39)
          to label %bb2 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %1 = load i8, ptr %_13, align 1
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb10, label %bb9

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb11

bb2:                                              ; preds = %start
  %7 = icmp eq i32 %t, 34
  br i1 %7, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %repr, i32 %t)
          to label %bb12 unwind label %cleanup

bb4:                                              ; preds = %bb2
; invoke core::char::methods::<impl char>::escape_debug
  invoke void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17heeb2590e1a2f96f4E"(ptr sret([12 x i8]) align 4 %_9, i32 %t)
          to label %bb5 unwind label %cleanup

bb12:                                             ; preds = %bb3
  br label %bb6

bb6:                                              ; preds = %bb13, %bb12
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %repr, i32 39)
          to label %bb7 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  invoke void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h95267607f6e2a5c1E"(ptr align 8 %repr, ptr align 4 %_9)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb5
  br label %bb6

bb7:                                              ; preds = %bb6
  store i8 0, ptr %_13, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %repr, i64 24, i1 false)
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_12)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  store i8 0, ptr %_13, align 1
  ret void

bb9:                                              ; preds = %bb10, %bb11
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

bb10:                                             ; preds = %bb11
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %repr) #25
          to label %bb9 unwind label %terminate

terminate:                                        ; preds = %bb10
  %13 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; proc_macro2::fallback::Literal::byte_string
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal11byte_string17h593101bac094d290E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %bytes.0, i64 %bytes.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_3.i = alloca [16 x i8], align 8
  %0 = alloca [16 x i8], align 8
  %_58 = alloca [1 x i8], align 1
  %_53 = alloca [24 x i8], align 8
  %_49 = alloca [16 x i8], align 8
  %_48 = alloca [16 x i8], align 8
  %_47 = alloca [1 x i8], align 1
  %_46 = alloca [56 x i8], align 8
  %_45 = alloca [56 x i8], align 8
  %_41 = alloca [16 x i8], align 8
  %_40 = alloca [16 x i8], align 8
  %_36 = alloca [48 x i8], align 8
  %_14 = alloca [8 x i8], align 8
  %_13 = alloca [16 x i8], align 8
  %b = alloca [1 x i8], align 1
  %_6 = alloca [8 x i8], align 8
  %bytes = alloca [16 x i8], align 8
  %escaped = alloca [24 x i8], align 8
  store i8 0, ptr %_58, align 1
  store i8 1, ptr %_58, align 1
; call <str as alloc::string::ToString>::to_string
  call void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h3e948ad4e99fedb5E"(ptr sret([24 x i8]) align 8 %escaped, ptr align 1 @alloc_3050fe490e20e8ca0b126453c1f93f49, i64 2)
; invoke core::slice::<impl [T]>::iter
  %1 = invoke { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h95d9f5e8671f7802E"(ptr align 1 %bytes.0, i64 %bytes.1)
          to label %bb33 unwind label %cleanup

bb31:                                             ; preds = %cleanup
  %2 = load i8, ptr %_58, align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb30, label %bb29

cleanup:                                          ; preds = %bb27, %bb26, %bb7, %bb25, %bb24, %bb21, %bb20, %bb19, %bb18, %bb17, %bb16, %bb10, %bb9, %bb2, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb31

bb33:                                             ; preds = %start
  %8 = extractvalue { ptr, ptr } %1, 0
  %9 = extractvalue { ptr, ptr } %1, 1
  store ptr %8, ptr %bytes, align 8
  %10 = getelementptr inbounds i8, ptr %bytes, i64 8
  store ptr %9, ptr %10, align 8
  br label %bb2

bb2:                                              ; preds = %bb34, %bb41, %bb40, %bb39, %bb38, %bb37, %bb36, %bb35, %bb33
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %11 = invoke align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha76358487c324f0eE"(ptr align 8 %bytes)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store ptr %11, ptr %_6, align 8
  %12 = load ptr, ptr %_6, align 8
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_8 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_8, 1
  br i1 %15, label %bb4, label %bb26

bb4:                                              ; preds = %bb3
  %_55 = load ptr, ptr %_6, align 8
  %16 = load i8, ptr %_55, align 1
  store i8 %16, ptr %b, align 1
  %17 = load i8, ptr %b, align 1
  switch i8 %17, label %bb5 [
    i8 0, label %bb9
    i8 9, label %bb17
    i8 10, label %bb18
    i8 13, label %bb19
    i8 34, label %bb20
    i8 92, label %bb21
  ]

bb26:                                             ; preds = %bb3
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %escaped, i32 34)
          to label %bb27 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %18 = load i8, ptr %b, align 1
  %_10 = icmp ule i8 32, %18
  br i1 %_10, label %bb8, label %bb6

bb9:                                              ; preds = %bb4
; invoke core::slice::iter::Iter<T>::as_slice
  %19 = invoke { ptr, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h76d84ed20a5eab15E"(ptr align 8 %bytes)
          to label %bb10 unwind label %cleanup

bb17:                                             ; preds = %bb4
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17hf1793f91e1cb3f57E(ptr align 8 %escaped, ptr align 1 @alloc_d60793667b48d8597496d3dbc89c8177, i64 2)
          to label %bb36 unwind label %cleanup

bb18:                                             ; preds = %bb4
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17hf1793f91e1cb3f57E(ptr align 8 %escaped, ptr align 1 @alloc_3881d9bec5de5a4c65f8cbef37283713, i64 2)
          to label %bb37 unwind label %cleanup

bb19:                                             ; preds = %bb4
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17hf1793f91e1cb3f57E(ptr align 8 %escaped, ptr align 1 @alloc_84e26d65b99f72a64848d9745fc88101, i64 2)
          to label %bb38 unwind label %cleanup

bb20:                                             ; preds = %bb4
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17hf1793f91e1cb3f57E(ptr align 8 %escaped, ptr align 1 @alloc_ecfb9c41a817c0344047f6b7fab37bb4, i64 2)
          to label %bb39 unwind label %cleanup

bb21:                                             ; preds = %bb4
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17hf1793f91e1cb3f57E(ptr align 8 %escaped, ptr align 1 @alloc_e9ab70823b006efb53ee24434a446271, i64 2)
          to label %bb40 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %_15.0 = extractvalue { ptr, i64 } %19, 0
  %_15.1 = extractvalue { ptr, i64 } %19, 1
; invoke core::slice::<impl [T]>::first
  %20 = invoke align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$5first17h895a1f56efe39a4fE"(ptr align 1 %_15.0, i64 %_15.1)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  store ptr %20, ptr %_14, align 8
  %21 = load ptr, ptr %_14, align 8
  %22 = ptrtoint ptr %21 to i64
  %23 = icmp eq i64 %22, 0
  %_19 = select i1 %23, i64 0, i64 1
  %24 = icmp eq i64 %_19, 1
  br i1 %24, label %bb13, label %bb12

bb13:                                             ; preds = %bb11
  %_56 = load ptr, ptr %_14, align 8
  %25 = load i8, ptr %_56, align 1
  %_17 = icmp ule i8 48, %25
  br i1 %_17, label %bb15, label %bb12

bb12:                                             ; preds = %bb15, %bb13, %bb11
  store ptr @alloc_d555b1c9aff03f19dcb511ac1ac8841e, ptr %_13, align 8
  %26 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 2, ptr %26, align 8
  br label %bb16

bb15:                                             ; preds = %bb13
  %_57 = load ptr, ptr %_14, align 8
  %27 = load i8, ptr %_57, align 1
  %_18 = icmp ule i8 %27, 55
  br i1 %_18, label %bb14, label %bb12

bb14:                                             ; preds = %bb15
  store ptr @alloc_c6c4149d289afdcaafd000f8d4a6bfb9, ptr %_13, align 8
  %28 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 4, ptr %28, align 8
  br label %bb16

bb16:                                             ; preds = %bb12, %bb14
  %29 = load ptr, ptr %_13, align 8
  %30 = getelementptr inbounds i8, ptr %_13, i64 8
  %31 = load i64, ptr %30, align 8
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17hf1793f91e1cb3f57E(ptr align 8 %escaped, ptr align 1 %29, i64 %31)
          to label %bb35 unwind label %cleanup

bb35:                                             ; preds = %bb16
  br label %bb2

bb36:                                             ; preds = %bb17
  br label %bb2

bb37:                                             ; preds = %bb18
  br label %bb2

bb38:                                             ; preds = %bb19
  br label %bb2

bb39:                                             ; preds = %bb20
  br label %bb2

bb40:                                             ; preds = %bb21
  br label %bb2

bb6:                                              ; preds = %bb8, %bb5
  store ptr %b, ptr %_3.i, align 8
  %32 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hfdb7ce0f2d679b26E", ptr %32, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_41, ptr align 8 %_3.i, i64 16, i1 false)
  br label %bb22

bb8:                                              ; preds = %bb5
  %33 = load i8, ptr %b, align 1
  %_11 = icmp ule i8 %33, 126
  br i1 %_11, label %bb7, label %bb6

bb7:                                              ; preds = %bb8
  %34 = load i8, ptr %b, align 1
  %_33 = zext i8 %34 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h48d157fee33212ddE(ptr align 8 %escaped, i32 %_33)
          to label %bb34 unwind label %cleanup

bb22:                                             ; preds = %bb6
  %35 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_40, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %35, ptr align 8 %_41, i64 16, i1 false)
  store i8 3, ptr %_47, align 1
  store i64 2, ptr %_48, align 8
  %36 = getelementptr inbounds i8, ptr %_49, i64 8
  store i64 2, ptr %36, align 8
  store i64 0, ptr %_49, align 8
  %37 = load i8, ptr %_47, align 1
  %38 = load i64, ptr %_48, align 8
  %39 = getelementptr inbounds i8, ptr %_48, i64 8
  %40 = load i64, ptr %39, align 8
  %41 = load i64, ptr %_49, align 8
  %42 = getelementptr inbounds i8, ptr %_49, i64 8
  %43 = load i64, ptr %42, align 8
  %44 = getelementptr inbounds i8, ptr %_46, i64 32
  store i64 0, ptr %44, align 8
  %45 = getelementptr inbounds i8, ptr %_46, i64 40
  store i32 32, ptr %45, align 8
  %46 = getelementptr inbounds i8, ptr %_46, i64 48
  store i8 %37, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %_46, i64 44
  store i32 8, ptr %47, align 4
  store i64 %38, ptr %_46, align 8
  %48 = getelementptr inbounds i8, ptr %_46, i64 8
  store i64 %40, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %_46, i64 16
  store i64 %41, ptr %49, align 8
  %50 = getelementptr inbounds i8, ptr %49, i64 8
  store i64 %43, ptr %50, align 8
  br label %bb23

bb23:                                             ; preds = %bb22
  %51 = getelementptr inbounds [1 x %"core::fmt::rt::Placeholder"], ptr %_45, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %51, ptr align 8 %_46, i64 56, i1 false)
  br label %bb24

bb24:                                             ; preds = %bb23
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17h5a02ada783f089b5E(ptr sret([48 x i8]) align 8 %_36, ptr align 8 @alloc_f3b6d8e642063abee154656dd60b1eda, i64 1, ptr align 8 %_40, i64 1, ptr align 8 %_45, i64 1)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke core::fmt::Write::write_fmt
  %_34 = invoke zeroext i1 @_ZN4core3fmt5Write9write_fmt17h3d12c4d9511c7708E(ptr align 8 %escaped, ptr align 8 %_36)
          to label %bb41 unwind label %cleanup

bb41:                                             ; preds = %bb25
  br label %bb2

bb34:                                             ; preds = %bb7
  br label %bb2

bb27:                                             ; preds = %bb26
  store i8 0, ptr %_58, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_53, ptr align 8 %escaped, i64 24, i1 false)
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_53)
          to label %bb28 unwind label %cleanup

bb28:                                             ; preds = %bb27
  store i8 0, ptr %_58, align 1
  ret void

bb32:                                             ; No predecessors!
  unreachable

bb29:                                             ; preds = %bb30, %bb31
  %52 = load ptr, ptr %0, align 8
  %53 = getelementptr inbounds i8, ptr %0, i64 8
  %54 = load i32, ptr %53, align 8
  %55 = insertvalue { ptr, i32 } poison, ptr %52, 0
  %56 = insertvalue { ptr, i32 } %55, i32 %54, 1
  resume { ptr, i32 } %56

bb30:                                             ; preds = %bb31
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %escaped) #25
          to label %bb29 unwind label %terminate

terminate:                                        ; preds = %bb30
  %57 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %58 = extractvalue { ptr, i32 } %57, 0
  %59 = extractvalue { ptr, i32 } %57, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; proc_macro2::fallback::Literal::span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal4span17h7c1d87acfaec750bE(ptr align 8 %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Literal::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal8set_span17hf81e3e13bc5c9099E(ptr align 8 %self) unnamed_addr #1 {
start:
  ret void
}

; <proc_macro2::fallback::Literal as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hf904c0e57980e16bE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %repr.0, i64 %repr.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_21 = alloca [1 x i8], align 1
  %_19 = alloca [24 x i8], align 8
  %literal = alloca [24 x i8], align 8
  %rest = alloca [16 x i8], align 8
  %_10 = alloca [40 x i8], align 8
  %cursor = alloca [16 x i8], align 8
  store i8 0, ptr %_21, align 1
; call proc_macro2::fallback::get_cursor
  %1 = call { ptr, i64 } @_ZN11proc_macro28fallback10get_cursor17heb63543d3a760f8dE(ptr align 1 %repr.0, i64 %repr.1)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %cursor, align 8
  %4 = getelementptr inbounds i8, ptr %cursor, i64 8
  store i64 %3, ptr %4, align 8
; call proc_macro2::parse::Cursor::starts_with_char
  %negative = call zeroext i1 @_ZN11proc_macro25parse6Cursor16starts_with_char17h7ad255747611f913E(ptr align 8 %cursor, i32 45)
  br i1 %negative, label %bb3, label %bb8

bb8:                                              ; preds = %bb3, %start
  %_11.0 = load ptr, ptr %cursor, align 8
  %5 = getelementptr inbounds i8, ptr %cursor, i64 8
  %_11.1 = load i64, ptr %5, align 8
  store i8 1, ptr %_21, align 1
; call proc_macro2::parse::literal
  call void @_ZN11proc_macro25parse7literal17h26938e90752fb8b3E(ptr sret([40 x i8]) align 8 %_10, ptr align 1 %_11.0, i64 %_11.1)
  %6 = getelementptr inbounds i8, ptr %_10, i64 16
  %7 = load i64, ptr %6, align 8
  %8 = icmp eq i64 %7, -9223372036854775808
  %_12 = select i1 %8, i64 1, i64 0
  %9 = icmp eq i64 %_12, 0
  br i1 %9, label %bb10, label %bb23

bb3:                                              ; preds = %start
; call proc_macro2::parse::Cursor::advance
  %10 = call { ptr, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6ebc5f50854b819fE(ptr align 8 %cursor, i64 1)
  %_5.0 = extractvalue { ptr, i64 } %10, 0
  %_5.1 = extractvalue { ptr, i64 } %10, 1
  store ptr %_5.0, ptr %cursor, align 8
  %11 = getelementptr inbounds i8, ptr %cursor, i64 8
  store i64 %_5.1, ptr %11, align 8
; call proc_macro2::parse::Cursor::starts_with_fn
  %_7 = call zeroext i1 @_ZN11proc_macro25parse6Cursor14starts_with_fn17h78165bc9791295a3E(ptr align 8 %cursor)
  br i1 %_7, label %bb8, label %bb6

bb6:                                              ; preds = %bb3
; call proc_macro2::fallback::LexError::call_site
  call void @_ZN11proc_macro28fallback8LexError9call_site17h962322173aebe4cbE()
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb17

bb17:                                             ; preds = %bb20, %bb14, %bb6
  ret void

bb10:                                             ; preds = %bb8
  %12 = load ptr, ptr %_10, align 8
  %13 = getelementptr inbounds i8, ptr %_10, i64 8
  %14 = load i64, ptr %13, align 8
  store ptr %12, ptr %rest, align 8
  %15 = getelementptr inbounds i8, ptr %rest, i64 8
  store i64 %14, ptr %15, align 8
  store i8 0, ptr %_21, align 1
  %16 = getelementptr inbounds i8, ptr %_10, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %literal, ptr align 8 %16, i64 24, i1 false)
; invoke proc_macro2::parse::Cursor::is_empty
  %_15 = invoke zeroext i1 @_ZN11proc_macro25parse6Cursor8is_empty17h349fcc798f7326fdE(ptr align 8 %rest)
          to label %bb11 unwind label %cleanup

bb23:                                             ; preds = %bb15, %bb8
  %17 = getelementptr inbounds i8, ptr %_10, i64 16
  %18 = load i64, ptr %17, align 8
  %19 = icmp eq i64 %18, -9223372036854775808
  %_22 = select i1 %19, i64 1, i64 0
  %20 = icmp eq i64 %_22, 0
  br i1 %20, label %bb21, label %bb20

bb18:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17h63b97baac7be2b8bE"(ptr align 8 %literal) #25
          to label %bb19 unwind label %terminate

cleanup:                                          ; preds = %bb13, %bb10
  %21 = landingpad { ptr, i32 }
          cleanup
  %22 = extractvalue { ptr, i32 } %21, 0
  %23 = extractvalue { ptr, i32 } %21, 1
  store ptr %22, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %23, ptr %24, align 8
  br label %bb18

bb11:                                             ; preds = %bb10
  br i1 %_15, label %bb12, label %bb15

bb15:                                             ; preds = %bb11
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17h63b97baac7be2b8bE"(ptr align 8 %literal)
  br label %bb23

bb12:                                             ; preds = %bb11
  br i1 %negative, label %bb13, label %bb14

bb14:                                             ; preds = %bb25, %bb12
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_19, ptr align 8 %literal, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_19, i64 24, i1 false)
  store i8 0, ptr %_21, align 1
  br label %bb17

bb13:                                             ; preds = %bb12
; invoke alloc::string::String::insert
  invoke void @_ZN5alloc6string6String6insert17h833b9285d1a8943eE(ptr align 8 %literal, i64 0, i32 45)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb13
  br label %bb14

terminate:                                        ; preds = %bb18
  %25 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %26 = extractvalue { ptr, i32 } %25, 0
  %27 = extractvalue { ptr, i32 } %25, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb19:                                             ; preds = %bb18
  %28 = load ptr, ptr %0, align 8
  %29 = getelementptr inbounds i8, ptr %0, i64 8
  %30 = load i32, ptr %29, align 8
  %31 = insertvalue { ptr, i32 } poison, ptr %28, 0
  %32 = insertvalue { ptr, i32 } %31, i32 %30, 1
  resume { ptr, i32 } %32

bb21:                                             ; preds = %bb23
  %33 = load i8, ptr %_21, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %bb22, label %bb20

bb20:                                             ; preds = %bb22, %bb21, %bb23
  store i8 0, ptr %_21, align 1
; call proc_macro2::fallback::LexError::call_site
  call void @_ZN11proc_macro28fallback8LexError9call_site17h962322173aebe4cbE()
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb17

bb22:                                             ; preds = %bb21
  %35 = getelementptr inbounds i8, ptr %_10, i64 16
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17h63b97baac7be2b8bE"(ptr align 8 %35)
  br label %bb20

bb24:                                             ; No predecessors!
  unreachable
}

; <proc_macro2::fallback::Literal as core::str::traits::FromStr>::from_str::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN77_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17h82f622141c215ee9E"(ptr align 1 %_1, i32 %0) unnamed_addr #0 {
start:
  %ch = alloca [4 x i8], align 4
  store i32 %0, ptr %ch, align 4
; call core::char::methods::<impl char>::is_ascii_digit
  %_0 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$14is_ascii_digit17h2eb29001067da05eE"(ptr align 4 %ch)
  ret i1 %_0
}

; <proc_macro2::fallback::Literal as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN69_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hcc44b6750db679d5E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <alloc::string::String as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hf8173ff46e1b3b19E"(ptr align 8 %self, ptr align 8 %f)
  ret i1 %_0
}

; <proc_macro2::fallback::Literal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h26b27b6abad6caceE"(ptr align 8 %self, ptr align 8 %fmt) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_13 = alloca [16 x i8], align 8
  %_12 = alloca [16 x i8], align 8
  %_10 = alloca [48 x i8], align 8
  %debug = alloca [16 x i8], align 8
; call core::fmt::Formatter::debug_struct
  call void @_ZN4core3fmt9Formatter12debug_struct17hfe55f8660bb7c366E(ptr sret([16 x i8]) align 8 %debug, ptr align 8 %fmt, ptr align 1 @alloc_33ac9531a9c2c24dc222b4b41e31ecf8, i64 7)
  store ptr %self, ptr %_3.i, align 8
  %0 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hf8173ff46e1b3b19E", ptr %0, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_13, ptr align 8 %_3.i, i64 16, i1 false)
  %1 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_12, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %_13, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hdeca39192332b7e4E(ptr sret([48 x i8]) align 8 %_10, ptr align 8 @alloc_b99730e73100e73a81f4fbfe74b3821d, ptr align 8 %_12)
; call core::fmt::builders::DebugStruct::field
  %_5 = call align 8 ptr @_ZN4core3fmt8builders11DebugStruct5field17ha9e91e16904b9623E(ptr align 8 %debug, ptr align 1 @alloc_9791236d4c0092df644cfaa29555826d, i64 3, ptr align 1 %_10, ptr align 8 @vtable.d)
; call proc_macro2::fallback::debug_span_field_if_nontrivial
  call void @_ZN11proc_macro28fallback30debug_span_field_if_nontrivial17h06cdd0a21a1bd672E(ptr align 8 %debug)
; call core::fmt::builders::DebugStruct::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hfe9f97b163d30fe5E(ptr align 8 %debug)
  ret i1 %_0
}

; proc_macro2::extra::DelimSpan::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25extra9DelimSpan3new17hba68fd7444d8d92fE(ptr sret([12 x i8]) align 4 %_0, ptr align 8 %group) unnamed_addr #1 {
start:
  %_10 = alloca [12 x i8], align 4
  %inner = alloca [12 x i8], align 4
  %0 = load i32, ptr %group, align 8
  %_3 = zext i32 %0 to i64
  %1 = icmp eq i64 %_3, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %group1 = getelementptr inbounds i8, ptr %group, i64 4
; call proc_macro::Group::span
  %_5 = call i32 @_ZN10proc_macro5Group4span17h488b53ca5a909206E(ptr align 4 %group1)
; call proc_macro::Group::span_open
  %_6 = call i32 @_ZN10proc_macro5Group9span_open17hd998f698eca2693aE(ptr align 4 %group1)
; call proc_macro::Group::span_close
  %_7 = call i32 @_ZN10proc_macro5Group10span_close17he77c7993e308b342E(ptr align 4 %group1)
  store i32 %_5, ptr %inner, align 4
  %2 = getelementptr inbounds i8, ptr %inner, i64 4
  store i32 %_6, ptr %2, align 4
  %3 = getelementptr inbounds i8, ptr %inner, i64 8
  store i32 %_7, ptr %3, align 4
  br label %bb8

bb2:                                              ; preds = %start
  %group2 = getelementptr inbounds i8, ptr %group, i64 8
; call proc_macro2::fallback::Group::span
  call void @_ZN11proc_macro28fallback5Group4span17h464d9e016a6b8bf7E(ptr align 8 %group2)
  %4 = getelementptr inbounds i8, ptr %inner, i64 8
  store i32 0, ptr %4, align 4
  br label %bb8

bb8:                                              ; preds = %bb2, %bb3
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_10, ptr align 4 %inner, i64 12, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_10, i64 12, i1 false)
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::extra::DelimSpan::join
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25extra9DelimSpan4join17hd6be38de10e2d42cE(ptr align 4 %self) unnamed_addr #1 {
start:
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %1 = load i32, ptr %0, align 4
  %2 = icmp eq i32 %1, 0
  %_3 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %_6 = load i32, ptr %self, align 4
  store i32 %_6, ptr %_5, align 4
  %4 = load i32, ptr %_5, align 4
; call proc_macro2::Span::_new
  %5 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %4)
  store i32 %5, ptr %_0, align 4
  br label %bb4

bb2:                                              ; preds = %start
; call proc_macro2::Span::_new_fallback
  %6 = call i32 @_ZN11proc_macro24Span13_new_fallback17he901ad9d50a5f2cbE()
  store i32 %6, ptr %_0, align 4
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i32, ptr %_0, align 4
  ret i32 %7

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::extra::DelimSpan::open
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25extra9DelimSpan4open17h9a90520ebdd49171E(ptr align 4 %self) unnamed_addr #1 {
start:
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %1 = load i32, ptr %0, align 4
  %2 = icmp eq i32 %1, 0
  %_3 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %open = getelementptr inbounds i8, ptr %self, i64 4
  %_6 = load i32, ptr %open, align 4
  store i32 %_6, ptr %_5, align 4
  %4 = load i32, ptr %_5, align 4
; call proc_macro2::Span::_new
  %5 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %4)
  store i32 %5, ptr %_0, align 4
  br label %bb5

bb2:                                              ; preds = %start
; call proc_macro2::fallback::Span::first_byte
  call void @_ZN11proc_macro28fallback4Span10first_byte17h7db62a56f8903aeeE()
; call proc_macro2::Span::_new_fallback
  %6 = call i32 @_ZN11proc_macro24Span13_new_fallback17he901ad9d50a5f2cbE()
  store i32 %6, ptr %_0, align 4
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  %7 = load i32, ptr %_0, align 4
  ret i32 %7

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::extra::DelimSpan::close
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25extra9DelimSpan5close17hf7603b41467a942fE(ptr align 4 %self) unnamed_addr #1 {
start:
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %1 = load i32, ptr %0, align 4
  %2 = icmp eq i32 %1, 0
  %_3 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %close = getelementptr inbounds i8, ptr %self, i64 8
  %_6 = load i32, ptr %close, align 4
  store i32 %_6, ptr %_5, align 4
  %4 = load i32, ptr %_5, align 4
; call proc_macro2::Span::_new
  %5 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %4)
  store i32 %5, ptr %_0, align 4
  br label %bb5

bb2:                                              ; preds = %start
; call proc_macro2::fallback::Span::last_byte
  call void @_ZN11proc_macro28fallback4Span9last_byte17hf7fc550982e237c3E()
; call proc_macro2::Span::_new_fallback
  %6 = call i32 @_ZN11proc_macro24Span13_new_fallback17he901ad9d50a5f2cbE()
  store i32 %6, ptr %_0, align 4
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  %7 = load i32, ptr %_0, align 4
  ret i32 %7

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::extra::DelimSpan as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$proc_macro2..extra..DelimSpan$u20$as$u20$core..fmt..Debug$GT$3fmt17h242769f14e309219E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_4 = alloca [4 x i8], align 4
; call proc_macro2::extra::DelimSpan::join
  %0 = call i32 @_ZN11proc_macro25extra9DelimSpan4join17hd6be38de10e2d42cE(ptr align 4 %self)
  store i32 %0, ptr %_4, align 4
; call <proc_macro2::Span as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN54_$LT$proc_macro2..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h41043bcfb486c3a9E"(ptr align 4 %_4, ptr align 8 %f)
  ret i1 %_0
}

; proc_macro2::imp::LexError::Compiler
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro23imp8LexError8Compiler17h913a20820b02c219E() unnamed_addr #0 {
start:
  %_0 = alloca [1 x i8], align 1
  store i8 0, ptr %_0, align 1
  %0 = load i8, ptr %_0, align 1
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; proc_macro2::imp::LexError::call_site
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro23imp8LexError9call_site17hed31535b2277ab48E() unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
; call proc_macro2::fallback::Span::call_site
  call void @_ZN11proc_macro28fallback4Span9call_site17h73db4df36731ab9bE()
  store i8 1, ptr %_0, align 1
  %0 = load i8, ptr %_0, align 1
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; proc_macro2::imp::mismatch
; Function Attrs: noreturn nonlazybind uwtable
define void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() unnamed_addr #8 {
start:
  %_2 = alloca [48 x i8], align 8
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h604c02e065326e13E(ptr sret([48 x i8]) align 8 %_2, ptr align 8 @alloc_312d8ee8e73f2d3cdf99a6ce3551f56b)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_2, ptr align 8 @alloc_2eff838ed3163eb90d1619973b56be9b) #24
  unreachable
}

; proc_macro2::imp::DeferredTokenStream::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro23imp19DeferredTokenStream3new17h97a4b9a986d91f99E(ptr sret([32 x i8]) align 8 %_0, i32 %stream) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  %_2 = alloca [4 x i8], align 4
  store i32 %stream, ptr %_2, align 4
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hde14f6262c6e492bE"(ptr sret([24 x i8]) align 8 %_3)
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro::TokenStream>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5907fc6780300241E"(ptr align 4 %_2) #25
          to label %bb3 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb2

bb1:                                              ; preds = %start
  %5 = load i32, ptr %_2, align 4
  %6 = getelementptr inbounds i8, ptr %_0, i64 24
  store i32 %5, ptr %6, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb2
  %7 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb3:                                              ; preds = %bb2
  %10 = load ptr, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14
}

; proc_macro2::imp::DeferredTokenStream::is_empty
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro23imp19DeferredTokenStream8is_empty17hb47eee56b52e14efE(ptr align 8 %self) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %_3 = getelementptr inbounds i8, ptr %self, i64 24
; call proc_macro::TokenStream::is_empty
  %_2 = call zeroext i1 @_ZN10proc_macro11TokenStream8is_empty17h817938aead227f55E(ptr align 4 %_3)
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::is_empty
  %0 = call zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h0f7fcdc62d550cb3E"(ptr align 8 %self)
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, ptr %_0, align 1
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; proc_macro2::imp::DeferredTokenStream::evaluate_now
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro23imp19DeferredTokenStream12evaluate_now17h8a53770b990159cbE(ptr align 8 %self) unnamed_addr #1 {
start:
  %_6 = alloca [40 x i8], align 8
; call alloc::vec::Vec<T,A>::is_empty
  %_2 = call zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h0f7fcdc62d550cb3E"(ptr align 8 %self)
  br i1 %_2, label %bb4, label %bb2

bb2:                                              ; preds = %start
  %_5 = getelementptr inbounds i8, ptr %self, i64 24
; call alloc::vec::Vec<T,A>::drain
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17hde7394ee7b80785dE"(ptr sret([40 x i8]) align 8 %_6, ptr align 8 %self)
; call <proc_macro::TokenStream as core::iter::traits::collect::Extend<proc_macro::TokenTree>>::extend
  call void @"_ZN108_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..Extend$LT$proc_macro..TokenTree$GT$$GT$6extend17h0402403529be7ac7E"(ptr align 4 %_5, ptr align 8 %_6)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; proc_macro2::imp::DeferredTokenStream::into_token_stream
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h881785f7240173bfE(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
; invoke proc_macro2::imp::DeferredTokenStream::evaluate_now
  invoke void @_ZN11proc_macro23imp19DeferredTokenStream12evaluate_now17h8a53770b990159cbE(ptr align 8 %self)
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::imp::DeferredTokenStream>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$proc_macro2..imp..DeferredTokenStream$GT$17hb86844e8abf23437E"(ptr align 8 %self) #25
          to label %bb3 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb2

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i64 24
  %_0 = load i32, ptr %5, align 8
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..TokenTree$GT$$GT$17hc6605ed38dbad50aE"(ptr align 8 %self)
  ret i32 %_0

terminate:                                        ; preds = %bb2
  %6 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb3:                                              ; preds = %bb2
  %9 = load ptr, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load i32, ptr %10, align 8
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13
}

; proc_macro2::imp::TokenStream::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro23imp11TokenStream3new17h13cc9e115f6530e4E(ptr sret([32 x i8]) align 8 %_0) unnamed_addr #1 {
start:
  %_2 = alloca [32 x i8], align 8
; call proc_macro2::detection::inside_proc_macro
  %_1 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_1, label %bb2, label %bb5

bb5:                                              ; preds = %start
; call proc_macro2::fallback::TokenStream::new
  %_4 = call ptr @_ZN11proc_macro28fallback11TokenStream3new17h6c7551767d106366E()
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_4, ptr %0, align 8
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb7

bb2:                                              ; preds = %start
; call proc_macro::TokenStream::new
  %_3 = call i32 @_ZN10proc_macro11TokenStream3new17h4e2646f2438232eeE()
; call proc_macro2::imp::DeferredTokenStream::new
  call void @_ZN11proc_macro23imp19DeferredTokenStream3new17h97a4b9a986d91f99E(ptr sret([32 x i8]) align 8 %_2, i32 %_3)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 32, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb2, %bb5
  ret void
}

; proc_macro2::imp::TokenStream::is_empty
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro23imp11TokenStream8is_empty17h41a6ba793e0b60e3E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
; call proc_macro2::imp::DeferredTokenStream::is_empty
  %3 = call zeroext i1 @_ZN11proc_macro23imp19DeferredTokenStream8is_empty17hb47eee56b52e14efE(ptr align 8 %self)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  %tts = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::fallback::TokenStream::is_empty
  %5 = call zeroext i1 @_ZN11proc_macro28fallback11TokenStream8is_empty17h266f4ce9f56ad0b8E(ptr align 8 %tts)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_0, align 1
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::TokenStream::unwrap_nightly
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro23imp11TokenStream14unwrap_nightly17he553b9f7979b3c59E(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %s = alloca [32 x i8], align 8
  %1 = load i64, ptr %self, align 8
  %2 = icmp eq i64 %1, -9223372036854775808
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %s, ptr align 8 %self, i64 32, i1 false)
; invoke proc_macro2::imp::DeferredTokenStream::into_token_stream
  %_0 = invoke i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h881785f7240173bfE(ptr align 8 %s)
          to label %bb4 unwind label %cleanup

bb2:                                              ; preds = %start
; invoke proc_macro2::imp::mismatch
  invoke void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
          to label %unreachable unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %4 = load i64, ptr %self, align 8
  %5 = icmp eq i64 %4, -9223372036854775808
  %_6 = select i1 %5, i64 1, i64 0
  %6 = icmp eq i64 %_6, 0
  br i1 %6, label %bb5, label %bb8

cleanup:                                          ; preds = %bb2, %bb3
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  %11 = load i64, ptr %self, align 8
  %12 = icmp eq i64 %11, -9223372036854775808
  %_5 = select i1 %12, i64 1, i64 0
  %13 = icmp eq i64 %_5, 0
  br i1 %13, label %bb6, label %bb7

bb6:                                              ; preds = %bb7, %bb4
  ret i32 %_0

bb7:                                              ; preds = %bb4
; call core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
  call void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h5011ab6d6a88b5efE"(ptr align 8 %self)
  br label %bb6

unreachable:                                      ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb8, %bb9
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load i32, ptr %15, align 8
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18

bb8:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h5011ab6d6a88b5efE"(ptr align 8 %self) #25
          to label %bb5 unwind label %terminate

terminate:                                        ; preds = %bb8
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::TokenStream::unwrap_stable
; Function Attrs: nonlazybind uwtable
define ptr @_ZN11proc_macro23imp11TokenStream13unwrap_stable17hfcfe7148045d34efE(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %1 = load i64, ptr %self, align 8
  %2 = icmp eq i64 %1, -9223372036854775808
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
; invoke proc_macro2::imp::mismatch
  invoke void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
          to label %unreachable unwind label %cleanup

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  %s = load ptr, ptr %4, align 8
  %5 = load i64, ptr %self, align 8
  %6 = icmp eq i64 %5, -9223372036854775808
  %_4 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_4, 1
  br i1 %7, label %bb5, label %bb6

bb8:                                              ; preds = %cleanup
  %8 = load i64, ptr %self, align 8
  %9 = icmp eq i64 %8, -9223372036854775808
  %_5 = select i1 %9, i64 1, i64 0
  %10 = icmp eq i64 %_5, 1
  br i1 %10, label %bb4, label %bb7

cleanup:                                          ; preds = %bb3
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb8

unreachable:                                      ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb7, %bb8
  %15 = load ptr, ptr %0, align 8
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  %17 = load i32, ptr %16, align 8
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h5011ab6d6a88b5efE"(ptr align 8 %self) #25
          to label %bb4 unwind label %terminate

terminate:                                        ; preds = %bb7
  %20 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %21 = extractvalue { ptr, i32 } %20, 0
  %22 = extractvalue { ptr, i32 } %20, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb5:                                              ; preds = %bb6, %bb2
  ret ptr %s

bb6:                                              ; preds = %bb2
; call core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
  call void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h5011ab6d6a88b5efE"(ptr align 8 %self)
  br label %bb5

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::TokenStream as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN76_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h990f01192e5bff30E"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %src.0, i64 %src.1) unnamed_addr #1 {
start:
  %0 = alloca [8 x i8], align 8
  %1 = alloca [8 x i8], align 8
  %2 = alloca [8 x i8], align 8
  %_11 = alloca [8 x i8], align 8
  %_10 = alloca [32 x i8], align 8
  %_6 = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_4 = alloca [32 x i8], align 8
  %_3 = alloca [32 x i8], align 8
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb9

bb9:                                              ; preds = %start
; call core::str::<impl str>::parse
  %_12 = call ptr @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hd2d3103995bcf3aeE"(ptr align 1 %src.0, i64 %src.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7f74ee1fed6dd937E"(ptr %_12)
  store ptr %3, ptr %_11, align 8
  %4 = load ptr, ptr %_11, align 8
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_13 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_13, 0
  br i1 %7, label %bb12, label %bb13

bb2:                                              ; preds = %start
; call proc_macro2::imp::proc_macro_parse
  %8 = call i64 @_ZN11proc_macro23imp16proc_macro_parse17h9146089e26bfd610E(ptr align 1 %src.0, i64 %src.1)
  store i64 %8, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_6, ptr align 8 %2, i64 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 4 %_6, i64 8, i1 false)
  %9 = load i64, ptr %1, align 8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = call i64 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h628c92602e87ff69E"(i64 %9)
  store i64 %10, ptr %0, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_5, ptr align 8 %0, i64 8, i1 false)
  %11 = load i8, ptr %_5, align 4
  %12 = trunc i8 %11 to i1
  %_7 = zext i1 %12 to i64
  %13 = icmp eq i64 %_7, 0
  br i1 %13, label %bb6, label %bb7

bb12:                                             ; preds = %bb9
  %val = load ptr, ptr %_11, align 8
  %14 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr %val, ptr %14, align 8
  store i64 -9223372036854775808, ptr %_10, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_10, i64 32, i1 false)
  br label %bb14

bb13:                                             ; preds = %bb9
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17heef7fdfefb2cebe4E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 @alloc_bc0ae40514e83e0af59c8f2c44b6c417)
  br label %bb14

bb14:                                             ; preds = %bb7, %bb6, %bb13, %bb12
  ret void

bb6:                                              ; preds = %bb2
  %15 = getelementptr inbounds i8, ptr %_5, i64 4
  %val1 = load i32, ptr %15, align 4
; call proc_macro2::imp::DeferredTokenStream::new
  call void @_ZN11proc_macro23imp19DeferredTokenStream3new17h97a4b9a986d91f99E(ptr sret([32 x i8]) align 8 %_4, i32 %val1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 32, i1 false)
  br label %bb14

bb7:                                              ; preds = %bb2
  %16 = getelementptr inbounds i8, ptr %_5, i64 1
  %17 = load i8, ptr %16, align 1
  %residual = trunc i8 %17 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6a82ac905179892eE"(ptr sret([32 x i8]) align 8 %_0, i1 zeroext %residual, ptr align 8 @alloc_77c00cca301e3144f91fa97d47d8d15e)
  br label %bb14

bb5:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::proc_macro_parse
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN11proc_macro23imp16proc_macro_parse17h9146089e26bfd610E(ptr align 1 %src.0, i64 %src.1) unnamed_addr #1 {
start:
  %0 = alloca [8 x i8], align 8
  %result = alloca [16 x i8], align 8
  %_0 = alloca [8 x i8], align 4
; call std::panic::catch_unwind
  call void @_ZN3std5panic12catch_unwind17he4fa292095b180f4E(ptr sret([16 x i8]) align 8 %result, ptr align 1 %src.0, i64 %src.1)
; call core::result::Result<T,E>::unwrap_or_else
  %1 = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hefe0c23647d98469E"(ptr align 8 %result, ptr align 8 @alloc_daac157542996d114ccfbf99aeb76120)
  store i64 %1, ptr %0, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 8 %0, i64 8, i1 false)
  %2 = load i64, ptr %_0, align 4
  ret i64 %2
}

; proc_macro2::imp::proc_macro_parse::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN11proc_macro23imp16proc_macro_parse28_$u7b$$u7b$closure$u7d$$u7d$17h1459fe7f7613ca3fE"(ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %2 = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 4
  %_1 = alloca [16 x i8], align 8
  store ptr %0, ptr %_1, align 8
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
  store i64 %1, ptr %3, align 8
  %_3.0 = load ptr, ptr %_1, align 8
  %4 = getelementptr inbounds i8, ptr %_1, i64 8
  %_3.1 = load i64, ptr %4, align 8
; call core::str::<impl str>::parse
  %5 = call { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h4f67217496e96200E"(ptr align 1 %_3.0, i64 %_3.1)
  %_2.0 = extractvalue { i32, i32 } %5, 0
  %_2.1 = extractvalue { i32, i32 } %5, 1
; call core::result::Result<T,E>::map_err
  %6 = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc8ff1f712d75a0f9E"(i32 %_2.0, i32 %_2.1)
  store i64 %6, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 8 %2, i64 8, i1 false)
  %7 = load i64, ptr %_0, align 4
  ret i64 %7
}

; proc_macro2::imp::proc_macro_parse::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN11proc_macro23imp16proc_macro_parse28_$u7b$$u7b$closure$u7d$$u7d$17h55185e1290a02161E"(ptr align 1 %0, ptr align 8 %1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca [16 x i8], align 8
  %_0 = alloca [8 x i8], align 4
  %_2 = alloca [16 x i8], align 8
  store ptr %0, ptr %_2, align 8
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  store ptr %1, ptr %3, align 8
; invoke proc_macro2::imp::LexError::call_site
  %_3 = invoke zeroext i1 @_ZN11proc_macro23imp8LexError9call_site17hed31535b2277ab48E()
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17hd7d75b0cb2d5fee9E"(ptr align 8 %_2) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %2, align 8
  %7 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_0, i64 1
  %9 = zext i1 %_3 to i8
  store i8 %9, ptr %8, align 1
  store i8 1, ptr %_0, align 4
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17hd7d75b0cb2d5fee9E"(ptr align 8 %_2)
  %10 = load i64, ptr %_0, align 4
  ret i64 %10

terminate:                                        ; preds = %bb3
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %14 = load ptr, ptr %2, align 8
  %15 = getelementptr inbounds i8, ptr %2, i64 8
  %16 = load i32, ptr %15, align 8
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18
}

; <proc_macro2::imp::TokenStream as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN68_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h3e8bbd5c1ed00b48E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_7 = alloca [32 x i8], align 8
  %_6 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %1 = load i64, ptr %self, align 8
  %2 = icmp eq i64 %1, -9223372036854775808
  %_3 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
; call <proc_macro2::imp::DeferredTokenStream as core::clone::Clone>::clone
  call void @"_ZN76_$LT$proc_macro2..imp..DeferredTokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h401494a2f9d27f69E"(ptr sret([32 x i8]) align 8 %_7, ptr align 8 %self)
; call proc_macro2::imp::DeferredTokenStream::into_token_stream
  %4 = call i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h881785f7240173bfE(ptr align 8 %_7)
  store i32 %4, ptr %_6, align 4
; invoke <proc_macro::TokenStream as core::fmt::Display>::fmt
  %5 = invoke zeroext i1 @"_ZN62_$LT$proc_macro..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h9850742ca811fc89E"(ptr align 4 %_6, ptr align 8 %f)
          to label %bb6 unwind label %cleanup

bb2:                                              ; preds = %start
  %tts = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::fallback::TokenStream as core::fmt::Display>::fmt
  %6 = call zeroext i1 @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h82a2cde990a97ccaE"(ptr align 8 %tts, ptr align 8 %f)
  %7 = zext i1 %6 to i8
  store i8 %7, ptr %_0, align 1
  br label %bb7

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro::TokenStream>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5907fc6780300241E"(ptr align 4 %_6) #25
          to label %bb9 unwind label %terminate

cleanup:                                          ; preds = %bb3
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb8

bb6:                                              ; preds = %bb3
  %12 = zext i1 %5 to i8
  store i8 %12, ptr %_0, align 1
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5907fc6780300241E"(ptr align 4 %_6)
  br label %bb7

bb7:                                              ; preds = %bb2, %bb6
  %13 = load i8, ptr %_0, align 1
  %14 = trunc i8 %13 to i1
  ret i1 %14

terminate:                                        ; preds = %bb8
  %15 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb9:                                              ; preds = %bb8
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::TokenStream as core::convert::From<proc_macro::TokenStream>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN100_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenStream$GT$$GT$4from17h36ae4a6305ad5463E"(ptr sret([32 x i8]) align 8 %_0, i32 %inner) unnamed_addr #1 {
start:
  %_2 = alloca [32 x i8], align 8
; call proc_macro2::imp::DeferredTokenStream::new
  call void @_ZN11proc_macro23imp19DeferredTokenStream3new17h97a4b9a986d91f99E(ptr sret([32 x i8]) align 8 %_2, i32 %inner)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 32, i1 false)
  ret void
}

; proc_macro2::imp::<impl core::convert::From<proc_macro2::imp::TokenStream> for proc_macro::TokenStream>::from
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN11proc_macro23imp110_$LT$impl$u20$core..convert..From$LT$proc_macro2..imp..TokenStream$GT$$u20$for$u20$proc_macro..TokenStream$GT$4from17ha67328afd6e5b1d7E"(ptr align 8 %inner) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %e.i = alloca [0 x i8], align 1
  %self.i = alloca [8 x i8], align 4
  %1 = alloca [16 x i8], align 8
  %_8 = alloca [24 x i8], align 8
  %inner2 = alloca [8 x i8], align 8
  %inner1 = alloca [32 x i8], align 8
  %_0 = alloca [4 x i8], align 4
  %2 = load i64, ptr %inner, align 8
  %3 = icmp eq i64 %2, -9223372036854775808
  %_2 = select i1 %3, i64 1, i64 0
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %inner1, ptr align 8 %inner, i64 32, i1 false)
; call proc_macro2::imp::DeferredTokenStream::into_token_stream
  %5 = call i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h881785f7240173bfE(ptr align 8 %inner1)
  store i32 %5, ptr %_0, align 4
  br label %bb11

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %inner, i64 8
  %7 = load ptr, ptr %6, align 8
  store ptr %7, ptr %inner2, align 8
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hf329a8bd2a7de3e7E"(ptr sret([24 x i8]) align 8 %_8, ptr align 8 %inner2)
          to label %bb4 unwind label %cleanup

bb11:                                             ; preds = %bb8, %bb3
  %8 = load i32, ptr %_0, align 4
  ret i32 %8

bb10:                                             ; preds = %bb9, %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h842cd8089ab57678E"(ptr align 8 %inner2) #25
          to label %bb12 unwind label %terminate

cleanup:                                          ; preds = %bb7, %bb2
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %1, align 8
  %12 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb10

bb4:                                              ; preds = %bb2
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %13 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc82a32b733878c7eE"(ptr align 8 %_8)
          to label %bb5 unwind label %cleanup3

bb9:                                              ; preds = %cleanup3.body
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_8) #25
          to label %bb10 unwind label %terminate

cleanup3:                                         ; preds = %bb5, %bb4
  %14 = landingpad { ptr, i32 }
          cleanup
  br label %cleanup3.body

cleanup3.body:                                    ; preds = %cleanup.i, %cleanup3
  %eh.lpad-body = phi { ptr, i32 } [ %14, %cleanup3 ], [ %30, %cleanup.i ]
  %15 = extractvalue { ptr, i32 } %eh.lpad-body, 0
  %16 = extractvalue { ptr, i32 } %eh.lpad-body, 1
  store ptr %15, ptr %1, align 8
  %17 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %16, ptr %17, align 8
  br label %bb9

bb5:                                              ; preds = %bb4
  %_6.0 = extractvalue { ptr, i64 } %13, 0
  %_6.1 = extractvalue { ptr, i64 } %13, 1
; invoke core::str::<impl str>::parse
  %18 = invoke { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h4f67217496e96200E"(ptr align 1 %_6.0, i64 %_6.1)
          to label %bb6 unwind label %cleanup3

bb6:                                              ; preds = %bb5
  %_5.0 = extractvalue { i32, i32 } %18, 0
  %_5.1 = extractvalue { i32, i32 } %18, 1
  store i32 %_5.0, ptr %self.i, align 4
  %19 = getelementptr inbounds i8, ptr %self.i, i64 4
  store i32 %_5.1, ptr %19, align 4
  %20 = load i32, ptr %self.i, align 4
  %_2.i = zext i32 %20 to i64
  %21 = icmp eq i64 %_2.i, 0
  br i1 %21, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h8560e0317942f012E.exit", label %bb2.i

bb2.i:                                            ; preds = %bb6
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hebd1efddce947a93E(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i64 43, ptr align 1 %e.i, ptr align 8 @vtable.3, ptr align 8 @alloc_57c0aa826ab7be2b4b6ac673f8d888e3) #24
          to label %unreachable.i unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb2.i
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = extractvalue { ptr, i32 } %22, 0
  %24 = extractvalue { ptr, i32 } %22, 1
  store ptr %23, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %24, ptr %25, align 8
  %26 = load ptr, ptr %0, align 8
  %27 = getelementptr inbounds i8, ptr %0, i64 8
  %28 = load i32, ptr %27, align 8
  %29 = insertvalue { ptr, i32 } poison, ptr %26, 0
  %30 = insertvalue { ptr, i32 } %29, i32 %28, 1
  br label %cleanup3.body

unreachable.i:                                    ; preds = %bb2.i
  unreachable

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h8560e0317942f012E.exit": ; preds = %bb6
  %31 = getelementptr inbounds i8, ptr %self.i, i64 4
  %t.i = load i32, ptr %31, align 4
  br label %bb7

bb7:                                              ; preds = %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h8560e0317942f012E.exit"
  store i32 %t.i, ptr %_0, align 4
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_8)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h842cd8089ab57678E"(ptr align 8 %inner2)
  br label %bb11

terminate:                                        ; preds = %bb10, %bb9
  %32 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %33 = extractvalue { ptr, i32 } %32, 0
  %34 = extractvalue { ptr, i32 } %32, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb12:                                             ; preds = %bb10
  %35 = load ptr, ptr %1, align 8
  %36 = getelementptr inbounds i8, ptr %1, i64 8
  %37 = load i32, ptr %36, align 8
  %38 = insertvalue { ptr, i32 } poison, ptr %35, 0
  %39 = insertvalue { ptr, i32 } %38, i32 %37, 1
  resume { ptr, i32 } %39

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::TokenStream as core::convert::From<proc_macro2::fallback::TokenStream>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..TokenStream$GT$$GT$4from17h6660c535ce787d0fE"(ptr sret([32 x i8]) align 8 %_0, ptr %inner) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %inner, ptr %0, align 8
  store i64 -9223372036854775808, ptr %_0, align 8
  ret void
}

; proc_macro2::imp::into_compiler_token
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro23imp19into_compiler_token17h7ac751ece5cc6fbeE(ptr sret([20 x i8]) align 4 %_0, ptr align 8 %token) unnamed_addr #1 {
start:
  %0 = alloca [8 x i8], align 8
  %1 = alloca [8 x i8], align 8
  %_27 = alloca [24 x i8], align 8
  %_26 = alloca [16 x i8], align 4
  %tt3 = alloca [24 x i8], align 8
  %_24 = alloca [32 x i8], align 8
  %_23 = alloca [12 x i8], align 4
  %tt2 = alloca [32 x i8], align 8
  %_21 = alloca [8 x i8], align 4
  %punct = alloca [8 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %spacing = alloca [1 x i8], align 1
  %tt1 = alloca [12 x i8], align 4
  %_5 = alloca [24 x i8], align 8
  %_4 = alloca [20 x i8], align 4
  %tt = alloca [24 x i8], align 8
  %2 = load i64, ptr %token, align 8
  %3 = sub i64 %2, -9223372036854775807
  %4 = icmp ule i64 %3, 3
  %_2 = select i1 %4, i64 %3, i64 1
  switch i64 %_2, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb15
    i64 2, label %bb5
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %token, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tt, ptr align 8 %5, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %tt, i64 24, i1 false)
; call proc_macro2::imp::Group::unwrap_nightly
  call void @_ZN11proc_macro23imp5Group14unwrap_nightly17hf363d02544a47165E(ptr sret([20 x i8]) align 4 %_4, ptr align 8 %_5)
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hdb52881121127dd3E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %_4, ptr align 8 @alloc_cc1b511ec8ce0a9699a812ee920f7759)
  br label %bb18

bb15:                                             ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tt2, ptr align 8 %token, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_24, ptr align 8 %tt2, i64 32, i1 false)
; call proc_macro2::imp::Ident::unwrap_nightly
  call void @_ZN11proc_macro23imp5Ident14unwrap_nightly17h1c07e631c9a9db50E(ptr sret([12 x i8]) align 4 %_23, ptr align 8 %_24)
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5334d03991d43354E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %_23, ptr align 8 @alloc_924483463a8368a3d613abd716f9f893)
  br label %bb18

bb5:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %token, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %tt1, ptr align 8 %6, i64 12, i1 false)
; call proc_macro2::Punct::spacing
  %7 = call zeroext i1 @_ZN11proc_macro25Punct7spacing17hbf7907f0be3b091bE(ptr align 4 %tt1)
  %8 = zext i1 %7 to i8
  store i8 %8, ptr %_8, align 1
  %9 = load i8, ptr %_8, align 1
  %10 = trunc i8 %9 to i1
  %_10 = zext i1 %10 to i64
  %11 = icmp eq i64 %_10, 0
  br i1 %11, label %bb7, label %bb8

bb2:                                              ; preds = %start
  %12 = getelementptr inbounds i8, ptr %token, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tt3, ptr align 8 %12, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_27, ptr align 8 %tt3, i64 24, i1 false)
; call proc_macro2::imp::Literal::unwrap_nightly
  call void @_ZN11proc_macro23imp7Literal14unwrap_nightly17he2d392f3a11eb2e0E(ptr sret([16 x i8]) align 4 %_26, ptr align 8 %_27)
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h63b33f42ae095420E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %_26, ptr align 8 @alloc_b706e116591d24b8de204161f997f964)
  br label %bb18

bb18:                                             ; preds = %bb2, %bb9, %bb15, %bb3
  ret void

bb7:                                              ; preds = %bb5
  store i8 1, ptr %spacing, align 1
  br label %bb9

bb8:                                              ; preds = %bb5
  store i8 0, ptr %spacing, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
; call proc_macro2::Punct::as_char
  %_12 = call i32 @_ZN11proc_macro25Punct7as_char17h7391a996988c0b48E(ptr align 4 %tt1)
  %13 = load i8, ptr %spacing, align 1
  %_14 = trunc i8 %13 to i1
; call proc_macro::Punct::new
  %14 = call i64 @_ZN10proc_macro5Punct3new17h8c1b36f32939e5a8E(i32 %_12, i1 zeroext %_14)
  store i64 %14, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %punct, ptr align 8 %1, i64 8, i1 false)
; call proc_macro2::Punct::span
  %_19 = call i32 @_ZN11proc_macro25Punct4span17h56367fbae4c6a138E(ptr align 4 %tt1)
; call proc_macro2::imp::Span::unwrap_nightly
  %_17 = call i32 @_ZN11proc_macro23imp4Span14unwrap_nightly17h3444f8b14892c2aaE(i32 %_19)
; call proc_macro::Punct::set_span
  call void @_ZN10proc_macro5Punct8set_span17hadcfb8ca45617141E(ptr align 4 %punct, i32 %_17)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_21, ptr align 4 %punct, i64 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_21, i64 8, i1 false)
  %15 = load i64, ptr %0, align 8
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha8c1f7c77ae42fbdE"(ptr sret([20 x i8]) align 4 %_0, i64 %15, ptr align 8 @alloc_af23a9933ffa739b23f10a546a913025)
  br label %bb18
}

; <proc_macro2::imp::TokenStream as core::convert::From<proc_macro2::TokenTree>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN99_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..TokenTree$GT$$GT$4from17hd7e3365f9f8bbf51E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %token) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_9 = alloca [1 x i8], align 1
  %_8 = alloca [32 x i8], align 8
  %_6 = alloca [32 x i8], align 8
  %_5 = alloca [20 x i8], align 4
  %_3 = alloca [32 x i8], align 8
  store i8 0, ptr %_9, align 1
  store i8 1, ptr %_9, align 1
; invoke proc_macro2::detection::inside_proc_macro
  %_2 = invoke zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
          to label %bb1 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %1 = load i8, ptr %_9, align 1
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb10, label %bb9

cleanup:                                          ; preds = %bb4, %bb3, %bb2, %bb6, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb11

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  store i8 0, ptr %_9, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %token, i64 32, i1 false)
; invoke <T as core::convert::Into<U>>::into
  %_7 = invoke ptr @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha83ac5476e132838E"(ptr align 8 %_8, ptr align 8 @alloc_1db4a8dc4931354d3832d67b630999ec)
          to label %bb7 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8 0, ptr %_9, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %token, i64 32, i1 false)
; invoke proc_macro2::imp::into_compiler_token
  invoke void @_ZN11proc_macro23imp19into_compiler_token17h7ac751ece5cc6fbeE(ptr sret([20 x i8]) align 4 %_5, ptr align 8 %_6)
          to label %bb3 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_7, ptr %7, align 8
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb8

bb8:                                              ; preds = %bb5, %bb7
  ret void

bb3:                                              ; preds = %bb2
; invoke <T as core::convert::Into<U>>::into
  %_4 = invoke i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5e17d8674dfb76a4E"(ptr align 4 %_5, ptr align 8 @alloc_69e014b21bd0ce3b2dc0ee2188ee1ba0)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke proc_macro2::imp::DeferredTokenStream::new
  invoke void @_ZN11proc_macro23imp19DeferredTokenStream3new17h97a4b9a986d91f99E(ptr sret([32 x i8]) align 8 %_3, i32 %_4)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 32, i1 false)
  br label %bb8

bb9:                                              ; preds = %bb10, %bb11
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

bb10:                                             ; preds = %bb11
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17h6f257bf220908a92E"(ptr align 8 %token) #25
          to label %bb9 unwind label %terminate

terminate:                                        ; preds = %bb10
  %13 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable
}

; <proc_macro2::imp::TokenStream as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17h2ea5e6d28bb21c0fE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_7 = alloca [32 x i8], align 8
  %_6 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %1 = load i64, ptr %self, align 8
  %2 = icmp eq i64 %1, -9223372036854775808
  %_3 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
; call <proc_macro2::imp::DeferredTokenStream as core::clone::Clone>::clone
  call void @"_ZN76_$LT$proc_macro2..imp..DeferredTokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h401494a2f9d27f69E"(ptr sret([32 x i8]) align 8 %_7, ptr align 8 %self)
; call proc_macro2::imp::DeferredTokenStream::into_token_stream
  %4 = call i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h881785f7240173bfE(ptr align 8 %_7)
  store i32 %4, ptr %_6, align 4
; invoke <proc_macro::TokenStream as core::fmt::Debug>::fmt
  %5 = invoke zeroext i1 @"_ZN60_$LT$proc_macro..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17hf626f13ea87fc357E"(ptr align 4 %_6, ptr align 8 %f)
          to label %bb6 unwind label %cleanup

bb2:                                              ; preds = %start
  %tts = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::fallback::TokenStream as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN71_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc5baecbeabf7391E"(ptr align 8 %tts, ptr align 8 %f)
  %7 = zext i1 %6 to i8
  store i8 %7, ptr %_0, align 1
  br label %bb7

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro::TokenStream>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5907fc6780300241E"(ptr align 4 %_6) #25
          to label %bb9 unwind label %terminate

cleanup:                                          ; preds = %bb3
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb8

bb6:                                              ; preds = %bb3
  %12 = zext i1 %5 to i8
  store i8 %12, ptr %_0, align 1
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5907fc6780300241E"(ptr align 4 %_6)
  br label %bb7

bb7:                                              ; preds = %bb2, %bb6
  %13 = load i8, ptr %_0, align 1
  %14 = trunc i8 %13 to i1
  ret i1 %14

terminate:                                        ; preds = %bb8
  %15 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb9:                                              ; preds = %bb8
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::LexError::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp8LexError4span17hc153e7f10da71f2dE(ptr align 1 %self) unnamed_addr #1 {
start:
  %_0 = alloca [4 x i8], align 4
  %0 = load i8, ptr %self, align 1
  %1 = trunc i8 %0 to i1
  %_2 = zext i1 %1 to i64
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
; call proc_macro2::imp::Span::call_site
  %3 = call i32 @_ZN11proc_macro23imp4Span9call_site17h057e80d35c71a994E()
  store i32 %3, ptr %_0, align 4
  br label %bb5

bb2:                                              ; preds = %start
  %e = getelementptr inbounds i8, ptr %self, i64 1
; call proc_macro2::fallback::LexError::span
  call void @_ZN11proc_macro28fallback8LexError4span17ha23eb5b1d5597e7fE(ptr align 1 %e)
  store i32 0, ptr %_0, align 4
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  %4 = load i32, ptr %_0, align 4
  ret i32 %4

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::LexError as core::convert::From<proc_macro::LexError>>::from
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN94_$LT$proc_macro2..imp..LexError$u20$as$u20$core..convert..From$LT$proc_macro..LexError$GT$$GT$4from17hddbe6c1f2b594d25E"() unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  store i8 0, ptr %_0, align 1
  %0 = load i8, ptr %_0, align 1
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; <proc_macro2::imp::LexError as core::convert::From<proc_macro2::fallback::LexError>>::from
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN105_$LT$proc_macro2..imp..LexError$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..LexError$GT$$GT$4from17ha4759c8d33dce57dE"() unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  store i8 1, ptr %_0, align 1
  %0 = load i8, ptr %_0, align 1
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; <proc_macro2::imp::LexError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN63_$LT$proc_macro2..imp..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17h8daa750e0d90468eE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i8, ptr %self, align 1
  %1 = trunc i8 %0 to i1
  %_3 = zext i1 %1 to i64
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %e = getelementptr inbounds i8, ptr %self, i64 1
; call <proc_macro::LexError as core::fmt::Debug>::fmt
  %3 = call zeroext i1 @"_ZN57_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17hf65267aabaef1d1bE"(ptr align 1 %e, ptr align 8 %f)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  %e1 = getelementptr inbounds i8, ptr %self, i64 1
; call <proc_macro2::fallback::LexError as core::fmt::Debug>::fmt
  %5 = call zeroext i1 @"_ZN68_$LT$proc_macro2..fallback..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17h67fef370abe39176E"(ptr align 1 %e1, ptr align 8 %f)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_0, align 1
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::LexError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN65_$LT$proc_macro2..imp..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h8e35ee52587d7b72E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i8, ptr %self, align 1
  %1 = trunc i8 %0 to i1
  %_3 = zext i1 %1 to i64
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %e = getelementptr inbounds i8, ptr %self, i64 1
; call <proc_macro::LexError as core::fmt::Display>::fmt
  %3 = call zeroext i1 @"_ZN59_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17ha6a11898aa34fb0dE"(ptr align 1 %e, ptr align 8 %f)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  %e1 = getelementptr inbounds i8, ptr %self, i64 1
; call <proc_macro2::fallback::LexError as core::fmt::Display>::fmt
  %5 = call zeroext i1 @"_ZN70_$LT$proc_macro2..fallback..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h012d70b6183c4545E"(ptr align 1 %e1, ptr align 8 %f)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_0, align 1
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::TokenStream as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN91_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h26d2b11453b706baE"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_7 = alloca [32 x i8], align 8
  %_4 = alloca [32 x i8], align 8
  %tts = alloca [32 x i8], align 8
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tts, ptr align 8 %self, i64 32, i1 false)
; call proc_macro2::imp::DeferredTokenStream::into_token_stream
  %_5 = call i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h881785f7240173bfE(ptr align 8 %tts)
; call proc_macro::token_stream::<impl core::iter::traits::collect::IntoIterator for proc_macro::TokenStream>::into_iter
  call void @"_ZN10proc_macro12token_stream95_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$proc_macro..TokenStream$GT$9into_iter17hf34f7d036de82455E"(ptr sret([32 x i8]) align 8 %_4, i32 %_5)
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_4, i64 32, i1 false)
  store i64 0, ptr %_0, align 8
  br label %bb7

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  %tts1 = load ptr, ptr %4, align 8
; call <proc_macro2::fallback::TokenStream as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN96_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h44640d5281a39aadE"(ptr sret([32 x i8]) align 8 %_7, ptr %tts1)
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %_7, i64 32, i1 false)
  store i64 1, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::TokenTreeIter as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define void @"_ZN90_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17heffc6b88407ecfeeE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_35 = alloca [24 x i8], align 8
  %_34 = alloca [24 x i8], align 8
  %l = alloca [16 x i8], align 4
  %_32 = alloca [32 x i8], align 8
  %_31 = alloca [32 x i8], align 8
  %s = alloca [12 x i8], align 4
  %_29 = alloca [12 x i8], align 4
  %_26 = alloca [4 x i8], align 4
  %o = alloca [12 x i8], align 4
  %_16 = alloca [1 x i8], align 1
  %spacing = alloca [1 x i8], align 1
  %tt1 = alloca [8 x i8], align 4
  %_13 = alloca [24 x i8], align 8
  %_12 = alloca [24 x i8], align 8
  %tt = alloca [20 x i8], align 4
  %_9 = alloca [32 x i8], align 8
  %token = alloca [20 x i8], align 4
  %_5 = alloca [20 x i8], align 4
  %_4 = alloca [20 x i8], align 4
  %_2 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %iter = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN93_$LT$proc_macro..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h59e753c94d1975ddE"(ptr sret([20 x i8]) align 4 %_5, ptr align 8 %iter)
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  call void @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd5698a072fb0e60bE"(ptr sret([20 x i8]) align 4 %_4, ptr align 4 %_5)
  %1 = getelementptr inbounds i8, ptr %_4, i64 16
  %2 = load i8, ptr %1, align 4
  %3 = icmp eq i8 %2, 7
  %_6 = select i1 %3, i64 1, i64 0
  %4 = icmp eq i64 %_6, 0
  br i1 %4, label %bb6, label %bb7

bb2:                                              ; preds = %start
  %iter2 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::rcvec::RcVecIntoIter<T> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN101_$LT$proc_macro2..rcvec..RcVecIntoIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h141ed75263b6a7c8E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %iter2)
  br label %bb25

bb6:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %token, ptr align 4 %_4, i64 20, i1 false)
  %5 = getelementptr inbounds i8, ptr %token, i64 16
  %6 = load i8, ptr %5, align 4
  %7 = sub i8 %6, 4
  %8 = zext i8 %7 to i64
  %9 = icmp ule i8 %7, 2
  %10 = add i64 %8, 1
  %_10 = select i1 %9, i64 %10, i64 0
  switch i64 %_10, label %bb1 [
    i64 0, label %bb9
    i64 1, label %bb21
    i64 2, label %bb11
    i64 3, label %bb8
  ]

bb7:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h215b02c910a4e290E"(ptr sret([32 x i8]) align 8 %_0)
  br label %bb25

bb1:                                              ; preds = %bb6
  unreachable

bb9:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %tt, ptr align 4 %token, i64 20, i1 false)
  %11 = getelementptr inbounds i8, ptr %_13, i64 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %11, ptr align 4 %tt, i64 20, i1 false)
  store i32 0, ptr %_13, align 8
; call proc_macro2::Group::_new
  call void @_ZN11proc_macro25Group4_new17h2c010eceb5ddefdcE(ptr sret([24 x i8]) align 8 %_12, ptr align 8 %_13)
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9feb7a8fde82fa33E"(ptr sret([32 x i8]) align 8 %_9, ptr align 8 %_12, ptr align 8 @alloc_87a33879f94a3c068267525b6d2d40bb)
  br label %bb24

bb21:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %s, ptr align 4 %token, i64 12, i1 false)
  %12 = getelementptr inbounds i8, ptr %_32, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 4 %s, i64 12, i1 false)
  store i64 -9223372036854775808, ptr %_32, align 8
; call proc_macro2::Ident::_new
  call void @_ZN11proc_macro25Ident4_new17h34aafdfc73320843E(ptr sret([32 x i8]) align 8 %_31, ptr align 8 %_32)
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc1fd1decfbb423dcE"(ptr sret([32 x i8]) align 8 %_9, ptr align 8 %_31, ptr align 8 @alloc_fd37ce6cbbc75f659823b130e6c71978)
  br label %bb24

bb11:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %tt1, ptr align 4 %token, i64 8, i1 false)
; call proc_macro::Punct::spacing
  %13 = call zeroext i1 @_ZN10proc_macro5Punct7spacing17h15fa7f21e17dd2d5E(ptr align 4 %tt1)
  %14 = zext i1 %13 to i8
  store i8 %14, ptr %_16, align 1
  %15 = load i8, ptr %_16, align 1
  %16 = trunc i8 %15 to i1
  %_18 = zext i1 %16 to i64
  %17 = icmp eq i64 %_18, 0
  br i1 %17, label %bb14, label %bb13

bb8:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %l, ptr align 4 %token, i64 16, i1 false)
  %18 = getelementptr inbounds i8, ptr %_35, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 4 %l, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_35, align 8
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_34, ptr align 8 %_35)
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h2e3ce24ea6234289E"(ptr sret([32 x i8]) align 8 %_9, ptr align 8 %_34, ptr align 8 @alloc_6ef66a8593bd0837665b94528d527284)
  br label %bb24

bb24:                                             ; preds = %bb8, %bb15, %bb21, %bb9
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 32, i1 false)
  br label %bb25

bb14:                                             ; preds = %bb11
  store i8 1, ptr %spacing, align 1
  br label %bb15

bb13:                                             ; preds = %bb11
  store i8 0, ptr %spacing, align 1
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14
; call proc_macro::Punct::as_char
  %_20 = call i32 @_ZN10proc_macro5Punct7as_char17hcbc153353054bf4bE(ptr align 4 %tt1)
  %19 = load i8, ptr %spacing, align 1
  %_22 = trunc i8 %19 to i1
; call proc_macro2::Punct::new
  call void @_ZN11proc_macro25Punct3new17h7971e0a4c6081f92E(ptr sret([12 x i8]) align 4 %o, i32 %_20, i1 zeroext %_22)
; call proc_macro::Punct::span
  %_27 = call i32 @_ZN10proc_macro5Punct4span17hb6521ee351e77018E(ptr align 4 %tt1)
  store i32 %_27, ptr %_26, align 4
  %20 = load i32, ptr %_26, align 4
; call proc_macro2::Span::_new
  %_25 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %20)
; call proc_macro2::Punct::set_span
  call void @_ZN11proc_macro25Punct8set_span17h7328f643f9d1a1c9E(ptr align 4 %o, i32 %_25)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_29, ptr align 4 %o, i64 12, i1 false)
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h418cd183295db223E"(ptr sret([32 x i8]) align 8 %_9, ptr align 4 %_29, ptr align 8 @alloc_55120d89cb7a2617208dd45fdd875923)
  br label %bb24

bb25:                                             ; preds = %bb2, %bb7, %bb24
  ret void
}

; <proc_macro2::imp::TokenTreeIter as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nonlazybind uwtable
define void @"_ZN90_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hacb7b8676b3ef7b1E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %tts = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN93_$LT$proc_macro..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hc9d6dc5a8028b993E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %tts)
  br label %bb4

bb2:                                              ; preds = %start
  %tts1 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::rcvec::RcVecIntoIter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN101_$LT$proc_macro2..rcvec..RcVecIntoIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h196b8adef2a95d1bE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %tts1)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Span::call_site
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span9call_site17h057e80d35c71a994E() unnamed_addr #1 {
start:
  %_0 = alloca [4 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_1 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_1, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Span::call_site
  call void @_ZN11proc_macro28fallback4Span9call_site17h73db4df36731ab9bE()
  store i32 0, ptr %_0, align 4
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Span::call_site
  %_2 = call i32 @_ZN10proc_macro4Span9call_site17hff21e5f03a292c66E()
  store i32 %_2, ptr %_0, align 4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  %0 = load i32, ptr %_0, align 4
  ret i32 %0
}

; proc_macro2::imp::Span::mixed_site
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span10mixed_site17h634481c6828f734aE() unnamed_addr #1 {
start:
  %_0 = alloca [4 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_1 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_1, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Span::mixed_site
  call void @_ZN11proc_macro28fallback4Span10mixed_site17hb05289befbad3c32E()
  store i32 0, ptr %_0, align 4
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Span::mixed_site
  %_2 = call i32 @_ZN10proc_macro4Span10mixed_site17h855957087c9d232cE()
  store i32 %_2, ptr %_0, align 4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  %0 = load i32, ptr %_0, align 4
  ret i32 %0
}

; proc_macro2::imp::Span::resolved_at
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span11resolved_at17h24f70a965778cb0eE(ptr align 4 %self, i32 %other) unnamed_addr #1 {
start:
  %_3 = alloca [16 x i8], align 8
  %_0 = alloca [4 x i8], align 4
  store ptr %self, ptr %_3, align 8
  %0 = getelementptr inbounds i8, ptr %_3, i64 8
  store i32 %other, ptr %0, align 8
  %_13 = load ptr, ptr %_3, align 8
  %1 = load i32, ptr %_13, align 4
  %2 = icmp eq i32 %1, 0
  %_6 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_6, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 0
  %_4 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_4, 0
  br i1 %7, label %bb4, label %bb1

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_3, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = icmp eq i32 %9, 0
  %_5 = select i1 %10, i64 1, i64 0
  %11 = icmp eq i64 %_5, 1
  br i1 %11, label %bb6, label %bb1

bb4:                                              ; preds = %bb2
  %_14 = load ptr, ptr %_3, align 8
  %12 = getelementptr inbounds i8, ptr %_3, i64 8
  %b = load i32, ptr %12, align 8
; call proc_macro::Span::resolved_at
  %_9 = call i32 @_ZN10proc_macro4Span11resolved_at17hf55a608954b98a7eE(ptr align 4 %_14, i32 %b)
  store i32 %_9, ptr %_0, align 4
  br label %bb8

bb1:                                              ; preds = %bb3, %bb2
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
  unreachable

bb8:                                              ; preds = %bb6, %bb4
  %13 = load i32, ptr %_0, align 4
  ret i32 %13

bb6:                                              ; preds = %bb3
  %_15 = load ptr, ptr %_3, align 8
; call proc_macro2::fallback::Span::resolved_at
  call void @_ZN11proc_macro28fallback4Span11resolved_at17h722c2980229439afE(ptr align 1 %_15)
  store i32 0, ptr %_0, align 4
  br label %bb8

bb9:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Span::located_at
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span10located_at17h20e7fadf2f35679cE(ptr align 4 %self, i32 %other) unnamed_addr #1 {
start:
  %_3 = alloca [16 x i8], align 8
  %_0 = alloca [4 x i8], align 4
  store ptr %self, ptr %_3, align 8
  %0 = getelementptr inbounds i8, ptr %_3, i64 8
  store i32 %other, ptr %0, align 8
  %_13 = load ptr, ptr %_3, align 8
  %1 = load i32, ptr %_13, align 4
  %2 = icmp eq i32 %1, 0
  %_6 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_6, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 0
  %_4 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_4, 0
  br i1 %7, label %bb4, label %bb1

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_3, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = icmp eq i32 %9, 0
  %_5 = select i1 %10, i64 1, i64 0
  %11 = icmp eq i64 %_5, 1
  br i1 %11, label %bb6, label %bb1

bb4:                                              ; preds = %bb2
  %_14 = load ptr, ptr %_3, align 8
  %12 = getelementptr inbounds i8, ptr %_3, i64 8
  %b = load i32, ptr %12, align 8
; call proc_macro::Span::located_at
  %_9 = call i32 @_ZN10proc_macro4Span10located_at17h4fbbb37249c76052E(ptr align 4 %_14, i32 %b)
  store i32 %_9, ptr %_0, align 4
  br label %bb8

bb1:                                              ; preds = %bb3, %bb2
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
  unreachable

bb8:                                              ; preds = %bb6, %bb4
  %13 = load i32, ptr %_0, align 4
  ret i32 %13

bb6:                                              ; preds = %bb3
  %_15 = load ptr, ptr %_3, align 8
; call proc_macro2::fallback::Span::located_at
  call void @_ZN11proc_macro28fallback4Span10located_at17h9d0cd9791cd955cdE(ptr align 1 %_15)
  store i32 0, ptr %_0, align 4
  br label %bb8

bb9:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Span::unwrap
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span6unwrap17h835ea4e41de2e63aE(i32 %0) unnamed_addr #1 {
start:
  %_4 = alloca [48 x i8], align 8
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
  %1 = load i32, ptr %self, align 4
  %2 = icmp eq i32 %1, 0
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %s = load i32, ptr %self, align 4
  ret i32 %s

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h604c02e065326e13E(ptr sret([48 x i8]) align 8 %_4, ptr align 8 @alloc_20cbea710a0c6cd6b255770ee94e71e0)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8 %_4, ptr align 8 @alloc_583a7c01bca8b668b7b2440b42e37f33) #24
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Span::join
; Function Attrs: nonlazybind uwtable
define internal { i32, i32 } @_ZN11proc_macro23imp4Span4join17hf38e907bf4fb26d4E(ptr align 4 %self, i32 %other) unnamed_addr #1 {
start:
  %_15 = alloca [1 x i8], align 1
  %_10 = alloca [4 x i8], align 4
  %_4 = alloca [16 x i8], align 8
  %ret = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %_4, align 8
  %0 = getelementptr inbounds i8, ptr %_4, i64 8
  store i32 %other, ptr %0, align 8
  %_19 = load ptr, ptr %_4, align 8
  %1 = load i32, ptr %_19, align 4
  %2 = icmp eq i32 %1, 0
  %_7 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_7, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_4, i64 8
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 0
  %_5 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_5, 0
  br i1 %7, label %bb4, label %bb1

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_4, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = icmp eq i32 %9, 0
  %_6 = select i1 %10, i64 1, i64 0
  %11 = icmp eq i64 %_6, 1
  br i1 %11, label %bb10, label %bb1

bb4:                                              ; preds = %bb2
  %_20 = load ptr, ptr %_4, align 8
  %12 = getelementptr inbounds i8, ptr %_4, i64 8
  %b = load i32, ptr %12, align 8
; call proc_macro::Span::join
  %_11 = call i32 @_ZN10proc_macro4Span4join17h8dad2620750340bcE(ptr align 4 %_20, i32 %b)
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %13 = call i32 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h695c442508bf523fE"(i32 %_11)
  store i32 %13, ptr %_10, align 4
  %14 = load i32, ptr %_10, align 4
  %15 = icmp eq i32 %14, 0
  %_12 = select i1 %15, i64 1, i64 0
  %16 = icmp eq i64 %_12, 0
  br i1 %16, label %bb8, label %bb9

bb1:                                              ; preds = %bb3, %bb2
  store i32 0, ptr %_0, align 4
  br label %bb16

bb8:                                              ; preds = %bb4
  %val = load i32, ptr %_10, align 4
  store i32 %val, ptr %ret, align 4
  br label %bb15

bb9:                                              ; preds = %bb4
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %17 = call { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17haf11494c7fa22b63E"()
  %18 = extractvalue { i32, i32 } %17, 0
  %19 = extractvalue { i32, i32 } %17, 1
  store i32 %18, ptr %_0, align 4
  %20 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %19, ptr %20, align 4
  br label %bb16

bb15:                                             ; preds = %bb13, %bb8
  %_18 = load i32, ptr %ret, align 4
  %21 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_18, ptr %21, align 4
  store i32 1, ptr %_0, align 4
  br label %bb16

bb16:                                             ; preds = %bb1, %bb14, %bb15, %bb9
  %22 = load i32, ptr %_0, align 4
  %23 = getelementptr inbounds i8, ptr %_0, i64 4
  %24 = load i32, ptr %23, align 4
  %25 = insertvalue { i32, i32 } poison, i32 %22, 0
  %26 = insertvalue { i32, i32 } %25, i32 %24, 1
  ret { i32, i32 } %26

bb10:                                             ; preds = %bb3
  %_21 = load ptr, ptr %_4, align 8
; call proc_macro2::fallback::Span::join
  %_16 = call zeroext i1 @_ZN11proc_macro28fallback4Span4join17ha23c805d2ae1f7faE(ptr align 1 %_21)
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %27 = call zeroext i1 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he5015fdbcd061296E"(i1 zeroext %_16)
  %28 = zext i1 %27 to i8
  store i8 %28, ptr %_15, align 1
  %29 = load i8, ptr %_15, align 1
  %30 = trunc i8 %29 to i1
  %_17 = zext i1 %30 to i64
  %31 = icmp eq i64 %_17, 0
  br i1 %31, label %bb13, label %bb14

bb13:                                             ; preds = %bb10
  store i32 0, ptr %ret, align 4
  br label %bb15

bb14:                                             ; preds = %bb10
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %32 = call { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17haf11494c7fa22b63E"()
  %33 = extractvalue { i32, i32 } %32, 0
  %34 = extractvalue { i32, i32 } %32, 1
  store i32 %33, ptr %_0, align 4
  %35 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %34, ptr %35, align 4
  br label %bb16

bb7:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Span::source_text
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp4Span11source_text17h44210f3d7903cedeE(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %self) unnamed_addr #1 {
start:
  %0 = load i32, ptr %self, align 4
  %1 = icmp eq i32 %0, 0
  %_2 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
; call proc_macro::Span::source_text
  call void @_ZN10proc_macro4Span11source_text17h189ee69296bf4ab3E(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %self)
  br label %bb4

bb2:                                              ; preds = %start
; call proc_macro2::fallback::Span::source_text
  call void @_ZN11proc_macro28fallback4Span11source_text17hb93fdac35a47172dE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Span::unwrap_nightly
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span14unwrap_nightly17h3444f8b14892c2aaE(i32 %0) unnamed_addr #1 {
start:
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
  %1 = load i32, ptr %self, align 4
  %2 = icmp eq i32 %1, 0
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %s = load i32, ptr %self, align 4
  ret i32 %s

bb2:                                              ; preds = %start
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::<impl core::convert::From<proc_macro::Span> for proc_macro2::Span>::from
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN11proc_macro23imp91_$LT$impl$u20$core..convert..From$LT$proc_macro..Span$GT$$u20$for$u20$proc_macro2..Span$GT$4from17h2509ee0fcac41b29E"(i32 %proc_span) unnamed_addr #1 {
start:
  %_2 = alloca [4 x i8], align 4
  store i32 %proc_span, ptr %_2, align 4
  %0 = load i32, ptr %_2, align 4
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %0)
  ret i32 %_0
}

; <proc_macro2::imp::Span as core::convert::From<proc_macro2::fallback::Span>>::from
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN97_$LT$proc_macro2..imp..Span$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Span$GT$$GT$4from17h43dae0c8cab2de1dE"() unnamed_addr #1 {
start:
  %_0 = alloca [4 x i8], align 4
  store i32 0, ptr %_0, align 4
  %0 = load i32, ptr %_0, align 4
  ret i32 %0
}

; <proc_macro2::imp::Span as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN59_$LT$proc_macro2..imp..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h169ed6c89d15e417E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i32, ptr %self, align 4
  %1 = icmp eq i32 %0, 0
  %_3 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
; call <proc_macro::Span as core::fmt::Debug>::fmt
  %3 = call zeroext i1 @"_ZN53_$LT$proc_macro..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f979cfe424668feE"(ptr align 4 %self, ptr align 8 %f)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
; call <proc_macro2::fallback::Span as core::fmt::Debug>::fmt
  %5 = call zeroext i1 @"_ZN64_$LT$proc_macro2..fallback..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h03ee8393c0975a1cE"(ptr align 1 %self, ptr align 8 %f)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_0, align 1
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::debug_span_field_if_nontrivial
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp30debug_span_field_if_nontrivial17h110257606f7564c4E(ptr align 8 %debug, i32 %0) unnamed_addr #1 {
start:
  %s = alloca [4 x i8], align 4
  %span = alloca [4 x i8], align 4
  store i32 %0, ptr %span, align 4
  %1 = load i32, ptr %span, align 4
  %2 = icmp eq i32 %1, 0
  %_3 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %4 = load i32, ptr %span, align 4
  store i32 %4, ptr %s, align 4
; call core::fmt::builders::DebugStruct::field
  %_5 = call align 8 ptr @_ZN4core3fmt8builders11DebugStruct5field17ha9e91e16904b9623E(ptr align 8 %debug, ptr align 1 @alloc_d299c6d6ea3f96b88c1a3bb8e0f4fc1e, i64 4, ptr align 1 %s, ptr align 8 @vtable.e)
  br label %bb4

bb2:                                              ; preds = %start
; call proc_macro2::fallback::debug_span_field_if_nontrivial
  call void @_ZN11proc_macro28fallback30debug_span_field_if_nontrivial17h06cdd0a21a1bd672E(ptr align 8 %debug)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Group::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Group3new17h83551775930f6247E(ptr sret([24 x i8]) align 8 %_0, i8 %0, ptr align 8 %stream) unnamed_addr #1 {
start:
  %_7 = alloca [20 x i8], align 4
  %delimiter1 = alloca [1 x i8], align 1
  %tts = alloca [32 x i8], align 8
  %delimiter = alloca [1 x i8], align 1
  store i8 %0, ptr %delimiter, align 1
  %1 = load i64, ptr %stream, align 8
  %2 = icmp eq i64 %1, -9223372036854775808
  %_3 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tts, ptr align 8 %stream, i64 32, i1 false)
  %4 = load i8, ptr %delimiter, align 1
  %_6 = zext i8 %4 to i64
  switch i64 %_6, label %bb1 [
    i64 0, label %bb5
    i64 1, label %bb7
    i64 2, label %bb6
    i64 3, label %bb4
  ]

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %stream, i64 8
  %stream2 = load ptr, ptr %5, align 8
  %6 = load i8, ptr %delimiter, align 1
; call proc_macro2::fallback::Group::new
  %7 = call { ptr, i8 } @_ZN11proc_macro28fallback5Group3new17hbabe51d3c5d7ae92E(i8 %6, ptr %stream2)
  %_11.0 = extractvalue { ptr, i8 } %7, 0
  %_11.1 = extractvalue { ptr, i8 } %7, 1
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_11.0, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i8 %_11.1, ptr %9, align 8
  store i32 1, ptr %_0, align 8
  br label %bb12

bb1:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
  store i8 0, ptr %delimiter1, align 1
  br label %bb8

bb7:                                              ; preds = %bb3
  store i8 1, ptr %delimiter1, align 1
  br label %bb8

bb6:                                              ; preds = %bb3
  store i8 2, ptr %delimiter1, align 1
  br label %bb8

bb4:                                              ; preds = %bb3
  store i8 3, ptr %delimiter1, align 1
  br label %bb8

bb8:                                              ; preds = %bb4, %bb6, %bb7, %bb5
  %_8 = load i8, ptr %delimiter1, align 1
; call proc_macro2::imp::DeferredTokenStream::into_token_stream
  %_9 = call i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h881785f7240173bfE(ptr align 8 %tts)
; call proc_macro::Group::new
  call void @_ZN10proc_macro5Group3new17hca8990fb53ef7c07E(ptr sret([20 x i8]) align 4 %_7, i8 %_8, i32 %_9)
  %10 = getelementptr inbounds i8, ptr %_0, i64 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %10, ptr align 4 %_7, i64 20, i1 false)
  store i32 0, ptr %_0, align 8
  br label %bb12

bb12:                                             ; preds = %bb2, %bb8
  ret void
}

; proc_macro2::imp::Group::delimiter
; Function Attrs: nonlazybind uwtable
define internal i8 @_ZN11proc_macro23imp5Group9delimiter17h6181784402a5aef2E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_4 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %0 = load i32, ptr %self, align 8
  %_2 = zext i32 %0 to i64
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %g = getelementptr inbounds i8, ptr %self, i64 4
; call proc_macro::Group::delimiter
  %2 = call i8 @_ZN10proc_macro5Group9delimiter17h97c85d9b7a922b7bE(ptr align 4 %g)
  store i8 %2, ptr %_4, align 1
  %3 = load i8, ptr %_4, align 1
  %_5 = zext i8 %3 to i64
  switch i64 %_5, label %bb1 [
    i64 0, label %bb6
    i64 1, label %bb8
    i64 2, label %bb7
    i64 3, label %bb5
  ]

bb2:                                              ; preds = %start
  %g1 = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::fallback::Group::delimiter
  %4 = call i8 @_ZN11proc_macro28fallback5Group9delimiter17had60e79fa8222949E(ptr align 8 %g1)
  store i8 %4, ptr %_0, align 1
  br label %bb9

bb1:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1
  br label %bb9

bb8:                                              ; preds = %bb3
  store i8 1, ptr %_0, align 1
  br label %bb9

bb7:                                              ; preds = %bb3
  store i8 2, ptr %_0, align 1
  br label %bb9

bb5:                                              ; preds = %bb3
  store i8 3, ptr %_0, align 1
  br label %bb9

bb9:                                              ; preds = %bb2, %bb5, %bb7, %bb8, %bb6
  %5 = load i8, ptr %_0, align 1
  ret i8 %5
}

; proc_macro2::imp::Group::stream
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Group6stream17hb24744c7059c1606E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_4 = alloca [32 x i8], align 8
  %0 = load i32, ptr %self, align 8
  %_2 = zext i32 %0 to i64
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %g = getelementptr inbounds i8, ptr %self, i64 4
; call proc_macro::Group::stream
  %_5 = call i32 @_ZN10proc_macro5Group6stream17h47b6a965f15451b4E(ptr align 4 %g)
; call proc_macro2::imp::DeferredTokenStream::new
  call void @_ZN11proc_macro23imp19DeferredTokenStream3new17h97a4b9a986d91f99E(ptr sret([32 x i8]) align 8 %_4, i32 %_5)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 32, i1 false)
  br label %bb7

bb2:                                              ; preds = %start
  %g1 = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::fallback::Group::stream
  %_7 = call ptr @_ZN11proc_macro28fallback5Group6stream17h64d0b738ce05fa1bE(ptr align 8 %g1)
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_7, ptr %2, align 8
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Group::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp5Group4span17h7d6d1914cec46ef6E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_0 = alloca [4 x i8], align 4
  %0 = load i32, ptr %self, align 8
  %_2 = zext i32 %0 to i64
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %g = getelementptr inbounds i8, ptr %self, i64 4
; call proc_macro::Group::span
  %_4 = call i32 @_ZN10proc_macro5Group4span17h488b53ca5a909206E(ptr align 4 %g)
  store i32 %_4, ptr %_0, align 4
  br label %bb6

bb2:                                              ; preds = %start
  %g1 = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::fallback::Group::span
  call void @_ZN11proc_macro28fallback5Group4span17h464d9e016a6b8bf7E(ptr align 8 %g1)
  store i32 0, ptr %_0, align 4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  %2 = load i32, ptr %_0, align 4
  ret i32 %2

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Group::span_open
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp5Group9span_open17h460257d965052103E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_0 = alloca [4 x i8], align 4
  %0 = load i32, ptr %self, align 8
  %_2 = zext i32 %0 to i64
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %g = getelementptr inbounds i8, ptr %self, i64 4
; call proc_macro::Group::span_open
  %_4 = call i32 @_ZN10proc_macro5Group9span_open17hd998f698eca2693aE(ptr align 4 %g)
  store i32 %_4, ptr %_0, align 4
  br label %bb6

bb2:                                              ; preds = %start
  %g1 = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::fallback::Group::span_open
  call void @_ZN11proc_macro28fallback5Group9span_open17hdda5c456db244f55E(ptr align 8 %g1)
  store i32 0, ptr %_0, align 4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  %2 = load i32, ptr %_0, align 4
  ret i32 %2

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Group::span_close
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp5Group10span_close17h75bb6154192180a9E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_0 = alloca [4 x i8], align 4
  %0 = load i32, ptr %self, align 8
  %_2 = zext i32 %0 to i64
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %g = getelementptr inbounds i8, ptr %self, i64 4
; call proc_macro::Group::span_close
  %_4 = call i32 @_ZN10proc_macro5Group10span_close17he77c7993e308b342E(ptr align 4 %g)
  store i32 %_4, ptr %_0, align 4
  br label %bb6

bb2:                                              ; preds = %start
  %g1 = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::fallback::Group::span_close
  call void @_ZN11proc_macro28fallback5Group10span_close17h555767d853c5439dE(ptr align 8 %g1)
  store i32 0, ptr %_0, align 4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  %2 = load i32, ptr %_0, align 4
  ret i32 %2

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Group::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Group8set_span17hb9e46b886f302649E(ptr align 8 %self, i32 %span) unnamed_addr #1 {
start:
  %_3 = alloca [16 x i8], align 8
  store ptr %self, ptr %_3, align 8
  %0 = getelementptr inbounds i8, ptr %_3, i64 8
  store i32 %span, ptr %0, align 8
  %_11 = load ptr, ptr %_3, align 8
  %1 = load i32, ptr %_11, align 8
  %_6 = zext i32 %1 to i64
  %2 = icmp eq i64 %_6, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %_3, i64 8
  %4 = load i32, ptr %3, align 8
  %5 = icmp eq i32 %4, 0
  %_4 = select i1 %5, i64 1, i64 0
  %6 = icmp eq i64 %_4, 0
  br i1 %6, label %bb4, label %bb1

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_3, i64 8
  %8 = load i32, ptr %7, align 8
  %9 = icmp eq i32 %8, 0
  %_5 = select i1 %9, i64 1, i64 0
  %10 = icmp eq i64 %_5, 1
  br i1 %10, label %bb5, label %bb1

bb4:                                              ; preds = %bb2
  %_12 = load ptr, ptr %_3, align 8
  %g = getelementptr inbounds i8, ptr %_12, i64 4
  %11 = getelementptr inbounds i8, ptr %_3, i64 8
  %s = load i32, ptr %11, align 8
; call proc_macro::Group::set_span
  call void @_ZN10proc_macro5Group8set_span17h596ffbf1d77154c2E(ptr align 4 %g, i32 %s)
  br label %bb6

bb1:                                              ; preds = %bb3, %bb2
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
  unreachable

bb6:                                              ; preds = %bb5, %bb4
  ret void

bb5:                                              ; preds = %bb3
  %_13 = load ptr, ptr %_3, align 8
  %g1 = getelementptr inbounds i8, ptr %_13, i64 8
; call proc_macro2::fallback::Group::set_span
  call void @_ZN11proc_macro28fallback5Group8set_span17hbff0e10f5d181640E(ptr align 8 %g1)
  br label %bb6

bb7:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Group::unwrap_nightly
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Group14unwrap_nightly17hf363d02544a47165E(ptr sret([20 x i8]) align 4 %g, ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %1 = load i32, ptr %self, align 8
  %_2 = zext i32 %1 to i64
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %g, ptr align 4 %3, i64 20, i1 false)
  %4 = load i32, ptr %self, align 8
  %_4 = zext i32 %4 to i64
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb5, label %bb6

bb2:                                              ; preds = %start
; invoke proc_macro2::imp::mismatch
  invoke void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
          to label %unreachable unwind label %cleanup

bb5:                                              ; preds = %bb6, %bb3
  ret void

bb6:                                              ; preds = %bb3
; call core::ptr::drop_in_place<proc_macro2::imp::Group>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17hdb32b9b469366b91E"(ptr align 8 %self)
  br label %bb5

bb8:                                              ; preds = %cleanup
  %6 = load i32, ptr %self, align 8
  %_5 = zext i32 %6 to i64
  %7 = icmp eq i64 %_5, 0
  br i1 %7, label %bb4, label %bb7

cleanup:                                          ; preds = %bb2
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb8

unreachable:                                      ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb7, %bb8
  %12 = load ptr, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<proc_macro2::imp::Group>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17hdb32b9b469366b91E"(ptr align 8 %self) #25
          to label %bb4 unwind label %terminate

terminate:                                        ; preds = %bb7
  %17 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Group as core::convert::From<proc_macro2::fallback::Group>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN99_$LT$proc_macro2..imp..Group$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Group$GT$$GT$4from17h19e9554853a6bcd1E"(ptr sret([24 x i8]) align 8 %_0, ptr %g.0, i8 %g.1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %g.0, ptr %0, align 8
  %1 = getelementptr inbounds i8, ptr %0, i64 8
  store i8 %g.1, ptr %1, align 8
  store i32 1, ptr %_0, align 8
  ret void
}

; <proc_macro2::imp::Group as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Group$u20$as$u20$core..fmt..Display$GT$3fmt17h6f645d28fbe0a7beE"(ptr align 8 %self, ptr align 8 %formatter) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i32, ptr %self, align 8
  %_3 = zext i32 %0 to i64
  %1 = icmp eq i64 %_3, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %group = getelementptr inbounds i8, ptr %self, i64 4
; call <proc_macro::Group as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN56_$LT$proc_macro..Group$u20$as$u20$core..fmt..Display$GT$3fmt17hd42d98ca6848a183E"(ptr align 4 %group, ptr align 8 %formatter)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  %group1 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::fallback::Group as core::fmt::Display>::fmt
  %4 = call zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Group$u20$as$u20$core..fmt..Display$GT$3fmt17h87ae89c964ee0bd5E"(ptr align 8 %group1, ptr align 8 %formatter)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %6 = load i8, ptr %_0, align 1
  %7 = trunc i8 %6 to i1
  ret i1 %7

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Group as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN60_$LT$proc_macro2..imp..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17he206f35577dac671E"(ptr align 8 %self, ptr align 8 %formatter) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i32, ptr %self, align 8
  %_3 = zext i32 %0 to i64
  %1 = icmp eq i64 %_3, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %group = getelementptr inbounds i8, ptr %self, i64 4
; call <proc_macro::Group as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN54_$LT$proc_macro..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17h9eedafc16c4fd485E"(ptr align 4 %group, ptr align 8 %formatter)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  %group1 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::fallback::Group as core::fmt::Debug>::fmt
  %4 = call zeroext i1 @"_ZN65_$LT$proc_macro2..fallback..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17hbbada50e62c0dcc8E"(ptr align 8 %group1, ptr align 8 %formatter)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %6 = load i8, ptr %_0, align 1
  %7 = trunc i8 %6 to i1
  ret i1 %7

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Ident::new_checked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Ident11new_checked17hbebf3c6cef25bc93E(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1, i32 %0, ptr align 8 %1) unnamed_addr #1 {
start:
  %_6 = alloca [32 x i8], align 8
  %_5 = alloca [12 x i8], align 4
  %span = alloca [4 x i8], align 4
  store i32 %0, ptr %span, align 4
  %2 = load i32, ptr %span, align 4
  %3 = icmp eq i32 %2, 0
  %_3 = select i1 %3, i64 1, i64 0
  %4 = icmp eq i64 %_3, 0
  br i1 %4, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %s = load i32, ptr %span, align 4
; call proc_macro::Ident::new
  call void @_ZN10proc_macro5Ident3new17h0adb7cafd9ca4818E(ptr sret([12 x i8]) align 4 %_5, ptr align 1 %string.0, i64 %string.1, i32 %s)
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 4 %_5, i64 12, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro2::fallback::Ident::new_checked
  call void @_ZN11proc_macro28fallback5Ident11new_checked17h42035b187bbc3286E(ptr sret([32 x i8]) align 8 %_6, ptr align 1 %string.0, i64 %string.1, ptr align 8 %1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 32, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Ident::new_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Ident13new_unchecked17h7ae3cad3f627c625E(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1) unnamed_addr #1 {
start:
  %_3 = alloca [32 x i8], align 8
; call proc_macro2::fallback::Ident::new_unchecked
  call void @_ZN11proc_macro28fallback5Ident13new_unchecked17h8ece62da3f21d8dbE(ptr sret([32 x i8]) align 8 %_3, ptr align 1 %string.0, i64 %string.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 32, i1 false)
  ret void
}

; proc_macro2::imp::Ident::new_raw_checked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Ident15new_raw_checked17hdeb16ecb778712f4E(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1, i32 %0, ptr align 8 %1) unnamed_addr #1 {
start:
  %_6 = alloca [32 x i8], align 8
  %_5 = alloca [12 x i8], align 4
  %span = alloca [4 x i8], align 4
  store i32 %0, ptr %span, align 4
  %2 = load i32, ptr %span, align 4
  %3 = icmp eq i32 %2, 0
  %_3 = select i1 %3, i64 1, i64 0
  %4 = icmp eq i64 %_3, 0
  br i1 %4, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %s = load i32, ptr %span, align 4
; call proc_macro::Ident::new_raw
  call void @_ZN10proc_macro5Ident7new_raw17h747960b4aa9da752E(ptr sret([12 x i8]) align 4 %_5, ptr align 1 %string.0, i64 %string.1, i32 %s)
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 4 %_5, i64 12, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro2::fallback::Ident::new_raw_checked
  call void @_ZN11proc_macro28fallback5Ident15new_raw_checked17h4ddf0061f7d5569bE(ptr sret([32 x i8]) align 8 %_6, ptr align 1 %string.0, i64 %string.1, ptr align 8 %1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 32, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Ident::new_raw_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Ident17new_raw_unchecked17hf82b8a2d59ad1accE(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1) unnamed_addr #1 {
start:
  %_3 = alloca [32 x i8], align 8
; call proc_macro2::fallback::Ident::new_raw_unchecked
  call void @_ZN11proc_macro28fallback5Ident17new_raw_unchecked17h709bafb0663302c5E(ptr sret([32 x i8]) align 8 %_3, ptr align 1 %string.0, i64 %string.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 32, i1 false)
  ret void
}

; proc_macro2::imp::Ident::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp5Ident4span17h978d620100a7a41cE(ptr align 8 %self) unnamed_addr #1 {
start:
  %_0 = alloca [4 x i8], align 4
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %t = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro::Ident::span
  %_4 = call i32 @_ZN10proc_macro5Ident4span17ha73f440a4f0ae645E(ptr align 4 %t)
  store i32 %_4, ptr %_0, align 4
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro2::fallback::Ident::span
  call void @_ZN11proc_macro28fallback5Ident4span17h49adbef780294a72E(ptr align 8 %self)
  store i32 0, ptr %_0, align 4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  %3 = load i32, ptr %_0, align 4
  ret i32 %3

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Ident::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Ident8set_span17h2412e3a2ab20ab67E(ptr align 8 %self, i32 %span) unnamed_addr #1 {
start:
  %_3 = alloca [16 x i8], align 8
  store ptr %self, ptr %_3, align 8
  %0 = getelementptr inbounds i8, ptr %_3, i64 8
  store i32 %span, ptr %0, align 8
  %_11 = load ptr, ptr %_3, align 8
  %1 = load i64, ptr %_11, align 8
  %2 = icmp eq i64 %1, -9223372036854775808
  %_6 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_6, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 0
  %_4 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_4, 0
  br i1 %7, label %bb4, label %bb1

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_3, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = icmp eq i32 %9, 0
  %_5 = select i1 %10, i64 1, i64 0
  %11 = icmp eq i64 %_5, 1
  br i1 %11, label %bb5, label %bb1

bb4:                                              ; preds = %bb2
  %_12 = load ptr, ptr %_3, align 8
  %t = getelementptr inbounds i8, ptr %_12, i64 8
  %12 = getelementptr inbounds i8, ptr %_3, i64 8
  %s = load i32, ptr %12, align 8
; call proc_macro::Ident::set_span
  call void @_ZN10proc_macro5Ident8set_span17hf64a60445fd35bcfE(ptr align 4 %t, i32 %s)
  br label %bb6

bb1:                                              ; preds = %bb3, %bb2
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
  unreachable

bb6:                                              ; preds = %bb5, %bb4
  ret void

bb5:                                              ; preds = %bb3
  %_13 = load ptr, ptr %_3, align 8
; call proc_macro2::fallback::Ident::set_span
  call void @_ZN11proc_macro28fallback5Ident8set_span17hcb1ce7a2a8fb1c49E(ptr align 8 %_13)
  br label %bb6

bb7:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Ident::unwrap_nightly
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Ident14unwrap_nightly17h1c07e631c9a9db50E(ptr sret([12 x i8]) align 4 %s, ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %1 = load i64, ptr %self, align 8
  %2 = icmp eq i64 %1, -9223372036854775808
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %s, ptr align 8 %4, i64 12, i1 false)
; call core::ptr::drop_in_place<proc_macro2::imp::Ident>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Ident$GT$17h4af07ca6816db39cE"(ptr align 8 %self)
  ret void

bb2:                                              ; preds = %start
; invoke proc_macro2::imp::mismatch
  invoke void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %5 = load i64, ptr %self, align 8
  %6 = icmp eq i64 %5, -9223372036854775808
  %_4 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_4, 0
  br i1 %7, label %bb5, label %bb6

cleanup:                                          ; preds = %bb2
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb7

unreachable:                                      ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb6, %bb7
  %12 = load ptr, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16

bb6:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<proc_macro2::imp::Ident>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Ident$GT$17h4af07ca6816db39cE"(ptr align 8 %self) #25
          to label %bb5 unwind label %terminate

terminate:                                        ; preds = %bb6
  %17 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Ident as core::cmp::PartialEq>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN64_$LT$proc_macro2..imp..Ident$u20$as$u20$core..cmp..PartialEq$GT$2eq17h81c3dc7318a58271E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %o = alloca [8 x i8], align 8
  %t = alloca [8 x i8], align 8
  %_12 = alloca [24 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %_3, align 8
  %1 = getelementptr inbounds i8, ptr %_3, i64 8
  store ptr %other, ptr %1, align 8
  %_18 = load ptr, ptr %_3, align 8
  %2 = load i64, ptr %_18, align 8
  %3 = icmp eq i64 %2, -9223372036854775808
  %_6 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_6, 0
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_3, i64 8
  %_19 = load ptr, ptr %5, align 8
  %6 = load i64, ptr %_19, align 8
  %7 = icmp eq i64 %6, -9223372036854775808
  %_4 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_4, 0
  br i1 %8, label %bb4, label %bb1

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %_3, i64 8
  %_20 = load ptr, ptr %9, align 8
  %10 = load i64, ptr %_20, align 8
  %11 = icmp eq i64 %10, -9223372036854775808
  %_5 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_5, 1
  br i1 %12, label %bb9, label %bb1

bb4:                                              ; preds = %bb2
  %_21 = load ptr, ptr %_3, align 8
  %t1 = getelementptr inbounds i8, ptr %_21, i64 8
  %13 = getelementptr inbounds i8, ptr %_3, i64 8
  %_22 = load ptr, ptr %13, align 8
  %o2 = getelementptr inbounds i8, ptr %_22, i64 8
; call <proc_macro::Ident as alloc::string::ToString>::to_string
  call void @"_ZN61_$LT$proc_macro..Ident$u20$as$u20$alloc..string..ToString$GT$9to_string17haff01c3fc335f9b6E"(ptr sret([24 x i8]) align 8 %_10, ptr align 4 %t1)
; invoke <proc_macro::Ident as alloc::string::ToString>::to_string
  invoke void @"_ZN61_$LT$proc_macro..Ident$u20$as$u20$alloc..string..ToString$GT$9to_string17haff01c3fc335f9b6E"(ptr sret([24 x i8]) align 8 %_12, ptr align 4 %o2)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb3, %bb2
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
  unreachable

bb12:                                             ; preds = %bb11, %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_10) #25
          to label %bb13 unwind label %terminate

cleanup:                                          ; preds = %bb7, %bb4
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
  store ptr %15, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %16, ptr %17, align 8
  br label %bb12

bb6:                                              ; preds = %bb4
; invoke <alloc::string::String as core::cmp::PartialEq>::eq
  %18 = invoke zeroext i1 @"_ZN62_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$GT$2eq17hcec39d9a00334d4aE"(ptr align 8 %_10, ptr align 8 %_12)
          to label %bb7 unwind label %cleanup3

bb11:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_12) #25
          to label %bb12 unwind label %terminate

cleanup3:                                         ; preds = %bb6
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %0, align 8
  %22 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb11

bb7:                                              ; preds = %bb6
  %23 = zext i1 %18 to i8
  store i8 %23, ptr %_0, align 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_12)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_10)
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %24 = load i8, ptr %_0, align 1
  %25 = trunc i8 %24 to i1
  ret i1 %25

terminate:                                        ; preds = %bb12, %bb11
  %26 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = extractvalue { ptr, i32 } %26, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb13:                                             ; preds = %bb12
  %29 = load ptr, ptr %0, align 8
  %30 = getelementptr inbounds i8, ptr %0, i64 8
  %31 = load i32, ptr %30, align 8
  %32 = insertvalue { ptr, i32 } poison, ptr %29, 0
  %33 = insertvalue { ptr, i32 } %32, i32 %31, 1
  resume { ptr, i32 } %33

bb9:                                              ; preds = %bb3
  %_23 = load ptr, ptr %_3, align 8
  store ptr %_23, ptr %t, align 8
  %34 = getelementptr inbounds i8, ptr %_3, i64 8
  %_24 = load ptr, ptr %34, align 8
  store ptr %_24, ptr %o, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %35 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17ha6280410ce1c311fE"(ptr align 8 %t, ptr align 8 %o)
  %36 = zext i1 %35 to i8
  store i8 %36, ptr %_0, align 1
  br label %bb10

bb14:                                             ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Ident as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17ha91eaa74943398d6E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %t = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro::Ident as core::fmt::Display>::fmt
  %3 = call zeroext i1 @"_ZN56_$LT$proc_macro..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h2e22fccd4ae8fa6eE"(ptr align 4 %t, ptr align 8 %f)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
; call <proc_macro2::fallback::Ident as core::fmt::Display>::fmt
  %5 = call zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h48b8bf5759c640f8E"(ptr align 8 %self, ptr align 8 %f)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_0, align 1
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Ident as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN60_$LT$proc_macro2..imp..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h3fe3a376e32c6871E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %t = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro::Ident as core::fmt::Debug>::fmt
  %3 = call zeroext i1 @"_ZN54_$LT$proc_macro..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h8aab0c3abc9368b3E"(ptr align 4 %t, ptr align 8 %f)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
; call <proc_macro2::fallback::Ident as core::fmt::Debug>::fmt
  %5 = call zeroext i1 @"_ZN65_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h0d00290c31550ce4E"(ptr align 8 %self, ptr align 8 %f)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_0, align 1
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Literal::from_str_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal18from_str_unchecked17hac9b46a7a9135166E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %_6 = alloca [24 x i8], align 8
  %_4 = alloca [16 x i8], align 4
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE(), !unsafe_inst !4
  br i1 %_2, label %bb2, label %bb5, !unsafe_inst !4

bb5:                                              ; preds = %start
; call proc_macro2::fallback::Literal::from_str_unchecked
  call void @_ZN11proc_macro28fallback7Literal18from_str_unchecked17h1d7cbfa50d38894dE(ptr sret([24 x i8]) align 8 %_6, ptr align 1 %repr.0, i64 %repr.1), !unsafe_inst !4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 24, i1 false), !unsafe_inst !4
  br label %bb7, !unsafe_inst !4

bb2:                                              ; preds = %start
; call <proc_macro::Literal as core::str::traits::FromStr>::from_str
  call void @"_ZN66_$LT$proc_macro..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h09921aa42cc2ab48E"(ptr sret([16 x i8]) align 4 %_4, ptr align 1 %repr.0, i64 %repr.1), !unsafe_inst !4
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5b07cb8b95e79068E"(ptr sret([16 x i8]) align 4 %_3, ptr align 4 %_4, ptr align 1 @alloc_85f85a65aa8b036064a0f08f0d8d3d25, i64 15, ptr align 8 @alloc_52f8e9a7451d2437ef7d66289d7b7c08), !unsafe_inst !4
  %0 = getelementptr inbounds i8, ptr %_0, i64 8, !unsafe_inst !4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false), !unsafe_inst !4
  store i64 -9223372036854775808, ptr %_0, align 8, !unsafe_inst !4
  br label %bb7, !unsafe_inst !4

bb7:                                              ; preds = %bb2, %bb5
  ret void, !unsafe_inst !4
}

; proc_macro2::imp::Literal::f32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14f32_unsuffixed17h42ad0db62090a26aE(ptr sret([24 x i8]) align 8 %_0, float %f) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::f32_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14f32_unsuffixed17hf65ecd401cc4f18cE(ptr sret([24 x i8]) align 8 %_4, float %f)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::f32_unsuffixed
  call void @_ZN10proc_macro7Literal14f32_unsuffixed17h824d74e518d8cd11E(ptr sret([16 x i8]) align 4 %_3, float %f)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::f64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14f64_unsuffixed17h8b77b0f701265807E(ptr sret([24 x i8]) align 8 %_0, double %f) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::f64_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14f64_unsuffixed17h87e9bcbba91b7979E(ptr sret([24 x i8]) align 8 %_4, double %f)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::f64_unsuffixed
  call void @_ZN10proc_macro7Literal14f64_unsuffixed17hd35aa1a904a51e1cE(ptr sret([16 x i8]) align 4 %_3, double %f)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::string
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal6string17hc2ddfe151c7b51f4E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %t.0, i64 %t.1) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::string
  call void @_ZN11proc_macro28fallback7Literal6string17h29ed88ae1b5a2606E(ptr sret([24 x i8]) align 8 %_4, ptr align 1 %t.0, i64 %t.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::string
  call void @_ZN10proc_macro7Literal6string17h908632877cc2ecfaE(ptr sret([16 x i8]) align 4 %_3, ptr align 1 %t.0, i64 %t.1)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::character
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal9character17he2fb470cbd8cea5dE(ptr sret([24 x i8]) align 8 %_0, i32 %t) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::character
  call void @_ZN11proc_macro28fallback7Literal9character17h5c5922a90a8b4a7dE(ptr sret([24 x i8]) align 8 %_4, i32 %t)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::character
  call void @_ZN10proc_macro7Literal9character17hd8153ba6404aefbaE(ptr sret([16 x i8]) align 4 %_3, i32 %t)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::byte_string
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal11byte_string17h46e498636d3aa124E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %bytes.0, i64 %bytes.1) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::byte_string
  call void @_ZN11proc_macro28fallback7Literal11byte_string17h593101bac094d290E(ptr sret([24 x i8]) align 8 %_4, ptr align 1 %bytes.0, i64 %bytes.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::byte_string
  call void @_ZN10proc_macro7Literal11byte_string17h8285a211ddddb43cE(ptr sret([16 x i8]) align 4 %_3, ptr align 1 %bytes.0, i64 %bytes.1)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp7Literal4span17h71605162af67936dE(ptr align 8 %self) unnamed_addr #1 {
start:
  %_0 = alloca [4 x i8], align 4
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %lit = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro::Literal::span
  %_4 = call i32 @_ZN10proc_macro7Literal4span17hbc6c3e3b3fe5cba3E(ptr align 4 %lit)
  store i32 %_4, ptr %_0, align 4
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro2::fallback::Literal::span
  call void @_ZN11proc_macro28fallback7Literal4span17h7c1d87acfaec750bE(ptr align 8 %self)
  store i32 0, ptr %_0, align 4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  %3 = load i32, ptr %_0, align 4
  ret i32 %3

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Literal::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal8set_span17h8f65922311f9524aE(ptr align 8 %self, i32 %span) unnamed_addr #1 {
start:
  %_3 = alloca [16 x i8], align 8
  store ptr %self, ptr %_3, align 8
  %0 = getelementptr inbounds i8, ptr %_3, i64 8
  store i32 %span, ptr %0, align 8
  %_11 = load ptr, ptr %_3, align 8
  %1 = load i64, ptr %_11, align 8
  %2 = icmp eq i64 %1, -9223372036854775808
  %_6 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_6, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 0
  %_4 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_4, 0
  br i1 %7, label %bb4, label %bb1

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_3, i64 8
  %9 = load i32, ptr %8, align 8
  %10 = icmp eq i32 %9, 0
  %_5 = select i1 %10, i64 1, i64 0
  %11 = icmp eq i64 %_5, 1
  br i1 %11, label %bb5, label %bb1

bb4:                                              ; preds = %bb2
  %_12 = load ptr, ptr %_3, align 8
  %lit = getelementptr inbounds i8, ptr %_12, i64 8
  %12 = getelementptr inbounds i8, ptr %_3, i64 8
  %s = load i32, ptr %12, align 8
; call proc_macro::Literal::set_span
  call void @_ZN10proc_macro7Literal8set_span17he2b522ddd4efc2d2E(ptr align 4 %lit, i32 %s)
  br label %bb6

bb1:                                              ; preds = %bb3, %bb2
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
  unreachable

bb6:                                              ; preds = %bb5, %bb4
  ret void

bb5:                                              ; preds = %bb3
  %_13 = load ptr, ptr %_3, align 8
; call proc_macro2::fallback::Literal::set_span
  call void @_ZN11proc_macro28fallback7Literal8set_span17hf81e3e13bc5c9099E(ptr align 8 %_13)
  br label %bb6

bb7:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Literal::unwrap_nightly
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14unwrap_nightly17he2d392f3a11eb2e0E(ptr sret([16 x i8]) align 4 %s, ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %1 = load i64, ptr %self, align 8
  %2 = icmp eq i64 %1, -9223372036854775808
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %s, ptr align 8 %4, i64 16, i1 false)
; call core::ptr::drop_in_place<proc_macro2::imp::Literal>
  call void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17hf6d171391c72d161E"(ptr align 8 %self)
  ret void

bb2:                                              ; preds = %start
; invoke proc_macro2::imp::mismatch
  invoke void @_ZN11proc_macro23imp8mismatch17h117ba72c47e8fb4aE() #24
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %5 = load i64, ptr %self, align 8
  %6 = icmp eq i64 %5, -9223372036854775808
  %_4 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_4, 0
  br i1 %7, label %bb5, label %bb6

cleanup:                                          ; preds = %bb2
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb7

unreachable:                                      ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb6, %bb7
  %12 = load ptr, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16

bb6:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<proc_macro2::imp::Literal>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17hf6d171391c72d161E"(ptr align 8 %self) #25
          to label %bb5 unwind label %terminate

terminate:                                        ; preds = %bb6
  %17 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Literal as core::convert::From<proc_macro2::fallback::Literal>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN103_$LT$proc_macro2..imp..Literal$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Literal$GT$$GT$4from17h0d20b9606dc4a815E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %s) unnamed_addr #1 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %s, i64 24, i1 false)
  ret void
}

; <proc_macro2::imp::Literal as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN72_$LT$proc_macro2..imp..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hcba01aed1f4ad8fcE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %_12 = alloca [24 x i8], align 8
  %literal1 = alloca [24 x i8], align 8
  %_9 = alloca [24 x i8], align 8
  %_8 = alloca [24 x i8], align 8
  %_7 = alloca [24 x i8], align 8
  %literal = alloca [16 x i8], align 4
  %_4 = alloca [16 x i8], align 4
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb8

bb8:                                              ; preds = %start
; call <proc_macro2::fallback::Literal as core::str::traits::FromStr>::from_str
  call void @"_ZN77_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hf904c0e57980e16bE"(ptr sret([24 x i8]) align 8 %_9, ptr align 1 %repr.0, i64 %repr.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hce08ccdab6c0774aE"(ptr sret([24 x i8]) align 8 %_8, ptr align 8 %_9)
  %0 = load i64, ptr %_8, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_10 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_10, 0
  br i1 %2, label %bb11, label %bb12

bb2:                                              ; preds = %start
; call <proc_macro::Literal as core::str::traits::FromStr>::from_str
  call void @"_ZN66_$LT$proc_macro..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h09921aa42cc2ab48E"(ptr sret([16 x i8]) align 4 %_4, ptr align 1 %repr.0, i64 %repr.1)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5872f7ff539b3c2fE"(ptr sret([16 x i8]) align 4 %_3, ptr align 4 %_4)
  %3 = getelementptr inbounds i8, ptr %_3, i64 12
  %4 = load i8, ptr %3, align 4
  %5 = icmp eq i8 %4, 11
  %_5 = select i1 %5, i64 1, i64 0
  %6 = icmp eq i64 %_5, 0
  br i1 %6, label %bb6, label %bb7

bb11:                                             ; preds = %bb8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %literal1, ptr align 8 %_8, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %literal1, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_12, i64 24, i1 false)
  br label %bb13

bb12:                                             ; preds = %bb8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d73f080cb255475E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 @alloc_349d3d0902daedd2f8a07c8b1672d51e)
  br label %bb13

bb13:                                             ; preds = %bb7, %bb6, %bb12, %bb11
  ret void

bb6:                                              ; preds = %bb2
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %literal, ptr align 4 %_3, i64 16, i1 false)
  %7 = getelementptr inbounds i8, ptr %_7, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 4 %literal, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_7, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_7, i64 24, i1 false)
  br label %bb13

bb7:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h037afafb9c694217E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 @alloc_d6ac3a456a3e93b685e12b5b12a5db95)
  br label %bb13

bb5:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Literal as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN64_$LT$proc_macro2..imp..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hd582d9ce55aaf9e9E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %t = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro::Literal as core::fmt::Display>::fmt
  %3 = call zeroext i1 @"_ZN58_$LT$proc_macro..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17h757b42c54d3c9fe7E"(ptr align 4 %t, ptr align 8 %f)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
; call <proc_macro2::fallback::Literal as core::fmt::Display>::fmt
  %5 = call zeroext i1 @"_ZN69_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hcc44b6750db679d5E"(ptr align 8 %self, ptr align 8 %f)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_0, align 1
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Literal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h8829b14d94206b79E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %t = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro::Literal as core::fmt::Debug>::fmt
  %3 = call zeroext i1 @"_ZN56_$LT$proc_macro..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h450520b5a46fc99dE"(ptr align 4 %t, ptr align 8 %f)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
; call <proc_macro2::fallback::Literal as core::fmt::Debug>::fmt
  %5 = call zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h26b27b6abad6caceE"(ptr align 8 %self, ptr align 8 %f)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_0, align 1
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::TokenStream::_new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro211TokenStream4_new17had8907055f7022f9E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %inner) unnamed_addr #1 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %inner, i64 32, i1 false)
  ret void
}

; proc_macro2::TokenStream::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro211TokenStream3new17ha2ba5d4219206492E(ptr sret([32 x i8]) align 8 %_0) unnamed_addr #1 {
start:
  %_1 = alloca [32 x i8], align 8
; call proc_macro2::imp::TokenStream::new
  call void @_ZN11proc_macro23imp11TokenStream3new17h13cc9e115f6530e4E(ptr sret([32 x i8]) align 8 %_1)
; call proc_macro2::TokenStream::_new
  call void @_ZN11proc_macro211TokenStream4_new17had8907055f7022f9E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_1)
  ret void
}

; proc_macro2::TokenStream::is_empty
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN11proc_macro211TokenStream8is_empty17h8b5e4e0e3a486b86E(ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::imp::TokenStream::is_empty
  %_0 = call zeroext i1 @_ZN11proc_macro23imp11TokenStream8is_empty17h41a6ba793e0b60e3E(ptr align 8 %self)
  ret i1 %_0
}

; <proc_macro2::TokenStream as core::default::Default>::default
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$proc_macro2..TokenStream$u20$as$u20$core..default..Default$GT$7default17hd77ad74f6ede366eE"(ptr sret([32 x i8]) align 8 %_0) unnamed_addr #1 {
start:
; call proc_macro2::TokenStream::new
  call void @_ZN11proc_macro211TokenStream3new17ha2ba5d4219206492E(ptr sret([32 x i8]) align 8 %_0)
  ret void
}

; <proc_macro2::TokenStream as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN71_$LT$proc_macro2..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h6898aecb39b77bc5E"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %src.0, i64 %src.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_11 = alloca [1 x i8], align 1
  %_10 = alloca [32 x i8], align 8
  %_9 = alloca [32 x i8], align 8
  %val = alloca [32 x i8], align 8
  %_5 = alloca [32 x i8], align 8
  %_4 = alloca [32 x i8], align 8
  %_3 = alloca [32 x i8], align 8
  %e = alloca [32 x i8], align 8
  store i8 0, ptr %_11, align 1
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hc1998dc0ca28c7fcE"(ptr sret([32 x i8]) align 8 %_5, ptr align 1 %src.0, i64 %src.1)
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha7570834730c3e9cE"(ptr sret([32 x i8]) align 8 %_4, ptr align 8 %_5)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h09e4f02dfbf98bd4E"(ptr sret([32 x i8]) align 8 %_3, ptr align 8 %_4)
  %1 = load i64, ptr %_3, align 8
  %2 = icmp eq i64 %1, -9223372036854775807
  %_6 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_6, 0
  br i1 %3, label %bb5, label %bb6

bb5:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_3, i64 32, i1 false)
  store i8 1, ptr %_11, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %val, i64 32, i1 false)
  store i8 0, ptr %_11, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_10, ptr align 8 %e, i64 32, i1 false)
; invoke proc_macro2::TokenStream::_new
  invoke void @_ZN11proc_macro211TokenStream4_new17had8907055f7022f9E(ptr sret([32 x i8]) align 8 %_9, ptr align 8 %_10)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  %5 = load i8, ptr %4, align 8
  %residual = trunc i8 %5 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h46e793a2663f8ecdE"(ptr sret([32 x i8]) align 8 %_0, i1 zeroext %residual, ptr align 8 @alloc_01616bba73a132287d1b443e5cf56679)
  store i8 0, ptr %_11, align 1
  br label %bb9

bb12:                                             ; preds = %cleanup
  %6 = load i8, ptr %_11, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb11, label %bb10

cleanup:                                          ; preds = %bb5
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb12

bb8:                                              ; preds = %bb5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 32, i1 false)
  store i8 0, ptr %_11, align 1
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
  ret void

bb10:                                             ; preds = %bb11, %bb12
  %12 = load ptr, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16

bb11:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h5011ab6d6a88b5efE"(ptr align 8 %e) #25
          to label %bb10 unwind label %terminate

terminate:                                        ; preds = %bb11
  %17 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::TokenStream as core::str::traits::FromStr>::from_str::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN71_$LT$proc_macro2..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17h8c9aabf99acb282fE"(i1 zeroext %e) unnamed_addr #0 {
start:
  ret i1 %e
}

; <proc_macro2::TokenStream as core::convert::From<proc_macro::TokenStream>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN95_$LT$proc_macro2..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenStream$GT$$GT$4from17h52360c82045319fbE"(ptr sret([32 x i8]) align 8 %_0, i32 %inner) unnamed_addr #1 {
start:
  %_2 = alloca [32 x i8], align 8
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h67c923807b7299a2E"(ptr sret([32 x i8]) align 8 %_2, i32 %inner, ptr align 8 @alloc_1dd067137d2ae3739c101121a83a2ce3)
; call proc_macro2::TokenStream::_new
  call void @_ZN11proc_macro211TokenStream4_new17had8907055f7022f9E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::<impl core::convert::From<proc_macro2::TokenStream> for proc_macro::TokenStream>::from
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN11proc_macro2105_$LT$impl$u20$core..convert..From$LT$proc_macro2..TokenStream$GT$$u20$for$u20$proc_macro..TokenStream$GT$4from17hcd04f3b4766bab36E"(ptr align 8 %inner) unnamed_addr #1 {
start:
  %_2 = alloca [32 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %inner, i64 32, i1 false)
; call <T as core::convert::Into<U>>::into
  %_0 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hece9a510c64871bbE"(ptr align 8 %_2, ptr align 8 @alloc_64442ae03bbb0ea447d74bca42ae987d)
  ret i32 %_0
}

; <proc_macro2::TokenStream as core::convert::From<proc_macro2::TokenTree>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN94_$LT$proc_macro2..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..TokenTree$GT$$GT$4from17ha62214b3bf64b1b2E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %token) unnamed_addr #1 {
start:
  %_2 = alloca [32 x i8], align 8
; call <proc_macro2::imp::TokenStream as core::convert::From<proc_macro2::TokenTree>>::from
  call void @"_ZN99_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..TokenTree$GT$$GT$4from17hd7e3365f9f8bbf51E"(ptr sret([32 x i8]) align 8 %_2, ptr align 8 %token)
; call proc_macro2::TokenStream::_new
  call void @_ZN11proc_macro211TokenStream4_new17had8907055f7022f9E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; <proc_macro2::TokenStream as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN63_$LT$proc_macro2..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h42d9d3220bb7adabE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::TokenStream as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN68_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h3e8bbd5c1ed00b48E"(ptr align 8 %self, ptr align 8 %f)
  ret i1 %_0
}

; <proc_macro2::TokenStream as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN61_$LT$proc_macro2..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17h471cc636d1f8f3d4E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::TokenStream as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN66_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17h2ea5e6d28bb21c0fE"(ptr align 8 %self, ptr align 8 %f)
  ret i1 %_0
}

; proc_macro2::LexError::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro28LexError4span17h414af96a8d8243b5E(ptr align 1 %self) unnamed_addr #1 {
start:
; call proc_macro2::imp::LexError::span
  %_2 = call i32 @_ZN11proc_macro23imp8LexError4span17hc153e7f10da71f2dE(ptr align 1 %self)
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %_2)
  ret i32 %_0
}

; <proc_macro2::LexError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN58_$LT$proc_macro2..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17habf028a2c9fd9c64E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::LexError as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN63_$LT$proc_macro2..imp..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17h8daa750e0d90468eE"(ptr align 1 %self, ptr align 8 %f)
  ret i1 %_0
}

; <proc_macro2::LexError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN60_$LT$proc_macro2..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17haf5fb67794eb0b25E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::LexError as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN65_$LT$proc_macro2..imp..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h8e35ee52587d7b72E"(ptr align 1 %self, ptr align 8 %f)
  ret i1 %_0
}

; proc_macro2::Span::_new
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %inner) unnamed_addr #1 {
start:
  ret i32 %inner
}

; proc_macro2::Span::_new_fallback
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro24Span13_new_fallback17he901ad9d50a5f2cbE() unnamed_addr #1 {
start:
; call <T as core::convert::Into<U>>::into
  %_2 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hff8b3ed0091000a4E"(ptr align 8 @alloc_1350894a24d20d4f82d28f8389c28967)
  ret i32 %_2
}

; proc_macro2::Span::call_site
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span9call_site17h1ba7a215c67b4d26E() unnamed_addr #1 {
start:
; call proc_macro2::imp::Span::call_site
  %_1 = call i32 @_ZN11proc_macro23imp4Span9call_site17h057e80d35c71a994E()
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %_1)
  ret i32 %_0
}

; proc_macro2::Span::mixed_site
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span10mixed_site17h9df5ce7e7bf491f6E() unnamed_addr #1 {
start:
; call proc_macro2::imp::Span::mixed_site
  %_1 = call i32 @_ZN11proc_macro23imp4Span10mixed_site17h634481c6828f734aE()
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %_1)
  ret i32 %_0
}

; proc_macro2::Span::resolved_at
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span11resolved_at17h42a4609e313d47e0E(ptr align 4 %self, i32 %other) unnamed_addr #1 {
start:
; call proc_macro2::imp::Span::resolved_at
  %_3 = call i32 @_ZN11proc_macro23imp4Span11resolved_at17h24f70a965778cb0eE(ptr align 4 %self, i32 %other)
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %_3)
  ret i32 %_0
}

; proc_macro2::Span::located_at
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span10located_at17h982e8b4adeb68a00E(ptr align 4 %self, i32 %other) unnamed_addr #1 {
start:
; call proc_macro2::imp::Span::located_at
  %_3 = call i32 @_ZN11proc_macro23imp4Span10located_at17h20e7fadf2f35679cE(ptr align 4 %self, i32 %other)
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %_3)
  ret i32 %_0
}

; proc_macro2::Span::unwrap
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span6unwrap17h45cc67cc0236cb30E(i32 %self) unnamed_addr #1 {
start:
; call proc_macro2::imp::Span::unwrap
  %_0 = call i32 @_ZN11proc_macro23imp4Span6unwrap17h835ea4e41de2e63aE(i32 %self)
  ret i32 %_0
}

; proc_macro2::Span::unstable
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span8unstable17h0a3a0294ec71c93bE(i32 %self) unnamed_addr #1 {
start:
; call proc_macro2::Span::unwrap
  %_0 = call i32 @_ZN11proc_macro24Span6unwrap17h45cc67cc0236cb30E(i32 %self)
  ret i32 %_0
}

; proc_macro2::Span::join
; Function Attrs: nonlazybind uwtable
define { i32, i32 } @_ZN11proc_macro24Span4join17hd926aa6b540c3fcfE(ptr align 4 %self, i32 %other) unnamed_addr #1 {
start:
; call proc_macro2::imp::Span::join
  %0 = call { i32, i32 } @_ZN11proc_macro23imp4Span4join17hf38e907bf4fb26d4E(ptr align 4 %self, i32 %other)
  %_3.0 = extractvalue { i32, i32 } %0, 0
  %_3.1 = extractvalue { i32, i32 } %0, 1
; call core::option::Option<T>::map
  %1 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17h72fac4cf7b2d6d4cE"(i32 %_3.0, i32 %_3.1)
  %_0.0 = extractvalue { i32, i32 } %1, 0
  %_0.1 = extractvalue { i32, i32 } %1, 1
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1
  ret { i32, i32 } %3
}

; proc_macro2::Span::source_text
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro24Span11source_text17hd823f5c92e23e43bE(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %self) unnamed_addr #1 {
start:
; call proc_macro2::imp::Span::source_text
  call void @_ZN11proc_macro23imp4Span11source_text17h44210f3d7903cedeE(ptr sret([24 x i8]) align 8 %_0, ptr align 4 %self)
  ret void
}

; <proc_macro2::Span as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN54_$LT$proc_macro2..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h41043bcfb486c3a9E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::Span as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN59_$LT$proc_macro2..imp..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h169ed6c89d15e417E"(ptr align 4 %self, ptr align 8 %f)
  ret i1 %_0
}

; proc_macro2::TokenTree::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro29TokenTree4span17h80bbba66f4d6e147E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_0 = alloca [4 x i8], align 4
  %0 = load i64, ptr %self, align 8
  %1 = sub i64 %0, -9223372036854775807
  %2 = icmp ule i64 %1, 3
  %_2 = select i1 %2, i64 %1, i64 1
  switch i64 %_2, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %t = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::Group::span
  %3 = call i32 @_ZN11proc_macro25Group4span17h48f000b72f317406E(ptr align 8 %t)
  store i32 %3, ptr %_0, align 4
  br label %bb6

bb4:                                              ; preds = %start
; call proc_macro2::Ident::span
  %4 = call i32 @_ZN11proc_macro25Ident4span17h9b820ce410c8419fE(ptr align 8 %self)
  store i32 %4, ptr %_0, align 4
  br label %bb6

bb5:                                              ; preds = %start
  %t1 = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::Punct::span
  %5 = call i32 @_ZN11proc_macro25Punct4span17h56367fbae4c6a138E(ptr align 4 %t1)
  store i32 %5, ptr %_0, align 4
  br label %bb6

bb2:                                              ; preds = %start
  %t2 = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::Literal::span
  %6 = call i32 @_ZN11proc_macro27Literal4span17h072ea201a23ead9dE(ptr align 8 %t2)
  store i32 %6, ptr %_0, align 4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5, %bb4, %bb3
  %7 = load i32, ptr %_0, align 4
  ret i32 %7
}

; proc_macro2::TokenTree::set_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro29TokenTree8set_span17hc1a2971f338cd3d9E(ptr align 8 %self, i32 %span) unnamed_addr #1 {
start:
  %0 = load i64, ptr %self, align 8
  %1 = sub i64 %0, -9223372036854775807
  %2 = icmp ule i64 %1, 3
  %_3 = select i1 %2, i64 %1, i64 1
  switch i64 %_3, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %t = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::Group::set_span
  call void @_ZN11proc_macro25Group8set_span17h3ef2e5da90d43689E(ptr align 8 %t, i32 %span)
  br label %bb6

bb4:                                              ; preds = %start
; call proc_macro2::Ident::set_span
  call void @_ZN11proc_macro25Ident8set_span17h7d3c245667ef436fE(ptr align 8 %self, i32 %span)
  br label %bb6

bb5:                                              ; preds = %start
  %t1 = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::Punct::set_span
  call void @_ZN11proc_macro25Punct8set_span17h7328f643f9d1a1c9E(ptr align 4 %t1, i32 %span)
  br label %bb6

bb2:                                              ; preds = %start
  %t2 = getelementptr inbounds i8, ptr %self, i64 8
; call proc_macro2::Literal::set_span
  call void @_ZN11proc_macro27Literal8set_span17hc859972bfada075bE(ptr align 8 %t2, i32 %span)
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5, %bb4, %bb3
  ret void
}

; <proc_macro2::TokenTree as core::convert::From<proc_macro2::Group>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Group$GT$$GT$4from17hf87ba91a17ac4bdbE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %g) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %g, i64 24, i1 false)
  store i64 -9223372036854775807, ptr %_0, align 8
  ret void
}

; <proc_macro2::TokenTree as core::convert::From<proc_macro2::Ident>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Ident$GT$$GT$4from17h80423640899c5385E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %g) unnamed_addr #1 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %g, i64 32, i1 false)
  ret void
}

; <proc_macro2::TokenTree as core::convert::From<proc_macro2::Punct>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Punct$GT$$GT$4from17hfb89851df0e60f42E"(ptr sret([32 x i8]) align 8 %_0, ptr align 4 %g) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %g, i64 12, i1 false)
  store i64 -9223372036854775805, ptr %_0, align 8
  ret void
}

; <proc_macro2::TokenTree as core::convert::From<proc_macro2::Literal>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN90_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Literal$GT$$GT$4from17h3c6186e4c97f07acE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %g) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %g, i64 24, i1 false)
  store i64 -9223372036854775804, ptr %_0, align 8
  ret void
}

; <proc_macro2::TokenTree as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN61_$LT$proc_macro2..TokenTree$u20$as$u20$core..fmt..Display$GT$3fmt17h91c0a7ccaa267ba8E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
  %0 = load i64, ptr %self, align 8
  %1 = sub i64 %0, -9223372036854775807
  %2 = icmp ule i64 %1, 3
  %_3 = select i1 %2, i64 %1, i64 1
  switch i64 %_3, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %t = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Group as core::fmt::Display>::fmt
  %3 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Group$u20$as$u20$core..fmt..Display$GT$3fmt17hbe716640c237ceb4E"(ptr align 8 %t, ptr align 8 %f)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb6

bb4:                                              ; preds = %start
; call <proc_macro2::Ident as core::fmt::Display>::fmt
  %5 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h13ab6285103b9791E"(ptr align 8 %self, ptr align 8 %f)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb6

bb5:                                              ; preds = %start
  %t1 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Punct as core::fmt::Display>::fmt
  %7 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Punct$u20$as$u20$core..fmt..Display$GT$3fmt17hb0d2d08d2070d15eE"(ptr align 4 %t1, ptr align 8 %f)
  %8 = zext i1 %7 to i8
  store i8 %8, ptr %_0, align 1
  br label %bb6

bb2:                                              ; preds = %start
  %t2 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Literal as core::fmt::Display>::fmt
  %9 = call zeroext i1 @"_ZN59_$LT$proc_macro2..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hcf206e7165e5e25aE"(ptr align 8 %t2, ptr align 8 %f)
  %10 = zext i1 %9 to i8
  store i8 %10, ptr %_0, align 1
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5, %bb4, %bb3
  %11 = load i8, ptr %_0, align 1
  %12 = trunc i8 %11 to i1
  ret i1 %12
}

; <proc_macro2::TokenTree as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN59_$LT$proc_macro2..TokenTree$u20$as$u20$core..fmt..Debug$GT$3fmt17hdea1a3ae1a4c5ca2E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_16 = alloca [16 x i8], align 8
  %_15 = alloca [16 x i8], align 8
  %_13 = alloca [48 x i8], align 8
  %debug = alloca [16 x i8], align 8
  %t = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  %0 = load i64, ptr %self, align 8
  %1 = sub i64 %0, -9223372036854775807
  %2 = icmp ule i64 %1, 3
  %_3 = select i1 %2, i64 %1, i64 1
  switch i64 %_3, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb11
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %t1 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Group as core::fmt::Debug>::fmt
  %3 = call zeroext i1 @"_ZN55_$LT$proc_macro2..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17hd433e7aa149fd90fE"(ptr align 8 %t1, ptr align 8 %f)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb12

bb4:                                              ; preds = %start
  store ptr %self, ptr %t, align 8
; call core::fmt::Formatter::debug_struct
  call void @_ZN4core3fmt9Formatter12debug_struct17hfe55f8660bb7c366E(ptr sret([16 x i8]) align 8 %debug, ptr align 8 %f, ptr align 1 @alloc_2dbfdc2e58db4d4910923c307a6e38ca, i64 5)
  store ptr %t, ptr %_3.i, align 8
  %5 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h712de8ab85f6cdf4E", ptr %5, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_16, ptr align 8 %_3.i, i64 16, i1 false)
  %6 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_15, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %_16, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hdeca39192332b7e4E(ptr sret([48 x i8]) align 8 %_13, ptr align 8 @alloc_b99730e73100e73a81f4fbfe74b3821d, ptr align 8 %_15)
; call core::fmt::builders::DebugStruct::field
  %_8 = call align 8 ptr @_ZN4core3fmt8builders11DebugStruct5field17ha9e91e16904b9623E(ptr align 8 %debug, ptr align 1 @alloc_37d55b91621ff632e7c33748e32b9616, i64 3, ptr align 1 %_13, ptr align 8 @vtable.d)
  %7 = load ptr, ptr %t, align 8
; call proc_macro2::Ident::span
  %_21 = call i32 @_ZN11proc_macro25Ident4span17h9b820ce410c8419fE(ptr align 8 %7)
; call proc_macro2::imp::debug_span_field_if_nontrivial
  call void @_ZN11proc_macro23imp30debug_span_field_if_nontrivial17h110257606f7564c4E(ptr align 8 %debug, i32 %_21)
; call core::fmt::builders::DebugStruct::finish
  %8 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hfe9f97b163d30fe5E(ptr align 8 %debug)
  %9 = zext i1 %8 to i8
  store i8 %9, ptr %_0, align 1
  br label %bb12

bb11:                                             ; preds = %start
  %t2 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Punct as core::fmt::Debug>::fmt
  %10 = call zeroext i1 @"_ZN55_$LT$proc_macro2..Punct$u20$as$u20$core..fmt..Debug$GT$3fmt17h2060746bab4e858bE"(ptr align 4 %t2, ptr align 8 %f)
  %11 = zext i1 %10 to i8
  store i8 %11, ptr %_0, align 1
  br label %bb12

bb2:                                              ; preds = %start
  %t3 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Literal as core::fmt::Debug>::fmt
  %12 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h070d359e73f7edc6E"(ptr align 8 %t3, ptr align 8 %f)
  %13 = zext i1 %12 to i8
  store i8 %13, ptr %_0, align 1
  br label %bb12

bb12:                                             ; preds = %bb2, %bb11, %bb4, %bb3
  %14 = load i8, ptr %_0, align 1
  %15 = trunc i8 %14 to i1
  ret i1 %15
}

; proc_macro2::Group::_new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25Group4_new17h2c010eceb5ddefdcE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %inner) unnamed_addr #1 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %inner, i64 24, i1 false)
  ret void
}

; proc_macro2::Group::_new_fallback
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25Group13_new_fallback17h7782fbdef2d1abf8E(ptr sret([24 x i8]) align 8 %_0, ptr %inner.0, i8 %inner.1) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h0c1330c807aa00e9E"(ptr sret([24 x i8]) align 8 %_2, ptr %inner.0, i8 %inner.1, ptr align 8 @alloc_987ee3fd87498fd3c36cc2e311f5302a)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void
}

; proc_macro2::Group::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Group3new17hf62b751db56d0f38E(ptr sret([24 x i8]) align 8 %_0, i8 %delimiter, ptr align 8 %stream) unnamed_addr #1 {
start:
  %_4 = alloca [32 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %stream, i64 32, i1 false)
; call proc_macro2::imp::Group::new
  call void @_ZN11proc_macro23imp5Group3new17h83551775930f6247E(ptr sret([24 x i8]) align 8 %_3, i8 %delimiter, ptr align 8 %_4)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 24, i1 false)
  ret void
}

; proc_macro2::Group::delimiter
; Function Attrs: nonlazybind uwtable
define i8 @_ZN11proc_macro25Group9delimiter17hd06a49825fb17467E(ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::imp::Group::delimiter
  %_0 = call i8 @_ZN11proc_macro23imp5Group9delimiter17h6181784402a5aef2E(ptr align 8 %self)
  ret i8 %_0
}

; proc_macro2::Group::stream
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Group6stream17h6b460b5ecde1cf4bE(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca [32 x i8], align 8
; call proc_macro2::imp::Group::stream
  call void @_ZN11proc_macro23imp5Group6stream17hb24744c7059c1606E(ptr sret([32 x i8]) align 8 %_2, ptr align 8 %self)
; call proc_macro2::TokenStream::_new
  call void @_ZN11proc_macro211TokenStream4_new17had8907055f7022f9E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Group::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Group4span17h48f000b72f317406E(ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::imp::Group::span
  %_2 = call i32 @_ZN11proc_macro23imp5Group4span17h7d6d1914cec46ef6E(ptr align 8 %self)
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %_2)
  ret i32 %_0
}

; proc_macro2::Group::span_open
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Group9span_open17h234419d34f2beb3aE(ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::imp::Group::span_open
  %_2 = call i32 @_ZN11proc_macro23imp5Group9span_open17h460257d965052103E(ptr align 8 %self)
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %_2)
  ret i32 %_0
}

; proc_macro2::Group::span_close
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Group10span_close17ha3dc98f29927fa2eE(ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::imp::Group::span_close
  %_2 = call i32 @_ZN11proc_macro23imp5Group10span_close17h75bb6154192180a9E(ptr align 8 %self)
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %_2)
  ret i32 %_0
}

; proc_macro2::Group::delim_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Group10delim_span17h83a4bd98c3a35e9dE(ptr sret([12 x i8]) align 4 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::extra::DelimSpan::new
  call void @_ZN11proc_macro25extra9DelimSpan3new17hba68fd7444d8d92fE(ptr sret([12 x i8]) align 4 %_0, ptr align 8 %self)
  ret void
}

; proc_macro2::Group::set_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Group8set_span17h3ef2e5da90d43689E(ptr align 8 %self, i32 %span) unnamed_addr #1 {
start:
; call proc_macro2::imp::Group::set_span
  call void @_ZN11proc_macro23imp5Group8set_span17hb9e46b886f302649E(ptr align 8 %self, i32 %span)
  ret void
}

; <proc_macro2::Group as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN57_$LT$proc_macro2..Group$u20$as$u20$core..fmt..Display$GT$3fmt17hbe716640c237ceb4E"(ptr align 8 %self, ptr align 8 %formatter) unnamed_addr #1 {
start:
; call <proc_macro2::imp::Group as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Group$u20$as$u20$core..fmt..Display$GT$3fmt17h6f645d28fbe0a7beE"(ptr align 8 %self, ptr align 8 %formatter)
  ret i1 %_0
}

; <proc_macro2::Group as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN55_$LT$proc_macro2..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17hd433e7aa149fd90fE"(ptr align 8 %self, ptr align 8 %formatter) unnamed_addr #1 {
start:
; call <proc_macro2::imp::Group as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN60_$LT$proc_macro2..imp..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17he206f35577dac671E"(ptr align 8 %self, ptr align 8 %formatter)
  ret i1 %_0
}

; proc_macro2::Punct::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Punct3new17h7971e0a4c6081f92E(ptr sret([12 x i8]) align 4 %_0, i32 %ch, i1 zeroext %spacing) unnamed_addr #1 {
start:
; call proc_macro2::Span::call_site
  %_3 = call i32 @_ZN11proc_macro24Span9call_site17h1ba7a215c67b4d26E()
  store i32 %ch, ptr %_0, align 4
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  %1 = zext i1 %spacing to i8
  store i8 %1, ptr %0, align 4
  %2 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_3, ptr %2, align 4
  ret void
}

; proc_macro2::Punct::as_char
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Punct7as_char17h7391a996988c0b48E(ptr align 4 %self) unnamed_addr #1 {
start:
  %_0 = load i32, ptr %self, align 4
  ret i32 %_0
}

; proc_macro2::Punct::spacing
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN11proc_macro25Punct7spacing17hbf7907f0be3b091bE(ptr align 4 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %1 = load i8, ptr %0, align 4
  %_0 = trunc i8 %1 to i1
  ret i1 %_0
}

; proc_macro2::Punct::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Punct4span17h56367fbae4c6a138E(ptr align 4 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 4
  %_0 = load i32, ptr %0, align 4
  ret i32 %_0
}

; proc_macro2::Punct::set_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Punct8set_span17h7328f643f9d1a1c9E(ptr align 4 %self, i32 %span) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 4
  store i32 %span, ptr %0, align 4
  ret void
}

; <proc_macro2::Punct as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN57_$LT$proc_macro2..Punct$u20$as$u20$core..fmt..Display$GT$3fmt17hb0d2d08d2070d15eE"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <char as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17haf1d6f8ea1385e84E"(ptr align 4 %self, ptr align 8 %f)
  ret i1 %_0
}

; <proc_macro2::Punct as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN55_$LT$proc_macro2..Punct$u20$as$u20$core..fmt..Debug$GT$3fmt17h2060746bab4e858bE"(ptr align 4 %self, ptr align 8 %fmt) unnamed_addr #1 {
start:
  %debug = alloca [16 x i8], align 8
; call core::fmt::Formatter::debug_struct
  call void @_ZN4core3fmt9Formatter12debug_struct17hfe55f8660bb7c366E(ptr sret([16 x i8]) align 8 %debug, ptr align 8 %fmt, ptr align 1 @alloc_330d63602223408d89df37fc81986e6c, i64 5)
; call core::fmt::builders::DebugStruct::field
  %_5 = call align 8 ptr @_ZN4core3fmt8builders11DebugStruct5field17ha9e91e16904b9623E(ptr align 8 %debug, ptr align 1 @alloc_9b5c8091e3b549959da5ff7ce59718f9, i64 4, ptr align 1 %self, ptr align 8 @vtable.f)
  %_14 = getelementptr inbounds i8, ptr %self, i64 8
; call core::fmt::builders::DebugStruct::field
  %_10 = call align 8 ptr @_ZN4core3fmt8builders11DebugStruct5field17ha9e91e16904b9623E(ptr align 8 %debug, ptr align 1 @alloc_033337e827ce54b74ba409e6d0ed4279, i64 7, ptr align 1 %_14, ptr align 8 @vtable.g)
  %0 = getelementptr inbounds i8, ptr %self, i64 4
  %_17 = load i32, ptr %0, align 4
; call proc_macro2::imp::debug_span_field_if_nontrivial
  call void @_ZN11proc_macro23imp30debug_span_field_if_nontrivial17h110257606f7564c4E(ptr align 8 %debug, i32 %_17)
; call core::fmt::builders::DebugStruct::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hfe9f97b163d30fe5E(ptr align 8 %debug)
  ret i1 %_0
}

; proc_macro2::Ident::_new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25Ident4_new17h34aafdfc73320843E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %inner) unnamed_addr #1 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %inner, i64 32, i1 false)
  ret void
}

; proc_macro2::Ident::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Ident3new17hcad50748d6eab35fE(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1, i32 %span, ptr align 8 %0) unnamed_addr #1 {
start:
  %_3 = alloca [32 x i8], align 8
; call proc_macro2::imp::Ident::new_checked
  call void @_ZN11proc_macro23imp5Ident11new_checked17hbebf3c6cef25bc93E(ptr sret([32 x i8]) align 8 %_3, ptr align 1 %string.0, i64 %string.1, i32 %span, ptr align 8 %0)
; call proc_macro2::Ident::_new
  call void @_ZN11proc_macro25Ident4_new17h34aafdfc73320843E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_3)
  ret void
}

; proc_macro2::Ident::new_raw
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Ident7new_raw17h9897de2ba88a967dE(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1, i32 %span, ptr align 8 %0) unnamed_addr #1 {
start:
  %_3 = alloca [32 x i8], align 8
; call proc_macro2::imp::Ident::new_raw_checked
  call void @_ZN11proc_macro23imp5Ident15new_raw_checked17hdeb16ecb778712f4E(ptr sret([32 x i8]) align 8 %_3, ptr align 1 %string.0, i64 %string.1, i32 %span, ptr align 8 %0)
; call proc_macro2::Ident::_new
  call void @_ZN11proc_macro25Ident4_new17h34aafdfc73320843E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_3)
  ret void
}

; proc_macro2::Ident::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Ident4span17h9b820ce410c8419fE(ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::imp::Ident::span
  %_2 = call i32 @_ZN11proc_macro23imp5Ident4span17h978d620100a7a41cE(ptr align 8 %self)
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %_2)
  ret i32 %_0
}

; proc_macro2::Ident::set_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Ident8set_span17h7d3c245667ef436fE(ptr align 8 %self, i32 %span) unnamed_addr #1 {
start:
; call proc_macro2::imp::Ident::set_span
  call void @_ZN11proc_macro23imp5Ident8set_span17h2412e3a2ab20ab67E(ptr align 8 %self, i32 %span)
  ret void
}

; <proc_macro2::Ident as core::cmp::PartialEq>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN59_$LT$proc_macro2..Ident$u20$as$u20$core..cmp..PartialEq$GT$2eq17h6db20d071fba1d67E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 {
start:
; call <proc_macro2::imp::Ident as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN64_$LT$proc_macro2..imp..Ident$u20$as$u20$core..cmp..PartialEq$GT$2eq17h81c3dc7318a58271E"(ptr align 8 %self, ptr align 8 %other)
  ret i1 %_0
}

; <proc_macro2::Ident as core::cmp::PartialOrd>::partial_cmp
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN60_$LT$proc_macro2..Ident$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17hb3b27cfaea0c978eE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 {
start:
  %_0 = alloca [1 x i8], align 1
; call <proc_macro2::Ident as core::cmp::Ord>::cmp
  %_3 = call i8 @"_ZN53_$LT$proc_macro2..Ident$u20$as$u20$core..cmp..Ord$GT$3cmp17he21da49aa1b1b1d6E"(ptr align 8 %self, ptr align 8 %other)
  store i8 %_3, ptr %_0, align 1
  %0 = load i8, ptr %_0, align 1
  ret i8 %0
}

; <proc_macro2::Ident as core::cmp::Ord>::cmp
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN53_$LT$proc_macro2..Ident$u20$as$u20$core..cmp..Ord$GT$3cmp17he21da49aa1b1b1d6E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_6 = alloca [24 x i8], align 8
  %_4 = alloca [24 x i8], align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hde21636323dc166eE"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %self)
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hde21636323dc166eE"(ptr sret([24 x i8]) align 8 %_6, ptr align 8 %other)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %bb6, %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_4) #25
          to label %bb8 unwind label %terminate

cleanup:                                          ; preds = %bb3, %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb7

bb2:                                              ; preds = %start
; invoke <alloc::string::String as core::cmp::Ord>::cmp
  %_0 = invoke i8 @"_ZN56_$LT$alloc..string..String$u20$as$u20$core..cmp..Ord$GT$3cmp17h86523b335d2487e6E"(ptr align 8 %_4, ptr align 8 %_6)
          to label %bb3 unwind label %cleanup1

bb6:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_6) #25
          to label %bb7 unwind label %terminate

cleanup1:                                         ; preds = %bb2
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb6

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_4)
  ret i8 %_0

terminate:                                        ; preds = %bb7, %bb6
  %9 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb8:                                              ; preds = %bb7
  %12 = load ptr, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16
}

; <proc_macro2::Ident as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h13ab6285103b9791E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::Ident as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17ha91eaa74943398d6E"(ptr align 8 %self, ptr align 8 %f)
  ret i1 %_0
}

; <proc_macro2::Ident as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN55_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17hdd517d2eb95e3320E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::Ident as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN60_$LT$proc_macro2..imp..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h3fe3a376e32c6871E"(ptr align 8 %self, ptr align 8 %f)
  ret i1 %_0
}

; proc_macro2::Literal::_new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %inner) unnamed_addr #1 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %inner, i64 24, i1 false)
  ret void
}

; proc_macro2::Literal::_new_fallback
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro27Literal13_new_fallback17ha788e5ec84bb7d0dE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %inner) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc82bf4e36ed14217E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %inner, ptr align 8 @alloc_f8bf7251edc18fa655df9e7da0822a2e)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void
}

; proc_macro2::Literal::f64_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14f64_unsuffixed17h2429d92c9d19f349E(ptr sret([24 x i8]) align 8 %_0, double %f) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
; call core::f64::<impl f64>::is_finite
  %_2 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9is_finite17h9478bc51df474f90E"(double %f)
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdc606204151d5569E(ptr align 1 @alloc_872e27944f452a359e6d9f0cdbf18a96, i64 31, ptr align 8 @alloc_768bdfc169e8e51d63be8a563a21a302) #24
  unreachable

bb2:                                              ; preds = %start
; call proc_macro2::imp::Literal::f64_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14f64_unsuffixed17h8b77b0f701265807E(ptr sret([24 x i8]) align 8 %_4, double %f)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_4)
  ret void
}

; proc_macro2::Literal::f64_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12f64_suffixed17h8ba945e1b78bbcafE(ptr sret([24 x i8]) align 8 %_0, double %f) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
; call core::f64::<impl f64>::is_finite
  %_2 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9is_finite17h9478bc51df474f90E"(double %f)
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdc606204151d5569E(ptr align 1 @alloc_872e27944f452a359e6d9f0cdbf18a96, i64 31, ptr align 8 @alloc_16ba1a5d3cf7af6d8d32cd9c069e323e) #24
  unreachable

bb2:                                              ; preds = %start
; call proc_macro2::imp::Literal::f64_suffixed
  call void @_ZN11proc_macro23imp7Literal12f64_suffixed17h61dedf8231856df4E(ptr sret([24 x i8]) align 8 %_4, double %f)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_4)
  ret void
}

; proc_macro2::Literal::f32_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14f32_unsuffixed17hbde3b4acd48097c1E(ptr sret([24 x i8]) align 8 %_0, float %f) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
; call core::f32::<impl f32>::is_finite
  %_2 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9is_finite17h29cb87bdbcafbd47E"(float %f)
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdc606204151d5569E(ptr align 1 @alloc_872e27944f452a359e6d9f0cdbf18a96, i64 31, ptr align 8 @alloc_c7710b89408583fd9e6b8fda4d98613a) #24
  unreachable

bb2:                                              ; preds = %start
; call proc_macro2::imp::Literal::f32_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14f32_unsuffixed17h42ad0db62090a26aE(ptr sret([24 x i8]) align 8 %_4, float %f)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_4)
  ret void
}

; proc_macro2::Literal::f32_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12f32_suffixed17h7d298df4eb2afb89E(ptr sret([24 x i8]) align 8 %_0, float %f) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
; call core::f32::<impl f32>::is_finite
  %_2 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9is_finite17h29cb87bdbcafbd47E"(float %f)
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdc606204151d5569E(ptr align 1 @alloc_872e27944f452a359e6d9f0cdbf18a96, i64 31, ptr align 8 @alloc_a4ff712d68acaeb5c8c3f41826999797) #24
  unreachable

bb2:                                              ; preds = %start
; call proc_macro2::imp::Literal::f32_suffixed
  call void @_ZN11proc_macro23imp7Literal12f32_suffixed17h42662bb7bdef1523E(ptr sret([24 x i8]) align 8 %_4, float %f)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_4)
  ret void
}

; proc_macro2::Literal::string
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal6string17hd886c11b5987636fE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %string.0, i64 %string.1) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::string
  call void @_ZN11proc_macro23imp7Literal6string17hc2ddfe151c7b51f4E(ptr sret([24 x i8]) align 8 %_2, ptr align 1 %string.0, i64 %string.1)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::character
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal9character17heb1178cb697afeb2E(ptr sret([24 x i8]) align 8 %_0, i32 %ch) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::character
  call void @_ZN11proc_macro23imp7Literal9character17he2fb470cbd8cea5dE(ptr sret([24 x i8]) align 8 %_2, i32 %ch)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::byte_string
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal11byte_string17h74a2ac53ad76a364E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::byte_string
  call void @_ZN11proc_macro23imp7Literal11byte_string17h46e498636d3aa124E(ptr sret([24 x i8]) align 8 %_2, ptr align 1 %s.0, i64 %s.1)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro27Literal4span17h072ea201a23ead9dE(ptr align 8 %self) unnamed_addr #1 {
start:
; call proc_macro2::imp::Literal::span
  %_2 = call i32 @_ZN11proc_macro23imp7Literal4span17h71605162af67936dE(ptr align 8 %self)
; call proc_macro2::Span::_new
  %_0 = call i32 @_ZN11proc_macro24Span4_new17h01e143ac41b18e21E(i32 %_2)
  ret i32 %_0
}

; proc_macro2::Literal::set_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal8set_span17hc859972bfada075bE(ptr align 8 %self, i32 %span) unnamed_addr #1 {
start:
; call proc_macro2::imp::Literal::set_span
  call void @_ZN11proc_macro23imp7Literal8set_span17h8f65922311f9524aE(ptr align 8 %self, i32 %span)
  ret void
}

; proc_macro2::Literal::from_str_unchecked
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal18from_str_unchecked17h3b2a8180b3182f8bE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::from_str_unchecked
  call void @_ZN11proc_macro23imp7Literal18from_str_unchecked17hac9b46a7a9135166E(ptr sret([24 x i8]) align 8 %_2, ptr align 1 %repr.0, i64 %repr.1), !unsafe_inst !4
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2), !unsafe_inst !4
  ret void, !unsafe_inst !4
}

; <proc_macro2::Literal as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$proc_macro2..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h1bc64a02d303cc59E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %_3 = alloca [24 x i8], align 8
  %_2 = alloca [24 x i8], align 8
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hd221010cef59d8f2E"(ptr sret([24 x i8]) align 8 %_3, ptr align 1 %repr.0, i64 %repr.1)
; call core::result::Result<T,E>::map
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h66e27003990d93bbE"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %_3)
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4152b2f32f1b8defE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; <proc_macro2::Literal as core::str::traits::FromStr>::from_str::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN67_$LT$proc_macro2..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17hf5f011b77284604dE"(i1 zeroext %inner) unnamed_addr #0 {
start:
  ret i1 %inner
}

; <proc_macro2::Literal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN57_$LT$proc_macro2..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h070d359e73f7edc6E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::Literal as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h8829b14d94206b79E"(ptr align 8 %self, ptr align 8 %f)
  ret i1 %_0
}

; <proc_macro2::Literal as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN59_$LT$proc_macro2..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hcf206e7165e5e25aE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::Literal as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN64_$LT$proc_macro2..imp..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hd582d9ce55aaf9e9E"(ptr align 8 %self, ptr align 8 %f)
  ret i1 %_0
}

; <proc_macro2::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define void @"_ZN94_$LT$proc_macro2..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17heb17dd1b1d8d4b7bE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
; call <proc_macro2::imp::TokenTreeIter as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN90_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17heffc6b88407ecfeeE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self)
  ret void
}

; <proc_macro2::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nonlazybind uwtable
define void @"_ZN94_$LT$proc_macro2..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hdfaa1d1f6adfa3c1E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
; call <proc_macro2::imp::TokenTreeIter as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN90_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hacb7b8676b3ef7b1E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self)
  ret void
}

; <proc_macro2::token_stream::IntoIter as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN72_$LT$proc_macro2..token_stream..IntoIter$u20$as$u20$core..fmt..Debug$GT$3fmt17h7303ec9c97cf9e0dE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_10 = alloca [40 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  %_3 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
; call core::fmt::Formatter::write_str
  %_4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 @alloc_5c9190818faa303809fe44f74ab2b44a, i64 12)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %0 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf02fe4c8cac895bE"(i1 zeroext %_4)
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %_3, align 1
  %2 = load i8, ptr %_3, align 1
  %3 = trunc i8 %2 to i1
  %_6 = zext i1 %3 to i64
  %4 = icmp eq i64 %_6, 0
  br i1 %4, label %bb4, label %bb5

bb4:                                              ; preds = %start
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17hce1082af628ba6fcE(ptr sret([16 x i8]) align 8 %_9, ptr align 8 %f)
; call <proc_macro2::token_stream::IntoIter as core::clone::Clone>::clone
  call void @"_ZN74_$LT$proc_macro2..token_stream..IntoIter$u20$as$u20$core..clone..Clone$GT$5clone17h47be989d154661e9E"(ptr sret([40 x i8]) align 8 %_10, ptr align 8 %self)
; call core::fmt::builders::DebugList::entries
  %_7 = call align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h9c27150143f9e58aE(ptr align 8 %_9, ptr align 8 %_10)
; call core::fmt::builders::DebugList::finish
  %5 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h9fea27fe6baef614E(ptr align 8 %_7)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb9

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hff31d50f5af9a906E"(ptr align 8 @alloc_eb7db4ea0894f6a849171cf3ffc9835f)
  %8 = zext i1 %7 to i8
  store i8 %8, ptr %_0, align 1
  br label %bb9

bb9:                                              ; preds = %bb5, %bb4
  %9 = load i8, ptr %_0, align 1
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb3:                                              ; No predecessors!
  unreachable
}

; proc_macro2::token_stream::<impl core::iter::traits::collect::IntoIterator for proc_macro2::TokenStream>::into_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN11proc_macro212token_stream96_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$proc_macro2..TokenStream$GT$9into_iter17h778a63f143aa3425E"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_3 = alloca [32 x i8], align 8
  %_2 = alloca [40 x i8], align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %self, i64 32, i1 false)
; call <proc_macro2::imp::TokenStream as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN91_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h26d2b11453b706baE"(ptr sret([40 x i8]) align 8 %_2, ptr align 8 %_3)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 40, i1 false)
  ret void
}

; <proc_macro2::rcvec::RcVecIntoIter<T> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN81_$LT$proc_macro2..rcvec..RcVecIntoIter$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h0c741d262b67bb14E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca [32 x i8], align 8
; call <alloc::vec::into_iter::IntoIter<T,A> as core::clone::Clone>::clone
  call void @"_ZN83_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17he492ec24ce0a7fbdE"(ptr sret([32 x i8]) align 8 %_2, ptr align 8 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 32, i1 false)
  ret void
}

; <proc_macro2::fallback::TokenStream as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal ptr @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17he89244e99d7f2631E"(ptr align 8 %self) unnamed_addr #0 {
start:
; call <proc_macro2::rcvec::RcVec<T> as core::clone::Clone>::clone
  %_2 = call ptr @"_ZN73_$LT$proc_macro2..rcvec..RcVec$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h4dddb27cff0f1987E"(ptr align 8 %self)
  ret ptr %_2
}

; <proc_macro2::fallback::LexError as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN68_$LT$proc_macro2..fallback..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17h67fef370abe39176E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_7 = alloca [8 x i8], align 8
  store ptr %self, ptr %_7, align 8
; call core::fmt::Formatter::debug_struct_field1_finish
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field1_finish17hded23900b22a6615E(ptr align 8 %f, ptr align 1 @alloc_ce18dc9b9ca144fde65711b7622c392e, i64 8, ptr align 1 @alloc_d299c6d6ea3f96b88c1a3bb8e0f4fc1e, i64 4, ptr align 1 %_7, ptr align 8 @vtable.h)
  ret i1 %_0
}

; <proc_macro2::fallback::Span as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN66_$LT$proc_macro2..fallback..Span$u20$as$u20$core..clone..Clone$GT$5clone17h8b5aac7de095a0e9E"(ptr align 1 %self) unnamed_addr #0 {
start:
  ret void
}

; <proc_macro2::fallback::Group as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i8 } @"_ZN67_$LT$proc_macro2..fallback..Group$u20$as$u20$core..clone..Clone$GT$5clone17hf0edb88b794f9802E"(ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_4 = alloca [8 x i8], align 8
  %_3 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Delimiter as core::clone::Clone>::clone
  %_2 = call i8 @"_ZN61_$LT$proc_macro2..Delimiter$u20$as$u20$core..clone..Clone$GT$5clone17hbb1901ad5d9712beE"(ptr align 1 %_3)
; call <proc_macro2::fallback::TokenStream as core::clone::Clone>::clone
  %1 = call ptr @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17he89244e99d7f2631E"(ptr align 8 %self)
  store ptr %1, ptr %_4, align 8
  %_7 = getelementptr inbounds i8, ptr %self, i64 9
; invoke <proc_macro2::fallback::Span as core::clone::Clone>::clone
  invoke void @"_ZN66_$LT$proc_macro2..fallback..Span$u20$as$u20$core..clone..Clone$GT$5clone17h8b5aac7de095a0e9E"(ptr align 1 %_7)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h842cd8089ab57678E"(ptr align 8 %_4) #25
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %_0.0 = load ptr, ptr %_4, align 8
  %6 = insertvalue { ptr, i8 } poison, ptr %_0.0, 0
  %7 = insertvalue { ptr, i8 } %6, i8 %_2, 1
  ret { ptr, i8 } %7

terminate:                                        ; preds = %bb4
  %8 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb5:                                              ; preds = %bb4
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = load i32, ptr %12, align 8
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15
}

; <proc_macro2::fallback::Ident as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN67_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h25a2c9a6e8662c94E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_2 = alloca [24 x i8], align 8
; call <alloc::string::String as core::clone::Clone>::clone
  call void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h46f90c67e6d80453E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self)
  %_5 = getelementptr inbounds i8, ptr %self, i64 25
; invoke <proc_macro2::fallback::Span as core::clone::Clone>::clone
  invoke void @"_ZN66_$LT$proc_macro2..fallback..Span$u20$as$u20$core..clone..Clone$GT$5clone17h8b5aac7de095a0e9E"(ptr align 1 %_5)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_2) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %_7 = getelementptr inbounds i8, ptr %self, i64 24
  %5 = load i8, ptr %_7, align 1
  %_6 = trunc i8 %5 to i1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  %6 = getelementptr inbounds i8, ptr %_0, i64 24
  %7 = zext i1 %_6 to i8
  store i8 %7, ptr %6, align 8
  ret void

terminate:                                        ; preds = %bb3
  %8 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = load i32, ptr %12, align 8
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15
}

; <proc_macro2::fallback::Literal as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..clone..Clone$GT$5clone17h87d4779100dbdaacE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_2 = alloca [24 x i8], align 8
; call <alloc::string::String as core::clone::Clone>::clone
  call void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h46f90c67e6d80453E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self)
  %_5 = getelementptr inbounds i8, ptr %self, i64 24
; invoke <proc_macro2::fallback::Span as core::clone::Clone>::clone
  invoke void @"_ZN66_$LT$proc_macro2..fallback..Span$u20$as$u20$core..clone..Clone$GT$5clone17h8b5aac7de095a0e9E"(ptr align 1 %_5)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h32add1a642bb0b4eE"(ptr align 8 %_2) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; proc_macro2::fallback::Literal::u8_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal11u8_suffixed17hc8f9009260a8074eE(ptr sret([24 x i8]) align 8 %_0, i8 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [1 x i8], align 1
  store i8 %0, ptr %n, align 1
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hab6f45d48513b293E", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_6fcf3a3c992995ab262b575885136de3, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::u16_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12u16_suffixed17h50153f39f457edb0E(ptr sret([24 x i8]) align 8 %_0, i16 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [2 x i8], align 2
  store i16 %0, ptr %n, align 2
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u16$GT$3fmt17h4cf804de4f49c839E", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_857c672e5aa084e790e2d96873f630f9, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::u32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12u32_suffixed17h30b7d94162d2bfd0E(ptr sret([24 x i8]) align 8 %_0, i32 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [4 x i8], align 4
  store i32 %0, ptr %n, align 4
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h2bca854f0e3dfdc9E", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_edeab7fc71a3de415c4c4e722590f9ff, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::u64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12u64_suffixed17h2c3a168a576bcc9bE(ptr sret([24 x i8]) align 8 %_0, i64 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [8 x i8], align 8
  store i64 %0, ptr %n, align 8
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hc7ee99daaeefde73E", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_b9cca7493ef3232c87286296b485ea8c, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::u128_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal13u128_suffixed17h7438f480d025f081E(ptr sret([24 x i8]) align 8 %_0, i128 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [16 x i8], align 16
  store i128 %0, ptr %n, align 16
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$u128$GT$3fmt17h53f8c3c9c9658b88E", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_d6141e8d36bc4091b00689cb2f965a44, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::usize_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14usize_suffixed17h118c60ef87e1967fE(ptr sret([24 x i8]) align 8 %_0, i64 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [8 x i8], align 8
  store i64 %0, ptr %n, align 8
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hdabfc7932e5a3df0E", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_b567e9b83c8d0530609ec26647d65119, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::i8_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal11i8_suffixed17h42f297667dac843bE(ptr sret([24 x i8]) align 8 %_0, i8 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [1 x i8], align 1
  store i8 %0, ptr %n, align 1
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$i8$GT$3fmt17hee5536dd5e667e8eE", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_b44f9bbca021b1d6813f62ca3d91bbb1, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::i16_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12i16_suffixed17h74e2d3beeae8756dE(ptr sret([24 x i8]) align 8 %_0, i16 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [2 x i8], align 2
  store i16 %0, ptr %n, align 2
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i16$GT$3fmt17hc8f65d45dbff6373E", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_43f3cf3e9288ae1924ee84ddc07f53c1, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::i32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12i32_suffixed17hfc9cfc600b49a928E(ptr sret([24 x i8]) align 8 %_0, i32 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [4 x i8], align 4
  store i32 %0, ptr %n, align 4
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h83d00f149ba150d3E", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_962f2d8fade7bbcb7d97d863b8bc6e3f, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::i64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12i64_suffixed17h57c9fb44ee37c9c7E(ptr sret([24 x i8]) align 8 %_0, i64 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [8 x i8], align 8
  store i64 %0, ptr %n, align 8
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h4d6e5db9f03e76fbE", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_be1121f0b8470f2bd7ac7ab700439f77, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::i128_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal13i128_suffixed17h17a3b5739f552066E(ptr sret([24 x i8]) align 8 %_0, i128 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [16 x i8], align 16
  store i128 %0, ptr %n, align 16
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$i128$GT$3fmt17h8a0854989bd1bd1dE", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_4d09191e7ae43e42eea36d00ffef3c2a, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::isize_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14isize_suffixed17hc05beccfe974ded1E(ptr sret([24 x i8]) align 8 %_0, i64 %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [8 x i8], align 8
  store i64 %0, ptr %n, align 8
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$isize$GT$3fmt17h709f746719dccc8dE", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_0f927090f2196e1faa7cab05e6ad26b3, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::f32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12f32_suffixed17h74b1143aca93b9a0E(ptr sret([24 x i8]) align 8 %_0, float %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [4 x i8], align 4
  store float %0, ptr %n, align 4
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f32$GT$3fmt17h9d1fb135b90234dbE", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_274b061f0c6a48e0acb9874c0304499e, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::f64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12f64_suffixed17hc0053b0324396383E(ptr sret([24 x i8]) align 8 %_0, double %0) unnamed_addr #1 {
start:
  %_3.i = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %res = alloca [24 x i8], align 8
  %n = alloca [8 x i8], align 8
  store double %0, ptr %n, align 8
  store ptr %n, ptr %_3.i, align 8
  %1 = getelementptr inbounds i8, ptr %_3.i, i64 8
  store ptr @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f64$GT$3fmt17h458dab3bc31bc88aE", ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_3.i, i64 16, i1 false)
  %2 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_5, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 16, i1 false)
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hb814cdc0fa3aa80eE(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_09cd27f876d43cf651c7aed3f3df3f17, ptr align 8 %_5)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h15e6874e1a65ea82E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_3)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %res)
  ret void
}

; proc_macro2::fallback::Literal::u8_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal13u8_unsuffixed17hcc5dc42b7b14ea42E(ptr sret([24 x i8]) align 8 %_0, i8 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [1 x i8], align 1
  store i8 %0, ptr %n, align 1
; call <u8 as alloc::string::ToString>::to_string
  call void @"_ZN46_$LT$u8$u20$as$u20$alloc..string..ToString$GT$9to_string17h921aa7e82343b2acE"(ptr sret([24 x i8]) align 8 %_2, ptr align 1 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::u16_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14u16_unsuffixed17hed9c91f55e783c2aE(ptr sret([24 x i8]) align 8 %_0, i16 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [2 x i8], align 2
  store i16 %0, ptr %n, align 2
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hcb36413e52dfce93E"(ptr sret([24 x i8]) align 8 %_2, ptr align 2 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::u32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14u32_unsuffixed17h6705464e3e1725b7E(ptr sret([24 x i8]) align 8 %_0, i32 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [4 x i8], align 4
  store i32 %0, ptr %n, align 4
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h795939dcc53db5daE"(ptr sret([24 x i8]) align 8 %_2, ptr align 4 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::u64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14u64_unsuffixed17hcbb185f97e6613c0E(ptr sret([24 x i8]) align 8 %_0, i64 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [8 x i8], align 8
  store i64 %0, ptr %n, align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h0eab573f9f9be2eaE"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::u128_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal15u128_unsuffixed17ha68193e14dc357a6E(ptr sret([24 x i8]) align 8 %_0, i128 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [16 x i8], align 16
  store i128 %0, ptr %n, align 16
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h97e4fce07de56d2cE"(ptr sret([24 x i8]) align 8 %_2, ptr align 16 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::usize_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal16usize_unsuffixed17h3f6c8851d6b9e5a2E(ptr sret([24 x i8]) align 8 %_0, i64 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [8 x i8], align 8
  store i64 %0, ptr %n, align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hc76ccbad6d89f13dE"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::i8_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal13i8_unsuffixed17h41099fadb5eabb58E(ptr sret([24 x i8]) align 8 %_0, i8 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [1 x i8], align 1
  store i8 %0, ptr %n, align 1
; call <i8 as alloc::string::ToString>::to_string
  call void @"_ZN46_$LT$i8$u20$as$u20$alloc..string..ToString$GT$9to_string17hac2c2d0f6760e98dE"(ptr sret([24 x i8]) align 8 %_2, ptr align 1 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::i16_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14i16_unsuffixed17h0e142c72ff17419eE(ptr sret([24 x i8]) align 8 %_0, i16 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [2 x i8], align 2
  store i16 %0, ptr %n, align 2
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hcf458a619c10cf1cE"(ptr sret([24 x i8]) align 8 %_2, ptr align 2 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::i32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14i32_unsuffixed17hf7d11c81f8f3c4bbE(ptr sret([24 x i8]) align 8 %_0, i32 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [4 x i8], align 4
  store i32 %0, ptr %n, align 4
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hb9e45ec6e9b397a6E"(ptr sret([24 x i8]) align 8 %_2, ptr align 4 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::i64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14i64_unsuffixed17hfcfc56efe4aee48eE(ptr sret([24 x i8]) align 8 %_0, i64 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [8 x i8], align 8
  store i64 %0, ptr %n, align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hefda00df03ec6466E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::i128_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal15i128_unsuffixed17hd5aa667ac8ba22c8E(ptr sret([24 x i8]) align 8 %_0, i128 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [16 x i8], align 16
  store i128 %0, ptr %n, align 16
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hde652701f13d04b5E"(ptr sret([24 x i8]) align 8 %_2, ptr align 16 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::fallback::Literal::isize_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal16isize_unsuffixed17h146c2f5339ec28b6E(ptr sret([24 x i8]) align 8 %_0, i64 %0) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
  %n = alloca [8 x i8], align 8
  store i64 %0, ptr %n, align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17ha9a334f45b5af9abE"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %n)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17hd6620a8815d5ac55E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; <proc_macro2::imp::DeferredTokenStream as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN76_$LT$proc_macro2..imp..DeferredTokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h401494a2f9d27f69E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %_2 = alloca [4 x i8], align 4
  %_3 = getelementptr inbounds i8, ptr %self, i64 24
; call <proc_macro::TokenStream as core::clone::Clone>::clone
  %1 = call i32 @"_ZN62_$LT$proc_macro..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h34fbb075a7e103f9E"(ptr align 4 %_3)
  store i32 %1, ptr %_2, align 4
; invoke <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
  invoke void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hc0d1d5f844b58c6eE"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro::TokenStream>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5907fc6780300241E"(ptr align 4 %_2) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %6 = load i32, ptr %_2, align 4
  %7 = getelementptr inbounds i8, ptr %_0, i64 24
  store i32 %6, ptr %7, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %8 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = load i32, ptr %12, align 8
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15
}

; <proc_macro2::imp::TokenTreeIter as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN70_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..clone..Clone$GT$5clone17h9a0472767265ac3bE"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_6 = alloca [32 x i8], align 8
  %_4 = alloca [32 x i8], align 8
  %_2 = load i64, ptr %self, align 8
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %__self_0 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro::token_stream::IntoIter as core::clone::Clone>::clone
  call void @"_ZN73_$LT$proc_macro..token_stream..IntoIter$u20$as$u20$core..clone..Clone$GT$5clone17h138d1cb9219c5dbdE"(ptr sret([32 x i8]) align 8 %_4, ptr align 8 %__self_0)
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %_4, i64 32, i1 false)
  store i64 0, ptr %_0, align 8
  br label %bb6

bb2:                                              ; preds = %start
  %__self_01 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::rcvec::RcVecIntoIter<T> as core::clone::Clone>::clone
  call void @"_ZN81_$LT$proc_macro2..rcvec..RcVecIntoIter$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h0c741d262b67bb14E"(ptr sret([32 x i8]) align 8 %_6, ptr align 8 %__self_01)
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 32, i1 false)
  store i64 1, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Group as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN62_$LT$proc_macro2..imp..Group$u20$as$u20$core..clone..Clone$GT$5clone17h3437130a20884606E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_4 = alloca [20 x i8], align 4
  %0 = load i32, ptr %self, align 8
  %_2 = zext i32 %0 to i64
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %__self_0 = getelementptr inbounds i8, ptr %self, i64 4
; call <proc_macro::Group as core::clone::Clone>::clone
  call void @"_ZN56_$LT$proc_macro..Group$u20$as$u20$core..clone..Clone$GT$5clone17h888f071d943d6697E"(ptr sret([20 x i8]) align 4 %_4, ptr align 4 %__self_0)
  %2 = getelementptr inbounds i8, ptr %_0, i64 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %2, ptr align 4 %_4, i64 20, i1 false)
  store i32 0, ptr %_0, align 8
  br label %bb6

bb2:                                              ; preds = %start
  %__self_01 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::fallback::Group as core::clone::Clone>::clone
  %3 = call { ptr, i8 } @"_ZN67_$LT$proc_macro2..fallback..Group$u20$as$u20$core..clone..Clone$GT$5clone17hf0edb88b794f9802E"(ptr align 8 %__self_01)
  %_6.0 = extractvalue { ptr, i8 } %3, 0
  %_6.1 = extractvalue { ptr, i8 } %3, 1
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_6.0, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  store i8 %_6.1, ptr %5, align 8
  store i32 1, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Ident as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN62_$LT$proc_macro2..imp..Ident$u20$as$u20$core..clone..Clone$GT$5clone17hdce62fa5a40439aaE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_6 = alloca [32 x i8], align 8
  %_4 = alloca [12 x i8], align 4
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %__self_0 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro::Ident as core::clone::Clone>::clone
  call void @"_ZN56_$LT$proc_macro..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h317ab23f64c72464E"(ptr sret([12 x i8]) align 4 %_4, ptr align 4 %__self_0)
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 4 %_4, i64 12, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb2:                                              ; preds = %start
; call <proc_macro2::fallback::Ident as core::clone::Clone>::clone
  call void @"_ZN67_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h25a2c9a6e8662c94E"(ptr sret([32 x i8]) align 8 %_6, ptr align 8 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 32, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::imp::Literal as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN64_$LT$proc_macro2..imp..Literal$u20$as$u20$core..clone..Clone$GT$5clone17hbce5653434cc51c6E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_6 = alloca [24 x i8], align 8
  %_4 = alloca [16 x i8], align 4
  %0 = load i64, ptr %self, align 8
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %__self_0 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro::Literal as core::clone::Clone>::clone
  call void @"_ZN58_$LT$proc_macro..Literal$u20$as$u20$core..clone..Clone$GT$5clone17he7ec8c701a5764f5E"(ptr sret([16 x i8]) align 4 %_4, ptr align 4 %__self_0)
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 4 %_4, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb2:                                              ; preds = %start
; call <proc_macro2::fallback::Literal as core::clone::Clone>::clone
  call void @"_ZN69_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..clone..Clone$GT$5clone17h87d4779100dbdaacE"(ptr sret([24 x i8]) align 8 %_6, ptr align 8 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 24, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb2, %bb3
  ret void

bb1:                                              ; No predecessors!
  unreachable
}

; proc_macro2::imp::Literal::u8_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal11u8_suffixed17h893feb62c6d04924E(ptr sret([24 x i8]) align 8 %_0, i8 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::u8_suffixed
  call void @_ZN11proc_macro28fallback7Literal11u8_suffixed17hc8f9009260a8074eE(ptr sret([24 x i8]) align 8 %_4, i8 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::u8_suffixed
  call void @_ZN10proc_macro7Literal11u8_suffixed17h7e5b3e6bc0fcd34aE(ptr sret([16 x i8]) align 4 %_3, i8 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::u16_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12u16_suffixed17hf71c243484d6a19aE(ptr sret([24 x i8]) align 8 %_0, i16 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::u16_suffixed
  call void @_ZN11proc_macro28fallback7Literal12u16_suffixed17h50153f39f457edb0E(ptr sret([24 x i8]) align 8 %_4, i16 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::u16_suffixed
  call void @_ZN10proc_macro7Literal12u16_suffixed17h127eaeb93f3430d8E(ptr sret([16 x i8]) align 4 %_3, i16 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::u32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12u32_suffixed17h2c6650b942537150E(ptr sret([24 x i8]) align 8 %_0, i32 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::u32_suffixed
  call void @_ZN11proc_macro28fallback7Literal12u32_suffixed17h30b7d94162d2bfd0E(ptr sret([24 x i8]) align 8 %_4, i32 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::u32_suffixed
  call void @_ZN10proc_macro7Literal12u32_suffixed17hdbf84d60c3a05efcE(ptr sret([16 x i8]) align 4 %_3, i32 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::u64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12u64_suffixed17h53c0023ba95ba2daE(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::u64_suffixed
  call void @_ZN11proc_macro28fallback7Literal12u64_suffixed17h2c3a168a576bcc9bE(ptr sret([24 x i8]) align 8 %_4, i64 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::u64_suffixed
  call void @_ZN10proc_macro7Literal12u64_suffixed17ha6d04bf0c4727e76E(ptr sret([16 x i8]) align 4 %_3, i64 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::u128_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal13u128_suffixed17h5b0365fa2ce017abE(ptr sret([24 x i8]) align 8 %_0, i128 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::u128_suffixed
  call void @_ZN11proc_macro28fallback7Literal13u128_suffixed17h7438f480d025f081E(ptr sret([24 x i8]) align 8 %_4, i128 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::u128_suffixed
  call void @_ZN10proc_macro7Literal13u128_suffixed17h0fb8340ef9be9b6dE(ptr sret([16 x i8]) align 4 %_3, i128 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::usize_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14usize_suffixed17hfd3152bd0ed8ea74E(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::usize_suffixed
  call void @_ZN11proc_macro28fallback7Literal14usize_suffixed17h118c60ef87e1967fE(ptr sret([24 x i8]) align 8 %_4, i64 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::usize_suffixed
  call void @_ZN10proc_macro7Literal14usize_suffixed17h973a9a3dfd0287f3E(ptr sret([16 x i8]) align 4 %_3, i64 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::i8_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal11i8_suffixed17he6d165e54aea3d07E(ptr sret([24 x i8]) align 8 %_0, i8 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::i8_suffixed
  call void @_ZN11proc_macro28fallback7Literal11i8_suffixed17h42f297667dac843bE(ptr sret([24 x i8]) align 8 %_4, i8 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::i8_suffixed
  call void @_ZN10proc_macro7Literal11i8_suffixed17hf87bc9c6d8549a2eE(ptr sret([16 x i8]) align 4 %_3, i8 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::i16_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12i16_suffixed17h06a64e1071b14240E(ptr sret([24 x i8]) align 8 %_0, i16 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::i16_suffixed
  call void @_ZN11proc_macro28fallback7Literal12i16_suffixed17h74e2d3beeae8756dE(ptr sret([24 x i8]) align 8 %_4, i16 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::i16_suffixed
  call void @_ZN10proc_macro7Literal12i16_suffixed17h3e600e4a894a504dE(ptr sret([16 x i8]) align 4 %_3, i16 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::i32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12i32_suffixed17hf1fb37fdbe261fd0E(ptr sret([24 x i8]) align 8 %_0, i32 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::i32_suffixed
  call void @_ZN11proc_macro28fallback7Literal12i32_suffixed17hfc9cfc600b49a928E(ptr sret([24 x i8]) align 8 %_4, i32 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::i32_suffixed
  call void @_ZN10proc_macro7Literal12i32_suffixed17ha7da33408030cfaeE(ptr sret([16 x i8]) align 4 %_3, i32 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::i64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12i64_suffixed17h35ff0b8f442aabb4E(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::i64_suffixed
  call void @_ZN11proc_macro28fallback7Literal12i64_suffixed17h57c9fb44ee37c9c7E(ptr sret([24 x i8]) align 8 %_4, i64 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::i64_suffixed
  call void @_ZN10proc_macro7Literal12i64_suffixed17hf01a6b61c08aa63aE(ptr sret([16 x i8]) align 4 %_3, i64 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::i128_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal13i128_suffixed17h99596ced923b944dE(ptr sret([24 x i8]) align 8 %_0, i128 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::i128_suffixed
  call void @_ZN11proc_macro28fallback7Literal13i128_suffixed17h17a3b5739f552066E(ptr sret([24 x i8]) align 8 %_4, i128 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::i128_suffixed
  call void @_ZN10proc_macro7Literal13i128_suffixed17hd3624f26379680deE(ptr sret([16 x i8]) align 4 %_3, i128 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::isize_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14isize_suffixed17hc92af4f4a403e0e6E(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::isize_suffixed
  call void @_ZN11proc_macro28fallback7Literal14isize_suffixed17hc05beccfe974ded1E(ptr sret([24 x i8]) align 8 %_4, i64 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::isize_suffixed
  call void @_ZN10proc_macro7Literal14isize_suffixed17h1aae4c60c15cabf0E(ptr sret([16 x i8]) align 4 %_3, i64 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::f32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12f32_suffixed17h42662bb7bdef1523E(ptr sret([24 x i8]) align 8 %_0, float %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::f32_suffixed
  call void @_ZN11proc_macro28fallback7Literal12f32_suffixed17h74b1143aca93b9a0E(ptr sret([24 x i8]) align 8 %_4, float %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::f32_suffixed
  call void @_ZN10proc_macro7Literal12f32_suffixed17hc01521ddc7e2090dE(ptr sret([16 x i8]) align 4 %_3, float %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::f64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12f64_suffixed17h61dedf8231856df4E(ptr sret([24 x i8]) align 8 %_0, double %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::f64_suffixed
  call void @_ZN11proc_macro28fallback7Literal12f64_suffixed17hc0053b0324396383E(ptr sret([24 x i8]) align 8 %_4, double %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::f64_suffixed
  call void @_ZN10proc_macro7Literal12f64_suffixed17hc811b986207cc194E(ptr sret([16 x i8]) align 4 %_3, double %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::u8_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal13u8_unsuffixed17h54a60c898282c3b8E(ptr sret([24 x i8]) align 8 %_0, i8 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::u8_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal13u8_unsuffixed17hcc5dc42b7b14ea42E(ptr sret([24 x i8]) align 8 %_4, i8 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::u8_unsuffixed
  call void @_ZN10proc_macro7Literal13u8_unsuffixed17h5f5d92bcff332424E(ptr sret([16 x i8]) align 4 %_3, i8 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::u16_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14u16_unsuffixed17h28b83c692c969757E(ptr sret([24 x i8]) align 8 %_0, i16 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::u16_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14u16_unsuffixed17hed9c91f55e783c2aE(ptr sret([24 x i8]) align 8 %_4, i16 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::u16_unsuffixed
  call void @_ZN10proc_macro7Literal14u16_unsuffixed17ha272da351bd4d5f7E(ptr sret([16 x i8]) align 4 %_3, i16 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::u32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14u32_unsuffixed17h1256343892d6f999E(ptr sret([24 x i8]) align 8 %_0, i32 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::u32_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14u32_unsuffixed17h6705464e3e1725b7E(ptr sret([24 x i8]) align 8 %_4, i32 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::u32_unsuffixed
  call void @_ZN10proc_macro7Literal14u32_unsuffixed17h301a9147219b845fE(ptr sret([16 x i8]) align 4 %_3, i32 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::u64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14u64_unsuffixed17h980557459e6c9d79E(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::u64_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14u64_unsuffixed17hcbb185f97e6613c0E(ptr sret([24 x i8]) align 8 %_4, i64 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::u64_unsuffixed
  call void @_ZN10proc_macro7Literal14u64_unsuffixed17h867555e7670edfeaE(ptr sret([16 x i8]) align 4 %_3, i64 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::u128_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal15u128_unsuffixed17h7c17111a76df1a91E(ptr sret([24 x i8]) align 8 %_0, i128 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::u128_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal15u128_unsuffixed17ha68193e14dc357a6E(ptr sret([24 x i8]) align 8 %_4, i128 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::u128_unsuffixed
  call void @_ZN10proc_macro7Literal15u128_unsuffixed17hdbcbe5523bc6d29bE(ptr sret([16 x i8]) align 4 %_3, i128 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::usize_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal16usize_unsuffixed17h99af8a6a9f6abff2E(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::usize_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal16usize_unsuffixed17h3f6c8851d6b9e5a2E(ptr sret([24 x i8]) align 8 %_4, i64 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::usize_unsuffixed
  call void @_ZN10proc_macro7Literal16usize_unsuffixed17h1b340bfad4a91722E(ptr sret([16 x i8]) align 4 %_3, i64 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::i8_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal13i8_unsuffixed17h52742b361738ded2E(ptr sret([24 x i8]) align 8 %_0, i8 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::i8_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal13i8_unsuffixed17h41099fadb5eabb58E(ptr sret([24 x i8]) align 8 %_4, i8 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::i8_unsuffixed
  call void @_ZN10proc_macro7Literal13i8_unsuffixed17h4fe1b9db6f0801c8E(ptr sret([16 x i8]) align 4 %_3, i8 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::i16_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14i16_unsuffixed17h0c43729e62041708E(ptr sret([24 x i8]) align 8 %_0, i16 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::i16_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14i16_unsuffixed17h0e142c72ff17419eE(ptr sret([24 x i8]) align 8 %_4, i16 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::i16_unsuffixed
  call void @_ZN10proc_macro7Literal14i16_unsuffixed17hd82c8b85ad583cafE(ptr sret([16 x i8]) align 4 %_3, i16 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::i32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14i32_unsuffixed17h34b71c3216d54c54E(ptr sret([24 x i8]) align 8 %_0, i32 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::i32_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14i32_unsuffixed17hf7d11c81f8f3c4bbE(ptr sret([24 x i8]) align 8 %_4, i32 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::i32_unsuffixed
  call void @_ZN10proc_macro7Literal14i32_unsuffixed17h7eb755f36d6fe9e1E(ptr sret([16 x i8]) align 4 %_3, i32 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::i64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14i64_unsuffixed17h579a1d9020eeebffE(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::i64_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14i64_unsuffixed17hfcfc56efe4aee48eE(ptr sret([24 x i8]) align 8 %_4, i64 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::i64_unsuffixed
  call void @_ZN10proc_macro7Literal14i64_unsuffixed17h69f827e2bd1ed79aE(ptr sret([16 x i8]) align 4 %_3, i64 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::i128_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal15i128_unsuffixed17h5197a094bec5510aE(ptr sret([24 x i8]) align 8 %_0, i128 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::i128_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal15i128_unsuffixed17hd5aa667ac8ba22c8E(ptr sret([24 x i8]) align 8 %_4, i128 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::i128_unsuffixed
  call void @_ZN10proc_macro7Literal15i128_unsuffixed17h401202eafe97dd2fE(ptr sret([16 x i8]) align 4 %_3, i128 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; proc_macro2::imp::Literal::isize_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal16isize_unsuffixed17h2f03c2af45a9b95dE(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17he52487f752043eddE()
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %start
; call proc_macro2::fallback::Literal::isize_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal16isize_unsuffixed17h146c2f5339ec28b6E(ptr sret([24 x i8]) align 8 %_4, i64 %n)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_4, i64 24, i1 false)
  br label %bb6

bb2:                                              ; preds = %start
; call proc_macro::Literal::isize_unsuffixed
  call void @_ZN10proc_macro7Literal16isize_unsuffixed17h07b40582e03caa1dE(ptr sret([16 x i8]) align 4 %_3, i64 %n)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 4 %_3, i64 16, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb4
  ret void
}

; <proc_macro2::Span as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN56_$LT$proc_macro2..Span$u20$as$u20$core..clone..Clone$GT$5clone17ha29cb7853147742bE"(ptr align 4 %self) unnamed_addr #0 {
start:
  %_0 = load i32, ptr %self, align 4
  ret i32 %_0
}

; <proc_macro2::TokenTree as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN61_$LT$proc_macro2..TokenTree$u20$as$u20$core..clone..Clone$GT$5clone17hfb8e1aa7dcc2e81fE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_10 = alloca [24 x i8], align 8
  %_8 = alloca [12 x i8], align 4
  %_6 = alloca [32 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %0 = load i64, ptr %self, align 8
  %1 = sub i64 %0, -9223372036854775807
  %2 = icmp ule i64 %1, 3
  %_2 = select i1 %2, i64 %1, i64 1
  switch i64 %_2, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb5
    i64 2, label %bb7
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %__self_0 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Group as core::clone::Clone>::clone
  call void @"_ZN57_$LT$proc_macro2..Group$u20$as$u20$core..clone..Clone$GT$5clone17h562f48fc952c425bE"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %__self_0)
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_4, i64 24, i1 false)
  store i64 -9223372036854775807, ptr %_0, align 8
  br label %bb10

bb5:                                              ; preds = %start
; call <proc_macro2::Ident as core::clone::Clone>::clone
  call void @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h7cd946c0387ad4abE"(ptr sret([32 x i8]) align 8 %_6, ptr align 8 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 32, i1 false)
  br label %bb10

bb7:                                              ; preds = %start
  %__self_01 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Punct as core::clone::Clone>::clone
  call void @"_ZN57_$LT$proc_macro2..Punct$u20$as$u20$core..clone..Clone$GT$5clone17h047fae220539f25cE"(ptr sret([12 x i8]) align 4 %_8, ptr align 4 %__self_01)
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 4 %_8, i64 12, i1 false)
  store i64 -9223372036854775805, ptr %_0, align 8
  br label %bb10

bb2:                                              ; preds = %start
  %__self_02 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Literal as core::clone::Clone>::clone
  call void @"_ZN59_$LT$proc_macro2..Literal$u20$as$u20$core..clone..Clone$GT$5clone17hc4547f670ad4c739E"(ptr sret([24 x i8]) align 8 %_10, ptr align 8 %__self_02)
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %_10, i64 24, i1 false)
  store i64 -9223372036854775804, ptr %_0, align 8
  br label %bb10

bb10:                                             ; preds = %bb2, %bb7, %bb5, %bb3
  ret void
}

; <proc_macro2::Group as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN57_$LT$proc_macro2..Group$u20$as$u20$core..clone..Clone$GT$5clone17h562f48fc952c425bE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca [24 x i8], align 8
; call <proc_macro2::imp::Group as core::clone::Clone>::clone
  call void @"_ZN62_$LT$proc_macro2..imp..Group$u20$as$u20$core..clone..Clone$GT$5clone17h3437130a20884606E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void
}

; <proc_macro2::Delimiter as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN61_$LT$proc_macro2..Delimiter$u20$as$u20$core..clone..Clone$GT$5clone17hbb1901ad5d9712beE"(ptr align 1 %self) unnamed_addr #0 {
start:
  %_0 = load i8, ptr %self, align 1
  ret i8 %_0
}

; <proc_macro2::Delimiter as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN59_$LT$proc_macro2..Delimiter$u20$as$u20$core..fmt..Debug$GT$3fmt17h03c3a3ab6bfca45cE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_3 = alloca [16 x i8], align 8
  %0 = load i8, ptr %self, align 1
  %_4 = zext i8 %0 to i64
  switch i64 %_4, label %bb1 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store ptr @alloc_0294e458fb90079136075a45e1b88064, ptr %_3, align 8
  %1 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 11, ptr %1, align 8
  br label %bb6

bb4:                                              ; preds = %start
  store ptr @alloc_008064ec92f18d6001dc96ef0f11d89f, ptr %_3, align 8
  %2 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 5, ptr %2, align 8
  br label %bb6

bb5:                                              ; preds = %start
  store ptr @alloc_a295c4aa60729a08b699a9334700da73, ptr %_3, align 8
  %3 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 7, ptr %3, align 8
  br label %bb6

bb2:                                              ; preds = %start
  store ptr @alloc_37d2e53432a03a1f90b3e7253015eaf9, ptr %_3, align 8
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 4, ptr %4, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5, %bb4, %bb3
  %5 = load ptr, ptr %_3, align 8
  %6 = getelementptr inbounds i8, ptr %_3, i64 8
  %7 = load i64, ptr %6, align 8
; call core::fmt::Formatter::write_str
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 %5, i64 %7)
  ret i1 %_0
}

; <proc_macro2::Delimiter as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN63_$LT$proc_macro2..Delimiter$u20$as$u20$core..cmp..PartialEq$GT$2eq17h201eac3222e2ae70E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 {
start:
  %0 = load i8, ptr %self, align 1
  %__self_discr = zext i8 %0 to i64
  %1 = load i8, ptr %other, align 1
  %__arg1_discr = zext i8 %1 to i64
  %_0 = icmp eq i64 %__self_discr, %__arg1_discr
  ret i1 %_0
}

; <proc_macro2::Punct as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN57_$LT$proc_macro2..Punct$u20$as$u20$core..clone..Clone$GT$5clone17h047fae220539f25cE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 {
start:
  %_2 = load i32, ptr %self, align 4
  %_5 = getelementptr inbounds i8, ptr %self, i64 8
; call <proc_macro2::Spacing as core::clone::Clone>::clone
  %_4 = call zeroext i1 @"_ZN59_$LT$proc_macro2..Spacing$u20$as$u20$core..clone..Clone$GT$5clone17h67a489764d34426dE"(ptr align 1 %_5)
  %_7 = getelementptr inbounds i8, ptr %self, i64 4
; call <proc_macro2::Span as core::clone::Clone>::clone
  %_6 = call i32 @"_ZN56_$LT$proc_macro2..Span$u20$as$u20$core..clone..Clone$GT$5clone17ha29cb7853147742bE"(ptr align 4 %_7)
  store i32 %_2, ptr %_0, align 4
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  %1 = zext i1 %_4 to i8
  store i8 %1, ptr %0, align 4
  %2 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_6, ptr %2, align 4
  ret void
}

; <proc_macro2::Spacing as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN59_$LT$proc_macro2..Spacing$u20$as$u20$core..clone..Clone$GT$5clone17h67a489764d34426dE"(ptr align 1 %self) unnamed_addr #0 {
start:
  %0 = load i8, ptr %self, align 1
  %_0 = trunc i8 %0 to i1
  ret i1 %_0
}

; <proc_macro2::Spacing as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN57_$LT$proc_macro2..Spacing$u20$as$u20$core..fmt..Debug$GT$3fmt17h7333ab3fcbdaa078E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_3 = alloca [16 x i8], align 8
  %0 = load i8, ptr %self, align 1
  %1 = trunc i8 %0 to i1
  %_4 = zext i1 %1 to i64
  %2 = icmp eq i64 %_4, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %start
  store ptr @alloc_205c8fef0d2f3a459caa7a8e356d3db8, ptr %_3, align 8
  %3 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 5, ptr %3, align 8
  br label %bb4

bb2:                                              ; preds = %start
  store ptr @alloc_9fa21bdf536aa6f2b9b2b030ef619bb2, ptr %_3, align 8
  %4 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 5, ptr %4, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %5 = load ptr, ptr %_3, align 8
  %6 = getelementptr inbounds i8, ptr %_3, i64 8
  %7 = load i64, ptr %6, align 8
; call core::fmt::Formatter::write_str
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8 %f, ptr align 1 %5, i64 %7)
  ret i1 %_0

bb1:                                              ; No predecessors!
  unreachable
}

; <proc_macro2::Spacing as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN61_$LT$proc_macro2..Spacing$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9b42e225abd19eaeE"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 {
start:
  %0 = load i8, ptr %self, align 1
  %1 = trunc i8 %0 to i1
  %__self_discr = zext i1 %1 to i64
  %2 = load i8, ptr %other, align 1
  %3 = trunc i8 %2 to i1
  %__arg1_discr = zext i1 %3 to i64
  %_0 = icmp eq i64 %__self_discr, %__arg1_discr
  ret i1 %_0
}

; <proc_macro2::Ident as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h7cd946c0387ad4abE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_2 = alloca [32 x i8], align 8
; call <proc_macro2::imp::Ident as core::clone::Clone>::clone
  call void @"_ZN62_$LT$proc_macro2..imp..Ident$u20$as$u20$core..clone..Clone$GT$5clone17hdce62fa5a40439aaE"(ptr sret([32 x i8]) align 8 %_2, ptr align 8 %self)
  %_5 = getelementptr inbounds i8, ptr %self, i64 32
; invoke <core::marker::PhantomData<T> as core::clone::Clone>::clone
  invoke void @"_ZN73_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h0bdb317e7de3df88E"(ptr align 1 %_5)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::imp::Ident>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Ident$GT$17h4af07ca6816db39cE"(ptr align 8 %_2) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 32, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; <proc_macro2::Literal as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN59_$LT$proc_macro2..Literal$u20$as$u20$core..clone..Clone$GT$5clone17hc4547f670ad4c739E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_2 = alloca [24 x i8], align 8
; call <proc_macro2::imp::Literal as core::clone::Clone>::clone
  call void @"_ZN64_$LT$proc_macro2..imp..Literal$u20$as$u20$core..clone..Clone$GT$5clone17hbce5653434cc51c6E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self)
  %_5 = getelementptr inbounds i8, ptr %self, i64 24
; invoke <core::marker::PhantomData<T> as core::clone::Clone>::clone
  invoke void @"_ZN73_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h0bdb317e7de3df88E"(ptr align 1 %_5)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::imp::Literal>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17hf6d171391c72d161E"(ptr align 8 %_2) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; proc_macro2::Literal::u8_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal11u8_suffixed17h9df653cff92b1b57E(ptr sret([24 x i8]) align 8 %_0, i8 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::u8_suffixed
  call void @_ZN11proc_macro23imp7Literal11u8_suffixed17h893feb62c6d04924E(ptr sret([24 x i8]) align 8 %_2, i8 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::u16_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12u16_suffixed17h7d6b00c3504c630aE(ptr sret([24 x i8]) align 8 %_0, i16 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::u16_suffixed
  call void @_ZN11proc_macro23imp7Literal12u16_suffixed17hf71c243484d6a19aE(ptr sret([24 x i8]) align 8 %_2, i16 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::u32_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12u32_suffixed17hf4f266679f45683fE(ptr sret([24 x i8]) align 8 %_0, i32 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::u32_suffixed
  call void @_ZN11proc_macro23imp7Literal12u32_suffixed17h2c6650b942537150E(ptr sret([24 x i8]) align 8 %_2, i32 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::u64_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12u64_suffixed17hc4be91c5815a525eE(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::u64_suffixed
  call void @_ZN11proc_macro23imp7Literal12u64_suffixed17h53c0023ba95ba2daE(ptr sret([24 x i8]) align 8 %_2, i64 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::u128_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal13u128_suffixed17hb29b4ed1335c40ebE(ptr sret([24 x i8]) align 8 %_0, i128 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::u128_suffixed
  call void @_ZN11proc_macro23imp7Literal13u128_suffixed17h5b0365fa2ce017abE(ptr sret([24 x i8]) align 8 %_2, i128 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::usize_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14usize_suffixed17h28814fd599b01961E(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::usize_suffixed
  call void @_ZN11proc_macro23imp7Literal14usize_suffixed17hfd3152bd0ed8ea74E(ptr sret([24 x i8]) align 8 %_2, i64 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::i8_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal11i8_suffixed17h714f4c44a6bf4d2bE(ptr sret([24 x i8]) align 8 %_0, i8 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::i8_suffixed
  call void @_ZN11proc_macro23imp7Literal11i8_suffixed17he6d165e54aea3d07E(ptr sret([24 x i8]) align 8 %_2, i8 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::i16_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12i16_suffixed17had851a67d9ed95e6E(ptr sret([24 x i8]) align 8 %_0, i16 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::i16_suffixed
  call void @_ZN11proc_macro23imp7Literal12i16_suffixed17h06a64e1071b14240E(ptr sret([24 x i8]) align 8 %_2, i16 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::i32_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12i32_suffixed17hde4d991e1c391692E(ptr sret([24 x i8]) align 8 %_0, i32 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::i32_suffixed
  call void @_ZN11proc_macro23imp7Literal12i32_suffixed17hf1fb37fdbe261fd0E(ptr sret([24 x i8]) align 8 %_2, i32 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::i64_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12i64_suffixed17h3da33248905654f2E(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::i64_suffixed
  call void @_ZN11proc_macro23imp7Literal12i64_suffixed17h35ff0b8f442aabb4E(ptr sret([24 x i8]) align 8 %_2, i64 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::i128_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal13i128_suffixed17hd54178a360b4947cE(ptr sret([24 x i8]) align 8 %_0, i128 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::i128_suffixed
  call void @_ZN11proc_macro23imp7Literal13i128_suffixed17h99596ced923b944dE(ptr sret([24 x i8]) align 8 %_2, i128 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::isize_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14isize_suffixed17hb89911d1b5ea077cE(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::isize_suffixed
  call void @_ZN11proc_macro23imp7Literal14isize_suffixed17hc92af4f4a403e0e6E(ptr sret([24 x i8]) align 8 %_2, i64 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::u8_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal13u8_unsuffixed17h7f450f2698b3ca2cE(ptr sret([24 x i8]) align 8 %_0, i8 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::u8_unsuffixed
  call void @_ZN11proc_macro23imp7Literal13u8_unsuffixed17h54a60c898282c3b8E(ptr sret([24 x i8]) align 8 %_2, i8 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::u16_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14u16_unsuffixed17h7963864aecfbb4c7E(ptr sret([24 x i8]) align 8 %_0, i16 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::u16_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14u16_unsuffixed17h28b83c692c969757E(ptr sret([24 x i8]) align 8 %_2, i16 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::u32_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14u32_unsuffixed17h9b3bf827c6c24a40E(ptr sret([24 x i8]) align 8 %_0, i32 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::u32_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14u32_unsuffixed17h1256343892d6f999E(ptr sret([24 x i8]) align 8 %_2, i32 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::u64_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14u64_unsuffixed17hac00c956abc41087E(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::u64_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14u64_unsuffixed17h980557459e6c9d79E(ptr sret([24 x i8]) align 8 %_2, i64 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::u128_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal15u128_unsuffixed17h00168f8b1f3497dbE(ptr sret([24 x i8]) align 8 %_0, i128 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::u128_unsuffixed
  call void @_ZN11proc_macro23imp7Literal15u128_unsuffixed17h7c17111a76df1a91E(ptr sret([24 x i8]) align 8 %_2, i128 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::usize_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal16usize_unsuffixed17hceb45b8bcdf98780E(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::usize_unsuffixed
  call void @_ZN11proc_macro23imp7Literal16usize_unsuffixed17h99af8a6a9f6abff2E(ptr sret([24 x i8]) align 8 %_2, i64 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::i8_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal13i8_unsuffixed17h2b141190f14215f0E(ptr sret([24 x i8]) align 8 %_0, i8 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::i8_unsuffixed
  call void @_ZN11proc_macro23imp7Literal13i8_unsuffixed17h52742b361738ded2E(ptr sret([24 x i8]) align 8 %_2, i8 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::i16_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14i16_unsuffixed17hb6a3df384b64d788E(ptr sret([24 x i8]) align 8 %_0, i16 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::i16_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14i16_unsuffixed17h0c43729e62041708E(ptr sret([24 x i8]) align 8 %_2, i16 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::i32_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14i32_unsuffixed17hcaa5f17659a2d505E(ptr sret([24 x i8]) align 8 %_0, i32 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::i32_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14i32_unsuffixed17h34b71c3216d54c54E(ptr sret([24 x i8]) align 8 %_2, i32 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::i64_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14i64_unsuffixed17h977995110d89beddE(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::i64_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14i64_unsuffixed17h579a1d9020eeebffE(ptr sret([24 x i8]) align 8 %_2, i64 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::i128_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal15i128_unsuffixed17h93251b8ed16d28feE(ptr sret([24 x i8]) align 8 %_0, i128 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::i128_unsuffixed
  call void @_ZN11proc_macro23imp7Literal15i128_unsuffixed17h5197a094bec5510aE(ptr sret([24 x i8]) align 8 %_2, i128 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; proc_macro2::Literal::isize_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal16isize_unsuffixed17h4eca85543935af8bE(ptr sret([24 x i8]) align 8 %_0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca [24 x i8], align 8
; call proc_macro2::imp::Literal::isize_unsuffixed
  call void @_ZN11proc_macro23imp7Literal16isize_unsuffixed17h2f03c2af45a9b95dE(ptr sret([24 x i8]) align 8 %_2, i64 %n)
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h29a5507f4f2d9d82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2)
  ret void
}

; <proc_macro2::token_stream::IntoIter as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN74_$LT$proc_macro2..token_stream..IntoIter$u20$as$u20$core..clone..Clone$GT$5clone17h47be989d154661e9E"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca [16 x i8], align 8
  %_2 = alloca [40 x i8], align 8
; call <proc_macro2::imp::TokenTreeIter as core::clone::Clone>::clone
  call void @"_ZN70_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..clone..Clone$GT$5clone17h9a0472767265ac3bE"(ptr sret([40 x i8]) align 8 %_2, ptr align 8 %self)
  %_5 = getelementptr inbounds i8, ptr %self, i64 40
; invoke <core::marker::PhantomData<T> as core::clone::Clone>::clone
  invoke void @"_ZN73_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h0bdb317e7de3df88E"(ptr align 1 %_5)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro2::imp::TokenTreeIter>
  invoke void @"_ZN4core3ptr52drop_in_place$LT$proc_macro2..imp..TokenTreeIter$GT$17ha6577036cfd942c5E"(ptr align 8 %_2) #25
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 40, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() #26
  unreachable

bb4:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #9

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17h0342d27fee357d65E(i64, i64, ptr align 8) unnamed_addr #6

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17h035de9af16d5a022E(i64, i64, ptr align 8) unnamed_addr #6

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, ptr, ptr) unnamed_addr #1

; proc_macro::ConcatTreesHelper::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro17ConcatTreesHelper3new17h21f20348c8009416E(ptr sret([24 x i8]) align 8, i64) unnamed_addr #1

; proc_macro::ConcatTreesHelper::append_to
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro17ConcatTreesHelper9append_to17h1bd72d7ceffcb109E(ptr align 8, ptr align 4) unnamed_addr #1

; core::panicking::panic_in_cleanup
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking16panic_in_cleanup17h43442956f23e9cbeE() unnamed_addr #10

; proc_macro::ConcatTreesHelper::push
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro17ConcatTreesHelper4push17ha4430720abe5341aE(ptr align 8, ptr align 4) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #11

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #9

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h3111a7beccfa68f5E(ptr align 8, ptr align 8) unnamed_addr #6

; std::sys::pal::unix::futex::futex_wait
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN3std3sys3pal4unix5futex10futex_wait17h609d76562e6a86f1E(ptr align 4, i32, i64, i32) unnamed_addr #1

; core::option::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6option13unwrap_failed17h7a3768beeda72485E(ptr align 8) unnamed_addr #6

; Function Attrs: nonlazybind
define internal i32 @__rust_try(ptr %0, ptr %1, ptr %2) unnamed_addr #12 personality ptr @rust_eh_personality {
entry-block:
  invoke void %0(ptr %1)
          to label %then unwind label %catch

then:                                             ; preds = %entry-block
  ret i32 0

catch:                                            ; preds = %entry-block
  %3 = landingpad { ptr, i32 }
          catch ptr null
  %4 = extractvalue { ptr, i32 } %3, 0
  call void %2(ptr %1, ptr %4)
  ret i32 1
}

; std::panicking::try::cleanup
; Function Attrs: cold nonlazybind uwtable
declare { ptr, ptr } @_ZN3std9panicking3try7cleanup17hd6ade9b987c70092E(ptr) unnamed_addr #2

; core::panicking::panic_cannot_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking19panic_cannot_unwind17h3f96c9c07954d1a5E() unnamed_addr #10

; <bool as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17he691df9786a4e217E"(ptr align 1, ptr align 8) unnamed_addr #1

; <str as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h8addf800304f3e1bE"(ptr align 1, i64, ptr align 8) unnamed_addr #1

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h49e1caa39cb6eebbE"(ptr align 1, i64, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::pad
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter3pad17h7a36b2c624c9ffbaE(ptr align 8, ptr align 1, i64) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hc7ee99daaeefde73E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::float::<impl core::fmt::Display for f32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f32$GT$3fmt17h9d1fb135b90234dbE"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h2bca854f0e3dfdc9E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::Display for u128>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$u128$GT$3fmt17h53f8c3c9c9658b88E"(ptr align 16, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$isize$GT$3fmt17h709f746719dccc8dE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h83d00f149ba150d3E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hdabfc7932e5a3df0E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u16$GT$3fmt17h4cf804de4f49c839E"(ptr align 2, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i16>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i16$GT$3fmt17hc8f65d45dbff6373E"(ptr align 2, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::Display for i128>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$i128$GT$3fmt17h8a0854989bd1bd1dE"(ptr align 16, ptr align 8) unnamed_addr #1

; core::fmt::float::<impl core::fmt::Display for f64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f64$GT$3fmt17h458dab3bc31bc88aE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h4d6e5db9f03e76fbE"(ptr align 8, ptr align 8) unnamed_addr #1

; alloc::raw_vec::handle_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec12handle_error17hbecd345b13023a3fE(i64, i64) unnamed_addr #13

; Function Attrs: nonlazybind
declare i32 @memcmp(ptr, ptr, i64) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #11

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking14panic_nounwind17hfb4a192166a1619dE(ptr align 1, i64) unnamed_addr #10

; core::fmt::num::imp::<impl core::fmt::Display for i8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$i8$GT$3fmt17hee5536dd5e667e8eE"(ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hab6f45d48513b293E"(ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hfdb7ce0f2d679b26E"(ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hb258a21f77c3d954E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hb89b543945fdac37E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: nonlazybind uwtable
declare align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17he5a4465e1dd4a691E(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #1

; Function Attrs: convergent nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.is.constant.i1(i1) #15

; core::fmt::write
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt5write17h2b71bd12250911d0E(ptr align 1, ptr align 8, ptr align 8) unnamed_addr #1

; <proc_macro::bridge::client::TokenStream as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN81_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbbdf9c20e85e4ff1E"(ptr align 4) unnamed_addr #1

; <std::sys::sync::once::futex::CompletionGuard as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN86_$LT$std..sys..sync..once..futex..CompletionGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha1506ce481ce549eE"(ptr align 8) unnamed_addr #1

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hdc606204151d5569E(ptr align 1, i64, ptr align 8) unnamed_addr #6

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
declare align 1 ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h26c289e2423d5f4eE"(i64, ptr align 1, i64) unnamed_addr #0

; <proc_macro::TokenStream as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
declare { i32, i32 } @"_ZN70_$LT$proc_macro..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h5c6a3cd3e98bdf7cE"(ptr align 1, i64) unnamed_addr #1

; core::str::slice_error_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core3str16slice_error_fail17h7213e65c8ef344e8E(ptr align 1, i64, i64, i64, ptr align 8) unnamed_addr #6

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h5e416f3b4df94489E(i64, i64, ptr align 8) unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.usub.sat.i64(i64, i64) #11

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #16

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index26slice_start_index_len_fail17hb1af95f5e8ac2a4fE(i64, i64, ptr align 8) unnamed_addr #6

; core::option::expect_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6option13expect_failed17h28cbd671da1a9710E(ptr align 1, i64, ptr align 8) unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.cttz.i16(i16, i1 immarg) #11

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h3eaafe46ae0cfb90E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::unicode::unicode_data::grapheme_extend::lookup_slow
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode12unicode_data15grapheme_extend11lookup_slow17h07815f5474a2d182E(i32) unnamed_addr #1

; core::unicode::printable::is_printable
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode9printable12is_printable17h9aaa1cc273b92272E(i32) unnamed_addr #1

; core::panicking::panic_const::panic_const_div_by_zero
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17hb740a5eb188e0d10E(ptr align 8) unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #17

; core::slice::index::slice_start_index_overflow_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index31slice_start_index_overflow_fail17hc48d791526b1c078E(ptr align 8) unnamed_addr #6

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17h9dc95cd7fee8d549E(ptr align 8) unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #11

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hebd1efddce947a93E(ptr align 1, i64, ptr align 1, ptr align 8, ptr align 8) unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i1 @llvm.vector.reduce.and.v16i1(<16 x i1>) #11

; core::panicking::assert_failed_inner
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h1275fc7deb7ee94bE(i8, ptr align 1, ptr align 8, ptr align 1, ptr align 8, ptr align 8, ptr align 8) unnamed_addr #6

; <proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN92_$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$4from17h6a6b58b5075bd4caE"(ptr align 4) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h35be9e09c65db375E(ptr align 8, ptr align 1, i64) unnamed_addr #1

; core::slice::memchr::memchr_aligned
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core5slice6memchr14memchr_aligned17h8f099e60ba6928faE(i8, ptr align 1, i64) unnamed_addr #1

; core::str::pattern::StrSearcher::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str7pattern11StrSearcher3new17h1bcc71c72b862628E(ptr sret([104 x i8]) align 8, ptr align 1, i64, ptr align 1, i64) unnamed_addr #1

; Function Attrs: cold noreturn nounwind memory(inaccessiblemem: write)
declare void @llvm.trap() #18

; alloc::fmt::format::format_inner
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc3fmt6format12format_inner17he16abc9639aee25aE(ptr sret([24 x i8]) align 8, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.uadd.sat.i64(i64, i64) #11

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h668ad8a7a2fd77cbE(i64, i64) unnamed_addr #13

; Function Attrs: nounwind nonlazybind allockind("alloc,uninitialized,aligned") allocsize(0) uwtable
declare noalias ptr @__rust_alloc(i64, i64 allocalign) unnamed_addr #19

; Function Attrs: nounwind nonlazybind allockind("alloc,zeroed,aligned") allocsize(0) uwtable
declare noalias ptr @__rust_alloc_zeroed(i64, i64 allocalign) unnamed_addr #20

; Function Attrs: nounwind nonlazybind allockind("realloc,aligned") allocsize(3) uwtable
declare noalias ptr @__rust_realloc(ptr allocptr, i64, i64 allocalign, i64) unnamed_addr #21

; alloc::string::String::insert_bytes
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc6string6String12insert_bytes17h72da711b4d18faf2E(ptr align 8, i64, ptr align 1, i64) unnamed_addr #1

; <proc_macro::bridge::client::TokenStream as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN78_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17ha5f1af690cbf0369E"(ptr align 4) unnamed_addr #1

; Function Attrs: nounwind nonlazybind allockind("free") uwtable
declare void @__rust_dealloc(ptr allocptr, i64, i64) unnamed_addr #22

; core::fmt::Formatter::debug_tuple_field1_finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17hda02114f9a9fecb7E(ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; proc_macro::is_available
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN10proc_macro12is_available17h6180ca11abe58a56E() unnamed_addr #1

; core::fmt::Formatter::debug_list
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter10debug_list17hce1082af628ba6fcE(ptr sret([16 x i8]) align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h9fea27fe6baef614E(ptr align 8) unnamed_addr #1

; <proc_macro::TokenStream as alloc::string::ToString>::to_string
; Function Attrs: nonlazybind uwtable
declare void @"_ZN67_$LT$proc_macro..TokenStream$u20$as$u20$alloc..string..ToString$GT$9to_string17h203032afc85fae79E"(ptr sret([24 x i8]) align 8, ptr align 4) unnamed_addr #1

; core::fmt::Formatter::debug_struct
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter12debug_struct17hfe55f8660bb7c366E(ptr sret([16 x i8]) align 8, ptr align 8, ptr align 1, i64) unnamed_addr #1

; <std::path::PathBuf as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN55_$LT$std..path..PathBuf$u20$as$u20$core..fmt..Debug$GT$3fmt17h3fccc7738c99660fE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugStruct::field
; Function Attrs: nonlazybind uwtable
declare align 8 ptr @_ZN4core3fmt8builders11DebugStruct5field17ha9e91e16904b9623E(ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugStruct::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hfe9f97b163d30fe5E(ptr align 8) unnamed_addr #1

; unicode_ident::is_xid_start
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN13unicode_ident12is_xid_start17hd8dc6335495d45deE(i32) unnamed_addr #1

; unicode_ident::is_xid_continue
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN13unicode_ident15is_xid_continue17hef94f0b155139bd8E(i32) unnamed_addr #1

; core::fmt::Formatter::debug_tuple
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter11debug_tuple17h9634dda5ede991a5E(ptr sret([24 x i8]) align 8, ptr align 8, ptr align 1, i64) unnamed_addr #1

; <core::fmt::Arguments as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN57_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Debug$GT$3fmt17h88ad6f5138354091E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugTuple::field
; Function Attrs: nonlazybind uwtable
declare align 8 ptr @_ZN4core3fmt8builders10DebugTuple5field17h402e09bf70aec2f8E(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17ha2afba6d4a556f7cE(ptr align 8) unnamed_addr #1

; proc_macro::TokenStream::is_empty
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN10proc_macro11TokenStream8is_empty17h817938aead227f55E(ptr align 4) unnamed_addr #1

; <proc_macro::TokenStream as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN62_$LT$proc_macro..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h9850742ca811fc89E"(ptr align 4, ptr align 8) unnamed_addr #1

; proc_macro::Punct::new
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN10proc_macro5Punct3new17h8c1b36f32939e5a8E(i32, i1 zeroext) unnamed_addr #1

; <proc_macro::TokenStream as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN60_$LT$proc_macro..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17hf626f13ea87fc357E"(ptr align 4, ptr align 8) unnamed_addr #1

; <proc_macro::LexError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN59_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17ha6a11898aa34fb0dE"(ptr align 1, ptr align 8) unnamed_addr #1

; proc_macro::token_stream::<impl core::iter::traits::collect::IntoIterator for proc_macro::TokenStream>::into_iter
; Function Attrs: nonlazybind uwtable
declare void @"_ZN10proc_macro12token_stream95_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$proc_macro..TokenStream$GT$9into_iter17hf34f7d036de82455E"(ptr sret([32 x i8]) align 8, i32) unnamed_addr #1

; <proc_macro::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
declare void @"_ZN93_$LT$proc_macro..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h59e753c94d1975ddE"(ptr sret([20 x i8]) align 4, ptr align 8) unnamed_addr #1

; <proc_macro::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nonlazybind uwtable
declare void @"_ZN93_$LT$proc_macro..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hc9d6dc5a8028b993E"(ptr sret([24 x i8]) align 8, ptr align 8) unnamed_addr #1

; proc_macro::Span::call_site
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro4Span9call_site17hff21e5f03a292c66E() unnamed_addr #1

; proc_macro::Span::mixed_site
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro4Span10mixed_site17h855957087c9d232cE() unnamed_addr #1

; proc_macro::Span::resolved_at
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro4Span11resolved_at17hf55a608954b98a7eE(ptr align 4, i32) unnamed_addr #1

; proc_macro::Span::located_at
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro4Span10located_at17h4fbbb37249c76052E(ptr align 4, i32) unnamed_addr #1

; proc_macro::Span::join
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro4Span4join17h8dad2620750340bcE(ptr align 4, i32) unnamed_addr #1

; proc_macro::Span::source_text
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro4Span11source_text17h189ee69296bf4ab3E(ptr sret([24 x i8]) align 8, ptr align 4) unnamed_addr #1

; <proc_macro::Span as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN53_$LT$proc_macro..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f979cfe424668feE"(ptr align 4, ptr align 8) unnamed_addr #1

; proc_macro::Group::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro5Group3new17hca8990fb53ef7c07E(ptr sret([20 x i8]) align 4, i8, i32) unnamed_addr #1

; proc_macro::Group::stream
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Group6stream17h47b6a965f15451b4E(ptr align 4) unnamed_addr #1

; <proc_macro::Group as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN56_$LT$proc_macro..Group$u20$as$u20$core..fmt..Display$GT$3fmt17hd42d98ca6848a183E"(ptr align 4, ptr align 8) unnamed_addr #1

; <proc_macro::Group as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN54_$LT$proc_macro..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17h9eedafc16c4fd485E"(ptr align 4, ptr align 8) unnamed_addr #1

; proc_macro::Ident::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro5Ident3new17h0adb7cafd9ca4818E(ptr sret([12 x i8]) align 4, ptr align 1, i64, i32) unnamed_addr #1

; proc_macro::Ident::new_raw
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro5Ident7new_raw17h747960b4aa9da752E(ptr sret([12 x i8]) align 4, ptr align 1, i64, i32) unnamed_addr #1

; <proc_macro::Ident as alloc::string::ToString>::to_string
; Function Attrs: nonlazybind uwtable
declare void @"_ZN61_$LT$proc_macro..Ident$u20$as$u20$alloc..string..ToString$GT$9to_string17haff01c3fc335f9b6E"(ptr sret([24 x i8]) align 8, ptr align 4) unnamed_addr #1

; <proc_macro::Ident as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN56_$LT$proc_macro..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h2e22fccd4ae8fa6eE"(ptr align 4, ptr align 8) unnamed_addr #1

; <proc_macro::Ident as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN54_$LT$proc_macro..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h8aab0c3abc9368b3E"(ptr align 4, ptr align 8) unnamed_addr #1

; <proc_macro::Literal as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
declare void @"_ZN66_$LT$proc_macro..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h09921aa42cc2ab48E"(ptr sret([16 x i8]) align 4, ptr align 1, i64) unnamed_addr #1

; proc_macro::Literal::f32_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal14f32_unsuffixed17h824d74e518d8cd11E(ptr sret([16 x i8]) align 4, float) unnamed_addr #1

; proc_macro::Literal::f64_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal14f64_unsuffixed17hd35aa1a904a51e1cE(ptr sret([16 x i8]) align 4, double) unnamed_addr #1

; proc_macro::Literal::string
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal6string17h908632877cc2ecfaE(ptr sret([16 x i8]) align 4, ptr align 1, i64) unnamed_addr #1

; proc_macro::Literal::character
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal9character17hd8153ba6404aefbaE(ptr sret([16 x i8]) align 4, i32) unnamed_addr #1

; proc_macro::Literal::byte_string
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal11byte_string17h8285a211ddddb43cE(ptr sret([16 x i8]) align 4, ptr align 1, i64) unnamed_addr #1

; <proc_macro::Literal as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN58_$LT$proc_macro..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17h757b42c54d3c9fe7E"(ptr align 4, ptr align 8) unnamed_addr #1

; <proc_macro::Literal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN56_$LT$proc_macro..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h450520b5a46fc99dE"(ptr align 4, ptr align 8) unnamed_addr #1

; <char as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17haf1d6f8ea1385e84E"(ptr align 4, ptr align 8) unnamed_addr #1

; <char as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h05733adebd5664c5E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field1_finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field1_finish17hded23900b22a6615E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <alloc::string::String as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
declare void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h46f90c67e6d80453E"(ptr sret([24 x i8]) align 8, ptr align 8) unnamed_addr #1

; proc_macro::Literal::u8_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal11u8_suffixed17h7e5b3e6bc0fcd34aE(ptr sret([16 x i8]) align 4, i8) unnamed_addr #1

; proc_macro::Literal::u16_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal12u16_suffixed17h127eaeb93f3430d8E(ptr sret([16 x i8]) align 4, i16) unnamed_addr #1

; proc_macro::Literal::u32_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal12u32_suffixed17hdbf84d60c3a05efcE(ptr sret([16 x i8]) align 4, i32) unnamed_addr #1

; proc_macro::Literal::u64_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal12u64_suffixed17ha6d04bf0c4727e76E(ptr sret([16 x i8]) align 4, i64) unnamed_addr #1

; proc_macro::Literal::u128_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal13u128_suffixed17h0fb8340ef9be9b6dE(ptr sret([16 x i8]) align 4, i128) unnamed_addr #1

; proc_macro::Literal::usize_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal14usize_suffixed17h973a9a3dfd0287f3E(ptr sret([16 x i8]) align 4, i64) unnamed_addr #1

; proc_macro::Literal::i8_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal11i8_suffixed17hf87bc9c6d8549a2eE(ptr sret([16 x i8]) align 4, i8) unnamed_addr #1

; proc_macro::Literal::i16_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal12i16_suffixed17h3e600e4a894a504dE(ptr sret([16 x i8]) align 4, i16) unnamed_addr #1

; proc_macro::Literal::i32_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal12i32_suffixed17ha7da33408030cfaeE(ptr sret([16 x i8]) align 4, i32) unnamed_addr #1

; proc_macro::Literal::i64_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal12i64_suffixed17hf01a6b61c08aa63aE(ptr sret([16 x i8]) align 4, i64) unnamed_addr #1

; proc_macro::Literal::i128_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal13i128_suffixed17hd3624f26379680deE(ptr sret([16 x i8]) align 4, i128) unnamed_addr #1

; proc_macro::Literal::isize_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal14isize_suffixed17h1aae4c60c15cabf0E(ptr sret([16 x i8]) align 4, i64) unnamed_addr #1

; proc_macro::Literal::f32_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal12f32_suffixed17hc01521ddc7e2090dE(ptr sret([16 x i8]) align 4, float) unnamed_addr #1

; proc_macro::Literal::f64_suffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal12f64_suffixed17hc811b986207cc194E(ptr sret([16 x i8]) align 4, double) unnamed_addr #1

; proc_macro::Literal::u8_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal13u8_unsuffixed17h5f5d92bcff332424E(ptr sret([16 x i8]) align 4, i8) unnamed_addr #1

; proc_macro::Literal::u16_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal14u16_unsuffixed17ha272da351bd4d5f7E(ptr sret([16 x i8]) align 4, i16) unnamed_addr #1

; proc_macro::Literal::u32_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal14u32_unsuffixed17h301a9147219b845fE(ptr sret([16 x i8]) align 4, i32) unnamed_addr #1

; proc_macro::Literal::u64_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal14u64_unsuffixed17h867555e7670edfeaE(ptr sret([16 x i8]) align 4, i64) unnamed_addr #1

; proc_macro::Literal::u128_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal15u128_unsuffixed17hdbcbe5523bc6d29bE(ptr sret([16 x i8]) align 4, i128) unnamed_addr #1

; proc_macro::Literal::usize_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal16usize_unsuffixed17h1b340bfad4a91722E(ptr sret([16 x i8]) align 4, i64) unnamed_addr #1

; proc_macro::Literal::i8_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal13i8_unsuffixed17h4fe1b9db6f0801c8E(ptr sret([16 x i8]) align 4, i8) unnamed_addr #1

; proc_macro::Literal::i16_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal14i16_unsuffixed17hd82c8b85ad583cafE(ptr sret([16 x i8]) align 4, i16) unnamed_addr #1

; proc_macro::Literal::i32_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal14i32_unsuffixed17h7eb755f36d6fe9e1E(ptr sret([16 x i8]) align 4, i32) unnamed_addr #1

; proc_macro::Literal::i64_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal14i64_unsuffixed17h69f827e2bd1ed79aE(ptr sret([16 x i8]) align 4, i64) unnamed_addr #1

; proc_macro::Literal::i128_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal15i128_unsuffixed17h401202eafe97dd2fE(ptr sret([16 x i8]) align 4, i128) unnamed_addr #1

; proc_macro::Literal::isize_unsuffixed
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal16isize_unsuffixed17h07b40582e03caa1dE(ptr sret([16 x i8]) align 4, i64) unnamed_addr #1

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #2 = { cold nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #3 = { inlinehint nounwind nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #4 = { nounwind nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #5 = { cold inlinehint nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #6 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #7 = { noinline nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #8 = { noreturn nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #9 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #10 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #11 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #12 = { nonlazybind "target-cpu"="x86-64" }
attributes #13 = { cold noreturn nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #14 = { nonlazybind }
attributes #15 = { convergent nocallback nofree nosync nounwind willreturn memory(none) }
attributes #16 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #17 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #18 = { cold noreturn nounwind memory(inaccessiblemem: write) }
attributes #19 = { nounwind nonlazybind allockind("alloc,uninitialized,aligned") allocsize(0) uwtable "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #20 = { nounwind nonlazybind allockind("alloc,zeroed,aligned") allocsize(0) uwtable "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #21 = { nounwind nonlazybind allockind("realloc,aligned") allocsize(3) uwtable "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #22 = { nounwind nonlazybind allockind("free") uwtable "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #23 = { nounwind }
attributes #24 = { noreturn }
attributes #25 = { cold }
attributes #26 = { cold noreturn nounwind }
attributes #27 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 8, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{!"rustc version 1.80.0-dev"}
!3 = !{}
!4 = !{!"instruction in unsafe Rust fn or block"}
